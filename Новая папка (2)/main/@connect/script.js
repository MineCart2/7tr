var HU = Object.defineProperty;
var WU = (t, e, r) => e in t ? HU(t, e, {
  enumerable: true,
  configurable: true,
  writable: true,
  value: r
}) : t[e] = r;
var kn = (t, e, r) => WU(t, typeof e != "symbol" ? e + "" : e, r);
(function () {
  const e = document.createElement("link").relList;
  if (e && e.supports && e.supports("modulepreload")) {
    return;
  }
  for (const i of document.querySelectorAll("link[rel=\"modulepreload\"]")) {
    n(i);
  }
  new MutationObserver(i => {
    for (const s of i) {
      if (s.type === "childList") {
        for (const o of s.addedNodes) {
          if (o.tagName === "LINK" && o.rel === "modulepreload") {
            n(o);
          }
        }
      }
    }
  }).observe(document, {
    childList: true,
    subtree: true
  });
  function r(i) {
    const s = {};
    if (i.integrity) {
      s.integrity = i.integrity;
    }
    if (i.referrerPolicy) {
      s.referrerPolicy = i.referrerPolicy;
    }
    if (i.crossOrigin === "use-credentials") {
      s.credentials = "include";
    } else if (i.crossOrigin === "anonymous") {
      s.credentials = "omit";
    } else {
      s.credentials = "same-origin";
    }
    return s;
  }
  function n(i) {
    if (i.ep) {
      return;
    }
    i.ep = true;
    const s = r(i);
    fetch(i.href, s);
  }
})(); /**
      * @vue/shared v3.4.31
      * (c) 2018-present Yuxi (Evan) You and Vue contributors
      * @license MIT
      **/ /*! #__NO_SIDE_EFFECTS__ */
function gE(t, e) {
  const r = new Set(t.split(","));
  return n => r.has(n);
}
const Ht = {};
const Da = [];
const vn = () => {};
const XU = () => false;
const Zf = t => t.charCodeAt(0) === 111 && t.charCodeAt(1) === 110 && (t.charCodeAt(2) > 122 || t.charCodeAt(2) < 97);
const _E = t => t.startsWith("onUpdate:");
const rr = Object.assign;
const TE = (t, e) => {
  const r = t.indexOf(e);
  if (r > -1) {
    t.splice(r, 1);
  }
};
const jU = Object.prototype.hasOwnProperty;
const vt = (t, e) => jU.call(t, e);
const Fe = Array.isArray;
const Ba = t => Ll(t) === "[object Map]";
const Qf = t => Ll(t) === "[object Set]";
const Q_ = t => Ll(t) === "[object Date]";
const tt = t => typeof t == "function";
const nr = t => typeof t == "string";
const ti = t => typeof t == "symbol";
const Mt = t => t !== null && typeof t == "object";
const eR = t => (Mt(t) || tt(t)) && tt(t.then) && tt(t.catch);
const tR = Object.prototype.toString;
const Ll = t => tR.call(t);
const zU = t => Ll(t).slice(8, -1);
const rR = t => Ll(t) === "[object Object]";
const vE = t => nr(t) && t !== "NaN" && t[0] !== "-" && "" + parseInt(t, 10) === t;
const Jo = gE(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted");
const ec = t => {
  const e = Object.create(null);
  return r => e[r] ||= t(r);
};
const qU = /-(\w)/g;
const ri = ec(t => t.replace(qU, (e, r) => r ? r.toUpperCase() : ""));
const YU = /\B([A-Z])/g;
const Js = ec(t => t.replace(YU, "-$1").toLowerCase());
const tc = ec(t => t.charAt(0).toUpperCase() + t.slice(1));
const rd = ec(t => t ? `on${tc(t)}` : "");
const os = (t, e) => !Object.is(t, e);
const ef = (t, ...e) => {
  for (let r = 0; r < t.length; r++) {
    t[r](...e);
  }
};
const nR = (t, e, r, n = false) => {
  Object.defineProperty(t, e, {
    configurable: true,
    enumerable: false,
    writable: n,
    value: r
  });
};
const iR = t => {
  const e = parseFloat(t);
  if (isNaN(e)) {
    return t;
  } else {
    return e;
  }
};
const JU = t => {
  const e = nr(t) ? Number(t) : NaN;
  if (isNaN(e)) {
    return t;
  } else {
    return e;
  }
};
let eT;
const sR = () => eT ||= typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {};
function rc(t) {
  if (Fe(t)) {
    const e = {};
    for (let r = 0; r < t.length; r++) {
      const n = t[r];
      const i = nr(n) ? tD(n) : rc(n);
      if (i) {
        for (const s in i) {
          e[s] = i[s];
        }
      }
    }
    return e;
  } else if (nr(t) || Mt(t)) {
    return t;
  }
}
const ZU = /;(?![^(]*\))/g;
const QU = /:([^]+)/;
const eD = /\/\*[^]*?\*\//g;
function tD(t) {
  const e = {};
  t.replace(eD, "").split(ZU).forEach(r => {
    if (r) {
      const n = r.split(QU);
      if (n.length > 1) {
        e[n[0].trim()] = n[1].trim();
      }
    }
  });
  return e;
}
function Mr(t) {
  let e = "";
  if (nr(t)) {
    e = t;
  } else if (Fe(t)) {
    for (let r = 0; r < t.length; r++) {
      const n = Mr(t[r]);
      if (n) {
        e += n + " ";
      }
    }
  } else if (Mt(t)) {
    for (const r in t) {
      if (t[r]) {
        e += r + " ";
      }
    }
  }
  return e.trim();
}
const rD = "itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly";
const nD = gE(rD);
function aR(t) {
  return !!t || t === "";
}
function iD(t, e) {
  if (t.length !== e.length) {
    return false;
  }
  let r = true;
  for (let n = 0; r && n < t.length; n++) {
    r = ja(t[n], e[n]);
  }
  return r;
}
function ja(t, e) {
  if (t === e) {
    return true;
  }
  let r = Q_(t);
  let n = Q_(e);
  if (r || n) {
    if (r && n) {
      return t.getTime() === e.getTime();
    } else {
      return false;
    }
  }
  r = ti(t);
  n = ti(e);
  if (r || n) {
    return t === e;
  }
  r = Fe(t);
  n = Fe(e);
  if (r || n) {
    if (r && n) {
      return iD(t, e);
    } else {
      return false;
    }
  }
  r = Mt(t);
  n = Mt(e);
  if (r || n) {
    if (!r || !n) {
      return false;
    }
    const i = Object.keys(t).length;
    const s = Object.keys(e).length;
    if (i !== s) {
      return false;
    }
    for (const o in t) {
      const f = t.hasOwnProperty(o);
      const c = e.hasOwnProperty(o);
      if (f && !c || !f && c || !ja(t[o], e[o])) {
        return false;
      }
    }
  }
  return String(t) === String(e);
}
function sD(t, e) {
  return t.findIndex(r => ja(r, e));
}
const oR = t => !!t && t.__v_isRef === true;
const Ye = t => nr(t) ? t : t == null ? "" : Fe(t) || Mt(t) && (t.toString === tR || !tt(t.toString)) ? oR(t) ? Ye(t.value) : JSON.stringify(t, lR, 2) : String(t);
const lR = (t, e) => oR(e) ? lR(t, e.value) : Ba(e) ? {
  [`Map(${e.size})`]: [...e.entries()].reduce((r, [n, i], s) => {
    r[nd(n, s) + " =>"] = i;
    return r;
  }, {})
} : Qf(e) ? {
  [`Set(${e.size})`]: [...e.values()].map(r => nd(r))
} : ti(e) ? nd(e) : Mt(e) && !Fe(e) && !rR(e) ? String(e) : e;
const nd = (t, e = "") => {
  if (ti(t)) {
    return `Symbol(${t.description ?? e})`;
  } else {
    return t;
  }
};
/**
* @vue/reactivity v3.4.31
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
let Cn;
class uR {
  constructor(e = false) {
    this.detached = e;
    this._active = true;
    this.effects = [];
    this.cleanups = [];
    this.parent = Cn;
    if (!e && Cn) {
      this.index = (Cn.scopes ||= []).push(this) - 1;
    }
  }
  get active() {
    return this._active;
  }
  run(e) {
    if (this._active) {
      const r = Cn;
      try {
        Cn = this;
        return e();
      } finally {
        Cn = r;
      }
    }
  }
  on() {
    Cn = this;
  }
  off() {
    Cn = this.parent;
  }
  stop(e) {
    if (this._active) {
      let r;
      let n;
      r = 0;
      n = this.effects.length;
      for (; r < n; r++) {
        this.effects[r].stop();
      }
      r = 0;
      n = this.cleanups.length;
      for (; r < n; r++) {
        this.cleanups[r]();
      }
      if (this.scopes) {
        r = 0;
        n = this.scopes.length;
        for (; r < n; r++) {
          this.scopes[r].stop(true);
        }
      }
      if (!this.detached && this.parent && !e) {
        const i = this.parent.scopes.pop();
        if (i && i !== this) {
          this.parent.scopes[this.index] = i;
          i.index = this.index;
        }
      }
      this.parent = undefined;
      this._active = false;
    }
  }
}
function aD(t) {
  return new uR(t);
}
function oD(t, e = Cn) {
  if (e && e.active) {
    e.effects.push(t);
  }
}
function lD() {
  return Cn;
}
let ks;
class bE {
  constructor(e, r, n, i) {
    this.fn = e;
    this.trigger = r;
    this.scheduler = n;
    this.active = true;
    this.deps = [];
    this._dirtyLevel = 4;
    this._trackId = 0;
    this._runnings = 0;
    this._shouldSchedule = false;
    this._depsLength = 0;
    oD(this, i);
  }
  get dirty() {
    if (this._dirtyLevel === 2 || this._dirtyLevel === 3) {
      this._dirtyLevel = 1;
      ps();
      for (let e = 0; e < this._depsLength; e++) {
        const r = this.deps[e];
        if (r.computed && (uD(r.computed), this._dirtyLevel >= 4)) {
          break;
        }
      }
      if (this._dirtyLevel === 1) {
        this._dirtyLevel = 0;
      }
      ds();
    }
    return this._dirtyLevel >= 4;
  }
  set dirty(e) {
    this._dirtyLevel = e ? 4 : 0;
  }
  run() {
    this._dirtyLevel = 0;
    if (!this.active) {
      return this.fn();
    }
    let e = ns;
    let r = ks;
    try {
      ns = true;
      ks = this;
      this._runnings++;
      tT(this);
      return this.fn();
    } finally {
      rT(this);
      this._runnings--;
      ks = r;
      ns = e;
    }
  }
  stop() {
    if (this.active) {
      tT(this);
      rT(this);
      if (this.onStop) {
        this.onStop();
      }
      this.active = false;
    }
  }
}
function uD(t) {
  return t.value;
}
function tT(t) {
  t._trackId++;
  t._depsLength = 0;
}
function rT(t) {
  if (t.deps.length > t._depsLength) {
    for (let e = t._depsLength; e < t.deps.length; e++) {
      fR(t.deps[e], t);
    }
    t.deps.length = t._depsLength;
  }
}
function fR(t, e) {
  const r = t.get(e);
  if (r !== undefined && e._trackId !== r) {
    t.delete(e);
    if (t.size === 0) {
      t.cleanup();
    }
  }
}
let ns = true;
let ph = 0;
const cR = [];
function ps() {
  cR.push(ns);
  ns = false;
}
function ds() {
  const t = cR.pop();
  ns = t === undefined ? true : t;
}
function xE() {
  ph++;
}
function RE() {
  for (ph--; !ph && dh.length;) {
    dh.shift()();
  }
}
function pR(t, e, r) {
  if (e.get(t) !== t._trackId) {
    e.set(t, t._trackId);
    const n = t.deps[t._depsLength];
    if (n !== e) {
      if (n) {
        fR(n, t);
      }
      t.deps[t._depsLength++] = e;
    } else {
      t._depsLength++;
    }
  }
}
const dh = [];
function dR(t, e, r) {
  xE();
  for (const n of t.keys()) {
    let i;
    if (n._dirtyLevel < e && (i ??= t.get(n) === n._trackId)) {
      n._shouldSchedule ||= n._dirtyLevel === 0;
      n._dirtyLevel = e;
    }
    if (n._shouldSchedule && (i ??= t.get(n) === n._trackId)) {
      n.trigger();
      if ((!n._runnings || n.allowRecurse) && n._dirtyLevel !== 2) {
        n._shouldSchedule = false;
        if (n.scheduler) {
          dh.push(n.scheduler);
        }
      }
    }
  }
  RE();
}
const hR = (t, e) => {
  const r = new Map();
  r.cleanup = t;
  r.computed = e;
  return r;
};
const hh = new WeakMap();
const Gs = Symbol("");
const Eh = Symbol("");
function jr(t, e, r) {
  if (ns && ks) {
    let n = hh.get(t);
    if (!n) {
      hh.set(t, n = new Map());
    }
    let i = n.get(r);
    if (!i) {
      n.set(r, i = hR(() => n.delete(r)));
    }
    pR(ks, i);
  }
}
function Ri(t, e, r, n, i, s) {
  const o = hh.get(t);
  if (!o) {
    return;
  }
  let f = [];
  if (e === "clear") {
    f = [...o.values()];
  } else if (r === "length" && Fe(t)) {
    const c = Number(n);
    o.forEach((p, d) => {
      if (d === "length" || !ti(d) && d >= c) {
        f.push(p);
      }
    });
  } else {
    if (r !== undefined) {
      f.push(o.get(r));
    }
    switch (e) {
      case "add":
        if (Fe(t)) {
          if (vE(r)) {
            f.push(o.get("length"));
          }
        } else {
          f.push(o.get(Gs));
          if (Ba(t)) {
            f.push(o.get(Eh));
          }
        }
        break;
      case "delete":
        if (!Fe(t)) {
          f.push(o.get(Gs));
          if (Ba(t)) {
            f.push(o.get(Eh));
          }
        }
        break;
      case "set":
        if (Ba(t)) {
          f.push(o.get(Gs));
        }
        break;
    }
  }
  xE();
  for (const c of f) {
    if (c) {
      dR(c, 4);
    }
  }
  RE();
}
const fD = gE("__proto__,__v_isRef,__isVue");
const ER = new Set(Object.getOwnPropertyNames(Symbol).filter(t => t !== "arguments" && t !== "caller").map(t => Symbol[t]).filter(ti));
const nT = cD();
function cD() {
  const t = {};
  ["includes", "indexOf", "lastIndexOf"].forEach(e => {
    t[e] = function (...r) {
      const n = xt(this);
      for (let s = 0, o = this.length; s < o; s++) {
        jr(n, "get", s + "");
      }
      const i = n[e](...r);
      if (i === -1 || i === false) {
        return n[e](...r.map(xt));
      } else {
        return i;
      }
    };
  });
  ["push", "pop", "shift", "unshift", "splice"].forEach(e => {
    t[e] = function (...r) {
      ps();
      xE();
      const n = xt(this)[e].apply(this, r);
      RE();
      ds();
      return n;
    };
  });
  return t;
}
function pD(t) {
  if (!ti(t)) {
    t = String(t);
  }
  const e = xt(this);
  jr(e, "has", t);
  return e.hasOwnProperty(t);
}
class mR {
  constructor(e = false, r = false) {
    this._isReadonly = e;
    this._isShallow = r;
  }
  get(e, r, n) {
    const i = this._isReadonly;
    const s = this._isShallow;
    if (r === "__v_isReactive") {
      return !i;
    }
    if (r === "__v_isReadonly") {
      return i;
    }
    if (r === "__v_isShallow") {
      return s;
    }
    if (r === "__v_raw") {
      if (n === (i ? s ? yD : vR : s ? TR : _R).get(e) || Object.getPrototypeOf(e) === Object.getPrototypeOf(n)) {
        return e;
      } else {
        return undefined;
      }
    }
    const o = Fe(e);
    if (!i) {
      if (o && vt(nT, r)) {
        return Reflect.get(nT, r, n);
      }
      if (r === "hasOwnProperty") {
        return pD;
      }
    }
    const f = Reflect.get(e, r, n);
    if ((ti(r) ? ER.has(r) : fD(r)) || (i || jr(e, "get", r), s)) {
      return f;
    } else if ($r(f)) {
      if (o && vE(r)) {
        return f;
      } else {
        return f.value;
      }
    } else if (Mt(f)) {
      if (i) {
        return bR(f);
      } else {
        return ic(f);
      }
    } else {
      return f;
    }
  }
}
class gR extends mR {
  constructor(e = false) {
    super(false, e);
  }
  set(e, r, n, i) {
    let s = e[r];
    if (!this._isShallow) {
      const c = cl(s);
      if (!Tf(n) && !cl(n)) {
        s = xt(s);
        n = xt(n);
      }
      if (!Fe(e) && $r(s) && !$r(n)) {
        if (c) {
          return false;
        } else {
          s.value = n;
          return true;
        }
      }
    }
    const o = Fe(e) && vE(r) ? Number(r) < e.length : vt(e, r);
    const f = Reflect.set(e, r, n, i);
    if (e === xt(i)) {
      if (o) {
        if (os(n, s)) {
          Ri(e, "set", r, n);
        }
      } else {
        Ri(e, "add", r, n);
      }
    }
    return f;
  }
  deleteProperty(e, r) {
    const n = vt(e, r);
    e[r];
    const i = Reflect.deleteProperty(e, r);
    if (i && n) {
      Ri(e, "delete", r, undefined);
    }
    return i;
  }
  has(e, r) {
    const n = Reflect.has(e, r);
    if (!ti(r) || !ER.has(r)) {
      jr(e, "has", r);
    }
    return n;
  }
  ownKeys(e) {
    jr(e, "iterate", Fe(e) ? "length" : Gs);
    return Reflect.ownKeys(e);
  }
}
class dD extends mR {
  constructor(e = false) {
    super(true, e);
  }
  set(e, r) {
    return true;
  }
  deleteProperty(e, r) {
    return true;
  }
}
const hD = new gR();
const ED = new dD();
const mD = new gR(true);
const SE = t => t;
const nc = t => Reflect.getPrototypeOf(t);
function Iu(t, e, r = false, n = false) {
  t = t.__v_raw;
  const i = xt(t);
  const s = xt(e);
  if (!r) {
    if (os(e, s)) {
      jr(i, "get", e);
    }
    jr(i, "get", s);
  }
  const {
    has: o
  } = nc(i);
  const f = n ? SE : r ? LE : pl;
  if (o.call(i, e)) {
    return f(t.get(e));
  }
  if (o.call(i, s)) {
    return f(t.get(s));
  }
  if (t !== i) {
    t.get(e);
  }
}
function Nu(t, e = false) {
  const r = this.__v_raw;
  const n = xt(r);
  const i = xt(t);
  if (!e) {
    if (os(t, i)) {
      jr(n, "has", t);
    }
    jr(n, "has", i);
  }
  if (t === i) {
    return r.has(t);
  } else {
    return r.has(t) || r.has(i);
  }
}
function Pu(t, e = false) {
  t = t.__v_raw;
  if (!e) {
    jr(xt(t), "iterate", Gs);
  }
  return Reflect.get(t, "size", t);
}
function iT(t) {
  t = xt(t);
  const e = xt(this);
  if (!nc(e).has.call(e, t)) {
    e.add(t);
    Ri(e, "add", t, t);
  }
  return this;
}
function sT(t, e) {
  e = xt(e);
  const r = xt(this);
  const {
    has: n,
    get: i
  } = nc(r);
  let s = n.call(r, t);
  if (!s) {
    t = xt(t);
    s = n.call(r, t);
  }
  const o = i.call(r, t);
  r.set(t, e);
  if (s) {
    if (os(e, o)) {
      Ri(r, "set", t, e);
    }
  } else {
    Ri(r, "add", t, e);
  }
  return this;
}
function aT(t) {
  const e = xt(this);
  const {
    has: r,
    get: n
  } = nc(e);
  let i = r.call(e, t);
  if (!i) {
    t = xt(t);
    i = r.call(e, t);
  }
  if (n) {
    n.call(e, t);
  }
  const s = e.delete(t);
  if (i) {
    Ri(e, "delete", t, undefined);
  }
  return s;
}
function oT() {
  const t = xt(this);
  const e = t.size !== 0;
  const r = t.clear();
  if (e) {
    Ri(t, "clear", undefined, undefined);
  }
  return r;
}
function Uu(t, e) {
  return function (n, i) {
    const s = this;
    const o = s.__v_raw;
    const f = xt(o);
    const c = e ? SE : t ? LE : pl;
    if (!t) {
      jr(f, "iterate", Gs);
    }
    return o.forEach((p, d) => n.call(i, c(p), c(d), s));
  };
}
function Du(t, e, r) {
  return function (...n) {
    const i = this.__v_raw;
    const s = xt(i);
    const o = Ba(s);
    const f = t === "entries" || t === Symbol.iterator && o;
    const c = t === "keys" && o;
    const p = i[t](...n);
    const d = r ? SE : e ? LE : pl;
    if (!e) {
      jr(s, "iterate", c ? Eh : Gs);
    }
    return {
      next() {
        const {
          value: E,
          done: m
        } = p.next();
        if (m) {
          return {
            value: E,
            done: m
          };
        } else {
          return {
            value: f ? [d(E[0]), d(E[1])] : d(E),
            done: m
          };
        }
      },
      [Symbol.iterator]() {
        return this;
      }
    };
  };
}
function Gi(t) {
  return function (...e) {
    if (t === "delete") {
      return false;
    } else if (t === "clear") {
      return undefined;
    } else {
      return this;
    }
  };
}
function gD() {
  const t = {
    get(s) {
      return Iu(this, s);
    },
    get size() {
      return Pu(this);
    },
    has: Nu,
    add: iT,
    set: sT,
    delete: aT,
    clear: oT,
    forEach: Uu(false, false)
  };
  const e = {
    get(s) {
      return Iu(this, s, false, true);
    },
    get size() {
      return Pu(this);
    },
    has: Nu,
    add: iT,
    set: sT,
    delete: aT,
    clear: oT,
    forEach: Uu(false, true)
  };
  const r = {
    get(s) {
      return Iu(this, s, true);
    },
    get size() {
      return Pu(this, true);
    },
    has(s) {
      return Nu.call(this, s, true);
    },
    add: Gi("add"),
    set: Gi("set"),
    delete: Gi("delete"),
    clear: Gi("clear"),
    forEach: Uu(true, false)
  };
  const n = {
    get(s) {
      return Iu(this, s, true, true);
    },
    get size() {
      return Pu(this, true);
    },
    has(s) {
      return Nu.call(this, s, true);
    },
    add: Gi("add"),
    set: Gi("set"),
    delete: Gi("delete"),
    clear: Gi("clear"),
    forEach: Uu(true, true)
  };
  ["keys", "values", "entries", Symbol.iterator].forEach(s => {
    t[s] = Du(s, false, false);
    r[s] = Du(s, true, false);
    e[s] = Du(s, false, true);
    n[s] = Du(s, true, true);
  });
  return [t, r, e, n];
}
const [_D, TD, vD, bD] = gD();
function yE(t, e) {
  const r = e ? t ? bD : vD : t ? TD : _D;
  return (n, i, s) => i === "__v_isReactive" ? !t : i === "__v_isReadonly" ? t : i === "__v_raw" ? n : Reflect.get(vt(r, i) && i in n ? r : n, i, s);
}
const xD = {
  get: yE(false, false)
};
const RD = {
  get: yE(false, true)
};
const SD = {
  get: yE(true, false)
};
const _R = new WeakMap();
const TR = new WeakMap();
const vR = new WeakMap();
const yD = new WeakMap();
function AD(t) {
  switch (t) {
    case "Object":
    case "Array":
      return 1;
    case "Map":
    case "Set":
    case "WeakMap":
    case "WeakSet":
      return 2;
    default:
      return 0;
  }
}
function LD(t) {
  if (t.__v_skip || !Object.isExtensible(t)) {
    return 0;
  } else {
    return AD(zU(t));
  }
}
function ic(t) {
  if (cl(t)) {
    return t;
  } else {
    return AE(t, false, hD, xD, _R);
  }
}
function CD(t) {
  return AE(t, false, mD, RD, TR);
}
function bR(t) {
  return AE(t, true, ED, SD, vR);
}
function AE(t, e, r, n, i) {
  if (!Mt(t) || t.__v_raw && (!e || !t.__v_isReactive)) {
    return t;
  }
  const s = i.get(t);
  if (s) {
    return s;
  }
  const o = LD(t);
  if (o === 0) {
    return t;
  }
  const f = new Proxy(t, o === 2 ? n : r);
  i.set(t, f);
  return f;
}
function Zo(t) {
  if (cl(t)) {
    return Zo(t.__v_raw);
  } else {
    return !!t && !!t.__v_isReactive;
  }
}
function cl(t) {
  return !!t && !!t.__v_isReadonly;
}
function Tf(t) {
  return !!t && !!t.__v_isShallow;
}
function xR(t) {
  if (t) {
    return !!t.__v_raw;
  } else {
    return false;
  }
}
function xt(t) {
  const e = t && t.__v_raw;
  if (e) {
    return xt(e);
  } else {
    return t;
  }
}
function wD(t) {
  if (Object.isExtensible(t)) {
    nR(t, "__v_skip", true);
  }
  return t;
}
const pl = t => Mt(t) ? ic(t) : t;
const LE = t => Mt(t) ? bR(t) : t;
class RR {
  constructor(e, r, n, i) {
    this.getter = e;
    this._setter = r;
    this.dep = undefined;
    this.__v_isRef = true;
    this.__v_isReadonly = false;
    this.effect = new bE(() => e(this._value), () => tf(this, this.effect._dirtyLevel === 2 ? 2 : 3));
    this.effect.computed = this;
    this.effect.active = this._cacheable = !i;
    this.__v_isReadonly = n;
  }
  get value() {
    const e = xt(this);
    if ((!e._cacheable || e.effect.dirty) && os(e._value, e._value = e.effect.run())) {
      tf(e, 4);
    }
    SR(e);
    if (e.effect._dirtyLevel >= 2) {
      tf(e, 2);
    }
    return e._value;
  }
  set value(e) {
    this._setter(e);
  }
  get _dirty() {
    return this.effect.dirty;
  }
  set _dirty(e) {
    this.effect.dirty = e;
  }
}
function OD(t, e, r = false) {
  let n;
  let i;
  const s = tt(t);
  if (s) {
    n = t;
    i = vn;
  } else {
    n = t.get;
    i = t.set;
  }
  return new RR(n, i, s || !i, r);
}
function SR(t) {
  if (ns && ks) {
    t = xt(t);
    pR(ks, t.dep ??= hR(() => t.dep = undefined, t instanceof RR ? t : undefined));
  }
}
function tf(t, e = 4, r, n) {
  t = xt(t);
  const i = t.dep;
  if (i) {
    dR(i, e);
  }
}
function $r(t) {
  return !!t && t.__v_isRef === true;
}
function Ds(t) {
  return AR(t, false);
}
function yR(t) {
  return AR(t, true);
}
function AR(t, e) {
  if ($r(t)) {
    return t;
  } else {
    return new ID(t, e);
  }
}
class ID {
  constructor(e, r) {
    this.__v_isShallow = r;
    this.dep = undefined;
    this.__v_isRef = true;
    this._rawValue = r ? e : xt(e);
    this._value = r ? e : pl(e);
  }
  get value() {
    SR(this);
    return this._value;
  }
  set value(e) {
    const r = this.__v_isShallow || Tf(e) || cl(e);
    e = r ? e : xt(e);
    if (os(e, this._rawValue)) {
      this._rawValue;
      this._rawValue = e;
      this._value = r ? e : pl(e);
      tf(this, 4);
    }
  }
}
function ND(t) {
  if ($r(t)) {
    return t.value;
  } else {
    return t;
  }
}
const PD = {
  get: (t, e, r) => ND(Reflect.get(t, e, r)),
  set: (t, e, r, n) => {
    const i = t[e];
    if ($r(i) && !$r(r)) {
      i.value = r;
      return true;
    } else {
      return Reflect.set(t, e, r, n);
    }
  }
};
function LR(t) {
  if (Zo(t)) {
    return t;
  } else {
    return new Proxy(t, PD);
  }
} /**
  * @vue/runtime-core v3.4.31
  * (c) 2018-present Yuxi (Evan) You and Vue contributors
  * @license MIT
  **/
function is(t, e, r, n) {
  try {
    if (n) {
      return t(...n);
    } else {
      return t();
    }
  } catch (i) {
    sc(i, e, r);
  }
}
function bn(t, e, r, n) {
  if (tt(t)) {
    const i = is(t, e, r, n);
    if (i && eR(i)) {
      i.catch(s => {
        sc(s, e, r);
      });
    }
    return i;
  }
  if (Fe(t)) {
    const i = [];
    for (let s = 0; s < t.length; s++) {
      i.push(bn(t[s], e, r, n));
    }
    return i;
  }
}
function sc(t, e, r, n = true) {
  const i = e ? e.vnode : null;
  if (e) {
    let s = e.parent;
    const o = e.proxy;
    const f = `https://vuejs.org/error-reference/#runtime-${r}`;
    while (s) {
      const p = s.ec;
      if (p) {
        for (let d = 0; d < p.length; d++) {
          if (p[d](t, o, f) === false) {
            return;
          }
        }
      }
      s = s.parent;
    }
    const c = e.appContext.config.errorHandler;
    if (c) {
      ps();
      is(c, null, 10, [t, o, f]);
      ds();
      return;
    }
  }
  UD(t, r, i, n);
}
function UD(t, e, r, n = true) {
  console.error(t);
}
let dl = false;
let mh = false;
const Ar = [];
let qn = 0;
const Ma = [];
let Xi = null;
let Bs = 0;
const CR = Promise.resolve();
let CE = null;
function wR(t) {
  const e = CE || CR;
  if (t) {
    return e.then(this ? t.bind(this) : t);
  } else {
    return e;
  }
}
function DD(t) {
  let e = qn + 1;
  let r = Ar.length;
  while (e < r) {
    const n = e + r >>> 1;
    const i = Ar[n];
    const s = hl(i);
    if (s < t || s === t && i.pre) {
      e = n + 1;
    } else {
      r = n;
    }
  }
  return e;
}
function wE(t) {
  if (!Ar.length || !Ar.includes(t, dl && t.allowRecurse ? qn + 1 : qn)) {
    if (t.id == null) {
      Ar.push(t);
    } else {
      Ar.splice(DD(t.id), 0, t);
    }
    OR();
  }
}
function OR() {
  if (!dl && !mh) {
    mh = true;
    CE = CR.then(NR);
  }
}
function BD(t) {
  const e = Ar.indexOf(t);
  if (e > qn) {
    Ar.splice(e, 1);
  }
}
function MD(t) {
  if (Fe(t)) {
    Ma.push(...t);
  } else if (!Xi || !Xi.includes(t, t.allowRecurse ? Bs + 1 : Bs)) {
    Ma.push(t);
  }
  OR();
}
function lT(t, e, r = dl ? qn + 1 : 0) {
  for (; r < Ar.length; r++) {
    const n = Ar[r];
    if (n && n.pre) {
      if (t && n.id !== t.uid) {
        continue;
      }
      Ar.splice(r, 1);
      r--;
      n();
    }
  }
}
function IR(t) {
  if (Ma.length) {
    const e = [...new Set(Ma)].sort((r, n) => hl(r) - hl(n));
    Ma.length = 0;
    if (Xi) {
      Xi.push(...e);
      return;
    }
    Xi = e;
    Bs = 0;
    for (; Bs < Xi.length; Bs++) {
      const r = Xi[Bs];
      if (r.active !== false) {
        r();
      }
    }
    Xi = null;
    Bs = 0;
  }
}
const hl = t => t.id == null ? Infinity : t.id;
const $D = (t, e) => {
  const r = hl(t) - hl(e);
  if (r === 0) {
    if (t.pre && !e.pre) {
      return -1;
    }
    if (e.pre && !t.pre) {
      return 1;
    }
  }
  return r;
};
function NR(t) {
  mh = false;
  dl = true;
  Ar.sort($D);
  try {
    for (qn = 0; qn < Ar.length; qn++) {
      const e = Ar[qn];
      if (e && e.active !== false) {
        is(e, null, 14);
      }
    }
  } finally {
    qn = 0;
    Ar.length = 0;
    IR();
    dl = false;
    CE = null;
    if (Ar.length || Ma.length) {
      NR();
    }
  }
}
function KD(t, e, ...r) {
  if (t.isUnmounted) {
    return;
  }
  const n = t.vnode.props || Ht;
  let i = r;
  const s = e.startsWith("update:");
  const o = s && e.slice(7);
  if (o && o in n) {
    const d = `${o === "modelValue" ? "model" : o}Modifiers`;
    const {
      number: E,
      trim: m
    } = n[d] || Ht;
    if (m) {
      i = r.map(g => nr(g) ? g.trim() : g);
    }
    if (E) {
      i = r.map(iR);
    }
  }
  let f;
  let c = n[f = rd(e)] || n[f = rd(ri(e))];
  if (!c && s) {
    c = n[f = rd(Js(e))];
  }
  if (c) {
    bn(c, t, 6, i);
  }
  const p = n[f + "Once"];
  if (p) {
    if (!t.emitted) {
      t.emitted = {};
    } else if (t.emitted[f]) {
      return;
    }
    t.emitted[f] = true;
    bn(p, t, 6, i);
  }
}
function PR(t, e, r = false) {
  const n = e.emitsCache;
  const i = n.get(t);
  if (i !== undefined) {
    return i;
  }
  const s = t.emits;
  let o = {};
  let f = false;
  if (!tt(t)) {
    const c = p => {
      const d = PR(p, e, true);
      if (d) {
        f = true;
        rr(o, d);
      }
    };
    if (!r && e.mixins.length) {
      e.mixins.forEach(c);
    }
    if (t.extends) {
      c(t.extends);
    }
    if (t.mixins) {
      t.mixins.forEach(c);
    }
  }
  if (!s && !f) {
    if (Mt(t)) {
      n.set(t, null);
    }
    return null;
  } else {
    if (Fe(s)) {
      s.forEach(c => o[c] = null);
    } else {
      rr(o, s);
    }
    if (Mt(t)) {
      n.set(t, o);
    }
    return o;
  }
}
function ac(t, e) {
  if (!t || !Zf(e)) {
    return false;
  } else {
    e = e.slice(2).replace(/Once$/, "");
    return vt(t, e[0].toLowerCase() + e.slice(1)) || vt(t, Js(e)) || vt(t, e);
  }
}
let Xr = null;
let oc = null;
function vf(t) {
  const e = Xr;
  Xr = t;
  oc = t && t.type.__scopeId || null;
  return e;
}
function Cl(t) {
  oc = t;
}
function wl() {
  oc = null;
}
function lc(t, e = Xr, r) {
  if (!e || t._n) {
    return t;
  }
  const n = (...i) => {
    if (n._d) {
      bT(-1);
    }
    const s = vf(e);
    let o;
    try {
      o = t(...i);
    } finally {
      vf(s);
      if (n._d) {
        bT(1);
      }
    }
    return o;
  };
  n._n = true;
  n._c = true;
  n._d = true;
  return n;
}
function id(t) {
  const {
    type: e,
    vnode: r,
    proxy: n,
    withProxy: i,
    propsOptions: [s],
    slots: o,
    attrs: f,
    emit: c,
    render: p,
    renderCache: d,
    props: E,
    data: m,
    setupState: g,
    ctx: T,
    inheritAttrs: b
  } = t;
  const x = vf(t);
  let A;
  let R;
  try {
    if (r.shapeFlag & 4) {
      const y = i || n;
      const U = y;
      A = Wn(p.call(U, y, d, E, g, m, T));
      R = f;
    } else {
      const y = e;
      A = Wn(y.length > 1 ? y(E, {
        attrs: f,
        slots: o,
        emit: c
      }) : y(E, null));
      R = e.props ? f : kD(f);
    }
  } catch (y) {
    tl.length = 0;
    sc(y, t, 1);
    A = Gt(an);
  }
  let v = A;
  if (R && b !== false) {
    const y = Object.keys(R);
    const {
      shapeFlag: U
    } = v;
    if (y.length && U & 7) {
      if (s && y.some(_E)) {
        R = GD(R, s);
      }
      v = us(v, R, false, true);
    }
  }
  if (r.dirs) {
    v = us(v, null, false, true);
    v.dirs = v.dirs ? v.dirs.concat(r.dirs) : r.dirs;
  }
  if (r.transition) {
    v.transition = r.transition;
  }
  A = v;
  vf(x);
  return A;
}
const kD = t => {
  let e;
  for (const r in t) {
    if (r === "class" || r === "style" || Zf(r)) {
      (e ||= {})[r] = t[r];
    }
  }
  return e;
};
const GD = (t, e) => {
  const r = {};
  for (const n in t) {
    if (!_E(n) || !(n.slice(9) in e)) {
      r[n] = t[n];
    }
  }
  return r;
};
function VD(t, e, r) {
  const {
    props: n,
    children: i,
    component: s
  } = t;
  const {
    props: o,
    children: f,
    patchFlag: c
  } = e;
  const p = s.emitsOptions;
  if (e.dirs || e.transition) {
    return true;
  }
  if (r && c >= 0) {
    if (c & 1024) {
      return true;
    }
    if (c & 16) {
      if (n) {
        return uT(n, o, p);
      } else {
        return !!o;
      }
    }
    if (c & 8) {
      const d = e.dynamicProps;
      for (let E = 0; E < d.length; E++) {
        const m = d[E];
        if (o[m] !== n[m] && !ac(p, m)) {
          return true;
        }
      }
    }
  } else if ((i || f) && (!f || !f.$stable)) {
    return true;
  } else if (n === o) {
    return false;
  } else if (n) {
    if (o) {
      return uT(n, o, p);
    } else {
      return true;
    }
  } else {
    return !!o;
  }
  return false;
}
function uT(t, e, r) {
  const n = Object.keys(e);
  if (n.length !== Object.keys(t).length) {
    return true;
  }
  for (let i = 0; i < n.length; i++) {
    const s = n[i];
    if (e[s] !== t[s] && !ac(r, s)) {
      return true;
    }
  }
  return false;
}
function FD({
  vnode: t,
  parent: e
}, r) {
  while (e) {
    const n = e.subTree;
    if (n.suspense && n.suspense.activeBranch === t) {
      n.el = t.el;
    }
    if (n === t) {
      (t = e.vnode).el = r;
      e = e.parent;
    } else {
      break;
    }
  }
}
const OE = "components";
const HD = "directives";
function sn(t, e) {
  return IE(OE, t, true, e) || t;
}
const UR = Symbol.for("v-ndc");
function WD(t) {
  if (nr(t)) {
    return IE(OE, t, false) || t;
  } else {
    return t || UR;
  }
}
function za(t) {
  return IE(HD, t);
}
function IE(t, e, r = true, n = false) {
  const i = Xr || vr;
  if (i) {
    const s = i.type;
    if (t === OE) {
      const f = MB(s, false);
      if (f && (f === e || f === ri(e) || f === tc(ri(e)))) {
        return s;
      }
    }
    const o = fT(i[t] || s[t], e) || fT(i.appContext[t], e);
    if (!o && n) {
      return s;
    } else {
      return o;
    }
  }
}
function fT(t, e) {
  return t && (t[e] || t[ri(e)] || t[tc(ri(e))]);
}
const XD = t => t.__isSuspense;
function jD(t, e) {
  if (e && e.pendingBranch) {
    if (Fe(t)) {
      e.effects.push(...t);
    } else {
      e.effects.push(t);
    }
  } else {
    MD(t);
  }
}
function uc(t, e, r = vr, n = false) {
  if (r) {
    const i = r[t] ||= [];
    const s = e.__weh ||= (...o) => {
      ps();
      const f = Il(r);
      const c = bn(e, r, t, o);
      f();
      ds();
      return c;
    };
    if (n) {
      i.unshift(s);
    } else {
      i.push(s);
    }
    return s;
  }
}
const wi = t => (e, r = vr) => {
  if (!cc || t === "sp") {
    uc(t, (...n) => e(...n), r);
  }
};
const DR = wi("bm");
const NE = wi("m");
const zD = wi("bu");
const BR = wi("u");
const MR = wi("bum");
const PE = wi("um");
const qD = wi("sp");
const YD = wi("rtg");
const JD = wi("rtc");
function ZD(t, e = vr) {
  uc("ec", t, e);
}
function Tr(t, e) {
  if (Xr === null) {
    return t;
  }
  const r = pc(Xr);
  const n = t.dirs ||= [];
  for (let i = 0; i < e.length; i++) {
    let [s, o, f, c = Ht] = e[i];
    if (s) {
      if (tt(s)) {
        s = {
          mounted: s,
          updated: s
        };
      }
      if (s.deep) {
        Yi(o);
      }
      n.push({
        dir: s,
        instance: r,
        value: o,
        oldValue: undefined,
        arg: f,
        modifiers: c
      });
    }
  }
  return t;
}
function Os(t, e, r, n) {
  const i = t.dirs;
  const s = e && e.dirs;
  for (let o = 0; o < i.length; o++) {
    const f = i[o];
    if (s) {
      f.oldValue = s[o].value;
    }
    let c = f.dir[n];
    if (c) {
      ps();
      bn(c, r, 8, [t.el, f, t, e]);
      ds();
    }
  }
}
function ls(t, e, r, n) {
  let i;
  const s = r;
  if (Fe(t) || nr(t)) {
    i = new Array(t.length);
    for (let o = 0, f = t.length; o < f; o++) {
      i[o] = e(t[o], o, undefined, s);
    }
  } else if (typeof t == "number") {
    i = new Array(t);
    for (let o = 0; o < t; o++) {
      i[o] = e(o + 1, o, undefined, s);
    }
  } else if (Mt(t)) {
    if (t[Symbol.iterator]) {
      i = Array.from(t, (o, f) => e(o, f, undefined, s));
    } else {
      const o = Object.keys(t);
      i = new Array(o.length);
      for (let f = 0, c = o.length; f < c; f++) {
        const p = o[f];
        i[f] = e(t[p], p, f, s);
      }
    }
  } else {
    i = [];
  }
  return i;
} /*! #__NO_SIDE_EFFECTS__ */
function fr(t, e) {
  if (tt(t)) {
    return rr({
      name: t.name
    }, e, {
      setup: t
    });
  } else {
    return t;
  }
}
const rf = t => !!t.type.__asyncLoader;
const gh = t => t ? aS(t) ? pc(t) : gh(t.parent) : null;
const Qo = rr(Object.create(null), {
  $: t => t,
  $el: t => t.vnode.el,
  $data: t => t.data,
  $props: t => t.props,
  $attrs: t => t.attrs,
  $slots: t => t.slots,
  $refs: t => t.refs,
  $parent: t => gh(t.parent),
  $root: t => gh(t.root),
  $emit: t => t.emit,
  $options: t => UE(t),
  $forceUpdate: t => t.f ||= () => {
    t.effect.dirty = true;
    wE(t.update);
  },
  $nextTick: t => t.n ||= wR.bind(t.proxy),
  $watch: t => TB.bind(t)
});
const sd = (t, e) => t !== Ht && !t.__isScriptSetup && vt(t, e);
const QD = {
  get({
    _: t
  }, e) {
    if (e === "__v_skip") {
      return true;
    }
    const {
      ctx: r,
      setupState: n,
      data: i,
      props: s,
      accessCache: o,
      type: f,
      appContext: c
    } = t;
    let p;
    if (e[0] !== "$") {
      const g = o[e];
      if (g !== undefined) {
        switch (g) {
          case 1:
            return n[e];
          case 2:
            return i[e];
          case 4:
            return r[e];
          case 3:
            return s[e];
        }
      } else {
        if (sd(n, e)) {
          o[e] = 1;
          return n[e];
        }
        if (i !== Ht && vt(i, e)) {
          o[e] = 2;
          return i[e];
        }
        if ((p = t.propsOptions[0]) && vt(p, e)) {
          o[e] = 3;
          return s[e];
        }
        if (r !== Ht && vt(r, e)) {
          o[e] = 4;
          return r[e];
        }
        if (_h) {
          o[e] = 0;
        }
      }
    }
    const d = Qo[e];
    let E;
    let m;
    if (d) {
      if (e === "$attrs") {
        jr(t.attrs, "get", "");
      }
      return d(t);
    }
    if ((E = f.__cssModules) && (E = E[e])) {
      return E;
    }
    if (r !== Ht && vt(r, e)) {
      o[e] = 4;
      return r[e];
    }
    m = c.config.globalProperties;
    if (vt(m, e)) {
      return m[e];
    }
  },
  set({
    _: t
  }, e, r) {
    const {
      data: n,
      setupState: i,
      ctx: s
    } = t;
    if (sd(i, e)) {
      i[e] = r;
      return true;
    } else if (n !== Ht && vt(n, e)) {
      n[e] = r;
      return true;
    } else if (vt(t.props, e) || e[0] === "$" && e.slice(1) in t) {
      return false;
    } else {
      s[e] = r;
      return true;
    }
  },
  has({
    _: {
      data: t,
      setupState: e,
      accessCache: r,
      ctx: n,
      appContext: i,
      propsOptions: s
    }
  }, o) {
    let f;
    return !!r[o] || t !== Ht && vt(t, o) || sd(e, o) || (f = s[0]) && vt(f, o) || vt(n, o) || vt(Qo, o) || vt(i.config.globalProperties, o);
  },
  defineProperty(t, e, r) {
    if (r.get != null) {
      t._.accessCache[e] = 0;
    } else if (vt(r, "value")) {
      this.set(t, e, r.value, null);
    }
    return Reflect.defineProperty(t, e, r);
  }
};
function cT(t) {
  if (Fe(t)) {
    return t.reduce((e, r) => {
      e[r] = null;
      return e;
    }, {});
  } else {
    return t;
  }
}
let _h = true;
function eB(t) {
  const e = UE(t);
  const r = t.proxy;
  const n = t.ctx;
  _h = false;
  if (e.beforeCreate) {
    pT(e.beforeCreate, t, "bc");
  }
  const {
    data: i,
    computed: s,
    methods: o,
    watch: f,
    provide: c,
    inject: p,
    created: d,
    beforeMount: E,
    mounted: m,
    beforeUpdate: g,
    updated: T,
    activated: b,
    deactivated: x,
    beforeDestroy: A,
    beforeUnmount: R,
    destroyed: v,
    unmounted: y,
    render: U,
    renderTracked: P,
    renderTriggered: M,
    errorCaptured: X,
    serverPrefetch: N,
    expose: ae,
    inheritAttrs: Q,
    components: V,
    directives: Y,
    filters: k
  } = e;
  if (p) {
    tB(p, n, null);
  }
  if (o) {
    for (const W in o) {
      const te = o[W];
      if (tt(te)) {
        n[W] = te.bind(r);
      }
    }
  }
  if (i) {
    const W = i.call(r, r);
    if (Mt(W)) {
      t.data = ic(W);
    }
  }
  _h = true;
  if (s) {
    for (const W in s) {
      const te = s[W];
      const ie = tt(te) ? te.bind(r, r) : tt(te.get) ? te.get.bind(r, r) : vn;
      const _e = !tt(te) && tt(te.set) ? te.set.bind(r) : vn;
      const ye = gn({
        get: ie,
        set: _e
      });
      Object.defineProperty(n, W, {
        enumerable: true,
        configurable: true,
        get: () => ye.value,
        set: Be => ye.value = Be
      });
    }
  }
  if (f) {
    for (const W in f) {
      $R(f[W], n, r, W);
    }
  }
  if (c) {
    const W = tt(c) ? c.call(r) : c;
    Reflect.ownKeys(W).forEach(te => {
      oB(te, W[te]);
    });
  }
  if (d) {
    pT(d, t, "c");
  }
  function j(W, te) {
    if (Fe(te)) {
      te.forEach(ie => W(ie.bind(r)));
    } else if (te) {
      W(te.bind(r));
    }
  }
  j(DR, E);
  j(NE, m);
  j(zD, g);
  j(BR, T);
  j(vB, b);
  j(bB, x);
  j(ZD, X);
  j(JD, P);
  j(YD, M);
  j(MR, R);
  j(PE, y);
  j(qD, N);
  if (Fe(ae)) {
    if (ae.length) {
      const W = t.exposed ||= {};
      ae.forEach(te => {
        Object.defineProperty(W, te, {
          get: () => r[te],
          set: ie => r[te] = ie
        });
      });
    } else {
      t.exposed ||= {};
    }
  }
  if (U && t.render === vn) {
    t.render = U;
  }
  if (Q != null) {
    t.inheritAttrs = Q;
  }
  if (V) {
    t.components = V;
  }
  if (Y) {
    t.directives = Y;
  }
}
function tB(t, e, r = vn) {
  if (Fe(t)) {
    t = Th(t);
  }
  for (const n in t) {
    const i = t[n];
    let s;
    if (Mt(i)) {
      if ("default" in i) {
        s = Vs(i.from || n, i.default, true);
      } else {
        s = Vs(i.from || n);
      }
    } else {
      s = Vs(i);
    }
    if ($r(s)) {
      Object.defineProperty(e, n, {
        enumerable: true,
        configurable: true,
        get: () => s.value,
        set: o => s.value = o
      });
    } else {
      e[n] = s;
    }
  }
}
function pT(t, e, r) {
  bn(Fe(t) ? t.map(n => n.bind(e.proxy)) : t.bind(e.proxy), e, r);
}
function $R(t, e, r, n) {
  const i = n.includes(".") ? JR(r, n) : () => r[n];
  if (nr(t)) {
    const s = e[t];
    if (tt(s)) {
      $a(i, s);
    }
  } else if (tt(t)) {
    $a(i, t.bind(r));
  } else if (Mt(t)) {
    if (Fe(t)) {
      t.forEach(s => $R(s, e, r, n));
    } else {
      const s = tt(t.handler) ? t.handler.bind(r) : e[t.handler];
      if (tt(s)) {
        $a(i, s, t);
      }
    }
  }
}
function UE(t) {
  const e = t.type;
  const {
    mixins: r,
    extends: n
  } = e;
  const {
    mixins: i,
    optionsCache: s,
    config: {
      optionMergeStrategies: o
    }
  } = t.appContext;
  const f = s.get(e);
  let c;
  if (f) {
    c = f;
  } else if (!i.length && !r && !n) {
    c = e;
  } else {
    c = {};
    if (i.length) {
      i.forEach(p => bf(c, p, o, true));
    }
    bf(c, e, o);
  }
  if (Mt(e)) {
    s.set(e, c);
  }
  return c;
}
function bf(t, e, r, n = false) {
  const {
    mixins: i,
    extends: s
  } = e;
  if (s) {
    bf(t, s, r, true);
  }
  if (i) {
    i.forEach(o => bf(t, o, r, true));
  }
  for (const o in e) {
    if (!n || o !== "expose") {
      const f = rB[o] || r && r[o];
      t[o] = f ? f(t[o], e[o]) : e[o];
    }
  }
  return t;
}
const rB = {
  data: dT,
  props: hT,
  emits: hT,
  methods: jo,
  computed: jo,
  beforeCreate: Dr,
  created: Dr,
  beforeMount: Dr,
  mounted: Dr,
  beforeUpdate: Dr,
  updated: Dr,
  beforeDestroy: Dr,
  beforeUnmount: Dr,
  destroyed: Dr,
  unmounted: Dr,
  activated: Dr,
  deactivated: Dr,
  errorCaptured: Dr,
  serverPrefetch: Dr,
  components: jo,
  directives: jo,
  watch: iB,
  provide: dT,
  inject: nB
};
function dT(t, e) {
  if (e) {
    if (t) {
      return function () {
        return rr(tt(t) ? t.call(this, this) : t, tt(e) ? e.call(this, this) : e);
      };
    } else {
      return e;
    }
  } else {
    return t;
  }
}
function nB(t, e) {
  return jo(Th(t), Th(e));
}
function Th(t) {
  if (Fe(t)) {
    const e = {};
    for (let r = 0; r < t.length; r++) {
      e[t[r]] = t[r];
    }
    return e;
  }
  return t;
}
function Dr(t, e) {
  if (t) {
    return [...new Set([].concat(t, e))];
  } else {
    return e;
  }
}
function jo(t, e) {
  if (t) {
    return rr(Object.create(null), t, e);
  } else {
    return e;
  }
}
function hT(t, e) {
  if (t) {
    if (Fe(t) && Fe(e)) {
      return [...new Set([...t, ...e])];
    } else {
      return rr(Object.create(null), cT(t), cT(e ?? {}));
    }
  } else {
    return e;
  }
}
function iB(t, e) {
  if (!t) {
    return e;
  }
  if (!e) {
    return t;
  }
  const r = rr(Object.create(null), t);
  for (const n in e) {
    r[n] = Dr(t[n], e[n]);
  }
  return r;
}
function KR() {
  return {
    app: null,
    config: {
      isNativeTag: XU,
      performance: false,
      globalProperties: {},
      optionMergeStrategies: {},
      errorHandler: undefined,
      warnHandler: undefined,
      compilerOptions: {}
    },
    mixins: [],
    components: {},
    directives: {},
    provides: Object.create(null),
    optionsCache: new WeakMap(),
    propsCache: new WeakMap(),
    emitsCache: new WeakMap()
  };
}
let sB = 0;
function aB(t, e) {
  return function (n, i = null) {
    if (!tt(n)) {
      n = rr({}, n);
    }
    if (i != null && !Mt(i)) {
      i = null;
    }
    const s = KR();
    const o = new WeakSet();
    let f = false;
    const c = s.app = {
      _uid: sB++,
      _component: n,
      _props: i,
      _container: null,
      _context: s,
      _instance: null,
      version: KB,
      get config() {
        return s.config;
      },
      set config(p) {},
      use(p, ...d) {
        if (!o.has(p)) {
          if (p && tt(p.install)) {
            o.add(p);
            p.install(c, ...d);
          } else if (tt(p)) {
            o.add(p);
            p(c, ...d);
          }
        }
        return c;
      },
      mixin(p) {
        if (!s.mixins.includes(p)) {
          s.mixins.push(p);
        }
        return c;
      },
      component(p, d) {
        if (d) {
          s.components[p] = d;
          return c;
        } else {
          return s.components[p];
        }
      },
      directive(p, d) {
        if (d) {
          s.directives[p] = d;
          return c;
        } else {
          return s.directives[p];
        }
      },
      mount(p, d, E) {
        if (!f) {
          const m = Gt(n, i);
          m.appContext = s;
          if (E === true) {
            E = "svg";
          } else if (E === false) {
            E = undefined;
          }
          if (d && e) {
            e(m, p);
          } else {
            t(m, p, E);
          }
          f = true;
          c._container = p;
          p.__vue_app__ = c;
          return pc(m.component);
        }
      },
      unmount() {
        if (f) {
          t(null, c._container);
          delete c._container.__vue_app__;
        }
      },
      provide(p, d) {
        s.provides[p] = d;
        return c;
      },
      runWithContext(p) {
        const d = el;
        el = c;
        try {
          return p();
        } finally {
          el = d;
        }
      }
    };
    return c;
  };
}
let el = null;
function oB(t, e) {
  if (vr) {
    let r = vr.provides;
    const n = vr.parent && vr.parent.provides;
    if (n === r) {
      r = vr.provides = Object.create(n);
    }
    r[t] = e;
  }
}
function Vs(t, e, r = false) {
  const n = vr || Xr;
  if (n || el) {
    const i = n ? n.parent == null ? n.vnode.appContext && n.vnode.appContext.provides : n.parent.provides : el._context.provides;
    if (i && t in i) {
      return i[t];
    }
    if (arguments.length > 1) {
      if (r && tt(e)) {
        return e.call(n && n.proxy);
      } else {
        return e;
      }
    }
  }
}
const kR = {};
const GR = () => Object.create(kR);
const VR = t => Object.getPrototypeOf(t) === kR;
function lB(t, e, r, n = false) {
  const i = {};
  const s = GR();
  t.propsDefaults = Object.create(null);
  FR(t, e, i, s);
  for (const o in t.propsOptions[0]) {
    if (!(o in i)) {
      i[o] = undefined;
    }
  }
  if (r) {
    t.props = n ? i : CD(i);
  } else if (t.type.props) {
    t.props = i;
  } else {
    t.props = s;
  }
  t.attrs = s;
}
function uB(t, e, r, n) {
  const {
    props: i,
    attrs: s,
    vnode: {
      patchFlag: o
    }
  } = t;
  const f = xt(i);
  const [c] = t.propsOptions;
  let p = false;
  if ((n || o > 0) && !(o & 16)) {
    if (o & 8) {
      const d = t.vnode.dynamicProps;
      for (let E = 0; E < d.length; E++) {
        let m = d[E];
        if (ac(t.emitsOptions, m)) {
          continue;
        }
        const g = e[m];
        if (c) {
          if (vt(s, m)) {
            if (g !== s[m]) {
              s[m] = g;
              p = true;
            }
          } else {
            const T = ri(m);
            i[T] = vh(c, f, T, g, t, false);
          }
        } else if (g !== s[m]) {
          s[m] = g;
          p = true;
        }
      }
    }
  } else {
    if (FR(t, e, i, s)) {
      p = true;
    }
    let d;
    for (const E in f) {
      if (!e || !vt(e, E) && ((d = Js(E)) === E || !vt(e, d))) {
        if (c) {
          if (r && (r[E] !== undefined || r[d] !== undefined)) {
            i[E] = vh(c, f, E, undefined, t, true);
          }
        } else {
          delete i[E];
        }
      }
    }
    if (s !== f) {
      for (const E in s) {
        if (!e || !vt(e, E)) {
          delete s[E];
          p = true;
        }
      }
    }
  }
  if (p) {
    Ri(t.attrs, "set", "");
  }
}
function FR(t, e, r, n) {
  const [i, s] = t.propsOptions;
  let o = false;
  let f;
  if (e) {
    for (let c in e) {
      if (Jo(c)) {
        continue;
      }
      const p = e[c];
      let d;
      if (i && vt(i, d = ri(c))) {
        if (!s || !s.includes(d)) {
          r[d] = p;
        } else {
          (f ||= {})[d] = p;
        }
      } else if (!ac(t.emitsOptions, c)) {
        if (!(c in n) || p !== n[c]) {
          n[c] = p;
          o = true;
        }
      }
    }
  }
  if (s) {
    const c = xt(r);
    const p = f || Ht;
    for (let d = 0; d < s.length; d++) {
      const E = s[d];
      r[E] = vh(i, c, E, p[E], t, !vt(p, E));
    }
  }
  return o;
}
function vh(t, e, r, n, i, s) {
  const o = t[r];
  if (o != null) {
    const f = vt(o, "default");
    if (f && n === undefined) {
      const c = o.default;
      if (o.type !== Function && !o.skipFactory && tt(c)) {
        const {
          propsDefaults: p
        } = i;
        if (r in p) {
          n = p[r];
        } else {
          const d = Il(i);
          n = p[r] = c.call(null, e);
          d();
        }
      } else {
        n = c;
      }
    }
    if (o[0]) {
      if (s && !f) {
        n = false;
      } else if (o[1] && (n === "" || n === Js(r))) {
        n = true;
      }
    }
  }
  return n;
}
function HR(t, e, r = false) {
  const n = e.propsCache;
  const i = n.get(t);
  if (i) {
    return i;
  }
  const s = t.props;
  const o = {};
  const f = [];
  let c = false;
  if (!tt(t)) {
    const d = E => {
      c = true;
      const [m, g] = HR(E, e, true);
      rr(o, m);
      if (g) {
        f.push(...g);
      }
    };
    if (!r && e.mixins.length) {
      e.mixins.forEach(d);
    }
    if (t.extends) {
      d(t.extends);
    }
    if (t.mixins) {
      t.mixins.forEach(d);
    }
  }
  if (!s && !c) {
    if (Mt(t)) {
      n.set(t, Da);
    }
    return Da;
  }
  if (Fe(s)) {
    for (let d = 0; d < s.length; d++) {
      const E = ri(s[d]);
      if (ET(E)) {
        o[E] = Ht;
      }
    }
  } else if (s) {
    for (const d in s) {
      const E = ri(d);
      if (ET(E)) {
        const m = s[d];
        const g = o[E] = Fe(m) || tt(m) ? {
          type: m
        } : rr({}, m);
        if (g) {
          const T = _T(Boolean, g.type);
          const b = _T(String, g.type);
          g[0] = T > -1;
          g[1] = b < 0 || T < b;
          if (T > -1 || vt(g, "default")) {
            f.push(E);
          }
        }
      }
    }
  }
  const p = [o, f];
  if (Mt(t)) {
    n.set(t, p);
  }
  return p;
}
function ET(t) {
  return t[0] !== "$" && !Jo(t);
}
function mT(t) {
  if (t === null) {
    return "null";
  } else if (typeof t == "function") {
    return t.name || "";
  } else {
    return typeof t == "object" && t.constructor && t.constructor.name || "";
  }
}
function gT(t, e) {
  return mT(t) === mT(e);
}
function _T(t, e) {
  if (Fe(e)) {
    return e.findIndex(r => gT(r, t));
  } else if (tt(e) && gT(e, t)) {
    return 0;
  } else {
    return -1;
  }
}
const WR = t => t[0] === "_" || t === "$stable";
const DE = t => Fe(t) ? t.map(Wn) : [Wn(t)];
const fB = (t, e, r) => {
  if (e._n) {
    return e;
  }
  const n = lc((...i) => DE(e(...i)), r);
  n._c = false;
  return n;
};
const XR = (t, e, r) => {
  const n = t._ctx;
  for (const i in t) {
    if (WR(i)) {
      continue;
    }
    const s = t[i];
    if (tt(s)) {
      e[i] = fB(i, s, n);
    } else if (s != null) {
      const o = DE(s);
      e[i] = () => o;
    }
  }
};
const jR = (t, e) => {
  const r = DE(e);
  t.slots.default = () => r;
};
const cB = (t, e) => {
  const r = t.slots = GR();
  if (t.vnode.shapeFlag & 32) {
    const n = e._;
    if (n) {
      rr(r, e);
      nR(r, "_", n, true);
    } else {
      XR(e, r);
    }
  } else if (e) {
    jR(t, e);
  }
};
const pB = (t, e, r) => {
  const {
    vnode: n,
    slots: i
  } = t;
  let s = true;
  let o = Ht;
  if (n.shapeFlag & 32) {
    const f = e._;
    if (f) {
      if (r && f === 1) {
        s = false;
      } else {
        rr(i, e);
        if (!r && f === 1) {
          delete i._;
        }
      }
    } else {
      s = !e.$stable;
      XR(e, i);
    }
    o = e;
  } else if (e) {
    jR(t, e);
    o = {
      default: 1
    };
  }
  if (s) {
    for (const f in i) {
      if (!WR(f) && o[f] == null) {
        delete i[f];
      }
    }
  }
};
function bh(t, e, r, n, i = false) {
  if (Fe(t)) {
    t.forEach((m, g) => bh(m, e && (Fe(e) ? e[g] : e), r, n, i));
    return;
  }
  if (rf(n) && !i) {
    return;
  }
  const s = n.shapeFlag & 4 ? pc(n.component) : n.el;
  const o = i ? null : s;
  const {
    i: f,
    r: c
  } = t;
  const p = e && e.r;
  const d = f.refs === Ht ? f.refs = {} : f.refs;
  const E = f.setupState;
  if (p != null && p !== c) {
    if (nr(p)) {
      d[p] = null;
      if (vt(E, p)) {
        E[p] = null;
      }
    } else if ($r(p)) {
      p.value = null;
    }
  }
  if (tt(c)) {
    is(c, f, 12, [o, d]);
  } else {
    const m = nr(c);
    const g = $r(c);
    if (m || g) {
      const T = () => {
        if (t.f) {
          const b = m ? vt(E, c) ? E[c] : d[c] : c.value;
          if (i) {
            if (Fe(b)) {
              TE(b, s);
            }
          } else if (Fe(b)) {
            if (!b.includes(s)) {
              b.push(s);
            }
          } else if (m) {
            d[c] = [s];
            if (vt(E, c)) {
              E[c] = d[c];
            }
          } else {
            c.value = [s];
            if (t.k) {
              d[t.k] = c.value;
            }
          }
        } else if (m) {
          d[c] = o;
          if (vt(E, c)) {
            E[c] = o;
          }
        } else if (g) {
          c.value = o;
          if (t.k) {
            d[t.k] = o;
          }
        }
      };
      if (o) {
        T.id = -1;
        Wr(T, r);
      } else {
        T();
      }
    }
  }
}
const Wr = jD;
function dB(t) {
  return hB(t);
}
function hB(t, e) {
  const r = sR();
  r.__VUE__ = true;
  const {
    insert: n,
    remove: i,
    patchProp: s,
    createElement: o,
    createText: f,
    createComment: c,
    setText: p,
    setElementText: d,
    parentNode: E,
    nextSibling: m,
    setScopeId: g = vn,
    insertStaticContent: T
  } = t;
  const b = (F, D, ne, he = null, pe = null, xe = null, Te = undefined, O = null, B = !!D.dynamicChildren) => {
    if (F === D) {
      return;
    }
    if (F && !Ms(F, D)) {
      he = Et(F);
      Be(F, pe, xe, true);
      F = null;
    }
    if (D.patchFlag === -2) {
      B = false;
      D.dynamicChildren = null;
    }
    const {
      type: z,
      ref: fe,
      shapeFlag: Ce
    } = D;
    switch (z) {
      case Ol:
        x(F, D, ne, he);
        break;
      case an:
        A(F, D, ne, he);
        break;
      case nf:
        if (F == null) {
          R(D, ne, he, Te);
        }
        break;
      case zt:
        V(F, D, ne, he, pe, xe, Te, O, B);
        break;
      default:
        if (Ce & 1) {
          U(F, D, ne, he, pe, xe, Te, O, B);
        } else if (Ce & 6) {
          Y(F, D, ne, he, pe, xe, Te, O, B);
        } else if (Ce & 64 || Ce & 128) {
          z.process(F, D, ne, he, pe, xe, Te, O, B, ft);
        }
    }
    if (fe != null && pe) {
      bh(fe, F && F.ref, xe, D || F, !D);
    }
  };
  const x = (F, D, ne, he) => {
    if (F == null) {
      n(D.el = f(D.children), ne, he);
    } else {
      const pe = D.el = F.el;
      if (D.children !== F.children) {
        p(pe, D.children);
      }
    }
  };
  const A = (F, D, ne, he) => {
    if (F == null) {
      n(D.el = c(D.children || ""), ne, he);
    } else {
      D.el = F.el;
    }
  };
  const R = (F, D, ne, he) => {
    [F.el, F.anchor] = T(F.children, D, ne, he, F.el, F.anchor);
  };
  const v = ({
    el: F,
    anchor: D
  }, ne, he) => {
    let pe;
    while (F && F !== D) {
      pe = m(F);
      n(F, ne, he);
      F = pe;
    }
    n(D, ne, he);
  };
  const y = ({
    el: F,
    anchor: D
  }) => {
    let ne;
    while (F && F !== D) {
      ne = m(F);
      i(F);
      F = ne;
    }
    i(D);
  };
  const U = (F, D, ne, he, pe, xe, Te, O, B) => {
    if (D.type === "svg") {
      Te = "svg";
    } else if (D.type === "math") {
      Te = "mathml";
    }
    if (F == null) {
      P(D, ne, he, pe, xe, Te, O, B);
    } else {
      N(F, D, pe, xe, Te, O, B);
    }
  };
  const P = (F, D, ne, he, pe, xe, Te, O) => {
    let B;
    let z;
    const {
      props: fe,
      shapeFlag: Ce,
      transition: ve,
      dirs: se
    } = F;
    B = F.el = o(F.type, xe, fe && fe.is, fe);
    if (Ce & 8) {
      d(B, F.children);
    } else if (Ce & 16) {
      X(F.children, B, null, he, pe, ad(F, xe), Te, O);
    }
    if (se) {
      Os(F, null, he, "created");
    }
    M(B, F, F.scopeId, Te, he);
    if (fe) {
      for (const $e in fe) {
        if ($e !== "value" && !Jo($e)) {
          s(B, $e, null, fe[$e], xe, F.children, he, pe, je);
        }
      }
      if ("value" in fe) {
        s(B, "value", null, fe.value, xe);
      }
      if (z = fe.onVnodeBeforeMount) {
        Gn(z, he, F);
      }
    }
    if (se) {
      Os(F, null, he, "beforeMount");
    }
    const oe = EB(pe, ve);
    if (oe) {
      ve.beforeEnter(B);
    }
    n(B, D, ne);
    if ((z = fe && fe.onVnodeMounted) || oe || se) {
      Wr(() => {
        if (z) {
          Gn(z, he, F);
        }
        if (oe) {
          ve.enter(B);
        }
        if (se) {
          Os(F, null, he, "mounted");
        }
      }, pe);
    }
  };
  const M = (F, D, ne, he, pe) => {
    if (ne) {
      g(F, ne);
    }
    if (he) {
      for (let xe = 0; xe < he.length; xe++) {
        g(F, he[xe]);
      }
    }
    if (pe) {
      let xe = pe.subTree;
      if (D === xe) {
        const Te = pe.vnode;
        M(F, Te, Te.scopeId, Te.slotScopeIds, pe.parent);
      }
    }
  };
  const X = (F, D, ne, he, pe, xe, Te, O, B = 0) => {
    for (let z = B; z < F.length; z++) {
      const fe = F[z] = O ? zi(F[z]) : Wn(F[z]);
      b(null, fe, D, ne, he, pe, xe, Te, O);
    }
  };
  const N = (F, D, ne, he, pe, xe, Te) => {
    const O = D.el = F.el;
    let {
      patchFlag: B,
      dynamicChildren: z,
      dirs: fe
    } = D;
    B |= F.patchFlag & 16;
    const Ce = F.props || Ht;
    const ve = D.props || Ht;
    let se;
    if (ne) {
      Is(ne, false);
    }
    if (se = ve.onVnodeBeforeUpdate) {
      Gn(se, ne, D, F);
    }
    if (fe) {
      Os(D, F, ne, "beforeUpdate");
    }
    if (ne) {
      Is(ne, true);
    }
    if (z) {
      ae(F.dynamicChildren, z, O, ne, he, ad(D, pe), xe);
    } else if (!Te) {
      te(F, D, O, null, ne, he, ad(D, pe), xe, false);
    }
    if (B > 0) {
      if (B & 16) {
        Q(O, D, Ce, ve, ne, he, pe);
      } else {
        if (B & 2 && Ce.class !== ve.class) {
          s(O, "class", null, ve.class, pe);
        }
        if (B & 4) {
          s(O, "style", Ce.style, ve.style, pe);
        }
        if (B & 8) {
          const oe = D.dynamicProps;
          for (let $e = 0; $e < oe.length; $e++) {
            const G = oe[$e];
            const $ = Ce[G];
            const J = ve[G];
            if (J !== $ || G === "value") {
              s(O, G, $, J, pe, F.children, ne, he, je);
            }
          }
        }
      }
      if (B & 1 && F.children !== D.children) {
        d(O, D.children);
      }
    } else if (!Te && z == null) {
      Q(O, D, Ce, ve, ne, he, pe);
    }
    if ((se = ve.onVnodeUpdated) || fe) {
      Wr(() => {
        if (se) {
          Gn(se, ne, D, F);
        }
        if (fe) {
          Os(D, F, ne, "updated");
        }
      }, he);
    }
  };
  const ae = (F, D, ne, he, pe, xe, Te) => {
    for (let O = 0; O < D.length; O++) {
      const B = F[O];
      const z = D[O];
      const fe = B.el && (B.type === zt || !Ms(B, z) || B.shapeFlag & 70) ? E(B.el) : ne;
      b(B, z, fe, null, he, pe, xe, Te, true);
    }
  };
  const Q = (F, D, ne, he, pe, xe, Te) => {
    if (ne !== he) {
      if (ne !== Ht) {
        for (const O in ne) {
          if (!Jo(O) && !(O in he)) {
            s(F, O, ne[O], null, Te, D.children, pe, xe, je);
          }
        }
      }
      for (const O in he) {
        if (Jo(O)) {
          continue;
        }
        const B = he[O];
        const z = ne[O];
        if (B !== z && O !== "value") {
          s(F, O, z, B, Te, D.children, pe, xe, je);
        }
      }
      if ("value" in he) {
        s(F, "value", ne.value, he.value, Te);
      }
    }
  };
  const V = (F, D, ne, he, pe, xe, Te, O, B) => {
    const z = D.el = F ? F.el : f("");
    const fe = D.anchor = F ? F.anchor : f("");
    let {
      patchFlag: Ce,
      dynamicChildren: ve,
      slotScopeIds: se
    } = D;
    if (se) {
      O = O ? O.concat(se) : se;
    }
    if (F == null) {
      n(z, ne, he);
      n(fe, ne, he);
      X(D.children || [], ne, fe, pe, xe, Te, O, B);
    } else if (Ce > 0 && Ce & 64 && ve && F.dynamicChildren) {
      ae(F.dynamicChildren, ve, ne, pe, xe, Te, O);
      if (D.key != null || pe && D === pe.subTree) {
        zR(F, D, true);
      }
    } else {
      te(F, D, ne, fe, pe, xe, Te, O, B);
    }
  };
  const Y = (F, D, ne, he, pe, xe, Te, O, B) => {
    D.slotScopeIds = O;
    if (F == null) {
      if (D.shapeFlag & 512) {
        pe.ctx.activate(D, ne, he, Te, B);
      } else {
        k(D, ne, he, pe, xe, Te, B);
      }
    } else {
      w(F, D, B);
    }
  };
  const k = (F, D, ne, he, pe, xe, Te) => {
    const O = F.component = NB(F, he, pe);
    if (fc(F)) {
      O.ctx.renderer = ft;
    }
    PB(O);
    if (O.asyncDep) {
      if (pe) {
        pe.registerDep(O, j, Te);
      }
      if (!F.el) {
        const B = O.subTree = Gt(an);
        A(null, B, D, ne);
      }
    } else {
      j(O, F, D, ne, pe, xe, Te);
    }
  };
  const w = (F, D, ne) => {
    const he = D.component = F.component;
    if (VD(F, D, ne)) {
      if (he.asyncDep && !he.asyncResolved) {
        W(he, D, ne);
        return;
      } else {
        he.next = D;
        BD(he.update);
        he.effect.dirty = true;
        he.update();
      }
    } else {
      D.el = F.el;
      he.vnode = D;
    }
  };
  const j = (F, D, ne, he, pe, xe, Te) => {
    const O = () => {
      if (F.isMounted) {
        let {
          next: fe,
          bu: Ce,
          u: ve,
          parent: se,
          vnode: oe
        } = F;
        {
          const K = qR(F);
          if (K) {
            if (fe) {
              fe.el = oe.el;
              W(F, fe, Te);
            }
            K.asyncDep.then(() => {
              if (!F.isUnmounted) {
                O();
              }
            });
            return;
          }
        }
        let $e = fe;
        let G;
        Is(F, false);
        if (fe) {
          fe.el = oe.el;
          W(F, fe, Te);
        } else {
          fe = oe;
        }
        if (Ce) {
          ef(Ce);
        }
        if (G = fe.props && fe.props.onVnodeBeforeUpdate) {
          Gn(G, se, fe, oe);
        }
        Is(F, true);
        const $ = id(F);
        const J = F.subTree;
        F.subTree = $;
        b(J, $, E(J.el), Et(J), F, pe, xe);
        fe.el = $.el;
        if ($e === null) {
          FD(F, $.el);
        }
        if (ve) {
          Wr(ve, pe);
        }
        if (G = fe.props && fe.props.onVnodeUpdated) {
          Wr(() => Gn(G, se, fe, oe), pe);
        }
      } else {
        let fe;
        const {
          el: Ce,
          props: ve
        } = D;
        const {
          bm: se,
          m: oe,
          parent: $e
        } = F;
        const G = rf(D);
        Is(F, false);
        if (se) {
          ef(se);
        }
        if (!G && (fe = ve && ve.onVnodeBeforeMount)) {
          Gn(fe, $e, D);
        }
        Is(F, true);
        if (Ce && $t) {
          const $ = () => {
            F.subTree = id(F);
            $t(Ce, F.subTree, F, pe, null);
          };
          if (G) {
            D.type.__asyncLoader().then(() => !F.isUnmounted && $());
          } else {
            $();
          }
        } else {
          const $ = F.subTree = id(F);
          b(null, $, ne, he, F, pe, xe);
          D.el = $.el;
        }
        if (oe) {
          Wr(oe, pe);
        }
        if (!G && (fe = ve && ve.onVnodeMounted)) {
          const $ = D;
          Wr(() => Gn(fe, $e, $), pe);
        }
        if ((D.shapeFlag & 256 || $e && rf($e.vnode) && $e.vnode.shapeFlag & 256) && F.a) {
          Wr(F.a, pe);
        }
        F.isMounted = true;
        D = ne = he = null;
      }
    };
    const B = F.effect = new bE(O, vn, () => wE(z), F.scope);
    const z = F.update = () => {
      if (B.dirty) {
        B.run();
      }
    };
    z.id = F.uid;
    Is(F, true);
    z();
  };
  const W = (F, D, ne) => {
    D.component = F;
    const he = F.vnode.props;
    F.vnode = D;
    F.next = null;
    uB(F, D.props, he, ne);
    pB(F, D.children, ne);
    ps();
    lT(F);
    ds();
  };
  const te = (F, D, ne, he, pe, xe, Te, O, B = false) => {
    const z = F && F.children;
    const fe = F ? F.shapeFlag : 0;
    const Ce = D.children;
    const {
      patchFlag: ve,
      shapeFlag: se
    } = D;
    if (ve > 0) {
      if (ve & 128) {
        _e(z, Ce, ne, he, pe, xe, Te, O, B);
        return;
      } else if (ve & 256) {
        ie(z, Ce, ne, he, pe, xe, Te, O, B);
        return;
      }
    }
    if (se & 8) {
      if (fe & 16) {
        je(z, pe, xe);
      }
      if (Ce !== z) {
        d(ne, Ce);
      }
    } else if (fe & 16) {
      if (se & 16) {
        _e(z, Ce, ne, he, pe, xe, Te, O, B);
      } else {
        je(z, pe, xe, true);
      }
    } else {
      if (fe & 8) {
        d(ne, "");
      }
      if (se & 16) {
        X(Ce, ne, he, pe, xe, Te, O, B);
      }
    }
  };
  const ie = (F, D, ne, he, pe, xe, Te, O, B) => {
    F = F || Da;
    D = D || Da;
    const z = F.length;
    const fe = D.length;
    const Ce = Math.min(z, fe);
    let ve;
    for (ve = 0; ve < Ce; ve++) {
      const se = D[ve] = B ? zi(D[ve]) : Wn(D[ve]);
      b(F[ve], se, ne, null, pe, xe, Te, O, B);
    }
    if (z > fe) {
      je(F, pe, xe, true, false, Ce);
    } else {
      X(D, ne, he, pe, xe, Te, O, B, Ce);
    }
  };
  const _e = (F, D, ne, he, pe, xe, Te, O, B) => {
    let z = 0;
    const fe = D.length;
    let Ce = F.length - 1;
    let ve = fe - 1;
    while (z <= Ce && z <= ve) {
      const se = F[z];
      const oe = D[z] = B ? zi(D[z]) : Wn(D[z]);
      if (Ms(se, oe)) {
        b(se, oe, ne, null, pe, xe, Te, O, B);
      } else {
        break;
      }
      z++;
    }
    while (z <= Ce && z <= ve) {
      const se = F[Ce];
      const oe = D[ve] = B ? zi(D[ve]) : Wn(D[ve]);
      if (Ms(se, oe)) {
        b(se, oe, ne, null, pe, xe, Te, O, B);
      } else {
        break;
      }
      Ce--;
      ve--;
    }
    if (z > Ce) {
      if (z <= ve) {
        const se = ve + 1;
        const oe = se < fe ? D[se].el : he;
        while (z <= ve) {
          b(null, D[z] = B ? zi(D[z]) : Wn(D[z]), ne, oe, pe, xe, Te, O, B);
          z++;
        }
      }
    } else if (z > ve) {
      while (z <= Ce) {
        Be(F[z], pe, xe, true);
        z++;
      }
    } else {
      const se = z;
      const oe = z;
      const $e = new Map();
      for (z = oe; z <= ve; z++) {
        const Se = D[z] = B ? zi(D[z]) : Wn(D[z]);
        if (Se.key != null) {
          $e.set(Se.key, z);
        }
      }
      let G;
      let $ = 0;
      const J = ve - oe + 1;
      let K = false;
      let Z = 0;
      const ue = new Array(J);
      for (z = 0; z < J; z++) {
        ue[z] = 0;
      }
      for (z = se; z <= Ce; z++) {
        const Se = F[z];
        if ($ >= J) {
          Be(Se, pe, xe, true);
          continue;
        }
        let Me;
        if (Se.key != null) {
          Me = $e.get(Se.key);
        } else {
          for (G = oe; G <= ve; G++) {
            if (ue[G - oe] === 0 && Ms(Se, D[G])) {
              Me = G;
              break;
            }
          }
        }
        if (Me === undefined) {
          Be(Se, pe, xe, true);
        } else {
          ue[Me - oe] = z + 1;
          if (Me >= Z) {
            Z = Me;
          } else {
            K = true;
          }
          b(Se, D[Me], ne, null, pe, xe, Te, O, B);
          $++;
        }
      }
      const Ae = K ? mB(ue) : Da;
      G = Ae.length - 1;
      z = J - 1;
      for (; z >= 0; z--) {
        const Se = oe + z;
        const Me = D[Se];
        const At = Se + 1 < fe ? D[Se + 1].el : he;
        if (ue[z] === 0) {
          b(null, Me, ne, At, pe, xe, Te, O, B);
        } else if (K) {
          if (G < 0 || z !== Ae[G]) {
            ye(Me, ne, At, 2);
          } else {
            G--;
          }
        }
      }
    }
  };
  const ye = (F, D, ne, he, pe = null) => {
    const {
      el: xe,
      type: Te,
      transition: O,
      children: B,
      shapeFlag: z
    } = F;
    if (z & 6) {
      ye(F.component.subTree, D, ne, he);
      return;
    }
    if (z & 128) {
      F.suspense.move(D, ne, he);
      return;
    }
    if (z & 64) {
      Te.move(F, D, ne, ft);
      return;
    }
    if (Te === zt) {
      n(xe, D, ne);
      for (let Ce = 0; Ce < B.length; Ce++) {
        ye(B[Ce], D, ne, he);
      }
      n(F.anchor, D, ne);
      return;
    }
    if (Te === nf) {
      v(F, D, ne);
      return;
    }
    if (he !== 2 && z & 1 && O) {
      if (he === 0) {
        O.beforeEnter(xe);
        n(xe, D, ne);
        Wr(() => O.enter(xe), pe);
      } else {
        const {
          leave: Ce,
          delayLeave: ve,
          afterLeave: se
        } = O;
        const oe = () => n(xe, D, ne);
        const $e = () => {
          Ce(xe, () => {
            oe();
            if (se) {
              se();
            }
          });
        };
        if (ve) {
          ve(xe, oe, $e);
        } else {
          $e();
        }
      }
    } else {
      n(xe, D, ne);
    }
  };
  const Be = (F, D, ne, he = false, pe = false) => {
    const {
      type: xe,
      props: Te,
      ref: O,
      children: B,
      dynamicChildren: z,
      shapeFlag: fe,
      patchFlag: Ce,
      dirs: ve,
      memoIndex: se
    } = F;
    if (Ce === -2) {
      pe = false;
    }
    if (O != null) {
      bh(O, null, ne, F, true);
    }
    if (se != null) {
      D.renderCache[se] = undefined;
    }
    if (fe & 256) {
      D.ctx.deactivate(F);
      return;
    }
    const oe = fe & 1 && ve;
    const $e = !rf(F);
    let G;
    if ($e && (G = Te && Te.onVnodeBeforeUnmount)) {
      Gn(G, D, F);
    }
    if (fe & 6) {
      Rt(F.component, ne, he);
    } else {
      if (fe & 128) {
        F.suspense.unmount(ne, he);
        return;
      }
      if (oe) {
        Os(F, null, D, "beforeUnmount");
      }
      if (fe & 64) {
        F.type.remove(F, D, ne, ft, he);
      } else if (z && (xe !== zt || Ce > 0 && Ce & 64)) {
        je(z, D, ne, false, true);
      } else if (xe === zt && Ce & 384 || !pe && fe & 16) {
        je(B, D, ne);
      }
      if (he) {
        Le(F);
      }
    }
    if ($e && (G = Te && Te.onVnodeUnmounted) || oe) {
      Wr(() => {
        if (G) {
          Gn(G, D, F);
        }
        if (oe) {
          Os(F, null, D, "unmounted");
        }
      }, ne);
    }
  };
  const Le = F => {
    const {
      type: D,
      el: ne,
      anchor: he,
      transition: pe
    } = F;
    if (D === zt) {
      Ge(ne, he);
      return;
    }
    if (D === nf) {
      y(F);
      return;
    }
    const xe = () => {
      i(ne);
      if (pe && !pe.persisted && pe.afterLeave) {
        pe.afterLeave();
      }
    };
    if (F.shapeFlag & 1 && pe && !pe.persisted) {
      const {
        leave: Te,
        delayLeave: O
      } = pe;
      const B = () => Te(ne, xe);
      if (O) {
        O(F.el, xe, B);
      } else {
        B();
      }
    } else {
      xe();
    }
  };
  const Ge = (F, D) => {
    let ne;
    while (F !== D) {
      ne = m(F);
      i(F);
      F = ne;
    }
    i(D);
  };
  const Rt = (F, D, ne) => {
    const {
      bum: he,
      scope: pe,
      update: xe,
      subTree: Te,
      um: O,
      m: B,
      a: z
    } = F;
    TT(B);
    TT(z);
    if (he) {
      ef(he);
    }
    pe.stop();
    if (xe) {
      xe.active = false;
      Be(Te, F, D, ne);
    }
    if (O) {
      Wr(O, D);
    }
    Wr(() => {
      F.isUnmounted = true;
    }, D);
    if (D && D.pendingBranch && !D.isUnmounted && F.asyncDep && !F.asyncResolved && F.suspenseId === D.pendingId) {
      D.deps--;
      if (D.deps === 0) {
        D.resolve();
      }
    }
  };
  const je = (F, D, ne, he = false, pe = false, xe = 0) => {
    for (let Te = xe; Te < F.length; Te++) {
      Be(F[Te], D, ne, he, pe);
    }
  };
  const Et = F => F.shapeFlag & 6 ? Et(F.component.subTree) : F.shapeFlag & 128 ? F.suspense.next() : m(F.anchor || F.el);
  let Ve = false;
  const ot = (F, D, ne) => {
    if (F == null) {
      if (D._vnode) {
        Be(D._vnode, null, null, true);
      }
    } else {
      b(D._vnode || null, F, D, null, null, null, ne);
    }
    if (!Ve) {
      Ve = true;
      lT();
      IR();
      Ve = false;
    }
    D._vnode = F;
  };
  const ft = {
    p: b,
    um: Be,
    m: ye,
    r: Le,
    mt: k,
    mc: X,
    pc: te,
    pbc: ae,
    n: Et,
    o: t
  };
  let Ut;
  let $t;
  return {
    render: ot,
    hydrate: Ut,
    createApp: aB(ot, Ut)
  };
}
function ad({
  type: t,
  props: e
}, r) {
  if (r === "svg" && t === "foreignObject" || r === "mathml" && t === "annotation-xml" && e && e.encoding && e.encoding.includes("html")) {
    return undefined;
  } else {
    return r;
  }
}
function Is({
  effect: t,
  update: e
}, r) {
  t.allowRecurse = e.allowRecurse = r;
}
function EB(t, e) {
  return (!t || t && !t.pendingBranch) && e && !e.persisted;
}
function zR(t, e, r = false) {
  const n = t.children;
  const i = e.children;
  if (Fe(n) && Fe(i)) {
    for (let s = 0; s < n.length; s++) {
      const o = n[s];
      let f = i[s];
      if (f.shapeFlag & 1 && !f.dynamicChildren) {
        if (f.patchFlag <= 0 || f.patchFlag === 32) {
          f = i[s] = zi(i[s]);
          f.el = o.el;
        }
        if (!r && f.patchFlag !== -2) {
          zR(o, f);
        }
      }
      if (f.type === Ol) {
        f.el = o.el;
      }
    }
  }
}
function mB(t) {
  const e = t.slice();
  const r = [0];
  let n;
  let i;
  let s;
  let o;
  let f;
  const c = t.length;
  for (n = 0; n < c; n++) {
    const p = t[n];
    if (p !== 0) {
      i = r[r.length - 1];
      if (t[i] < p) {
        e[n] = i;
        r.push(n);
        continue;
      }
      s = 0;
      o = r.length - 1;
      while (s < o) {
        f = s + o >> 1;
        if (t[r[f]] < p) {
          s = f + 1;
        } else {
          o = f;
        }
      }
      if (p < t[r[s]]) {
        if (s > 0) {
          e[n] = r[s - 1];
        }
        r[s] = n;
      }
    }
  }
  s = r.length;
  o = r[s - 1];
  while (s-- > 0) {
    r[s] = o;
    o = e[o];
  }
  return r;
}
function qR(t) {
  const e = t.subTree.component;
  if (e) {
    if (e.asyncDep && !e.asyncResolved) {
      return e;
    } else {
      return qR(e);
    }
  }
}
function TT(t) {
  if (t) {
    for (let e = 0; e < t.length; e++) {
      t[e].active = false;
    }
  }
}
const gB = Symbol.for("v-scx");
const _B = () => Vs(gB);
const Bu = {};
function $a(t, e, r) {
  return YR(t, e, r);
}
function YR(t, e, {
  immediate: r,
  deep: n,
  flush: i,
  once: s,
  onTrack: o,
  onTrigger: f
} = Ht) {
  if (e && s) {
    const P = e;
    e = (...M) => {
      P(...M);
      U();
    };
  }
  const c = vr;
  const p = P => n === true ? P : Yi(P, n === false ? 1 : undefined);
  let d;
  let E = false;
  let m = false;
  if ($r(t)) {
    d = () => t.value;
    E = Tf(t);
  } else if (Zo(t)) {
    d = () => p(t);
    E = true;
  } else if (Fe(t)) {
    m = true;
    E = t.some(P => Zo(P) || Tf(P));
    d = () => t.map(P => {
      if ($r(P)) {
        return P.value;
      }
      if (Zo(P)) {
        return p(P);
      }
      if (tt(P)) {
        return is(P, c, 2);
      }
    });
  } else if (tt(t)) {
    if (e) {
      d = () => is(t, c, 2);
    } else {
      d = () => {
        if (g) {
          g();
        }
        return bn(t, c, 3, [T]);
      };
    }
  } else {
    d = vn;
  }
  if (e && n) {
    const P = d;
    d = () => Yi(P());
  }
  let g;
  let T = P => {
    g = v.onStop = () => {
      is(P, c, 4);
      g = v.onStop = undefined;
    };
  };
  let b;
  if (cc) {
    T = vn;
    if (e) {
      if (r) {
        bn(e, c, 3, [d(), m ? [] : undefined, T]);
      }
    } else {
      d();
    }
    if (i === "sync") {
      const P = _B();
      b = P.__watcherHandles ||= [];
    } else {
      return vn;
    }
  }
  let x = m ? new Array(t.length).fill(Bu) : Bu;
  const A = () => {
    if (!!v.active && !!v.dirty) {
      if (e) {
        const P = v.run();
        if (n || E || (m ? P.some((M, X) => os(M, x[X])) : os(P, x))) {
          if (g) {
            g();
          }
          bn(e, c, 3, [P, x === Bu ? undefined : m && x[0] === Bu ? [] : x, T]);
          x = P;
        }
      } else {
        v.run();
      }
    }
  };
  A.allowRecurse = !!e;
  let R;
  if (i === "sync") {
    R = A;
  } else if (i === "post") {
    R = () => Wr(A, c && c.suspense);
  } else {
    A.pre = true;
    if (c) {
      A.id = c.uid;
    }
    R = () => wE(A);
  }
  const v = new bE(d, vn, R);
  const y = lD();
  const U = () => {
    v.stop();
    if (y) {
      TE(y.effects, v);
    }
  };
  if (e) {
    if (r) {
      A();
    } else {
      x = v.run();
    }
  } else if (i === "post") {
    Wr(v.run.bind(v), c && c.suspense);
  } else {
    v.run();
  }
  if (b) {
    b.push(U);
  }
  return U;
}
function TB(t, e, r) {
  const n = this.proxy;
  const i = nr(t) ? t.includes(".") ? JR(n, t) : () => n[t] : t.bind(n, n);
  let s;
  if (tt(e)) {
    s = e;
  } else {
    s = e.handler;
    r = e;
  }
  const o = Il(this);
  const f = YR(i, s.bind(n), r);
  o();
  return f;
}
function JR(t, e) {
  const r = e.split(".");
  return () => {
    let n = t;
    for (let i = 0; i < r.length && n; i++) {
      n = n[r[i]];
    }
    return n;
  };
}
function Yi(t, e = Infinity, r) {
  if (e <= 0 || !Mt(t) || t.__v_skip || (r = r || new Set(), r.has(t))) {
    return t;
  }
  r.add(t);
  e--;
  if ($r(t)) {
    Yi(t.value, e, r);
  } else if (Fe(t)) {
    for (let n = 0; n < t.length; n++) {
      Yi(t[n], e, r);
    }
  } else if (Qf(t) || Ba(t)) {
    t.forEach(n => {
      Yi(n, e, r);
    });
  } else if (rR(t)) {
    for (const n in t) {
      Yi(t[n], e, r);
    }
    for (const n of Object.getOwnPropertySymbols(t)) {
      if (Object.prototype.propertyIsEnumerable.call(t, n)) {
        Yi(t[n], e, r);
      }
    }
  }
  return t;
}
const fc = t => t.type.__isKeepAlive;
function vB(t, e) {
  ZR(t, "a", e);
}
function bB(t, e) {
  ZR(t, "da", e);
}
function ZR(t, e, r = vr) {
  const n = t.__wdc ||= () => {
    let i = r;
    while (i) {
      if (i.isDeactivated) {
        return;
      }
      i = i.parent;
    }
    return t();
  };
  uc(e, n, r);
  if (r) {
    let i = r.parent;
    while (i && i.parent) {
      if (fc(i.parent.vnode)) {
        xB(n, e, r, i);
      }
      i = i.parent;
    }
  }
}
function xB(t, e, r, n) {
  const i = uc(e, t, n, true);
  PE(() => {
    TE(n[e], i);
  }, r);
}
const ji = Symbol("_leaveCb");
const Mu = Symbol("_enterCb");
function QR() {
  const t = {
    isMounted: false,
    isLeaving: false,
    isUnmounting: false,
    leavingVNodes: new Map()
  };
  NE(() => {
    t.isMounted = true;
  });
  MR(() => {
    t.isUnmounting = true;
  });
  return t;
}
const mn = [Function, Array];
const eS = {
  mode: String,
  appear: Boolean,
  persisted: Boolean,
  onBeforeEnter: mn,
  onEnter: mn,
  onAfterEnter: mn,
  onEnterCancelled: mn,
  onBeforeLeave: mn,
  onLeave: mn,
  onAfterLeave: mn,
  onLeaveCancelled: mn,
  onBeforeAppear: mn,
  onAppear: mn,
  onAfterAppear: mn,
  onAppearCancelled: mn
};
const tS = t => {
  const e = t.subTree;
  if (e.component) {
    return tS(e.component);
  } else {
    return e;
  }
};
const RB = {
  name: "BaseTransition",
  props: eS,
  setup(t, {
    slots: e
  }) {
    const r = Ya();
    const n = QR();
    return () => {
      const i = e.default && BE(e.default(), true);
      if (!i || !i.length) {
        return;
      }
      let s = i[0];
      if (i.length > 1) {
        for (const m of i) {
          if (m.type !== an) {
            s = m;
            break;
          }
        }
      }
      const o = xt(t);
      const {
        mode: f
      } = o;
      if (n.isLeaving) {
        return od(s);
      }
      const c = vT(s);
      if (!c) {
        return od(s);
      }
      let p = El(c, o, n, r, m => p = m);
      qa(c, p);
      const d = r.subTree;
      const E = d && vT(d);
      if (E && E.type !== an && !Ms(c, E) && tS(r).type !== an) {
        const m = El(E, o, n, r);
        qa(E, m);
        if (f === "out-in" && c.type !== an) {
          n.isLeaving = true;
          m.afterLeave = () => {
            n.isLeaving = false;
            if (r.update.active !== false) {
              r.effect.dirty = true;
              r.update();
            }
          };
          return od(s);
        }
        if (f === "in-out" && c.type !== an) {
          m.delayLeave = (g, T, b) => {
            const x = rS(n, E);
            x[String(E.key)] = E;
            g[ji] = () => {
              T();
              g[ji] = undefined;
              delete p.delayedLeave;
            };
            p.delayedLeave = b;
          };
        }
      }
      return s;
    };
  }
};
const SB = RB;
function rS(t, e) {
  const {
    leavingVNodes: r
  } = t;
  let n = r.get(e.type);
  if (!n) {
    n = Object.create(null);
    r.set(e.type, n);
  }
  return n;
}
function El(t, e, r, n, i) {
  const {
    appear: s,
    mode: o,
    persisted: f = false,
    onBeforeEnter: c,
    onEnter: p,
    onAfterEnter: d,
    onEnterCancelled: E,
    onBeforeLeave: m,
    onLeave: g,
    onAfterLeave: T,
    onLeaveCancelled: b,
    onBeforeAppear: x,
    onAppear: A,
    onAfterAppear: R,
    onAppearCancelled: v
  } = e;
  const y = String(t.key);
  const U = rS(r, t);
  const P = (N, ae) => {
    if (N) {
      bn(N, n, 9, ae);
    }
  };
  const M = (N, ae) => {
    const Q = ae[1];
    P(N, ae);
    if (Fe(N)) {
      if (N.every(V => V.length <= 1)) {
        Q();
      }
    } else if (N.length <= 1) {
      Q();
    }
  };
  const X = {
    mode: o,
    persisted: f,
    beforeEnter(N) {
      let ae = c;
      if (!r.isMounted) {
        if (s) {
          ae = x || c;
        } else {
          return;
        }
      }
      if (N[ji]) {
        N[ji](true);
      }
      const Q = U[y];
      if (Q && Ms(t, Q) && Q.el[ji]) {
        Q.el[ji]();
      }
      P(ae, [N]);
    },
    enter(N) {
      let ae = p;
      let Q = d;
      let V = E;
      if (!r.isMounted) {
        if (s) {
          ae = A || p;
          Q = R || d;
          V = v || E;
        } else {
          return;
        }
      }
      let Y = false;
      const k = N[Mu] = w => {
        if (!Y) {
          Y = true;
          if (w) {
            P(V, [N]);
          } else {
            P(Q, [N]);
          }
          if (X.delayedLeave) {
            X.delayedLeave();
          }
          N[Mu] = undefined;
        }
      };
      if (ae) {
        M(ae, [N, k]);
      } else {
        k();
      }
    },
    leave(N, ae) {
      const Q = String(t.key);
      if (N[Mu]) {
        N[Mu](true);
      }
      if (r.isUnmounting) {
        return ae();
      }
      P(m, [N]);
      let V = false;
      const Y = N[ji] = k => {
        if (!V) {
          V = true;
          ae();
          if (k) {
            P(b, [N]);
          } else {
            P(T, [N]);
          }
          N[ji] = undefined;
          if (U[Q] === t) {
            delete U[Q];
          }
        }
      };
      U[Q] = t;
      if (g) {
        M(g, [N, Y]);
      } else {
        Y();
      }
    },
    clone(N) {
      const ae = El(N, e, r, n, i);
      if (i) {
        i(ae);
      }
      return ae;
    }
  };
  return X;
}
function od(t) {
  if (fc(t)) {
    t = us(t);
    t.children = null;
    return t;
  }
}
function vT(t) {
  if (!fc(t)) {
    return t;
  }
  const {
    shapeFlag: e,
    children: r
  } = t;
  if (r) {
    if (e & 16) {
      return r[0];
    }
    if (e & 32 && tt(r.default)) {
      return r.default();
    }
  }
}
function qa(t, e) {
  if (t.shapeFlag & 6 && t.component) {
    qa(t.component.subTree, e);
  } else if (t.shapeFlag & 128) {
    t.ssContent.transition = e.clone(t.ssContent);
    t.ssFallback.transition = e.clone(t.ssFallback);
  } else {
    t.transition = e;
  }
}
function BE(t, e = false, r) {
  let n = [];
  let i = 0;
  for (let s = 0; s < t.length; s++) {
    let o = t[s];
    const f = r == null ? o.key : String(r) + String(o.key ?? s);
    if (o.type === zt) {
      if (o.patchFlag & 128) {
        i++;
      }
      n = n.concat(BE(o.children, e, f));
    } else if (e || o.type !== an) {
      n.push(f != null ? us(o, {
        key: f
      }) : o);
    }
  }
  if (i > 1) {
    for (let s = 0; s < n.length; s++) {
      n[s].patchFlag = -2;
    }
  }
  return n;
}
const yB = t => t.__isTeleport;
const zt = Symbol.for("v-fgt");
const Ol = Symbol.for("v-txt");
const an = Symbol.for("v-cmt");
const nf = Symbol.for("v-stc");
const tl = [];
let Pn = null;
function we(t = false) {
  tl.push(Pn = t ? null : []);
}
function AB() {
  tl.pop();
  Pn = tl[tl.length - 1] || null;
}
let ml = 1;
function bT(t) {
  ml += t;
}
function nS(t) {
  t.dynamicChildren = ml > 0 ? Pn || Da : null;
  AB();
  if (ml > 0 && Pn) {
    Pn.push(t);
  }
  return t;
}
function Ie(t, e, r, n, i, s) {
  return nS(Re(t, e, r, n, i, s, true));
}
function Li(t, e, r, n, i) {
  return nS(Gt(t, e, r, n, i, true));
}
function xh(t) {
  if (t) {
    return t.__v_isVNode === true;
  } else {
    return false;
  }
}
function Ms(t, e) {
  return t.type === e.type && t.key === e.key;
}
const iS = ({
  key: t
}) => t ?? null;
const sf = ({
  ref: t,
  ref_key: e,
  ref_for: r
}) => {
  if (typeof t == "number") {
    t = "" + t;
  }
  if (t != null) {
    if (nr(t) || $r(t) || tt(t)) {
      return {
        i: Xr,
        r: t,
        k: e,
        f: !!r
      };
    } else {
      return t;
    }
  } else {
    return null;
  }
};
function Re(t, e = null, r = null, n = 0, i = null, s = t === zt ? 0 : 1, o = false, f = false) {
  const c = {
    __v_isVNode: true,
    __v_skip: true,
    type: t,
    props: e,
    key: e && iS(e),
    ref: e && sf(e),
    scopeId: oc,
    slotScopeIds: null,
    children: r,
    component: null,
    suspense: null,
    ssContent: null,
    ssFallback: null,
    dirs: null,
    transition: null,
    el: null,
    anchor: null,
    target: null,
    targetAnchor: null,
    staticCount: 0,
    shapeFlag: s,
    patchFlag: n,
    dynamicProps: i,
    dynamicChildren: null,
    appContext: null,
    ctx: Xr
  };
  if (f) {
    ME(c, r);
    if (s & 128) {
      t.normalize(c);
    }
  } else if (r) {
    c.shapeFlag |= nr(r) ? 8 : 16;
  }
  if (ml > 0 && !o && Pn && (c.patchFlag > 0 || s & 6) && c.patchFlag !== 32) {
    Pn.push(c);
  }
  return c;
}
const Gt = LB;
function LB(t, e = null, r = null, n = 0, i = null, s = false) {
  if (!t || t === UR) {
    t = an;
  }
  if (xh(t)) {
    const f = us(t, e, true);
    if (r) {
      ME(f, r);
    }
    if (ml > 0 && !s && Pn) {
      if (f.shapeFlag & 6) {
        Pn[Pn.indexOf(t)] = f;
      } else {
        Pn.push(f);
      }
    }
    f.patchFlag = -2;
    return f;
  }
  if ($B(t)) {
    t = t.__vccOpts;
  }
  if (e) {
    e = CB(e);
    let {
      class: f,
      style: c
    } = e;
    if (f && !nr(f)) {
      e.class = Mr(f);
    }
    if (Mt(c)) {
      if (xR(c) && !Fe(c)) {
        c = rr({}, c);
      }
      e.style = rc(c);
    }
  }
  const o = nr(t) ? 1 : XD(t) ? 128 : yB(t) ? 64 : Mt(t) ? 4 : tt(t) ? 2 : 0;
  return Re(t, e, r, n, i, o, s, true);
}
function CB(t) {
  if (t) {
    if (xR(t) || VR(t)) {
      return rr({}, t);
    } else {
      return t;
    }
  } else {
    return null;
  }
}
function us(t, e, r = false, n = false) {
  const {
    props: i,
    ref: s,
    patchFlag: o,
    children: f,
    transition: c
  } = t;
  const p = e ? sS(i || {}, e) : i;
  const d = {
    __v_isVNode: true,
    __v_skip: true,
    type: t.type,
    props: p,
    key: p && iS(p),
    ref: e && e.ref ? r && s ? Fe(s) ? s.concat(sf(e)) : [s, sf(e)] : sf(e) : s,
    scopeId: t.scopeId,
    slotScopeIds: t.slotScopeIds,
    children: f,
    target: t.target,
    targetAnchor: t.targetAnchor,
    staticCount: t.staticCount,
    shapeFlag: t.shapeFlag,
    patchFlag: e && t.type !== zt ? o === -1 ? 16 : o | 16 : o,
    dynamicProps: t.dynamicProps,
    dynamicChildren: t.dynamicChildren,
    appContext: t.appContext,
    dirs: t.dirs,
    transition: c,
    component: t.component,
    suspense: t.suspense,
    ssContent: t.ssContent && us(t.ssContent),
    ssFallback: t.ssFallback && us(t.ssFallback),
    el: t.el,
    anchor: t.anchor,
    ctx: t.ctx,
    ce: t.ce
  };
  if (c && n) {
    qa(d, c.clone(d));
  }
  return d;
}
function ss(t = " ", e = 0) {
  return Gt(Ol, null, t, e);
}
function wB(t, e) {
  const r = Gt(nf, null, t);
  r.staticCount = e;
  return r;
}
function _t(t = "", e = false) {
  if (e) {
    we();
    return Li(an, null, t);
  } else {
    return Gt(an, null, t);
  }
}
function Wn(t) {
  if (t == null || typeof t == "boolean") {
    return Gt(an);
  } else if (Fe(t)) {
    return Gt(zt, null, t.slice());
  } else if (typeof t == "object") {
    return zi(t);
  } else {
    return Gt(Ol, null, String(t));
  }
}
function zi(t) {
  if (t.el === null && t.patchFlag !== -1 || t.memo) {
    return t;
  } else {
    return us(t);
  }
}
function ME(t, e) {
  let r = 0;
  const {
    shapeFlag: n
  } = t;
  if (e == null) {
    e = null;
  } else if (Fe(e)) {
    r = 16;
  } else if (typeof e == "object") {
    if (n & 65) {
      const i = e.default;
      if (i) {
        if (i._c) {
          i._d = false;
        }
        ME(t, i());
        if (i._c) {
          i._d = true;
        }
      }
      return;
    } else {
      r = 32;
      const i = e._;
      if (!i && !VR(e)) {
        e._ctx = Xr;
      } else if (i === 3 && Xr) {
        if (Xr.slots._ === 1) {
          e._ = 1;
        } else {
          e._ = 2;
          t.patchFlag |= 1024;
        }
      }
    }
  } else if (tt(e)) {
    e = {
      default: e,
      _ctx: Xr
    };
    r = 32;
  } else {
    e = String(e);
    if (n & 64) {
      r = 16;
      e = [ss(e)];
    } else {
      r = 8;
    }
  }
  t.children = e;
  t.shapeFlag |= r;
}
function sS(...t) {
  const e = {};
  for (let r = 0; r < t.length; r++) {
    const n = t[r];
    for (const i in n) {
      if (i === "class") {
        if (e.class !== n.class) {
          e.class = Mr([e.class, n.class]);
        }
      } else if (i === "style") {
        e.style = rc([e.style, n.style]);
      } else if (Zf(i)) {
        const s = e[i];
        const o = n[i];
        if (o && s !== o && (!Fe(s) || !s.includes(o))) {
          e[i] = s ? [].concat(s, o) : o;
        }
      } else if (i !== "") {
        e[i] = n[i];
      }
    }
  }
  return e;
}
function Gn(t, e, r, n = null) {
  bn(t, e, 7, [r, n]);
}
const OB = KR();
let IB = 0;
function NB(t, e, r) {
  const n = t.type;
  const i = (e ? e.appContext : t.appContext) || OB;
  const s = {
    uid: IB++,
    vnode: t,
    type: n,
    parent: e,
    appContext: i,
    root: null,
    next: null,
    subTree: null,
    effect: null,
    update: null,
    scope: new uR(true),
    render: null,
    proxy: null,
    exposed: null,
    exposeProxy: null,
    withProxy: null,
    provides: e ? e.provides : Object.create(i.provides),
    accessCache: null,
    renderCache: [],
    components: null,
    directives: null,
    propsOptions: HR(n, i),
    emitsOptions: PR(n, i),
    emit: null,
    emitted: null,
    propsDefaults: Ht,
    inheritAttrs: n.inheritAttrs,
    ctx: Ht,
    data: Ht,
    props: Ht,
    attrs: Ht,
    slots: Ht,
    refs: Ht,
    setupState: Ht,
    setupContext: null,
    attrsProxy: null,
    slotsProxy: null,
    suspense: r,
    suspenseId: r ? r.pendingId : 0,
    asyncDep: null,
    asyncResolved: false,
    isMounted: false,
    isUnmounted: false,
    isDeactivated: false,
    bc: null,
    c: null,
    bm: null,
    m: null,
    bu: null,
    u: null,
    um: null,
    bum: null,
    da: null,
    a: null,
    rtg: null,
    rtc: null,
    ec: null,
    sp: null
  };
  s.ctx = {
    _: s
  };
  s.root = e ? e.root : s;
  s.emit = KD.bind(null, s);
  if (t.ce) {
    t.ce(s);
  }
  return s;
}
let vr = null;
const Ya = () => vr || Xr;
let xf;
let Rh;
{
  const t = sR();
  const e = (r, n) => {
    let i;
    if (!(i = t[r])) {
      i = t[r] = [];
    }
    i.push(n);
    return s => {
      if (i.length > 1) {
        i.forEach(o => o(s));
      } else {
        i[0](s);
      }
    };
  };
  xf = e("__VUE_INSTANCE_SETTERS__", r => vr = r);
  Rh = e("__VUE_SSR_SETTERS__", r => cc = r);
}
const Il = t => {
  const e = vr;
  xf(t);
  t.scope.on();
  return () => {
    t.scope.off();
    xf(e);
  };
};
const xT = () => {
  if (vr) {
    vr.scope.off();
  }
  xf(null);
};
function aS(t) {
  return t.vnode.shapeFlag & 4;
}
let cc = false;
function PB(t, e = false) {
  if (e) {
    Rh(e);
  }
  const {
    props: r,
    children: n
  } = t.vnode;
  const i = aS(t);
  lB(t, r, i, e);
  cB(t, n);
  const s = i ? UB(t, e) : undefined;
  if (e) {
    Rh(false);
  }
  return s;
}
function UB(t, e) {
  const r = t.type;
  t.accessCache = Object.create(null);
  t.proxy = new Proxy(t.ctx, QD);
  const {
    setup: n
  } = r;
  if (n) {
    const i = t.setupContext = n.length > 1 ? BB(t) : null;
    const s = Il(t);
    ps();
    const o = is(n, t, 0, [t.props, i]);
    ds();
    s();
    if (eR(o)) {
      o.then(xT, xT);
      if (e) {
        return o.then(f => {
          RT(t, f, e);
        }).catch(f => {
          sc(f, t, 0);
        });
      }
      t.asyncDep = o;
    } else {
      RT(t, o, e);
    }
  } else {
    oS(t, e);
  }
}
function RT(t, e, r) {
  if (tt(e)) {
    if (t.type.__ssrInlineRender) {
      t.ssrRender = e;
    } else {
      t.render = e;
    }
  } else if (Mt(e)) {
    t.setupState = LR(e);
  }
  oS(t, r);
}
let ST;
function oS(t, e, r) {
  const n = t.type;
  if (!t.render) {
    if (!e && ST && !n.render) {
      const i = n.template || UE(t).template;
      if (i) {
        const {
          isCustomElement: s,
          compilerOptions: o
        } = t.appContext.config;
        const {
          delimiters: f,
          compilerOptions: c
        } = n;
        const p = rr(rr({
          isCustomElement: s,
          delimiters: f
        }, o), c);
        n.render = ST(i, p);
      }
    }
    t.render = n.render || vn;
  }
  {
    const i = Il(t);
    ps();
    try {
      eB(t);
    } finally {
      ds();
      i();
    }
  }
}
const DB = {
  get(t, e) {
    jr(t, "get", "");
    return t[e];
  }
};
function BB(t) {
  const e = r => {
    t.exposed = r || {};
  };
  return {
    attrs: new Proxy(t.attrs, DB),
    slots: t.slots,
    emit: t.emit,
    expose: e
  };
}
function pc(t) {
  if (t.exposed) {
    return t.exposeProxy ||= new Proxy(LR(wD(t.exposed)), {
      get(e, r) {
        if (r in e) {
          return e[r];
        }
        if (r in Qo) {
          return Qo[r](t);
        }
      },
      has(e, r) {
        return r in e || r in Qo;
      }
    });
  } else {
    return t.proxy;
  }
}
function MB(t, e = true) {
  if (tt(t)) {
    return t.displayName || t.name;
  } else {
    return t.name || e && t.__name;
  }
}
function $B(t) {
  return tt(t) && "__vccOpts" in t;
}
const gn = (t, e) => OD(t, e, cc);
function $E(t, e, r) {
  const n = arguments.length;
  if (n === 2) {
    if (Mt(e) && !Fe(e)) {
      if (xh(e)) {
        return Gt(t, null, [e]);
      } else {
        return Gt(t, e);
      }
    } else {
      return Gt(t, null, e);
    }
  } else {
    if (n > 3) {
      r = Array.prototype.slice.call(arguments, 2);
    } else if (n === 3 && xh(r)) {
      r = [r];
    }
    return Gt(t, e, r);
  }
}
const KB = "3.4.31"; /**
                     * @vue/runtime-dom v3.4.31
                     * (c) 2018-present Yuxi (Evan) You and Vue contributors
                     * @license MIT
                     **/
const kB = "http://www.w3.org/2000/svg";
const GB = "http://www.w3.org/1998/Math/MathML";
const vi = typeof document !== "undefined" ? document : null;
const yT = vi && vi.createElement("template");
const VB = {
  insert: (t, e, r) => {
    e.insertBefore(t, r || null);
  },
  remove: t => {
    const e = t.parentNode;
    if (e) {
      e.removeChild(t);
    }
  },
  createElement: (t, e, r, n) => {
    const i = e === "svg" ? vi.createElementNS(kB, t) : e === "mathml" ? vi.createElementNS(GB, t) : r ? vi.createElement(t, {
      is: r
    }) : vi.createElement(t);
    if (t === "select" && n && n.multiple != null) {
      i.setAttribute("multiple", n.multiple);
    }
    return i;
  },
  createText: t => vi.createTextNode(t),
  createComment: t => vi.createComment(t),
  setText: (t, e) => {
    t.nodeValue = e;
  },
  setElementText: (t, e) => {
    t.textContent = e;
  },
  parentNode: t => t.parentNode,
  nextSibling: t => t.nextSibling,
  querySelector: t => vi.querySelector(t),
  setScopeId(t, e) {
    t.setAttribute(e, "");
  },
  insertStaticContent(t, e, r, n, i, s) {
    const o = r ? r.previousSibling : e.lastChild;
    if (i && (i === s || i.nextSibling)) {
      e.insertBefore(i.cloneNode(true), r);
      while (i !== s && !!(i = i.nextSibling));
    } else {
      yT.innerHTML = n === "svg" ? `<svg>${t}</svg>` : n === "mathml" ? `<math>${t}</math>` : t;
      const f = yT.content;
      if (n === "svg" || n === "mathml") {
        const c = f.firstChild;
        while (c.firstChild) {
          f.appendChild(c.firstChild);
        }
        f.removeChild(c);
      }
      e.insertBefore(f, r);
    }
    return [o ? o.nextSibling : e.firstChild, r ? r.previousSibling : e.lastChild];
  }
};
const Vi = "transition";
const Go = "animation";
const Ja = Symbol("_vtc");
const dc = (t, {
  slots: e
}) => $E(SB, uS(t), e);
dc.displayName = "Transition";
const lS = {
  name: String,
  type: String,
  css: {
    type: Boolean,
    default: true
  },
  duration: [String, Number, Object],
  enterFromClass: String,
  enterActiveClass: String,
  enterToClass: String,
  appearFromClass: String,
  appearActiveClass: String,
  appearToClass: String,
  leaveFromClass: String,
  leaveActiveClass: String,
  leaveToClass: String
};
const FB = dc.props = rr({}, eS, lS);
const Ns = (t, e = []) => {
  if (Fe(t)) {
    t.forEach(r => r(...e));
  } else if (t) {
    t(...e);
  }
};
const AT = t => t ? Fe(t) ? t.some(e => e.length > 1) : t.length > 1 : false;
function uS(t) {
  const e = {};
  for (const V in t) {
    if (!(V in lS)) {
      e[V] = t[V];
    }
  }
  if (t.css === false) {
    return e;
  }
  const {
    name: r = "v",
    type: n,
    duration: i,
    enterFromClass: s = `${r}-enter-from`,
    enterActiveClass: o = `${r}-enter-active`,
    enterToClass: f = `${r}-enter-to`,
    appearFromClass: c = s,
    appearActiveClass: p = o,
    appearToClass: d = f,
    leaveFromClass: E = `${r}-leave-from`,
    leaveActiveClass: m = `${r}-leave-active`,
    leaveToClass: g = `${r}-leave-to`
  } = t;
  const T = HB(i);
  const b = T && T[0];
  const x = T && T[1];
  const {
    onBeforeEnter: A,
    onEnter: R,
    onEnterCancelled: v,
    onLeave: y,
    onLeaveCancelled: U,
    onBeforeAppear: P = A,
    onAppear: M = R,
    onAppearCancelled: X = v
  } = e;
  const N = (V, Y, k) => {
    Wi(V, Y ? d : f);
    Wi(V, Y ? p : o);
    if (k) {
      k();
    }
  };
  const ae = (V, Y) => {
    V._isLeaving = false;
    Wi(V, E);
    Wi(V, g);
    Wi(V, m);
    if (Y) {
      Y();
    }
  };
  const Q = V => (Y, k) => {
    const w = V ? M : R;
    const j = () => N(Y, V, k);
    Ns(w, [Y, j]);
    LT(() => {
      Wi(Y, V ? c : s);
      _i(Y, V ? d : f);
      if (!AT(w)) {
        CT(Y, n, b, j);
      }
    });
  };
  return rr(e, {
    onBeforeEnter(V) {
      Ns(A, [V]);
      _i(V, s);
      _i(V, o);
    },
    onBeforeAppear(V) {
      Ns(P, [V]);
      _i(V, c);
      _i(V, p);
    },
    onEnter: Q(false),
    onAppear: Q(true),
    onLeave(V, Y) {
      V._isLeaving = true;
      const k = () => ae(V, Y);
      _i(V, E);
      _i(V, m);
      cS();
      LT(() => {
        if (V._isLeaving) {
          Wi(V, E);
          _i(V, g);
          if (!AT(y)) {
            CT(V, n, x, k);
          }
        }
      });
      Ns(y, [V, k]);
    },
    onEnterCancelled(V) {
      N(V, false);
      Ns(v, [V]);
    },
    onAppearCancelled(V) {
      N(V, true);
      Ns(X, [V]);
    },
    onLeaveCancelled(V) {
      ae(V);
      Ns(U, [V]);
    }
  });
}
function HB(t) {
  if (t == null) {
    return null;
  }
  if (Mt(t)) {
    return [ld(t.enter), ld(t.leave)];
  }
  {
    const e = ld(t);
    return [e, e];
  }
}
function ld(t) {
  return JU(t);
}
function _i(t, e) {
  e.split(/\s+/).forEach(r => r && t.classList.add(r));
  (t[Ja] ||= new Set()).add(e);
}
function Wi(t, e) {
  e.split(/\s+/).forEach(n => n && t.classList.remove(n));
  const r = t[Ja];
  if (r) {
    r.delete(e);
    if (!r.size) {
      t[Ja] = undefined;
    }
  }
}
function LT(t) {
  requestAnimationFrame(() => {
    requestAnimationFrame(t);
  });
}
let WB = 0;
function CT(t, e, r, n) {
  const i = t._endId = ++WB;
  const s = () => {
    if (i === t._endId) {
      n();
    }
  };
  if (r) {
    return setTimeout(s, r);
  }
  const {
    type: o,
    timeout: f,
    propCount: c
  } = fS(t, e);
  if (!o) {
    return n();
  }
  const p = o + "end";
  let d = 0;
  const E = () => {
    t.removeEventListener(p, m);
    s();
  };
  const m = g => {
    if (g.target === t && ++d >= c) {
      E();
    }
  };
  setTimeout(() => {
    if (d < c) {
      E();
    }
  }, f + 1);
  t.addEventListener(p, m);
}
function fS(t, e) {
  const r = window.getComputedStyle(t);
  const n = T => (r[T] || "").split(", ");
  const i = n(`${Vi}Delay`);
  const s = n(`${Vi}Duration`);
  const o = wT(i, s);
  const f = n(`${Go}Delay`);
  const c = n(`${Go}Duration`);
  const p = wT(f, c);
  let d = null;
  let E = 0;
  let m = 0;
  if (e === Vi) {
    if (o > 0) {
      d = Vi;
      E = o;
      m = s.length;
    }
  } else if (e === Go) {
    if (p > 0) {
      d = Go;
      E = p;
      m = c.length;
    }
  } else {
    E = Math.max(o, p);
    d = E > 0 ? o > p ? Vi : Go : null;
    m = d ? d === Vi ? s.length : c.length : 0;
  }
  const g = d === Vi && /\b(transform|all)(,|$)/.test(n(`${Vi}Property`).toString());
  return {
    type: d,
    timeout: E,
    propCount: m,
    hasTransform: g
  };
}
function wT(t, e) {
  while (t.length < e.length) {
    t = t.concat(t);
  }
  return Math.max(...e.map((r, n) => OT(r) + OT(t[n])));
}
function OT(t) {
  if (t === "auto") {
    return 0;
  } else {
    return Number(t.slice(0, -1).replace(",", ".")) * 1000;
  }
}
function cS() {
  return document.body.offsetHeight;
}
function XB(t, e, r) {
  const n = t[Ja];
  if (n) {
    e = (e ? [e, ...n] : [...n]).join(" ");
  }
  if (e == null) {
    t.removeAttribute("class");
  } else if (r) {
    t.setAttribute("class", e);
  } else {
    t.className = e;
  }
}
const IT = Symbol("_vod");
const jB = Symbol("_vsh");
const zB = Symbol("");
const qB = /(^|;)\s*display\s*:/;
function YB(t, e, r) {
  const n = t.style;
  const i = nr(r);
  let s = false;
  if (r && !i) {
    if (e) {
      if (nr(e)) {
        for (const o of e.split(";")) {
          const f = o.slice(0, o.indexOf(":")).trim();
          if (r[f] == null) {
            af(n, f, "");
          }
        }
      } else {
        for (const o in e) {
          if (r[o] == null) {
            af(n, o, "");
          }
        }
      }
    }
    for (const o in r) {
      if (o === "display") {
        s = true;
      }
      af(n, o, r[o]);
    }
  } else if (i) {
    if (e !== r) {
      const o = n[zB];
      if (o) {
        r += ";" + o;
      }
      n.cssText = r;
      s = qB.test(r);
    }
  } else if (e) {
    t.removeAttribute("style");
  }
  if (IT in t) {
    t[IT] = s ? n.display : "";
    if (t[jB]) {
      n.display = "none";
    }
  }
}
const NT = /\s*!important$/;
function af(t, e, r) {
  if (Fe(r)) {
    r.forEach(n => af(t, e, n));
  } else {
    if (r == null) {
      r = "";
    }
    if (e.startsWith("--")) {
      t.setProperty(e, r);
    } else {
      const n = JB(t, e);
      if (NT.test(r)) {
        t.setProperty(Js(n), r.replace(NT, ""), "important");
      } else {
        t[n] = r;
      }
    }
  }
}
const PT = ["Webkit", "Moz", "ms"];
const ud = {};
function JB(t, e) {
  const r = ud[e];
  if (r) {
    return r;
  }
  let n = ri(e);
  if (n !== "filter" && n in t) {
    return ud[e] = n;
  }
  n = tc(n);
  for (let i = 0; i < PT.length; i++) {
    const s = PT[i] + n;
    if (s in t) {
      return ud[e] = s;
    }
  }
  return e;
}
const UT = "http://www.w3.org/1999/xlink";
function DT(t, e, r, n, i, s = nD(e)) {
  if (n && e.startsWith("xlink:")) {
    if (r == null) {
      t.removeAttributeNS(UT, e.slice(6, e.length));
    } else {
      t.setAttributeNS(UT, e, r);
    }
  } else if (r == null || s && !aR(r)) {
    t.removeAttribute(e);
  } else {
    t.setAttribute(e, s ? "" : ti(r) ? String(r) : r);
  }
}
function ZB(t, e, r, n, i, s, o) {
  if (e === "innerHTML" || e === "textContent") {
    if (n) {
      o(n, i, s);
    }
    t[e] = r ?? "";
    return;
  }
  const f = t.tagName;
  if (e === "value" && f !== "PROGRESS" && !f.includes("-")) {
    const p = f === "OPTION" ? t.getAttribute("value") || "" : t.value;
    const d = r == null ? "" : String(r);
    if (p !== d || !("_value" in t)) {
      t.value = d;
    }
    if (r == null) {
      t.removeAttribute(e);
    }
    t._value = r;
    return;
  }
  let c = false;
  if (r === "" || r == null) {
    const p = typeof t[e];
    if (p === "boolean") {
      r = aR(r);
    } else if (r == null && p === "string") {
      r = "";
      c = true;
    } else if (p === "number") {
      r = 0;
      c = true;
    }
  }
  try {
    t[e] = r;
  } catch {}
  if (c) {
    t.removeAttribute(e);
  }
}
function KE(t, e, r, n) {
  t.addEventListener(e, r, n);
}
function QB(t, e, r, n) {
  t.removeEventListener(e, r, n);
}
const BT = Symbol("_vei");
function eM(t, e, r, n, i = null) {
  const s = t[BT] ||= {};
  const o = s[e];
  if (n && o) {
    o.value = n;
  } else {
    const [f, c] = tM(e);
    if (n) {
      const p = s[e] = iM(n, i);
      KE(t, f, p, c);
    } else if (o) {
      QB(t, f, o, c);
      s[e] = undefined;
    }
  }
}
const MT = /(?:Once|Passive|Capture)$/;
function tM(t) {
  let e;
  if (MT.test(t)) {
    e = {};
    let n;
    while (n = t.match(MT)) {
      t = t.slice(0, t.length - n[0].length);
      e[n[0].toLowerCase()] = true;
    }
  }
  return [t[2] === ":" ? t.slice(3) : Js(t.slice(2)), e];
}
let fd = 0;
const rM = Promise.resolve();
const nM = () => fd || (rM.then(() => fd = 0), fd = Date.now());
function iM(t, e) {
  const r = n => {
    if (!n._vts) {
      n._vts = Date.now();
    } else if (n._vts <= r.attached) {
      return;
    }
    bn(sM(n, r.value), e, 5, [n]);
  };
  r.value = t;
  r.attached = nM();
  return r;
}
function sM(t, e) {
  if (Fe(e)) {
    const r = t.stopImmediatePropagation;
    t.stopImmediatePropagation = () => {
      r.call(t);
      t._stopped = true;
    };
    return e.map(n => i => !i._stopped && n && n(i));
  } else {
    return e;
  }
}
const $T = t => t.charCodeAt(0) === 111 && t.charCodeAt(1) === 110 && t.charCodeAt(2) > 96 && t.charCodeAt(2) < 123;
const aM = (t, e, r, n, i, s, o, f, c) => {
  const p = i === "svg";
  if (e === "class") {
    XB(t, n, p);
  } else if (e === "style") {
    YB(t, r, n);
  } else if (Zf(e)) {
    if (!_E(e)) {
      eM(t, e, r, n, o);
    }
  } else if (e[0] === "." ? (e = e.slice(1), true) : e[0] === "^" ? (e = e.slice(1), false) : oM(t, e, n, p)) {
    ZB(t, e, n, s, o, f, c);
    if (!t.tagName.includes("-") && (e === "value" || e === "checked" || e === "selected")) {
      DT(t, e, n, p, o, e !== "value");
    }
  } else {
    if (e === "true-value") {
      t._trueValue = n;
    } else if (e === "false-value") {
      t._falseValue = n;
    }
    DT(t, e, n, p);
  }
};
function oM(t, e, r, n) {
  if (n) {
    return e === "innerHTML" || e === "textContent" || !!(e in t) && !!$T(e) && !!tt(r);
  }
  if (e === "spellcheck" || e === "draggable" || e === "translate" || e === "form" || e === "list" && t.tagName === "INPUT" || e === "type" && t.tagName === "TEXTAREA") {
    return false;
  }
  if (e === "width" || e === "height") {
    const i = t.tagName;
    if (i === "IMG" || i === "VIDEO" || i === "CANVAS" || i === "SOURCE") {
      return false;
    }
  }
  if ($T(e) && nr(r)) {
    return false;
  } else {
    return e in t;
  }
}
const pS = new WeakMap();
const dS = new WeakMap();
const Rf = Symbol("_moveCb");
const KT = Symbol("_enterCb");
const hS = {
  name: "TransitionGroup",
  props: rr({}, FB, {
    tag: String,
    moveClass: String
  }),
  setup(t, {
    slots: e
  }) {
    const r = Ya();
    const n = QR();
    let i;
    let s;
    BR(() => {
      if (!i.length) {
        return;
      }
      const o = t.moveClass || `${t.name || "v"}-move`;
      if (!dM(i[0].el, r.vnode.el, o)) {
        return;
      }
      i.forEach(fM);
      i.forEach(cM);
      const f = i.filter(pM);
      cS();
      f.forEach(c => {
        const p = c.el;
        const d = p.style;
        _i(p, o);
        d.transform = d.webkitTransform = d.transitionDuration = "";
        const E = p[Rf] = m => {
          if (!m || m.target === p) {
            if (!m || /transform$/.test(m.propertyName)) {
              p.removeEventListener("transitionend", E);
              p[Rf] = null;
              Wi(p, o);
            }
          }
        };
        p.addEventListener("transitionend", E);
      });
    });
    return () => {
      const o = xt(t);
      const f = uS(o);
      let c = o.tag || zt;
      i = [];
      if (s) {
        for (let p = 0; p < s.length; p++) {
          const d = s[p];
          if (d.el && d.el instanceof Element) {
            i.push(d);
            qa(d, El(d, f, n, r));
            pS.set(d, d.el.getBoundingClientRect());
          }
        }
      }
      s = e.default ? BE(e.default()) : [];
      for (let p = 0; p < s.length; p++) {
        const d = s[p];
        if (d.key != null) {
          qa(d, El(d, f, n, r));
        }
      }
      return Gt(c, null, s);
    };
  }
};
const lM = t => delete t.mode;
hS.props;
const uM = hS;
function fM(t) {
  const e = t.el;
  if (e[Rf]) {
    e[Rf]();
  }
  if (e[KT]) {
    e[KT]();
  }
}
function cM(t) {
  dS.set(t, t.el.getBoundingClientRect());
}
function pM(t) {
  const e = pS.get(t);
  const r = dS.get(t);
  const n = e.left - r.left;
  const i = e.top - r.top;
  if (n || i) {
    const s = t.el.style;
    s.transform = s.webkitTransform = `translate(${n}px,${i}px)`;
    s.transitionDuration = "0s";
    return t;
  }
}
function dM(t, e, r) {
  const n = t.cloneNode();
  const i = t[Ja];
  if (i) {
    i.forEach(f => {
      f.split(/\s+/).forEach(c => c && n.classList.remove(c));
    });
  }
  r.split(/\s+/).forEach(f => f && n.classList.add(f));
  n.style.display = "none";
  const s = e.nodeType === 1 ? e : e.parentNode;
  s.appendChild(n);
  const {
    hasTransform: o
  } = fS(n);
  s.removeChild(n);
  return o;
}
const Sf = t => {
  const e = t.props["onUpdate:modelValue"] || false;
  if (Fe(e)) {
    return r => ef(e, r);
  } else {
    return e;
  }
};
const Ka = Symbol("_assign");
const kT = {
  created(t, {
    value: e
  }, r) {
    t.checked = ja(e, r.props.value);
    t[Ka] = Sf(r);
    KE(t, "change", () => {
      t[Ka](gl(t));
    });
  },
  beforeUpdate(t, {
    value: e,
    oldValue: r
  }, n) {
    t[Ka] = Sf(n);
    if (e !== r) {
      t.checked = ja(e, n.props.value);
    }
  }
};
const ES = {
  deep: true,
  created(t, {
    value: e,
    modifiers: {
      number: r
    }
  }, n) {
    const i = Qf(e);
    KE(t, "change", () => {
      const s = Array.prototype.filter.call(t.options, o => o.selected).map(o => r ? iR(gl(o)) : gl(o));
      t[Ka](t.multiple ? i ? new Set(s) : s : s[0]);
      t._assigning = true;
      wR(() => {
        t._assigning = false;
      });
    });
    t[Ka] = Sf(n);
  },
  mounted(t, {
    value: e,
    modifiers: {
      number: r
    }
  }) {
    GT(t, e);
  },
  beforeUpdate(t, e, r) {
    t[Ka] = Sf(r);
  },
  updated(t, {
    value: e,
    modifiers: {
      number: r
    }
  }) {
    if (!t._assigning) {
      GT(t, e);
    }
  }
};
function GT(t, e, r) {
  const n = t.multiple;
  const i = Fe(e);
  if (!n || !!i || !!Qf(e)) {
    for (let s = 0, o = t.options.length; s < o; s++) {
      const f = t.options[s];
      const c = gl(f);
      if (n) {
        if (i) {
          const p = typeof c;
          if (p === "string" || p === "number") {
            f.selected = e.some(d => String(d) === String(c));
          } else {
            f.selected = sD(e, c) > -1;
          }
        } else {
          f.selected = e.has(c);
        }
      } else if (ja(gl(f), e)) {
        if (t.selectedIndex !== s) {
          t.selectedIndex = s;
        }
        return;
      }
    }
    if (!n && t.selectedIndex !== -1) {
      t.selectedIndex = -1;
    }
  }
}
function gl(t) {
  if ("_value" in t) {
    return t._value;
  } else {
    return t.value;
  }
}
const hM = ["ctrl", "shift", "alt", "meta"];
const EM = {
  stop: t => t.stopPropagation(),
  prevent: t => t.preventDefault(),
  self: t => t.target !== t.currentTarget,
  ctrl: t => !t.ctrlKey,
  shift: t => !t.shiftKey,
  alt: t => !t.altKey,
  meta: t => !t.metaKey,
  left: t => "button" in t && t.button !== 0,
  middle: t => "button" in t && t.button !== 1,
  right: t => "button" in t && t.button !== 2,
  exact: (t, e) => hM.some(r => t[`${r}Key`] && !e.includes(r))
};
const xn = (t, e) => {
  const r = t._withMods ||= {};
  const n = e.join(".");
  return r[n] ||= (i, ...s) => {
    for (let o = 0; o < e.length; o++) {
      const f = EM[e[o]];
      if (f && f(i, e)) {
        return;
      }
    }
    return t(i, ...s);
  };
};
const mM = {
  esc: "escape",
  space: " ",
  up: "arrow-up",
  left: "arrow-left",
  right: "arrow-right",
  down: "arrow-down",
  delete: "backspace"
};
const ka = (t, e) => {
  const r = t._withKeys ||= {};
  const n = e.join(".");
  return r[n] ||= i => {
    if (!("key" in i)) {
      return;
    }
    const s = Js(i.key);
    if (e.some(o => o === s || mM[o] === s)) {
      return t(i);
    }
  };
};
const gM = rr({
  patchProp: aM
}, VB);
let VT;
function _M() {
  return VT ||= dB(gM);
}
const TM = (...t) => {
  const e = _M().createApp(...t);
  const {
    mount: r
  } = e;
  e.mount = n => {
    const i = bM(n);
    if (!i) {
      return;
    }
    const s = e._component;
    if (!tt(s) && !s.render && !s.template) {
      s.template = i.innerHTML;
    }
    i.innerHTML = "";
    const o = r(i, false, vM(i));
    if (i instanceof Element) {
      i.removeAttribute("v-cloak");
      i.setAttribute("data-v-app", "");
    }
    return o;
  };
  return e;
};
function vM(t) {
  if (t instanceof SVGElement) {
    return "svg";
  }
  if (typeof MathMLElement == "function" && t instanceof MathMLElement) {
    return "mathml";
  }
}
function bM(t) {
  if (nr(t)) {
    return document.querySelector(t);
  } else {
    return t;
  }
} /*!
  * shared v9.13.1
  * (c) 2024 kazuya kawaguchi
  * Released under the MIT License.
  */
const yf = typeof window !== "undefined";
const hs = (t, e = false) => e ? Symbol.for(t) : Symbol(t);
const xM = (t, e, r) => RM({
  l: t,
  k: e,
  s: r
});
const RM = t => JSON.stringify(t).replace(/\u2028/g, "\\u2028").replace(/\u2029/g, "\\u2029").replace(/\u0027/g, "\\u0027");
const lr = t => typeof t == "number" && isFinite(t);
const SM = t => gS(t) === "[object Date]";
const fs = t => gS(t) === "[object RegExp]";
const hc = t => Ze(t) && Object.keys(t).length === 0;
const Lr = Object.assign;
let FT;
const Af = () => FT ||= typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {};
function HT(t) {
  return t.replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&apos;");
}
const yM = Object.prototype.hasOwnProperty;
function Lf(t, e) {
  return yM.call(t, e);
}
const Wt = Array.isArray;
const kt = t => typeof t == "function";
const Ne = t => typeof t == "string";
const lt = t => typeof t == "boolean";
const Ct = t => t !== null && typeof t == "object";
const AM = t => Ct(t) && kt(t.then) && kt(t.catch);
const mS = Object.prototype.toString;
const gS = t => mS.call(t);
const Ze = t => {
  if (!Ct(t)) {
    return false;
  }
  const e = Object.getPrototypeOf(t);
  return e === null || e.constructor === Object;
};
const LM = t => t == null ? "" : Wt(t) || Ze(t) && t.toString === mS ? JSON.stringify(t, null, 2) : String(t);
function CM(t, e = "") {
  return t.reduce((r, n, i) => i === 0 ? r + n : r + e + n, "");
}
function Ec(t) {
  let e = t;
  return () => ++e;
}
function wM(t, e) {
  if (typeof console !== "undefined") {
    console.warn("[intlify] " + t);
    if (e) {
      console.warn(e.stack);
    }
  }
}
const $u = t => !Ct(t) || Wt(t);
function of(t, e) {
  if ($u(t) || $u(e)) {
    throw new Error("Invalid value");
  }
  const r = [{
    src: t,
    des: e
  }];
  while (r.length) {
    const {
      src: n,
      des: i
    } = r.pop();
    Object.keys(n).forEach(s => {
      if ($u(n[s]) || $u(i[s])) {
        i[s] = n[s];
      } else {
        r.push({
          src: n[s],
          des: i[s]
        });
      }
    });
  }
} /*!
  * message-compiler v9.13.1
  * (c) 2024 kazuya kawaguchi
  * Released under the MIT License.
  */
function OM(t, e, r) {
  return {
    line: t,
    column: e,
    offset: r
  };
}
function Cf(t, e, r) {
  return {
    start: t,
    end: e
  };
}
const IM = /\{([0-9a-zA-Z]+)\}/g;
function _S(t, ...e) {
  if (e.length === 1 && NM(e[0])) {
    e = e[0];
  }
  if (!e || !e.hasOwnProperty) {
    e = {};
  }
  return t.replace(IM, (r, n) => e.hasOwnProperty(n) ? e[n] : "");
}
const TS = Object.assign;
const WT = t => typeof t == "string";
const NM = t => t !== null && typeof t == "object";
function vS(t, e = "") {
  return t.reduce((r, n, i) => i === 0 ? r + n : r + e + n, "");
}
const kE = {
  USE_MODULO_SYNTAX: 1,
  __EXTEND_POINT__: 2
};
const PM = {
  [kE.USE_MODULO_SYNTAX]: "Use modulo before '{{0}}'."
};
function UM(t, e, ...r) {
  const n = _S(PM[t], ...(r || []));
  const i = {
    message: String(n),
    code: t
  };
  if (e) {
    i.location = e;
  }
  return i;
}
const ze = {
  EXPECTED_TOKEN: 1,
  INVALID_TOKEN_IN_PLACEHOLDER: 2,
  UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER: 3,
  UNKNOWN_ESCAPE_SEQUENCE: 4,
  INVALID_UNICODE_ESCAPE_SEQUENCE: 5,
  UNBALANCED_CLOSING_BRACE: 6,
  UNTERMINATED_CLOSING_BRACE: 7,
  EMPTY_PLACEHOLDER: 8,
  NOT_ALLOW_NEST_PLACEHOLDER: 9,
  INVALID_LINKED_FORMAT: 10,
  MUST_HAVE_MESSAGES_IN_PLURAL: 11,
  UNEXPECTED_EMPTY_LINKED_MODIFIER: 12,
  UNEXPECTED_EMPTY_LINKED_KEY: 13,
  UNEXPECTED_LEXICAL_ANALYSIS: 14,
  UNHANDLED_CODEGEN_NODE_TYPE: 15,
  UNHANDLED_MINIFIER_NODE_TYPE: 16,
  __EXTEND_POINT__: 17
};
const DM = {
  [ze.EXPECTED_TOKEN]: "Expected token: '{0}'",
  [ze.INVALID_TOKEN_IN_PLACEHOLDER]: "Invalid token in placeholder: '{0}'",
  [ze.UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER]: "Unterminated single quote in placeholder",
  [ze.UNKNOWN_ESCAPE_SEQUENCE]: "Unknown escape sequence: \\{0}",
  [ze.INVALID_UNICODE_ESCAPE_SEQUENCE]: "Invalid unicode escape sequence: {0}",
  [ze.UNBALANCED_CLOSING_BRACE]: "Unbalanced closing brace",
  [ze.UNTERMINATED_CLOSING_BRACE]: "Unterminated closing brace",
  [ze.EMPTY_PLACEHOLDER]: "Empty placeholder",
  [ze.NOT_ALLOW_NEST_PLACEHOLDER]: "Not allowed nest placeholder",
  [ze.INVALID_LINKED_FORMAT]: "Invalid linked format",
  [ze.MUST_HAVE_MESSAGES_IN_PLURAL]: "Plural must have messages",
  [ze.UNEXPECTED_EMPTY_LINKED_MODIFIER]: "Unexpected empty linked modifier",
  [ze.UNEXPECTED_EMPTY_LINKED_KEY]: "Unexpected empty linked key",
  [ze.UNEXPECTED_LEXICAL_ANALYSIS]: "Unexpected lexical analysis in token: '{0}'",
  [ze.UNHANDLED_CODEGEN_NODE_TYPE]: "unhandled codegen node type: '{0}'",
  [ze.UNHANDLED_MINIFIER_NODE_TYPE]: "unhandled mimifier node type: '{0}'"
};
function fo(t, e, r = {}) {
  const {
    domain: n,
    messages: i,
    args: s
  } = r;
  const o = _S((i || DM)[t] || "", ...(s || []));
  const f = new SyntaxError(String(o));
  f.code = t;
  if (e) {
    f.location = e;
  }
  f.domain = n;
  return f;
}
function BM(t) {
  throw t;
}
const Ei = " ";
const MM = "\r";
const Br = `
`;
const $M = "\u2028";
const KM = "\u2029";
function kM(t) {
  const e = t;
  let r = 0;
  let n = 1;
  let i = 1;
  let s = 0;
  const o = M => e[M] === MM && e[M + 1] === Br;
  const f = M => e[M] === Br;
  const c = M => e[M] === KM;
  const p = M => e[M] === $M;
  const d = M => o(M) || f(M) || c(M) || p(M);
  const E = () => r;
  const m = () => n;
  const g = () => i;
  const T = () => s;
  const b = M => o(M) || c(M) || p(M) ? Br : e[M];
  const x = () => b(r);
  const A = () => b(r + s);
  function R() {
    s = 0;
    if (d(r)) {
      n++;
      i = 0;
    }
    if (o(r)) {
      r++;
    }
    r++;
    i++;
    return e[r];
  }
  function v() {
    if (o(r + s)) {
      s++;
    }
    s++;
    return e[r + s];
  }
  function y() {
    r = 0;
    n = 1;
    i = 1;
    s = 0;
  }
  function U(M = 0) {
    s = M;
  }
  function P() {
    const M = r + s;
    while (M !== r) {
      R();
    }
    s = 0;
  }
  return {
    index: E,
    line: m,
    column: g,
    peekOffset: T,
    charAt: b,
    currentChar: x,
    currentPeek: A,
    next: R,
    peek: v,
    reset: y,
    resetPeek: U,
    skipToPeek: P
  };
}
const Fi = undefined;
const GM = ".";
const XT = "'";
const VM = "tokenizer";
function FM(t, e = {}) {
  const r = e.location !== false;
  const n = kM(t);
  const i = () => n.index();
  const s = () => OM(n.line(), n.column(), n.index());
  const o = s();
  const f = i();
  const c = {
    currentType: 14,
    offset: f,
    startLoc: o,
    endLoc: o,
    lastType: 14,
    lastOffset: f,
    lastStartLoc: o,
    lastEndLoc: o,
    braceNest: 0,
    inLinked: false,
    text: ""
  };
  const p = () => c;
  const {
    onError: d
  } = e;
  function E(O, B, z, ...fe) {
    const Ce = p();
    B.column += z;
    B.offset += z;
    if (d) {
      const ve = r ? Cf(Ce.startLoc, B) : null;
      const se = fo(O, ve, {
        domain: VM,
        args: fe
      });
      d(se);
    }
  }
  function m(O, B, z) {
    O.endLoc = s();
    O.currentType = B;
    const fe = {
      type: B
    };
    if (r) {
      fe.loc = Cf(O.startLoc, O.endLoc);
    }
    if (z != null) {
      fe.value = z;
    }
    return fe;
  }
  const g = O => m(O, 14);
  function T(O, B) {
    if (O.currentChar() === B) {
      O.next();
      return B;
    } else {
      E(ze.EXPECTED_TOKEN, s(), 0, B);
      return "";
    }
  }
  function b(O) {
    let B = "";
    while (O.currentPeek() === Ei || O.currentPeek() === Br) {
      B += O.currentPeek();
      O.peek();
    }
    return B;
  }
  function x(O) {
    const B = b(O);
    O.skipToPeek();
    return B;
  }
  function A(O) {
    if (O === Fi) {
      return false;
    }
    const B = O.charCodeAt(0);
    return B >= 97 && B <= 122 || B >= 65 && B <= 90 || B === 95;
  }
  function R(O) {
    if (O === Fi) {
      return false;
    }
    const B = O.charCodeAt(0);
    return B >= 48 && B <= 57;
  }
  function v(O, B) {
    const {
      currentType: z
    } = B;
    if (z !== 2) {
      return false;
    }
    b(O);
    const fe = A(O.currentPeek());
    O.resetPeek();
    return fe;
  }
  function y(O, B) {
    const {
      currentType: z
    } = B;
    if (z !== 2) {
      return false;
    }
    b(O);
    const fe = O.currentPeek() === "-" ? O.peek() : O.currentPeek();
    const Ce = R(fe);
    O.resetPeek();
    return Ce;
  }
  function U(O, B) {
    const {
      currentType: z
    } = B;
    if (z !== 2) {
      return false;
    }
    b(O);
    const fe = O.currentPeek() === XT;
    O.resetPeek();
    return fe;
  }
  function P(O, B) {
    const {
      currentType: z
    } = B;
    if (z !== 8) {
      return false;
    }
    b(O);
    const fe = O.currentPeek() === ".";
    O.resetPeek();
    return fe;
  }
  function M(O, B) {
    const {
      currentType: z
    } = B;
    if (z !== 9) {
      return false;
    }
    b(O);
    const fe = A(O.currentPeek());
    O.resetPeek();
    return fe;
  }
  function X(O, B) {
    const {
      currentType: z
    } = B;
    if (z !== 8 && z !== 12) {
      return false;
    }
    b(O);
    const fe = O.currentPeek() === ":";
    O.resetPeek();
    return fe;
  }
  function N(O, B) {
    const {
      currentType: z
    } = B;
    if (z !== 10) {
      return false;
    }
    const fe = () => {
      const ve = O.currentPeek();
      if (ve === "{") {
        return A(O.peek());
      } else if (ve === "@" || ve === "%" || ve === "|" || ve === ":" || ve === "." || ve === Ei || !ve) {
        return false;
      } else if (ve === Br) {
        O.peek();
        return fe();
      } else {
        return V(O, false);
      }
    };
    const Ce = fe();
    O.resetPeek();
    return Ce;
  }
  function ae(O) {
    b(O);
    const B = O.currentPeek() === "|";
    O.resetPeek();
    return B;
  }
  function Q(O) {
    const B = b(O);
    const z = O.currentPeek() === "%" && O.peek() === "{";
    O.resetPeek();
    return {
      isModulo: z,
      hasSpace: B.length > 0
    };
  }
  function V(O, B = true) {
    const z = (Ce = false, ve = "", se = false) => {
      const oe = O.currentPeek();
      if (oe === "{") {
        if (ve === "%") {
          return false;
        } else {
          return Ce;
        }
      } else if (oe === "@" || !oe) {
        if (ve === "%") {
          return true;
        } else {
          return Ce;
        }
      } else if (oe === "%") {
        O.peek();
        return z(Ce, "%", true);
      } else if (oe === "|") {
        if (ve === "%" || se) {
          return true;
        } else {
          return ve !== Ei && ve !== Br;
        }
      } else if (oe === Ei) {
        O.peek();
        return z(true, Ei, se);
      } else if (oe === Br) {
        O.peek();
        return z(true, Br, se);
      } else {
        return true;
      }
    };
    const fe = z();
    if (B) {
      O.resetPeek();
    }
    return fe;
  }
  function Y(O, B) {
    const z = O.currentChar();
    if (z === Fi) {
      return Fi;
    } else if (B(z)) {
      O.next();
      return z;
    } else {
      return null;
    }
  }
  function k(O) {
    const B = O.charCodeAt(0);
    return B >= 97 && B <= 122 || B >= 65 && B <= 90 || B >= 48 && B <= 57 || B === 95 || B === 36;
  }
  function w(O) {
    return Y(O, k);
  }
  function j(O) {
    const B = O.charCodeAt(0);
    return B >= 97 && B <= 122 || B >= 65 && B <= 90 || B >= 48 && B <= 57 || B === 95 || B === 36 || B === 45;
  }
  function W(O) {
    return Y(O, j);
  }
  function te(O) {
    const B = O.charCodeAt(0);
    return B >= 48 && B <= 57;
  }
  function ie(O) {
    return Y(O, te);
  }
  function _e(O) {
    const B = O.charCodeAt(0);
    return B >= 48 && B <= 57 || B >= 65 && B <= 70 || B >= 97 && B <= 102;
  }
  function ye(O) {
    return Y(O, _e);
  }
  function Be(O) {
    let B = "";
    let z = "";
    while (B = ie(O)) {
      z += B;
    }
    return z;
  }
  function Le(O) {
    x(O);
    const B = O.currentChar();
    if (B !== "%") {
      E(ze.EXPECTED_TOKEN, s(), 0, B);
    }
    O.next();
    return "%";
  }
  function Ge(O) {
    let B = "";
    while (true) {
      const z = O.currentChar();
      if (z === "{" || z === "}" || z === "@" || z === "|" || !z) {
        break;
      }
      if (z === "%") {
        if (V(O)) {
          B += z;
          O.next();
        } else {
          break;
        }
      } else if (z === Ei || z === Br) {
        if (V(O)) {
          B += z;
          O.next();
        } else {
          if (ae(O)) {
            break;
          }
          B += z;
          O.next();
        }
      } else {
        B += z;
        O.next();
      }
    }
    return B;
  }
  function Rt(O) {
    x(O);
    let B = "";
    let z = "";
    while (B = W(O)) {
      z += B;
    }
    if (O.currentChar() === Fi) {
      E(ze.UNTERMINATED_CLOSING_BRACE, s(), 0);
    }
    return z;
  }
  function je(O) {
    x(O);
    let B = "";
    if (O.currentChar() === "-") {
      O.next();
      B += `-${Be(O)}`;
    } else {
      B += Be(O);
    }
    if (O.currentChar() === Fi) {
      E(ze.UNTERMINATED_CLOSING_BRACE, s(), 0);
    }
    return B;
  }
  function Et(O) {
    return O !== XT && O !== Br;
  }
  function Ve(O) {
    x(O);
    T(O, "'");
    let B = "";
    let z = "";
    while (B = Y(O, Et)) {
      if (B === "\\") {
        z += ot(O);
      } else {
        z += B;
      }
    }
    const fe = O.currentChar();
    if (fe === Br || fe === Fi) {
      E(ze.UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER, s(), 0);
      if (fe === Br) {
        O.next();
        T(O, "'");
      }
      return z;
    } else {
      T(O, "'");
      return z;
    }
  }
  function ot(O) {
    const B = O.currentChar();
    switch (B) {
      case "\\":
      case "'":
        O.next();
        return `\\${B}`;
      case "u":
        return ft(O, B, 4);
      case "U":
        return ft(O, B, 6);
      default:
        E(ze.UNKNOWN_ESCAPE_SEQUENCE, s(), 0, B);
        return "";
    }
  }
  function ft(O, B, z) {
    T(O, B);
    let fe = "";
    for (let Ce = 0; Ce < z; Ce++) {
      const ve = ye(O);
      if (!ve) {
        E(ze.INVALID_UNICODE_ESCAPE_SEQUENCE, s(), 0, `\\${B}${fe}${O.currentChar()}`);
        break;
      }
      fe += ve;
    }
    return `\\${B}${fe}`;
  }
  function Ut(O) {
    return O !== "{" && O !== "}" && O !== Ei && O !== Br;
  }
  function $t(O) {
    x(O);
    let B = "";
    let z = "";
    while (B = Y(O, Ut)) {
      z += B;
    }
    return z;
  }
  function F(O) {
    let B = "";
    let z = "";
    while (B = w(O)) {
      z += B;
    }
    return z;
  }
  function D(O) {
    const B = z => {
      const fe = O.currentChar();
      if (fe === "{" || fe === "%" || fe === "@" || fe === "|" || fe === "(" || fe === ")" || !fe || fe === Ei) {
        return z;
      } else {
        z += fe;
        O.next();
        return B(z);
      }
    };
    return B("");
  }
  function ne(O) {
    x(O);
    const B = T(O, "|");
    x(O);
    return B;
  }
  function he(O, B) {
    let z = null;
    switch (O.currentChar()) {
      case "{":
        if (B.braceNest >= 1) {
          E(ze.NOT_ALLOW_NEST_PLACEHOLDER, s(), 0);
        }
        O.next();
        z = m(B, 2, "{");
        x(O);
        B.braceNest++;
        return z;
      case "}":
        if (B.braceNest > 0 && B.currentType === 2) {
          E(ze.EMPTY_PLACEHOLDER, s(), 0);
        }
        O.next();
        z = m(B, 3, "}");
        B.braceNest--;
        if (B.braceNest > 0) {
          x(O);
        }
        if (B.inLinked && B.braceNest === 0) {
          B.inLinked = false;
        }
        return z;
      case "@":
        if (B.braceNest > 0) {
          E(ze.UNTERMINATED_CLOSING_BRACE, s(), 0);
        }
        z = pe(O, B) || g(B);
        B.braceNest = 0;
        return z;
      default:
        {
          let Ce = true;
          let ve = true;
          let se = true;
          if (ae(O)) {
            if (B.braceNest > 0) {
              E(ze.UNTERMINATED_CLOSING_BRACE, s(), 0);
            }
            z = m(B, 1, ne(O));
            B.braceNest = 0;
            B.inLinked = false;
            return z;
          }
          if (B.braceNest > 0 && (B.currentType === 5 || B.currentType === 6 || B.currentType === 7)) {
            E(ze.UNTERMINATED_CLOSING_BRACE, s(), 0);
            B.braceNest = 0;
            return xe(O, B);
          }
          if (Ce = v(O, B)) {
            z = m(B, 5, Rt(O));
            x(O);
            return z;
          }
          if (ve = y(O, B)) {
            z = m(B, 6, je(O));
            x(O);
            return z;
          }
          if (se = U(O, B)) {
            z = m(B, 7, Ve(O));
            x(O);
            return z;
          }
          if (!Ce && !ve && !se) {
            z = m(B, 13, $t(O));
            E(ze.INVALID_TOKEN_IN_PLACEHOLDER, s(), 0, z.value);
            x(O);
            return z;
          }
          break;
        }
    }
    return z;
  }
  function pe(O, B) {
    const {
      currentType: z
    } = B;
    let fe = null;
    const Ce = O.currentChar();
    if ((z === 8 || z === 9 || z === 12 || z === 10) && (Ce === Br || Ce === Ei)) {
      E(ze.INVALID_LINKED_FORMAT, s(), 0);
    }
    switch (Ce) {
      case "@":
        O.next();
        fe = m(B, 8, "@");
        B.inLinked = true;
        return fe;
      case ".":
        x(O);
        O.next();
        return m(B, 9, ".");
      case ":":
        x(O);
        O.next();
        return m(B, 10, ":");
      default:
        if (ae(O)) {
          fe = m(B, 1, ne(O));
          B.braceNest = 0;
          B.inLinked = false;
          return fe;
        } else if (P(O, B) || X(O, B)) {
          x(O);
          return pe(O, B);
        } else if (M(O, B)) {
          x(O);
          return m(B, 12, F(O));
        } else if (N(O, B)) {
          x(O);
          if (Ce === "{") {
            return he(O, B) || fe;
          } else {
            return m(B, 11, D(O));
          }
        } else {
          if (z === 8) {
            E(ze.INVALID_LINKED_FORMAT, s(), 0);
          }
          B.braceNest = 0;
          B.inLinked = false;
          return xe(O, B);
        }
    }
  }
  function xe(O, B) {
    let z = {
      type: 14
    };
    if (B.braceNest > 0) {
      return he(O, B) || g(B);
    }
    if (B.inLinked) {
      return pe(O, B) || g(B);
    }
    switch (O.currentChar()) {
      case "{":
        return he(O, B) || g(B);
      case "}":
        E(ze.UNBALANCED_CLOSING_BRACE, s(), 0);
        O.next();
        return m(B, 3, "}");
      case "@":
        return pe(O, B) || g(B);
      default:
        {
          if (ae(O)) {
            z = m(B, 1, ne(O));
            B.braceNest = 0;
            B.inLinked = false;
            return z;
          }
          const {
            isModulo: Ce,
            hasSpace: ve
          } = Q(O);
          if (Ce) {
            if (ve) {
              return m(B, 0, Ge(O));
            } else {
              return m(B, 4, Le(O));
            }
          }
          if (V(O)) {
            return m(B, 0, Ge(O));
          }
          break;
        }
    }
    return z;
  }
  function Te() {
    const {
      currentType: O,
      offset: B,
      startLoc: z,
      endLoc: fe
    } = c;
    c.lastType = O;
    c.lastOffset = B;
    c.lastStartLoc = z;
    c.lastEndLoc = fe;
    c.offset = i();
    c.startLoc = s();
    if (n.currentChar() === Fi) {
      return m(c, 14);
    } else {
      return xe(n, c);
    }
  }
  return {
    nextToken: Te,
    currentOffset: i,
    currentPosition: s,
    context: p
  };
}
const HM = "parser";
const WM = /(?:\\\\|\\'|\\u([0-9a-fA-F]{4})|\\U([0-9a-fA-F]{6}))/g;
function XM(t, e, r) {
  switch (t) {
    case "\\\\":
      return "\\";
    case "\\'":
      return "'";
    default:
      {
        const n = parseInt(e || r, 16);
        if (n <= 55295 || n >= 57344) {
          return String.fromCodePoint(n);
        } else {
          return "�";
        }
      }
  }
}
function jM(t = {}) {
  const e = t.location !== false;
  const {
    onError: r,
    onWarn: n
  } = t;
  function i(v, y, U, P, ...M) {
    const X = v.currentPosition();
    X.offset += P;
    X.column += P;
    if (r) {
      const N = e ? Cf(U, X) : null;
      const ae = fo(y, N, {
        domain: HM,
        args: M
      });
      r(ae);
    }
  }
  function s(v, y, U, P, ...M) {
    const X = v.currentPosition();
    X.offset += P;
    X.column += P;
    if (n) {
      const N = e ? Cf(U, X) : null;
      n(UM(y, N, M));
    }
  }
  function o(v, y, U) {
    const P = {
      type: v
    };
    if (e) {
      P.start = y;
      P.end = y;
      P.loc = {
        start: U,
        end: U
      };
    }
    return P;
  }
  function f(v, y, U, P) {
    if (e) {
      v.end = y;
      if (v.loc) {
        v.loc.end = U;
      }
    }
  }
  function c(v, y) {
    const U = v.context();
    const P = o(3, U.offset, U.startLoc);
    P.value = y;
    f(P, v.currentOffset(), v.currentPosition());
    return P;
  }
  function p(v, y) {
    const U = v.context();
    const {
      lastOffset: P,
      lastStartLoc: M
    } = U;
    const X = o(5, P, M);
    X.index = parseInt(y, 10);
    v.nextToken();
    f(X, v.currentOffset(), v.currentPosition());
    return X;
  }
  function d(v, y, U) {
    const P = v.context();
    const {
      lastOffset: M,
      lastStartLoc: X
    } = P;
    const N = o(4, M, X);
    N.key = y;
    if (U === true) {
      N.modulo = true;
    }
    v.nextToken();
    f(N, v.currentOffset(), v.currentPosition());
    return N;
  }
  function E(v, y) {
    const U = v.context();
    const {
      lastOffset: P,
      lastStartLoc: M
    } = U;
    const X = o(9, P, M);
    X.value = y.replace(WM, XM);
    v.nextToken();
    f(X, v.currentOffset(), v.currentPosition());
    return X;
  }
  function m(v) {
    const y = v.nextToken();
    const U = v.context();
    const {
      lastOffset: P,
      lastStartLoc: M
    } = U;
    const X = o(8, P, M);
    if (y.type !== 12) {
      i(v, ze.UNEXPECTED_EMPTY_LINKED_MODIFIER, U.lastStartLoc, 0);
      X.value = "";
      f(X, P, M);
      return {
        nextConsumeToken: y,
        node: X
      };
    } else {
      if (y.value == null) {
        i(v, ze.UNEXPECTED_LEXICAL_ANALYSIS, U.lastStartLoc, 0, Ln(y));
      }
      X.value = y.value || "";
      f(X, v.currentOffset(), v.currentPosition());
      return {
        node: X
      };
    }
  }
  function g(v, y) {
    const U = v.context();
    const P = o(7, U.offset, U.startLoc);
    P.value = y;
    f(P, v.currentOffset(), v.currentPosition());
    return P;
  }
  function T(v) {
    const y = v.context();
    const U = o(6, y.offset, y.startLoc);
    let P = v.nextToken();
    if (P.type === 9) {
      const M = m(v);
      U.modifier = M.node;
      P = M.nextConsumeToken || v.nextToken();
    }
    if (P.type !== 10) {
      i(v, ze.UNEXPECTED_LEXICAL_ANALYSIS, y.lastStartLoc, 0, Ln(P));
    }
    P = v.nextToken();
    if (P.type === 2) {
      P = v.nextToken();
    }
    switch (P.type) {
      case 11:
        if (P.value == null) {
          i(v, ze.UNEXPECTED_LEXICAL_ANALYSIS, y.lastStartLoc, 0, Ln(P));
        }
        U.key = g(v, P.value || "");
        break;
      case 5:
        if (P.value == null) {
          i(v, ze.UNEXPECTED_LEXICAL_ANALYSIS, y.lastStartLoc, 0, Ln(P));
        }
        U.key = d(v, P.value || "");
        break;
      case 6:
        if (P.value == null) {
          i(v, ze.UNEXPECTED_LEXICAL_ANALYSIS, y.lastStartLoc, 0, Ln(P));
        }
        U.key = p(v, P.value || "");
        break;
      case 7:
        if (P.value == null) {
          i(v, ze.UNEXPECTED_LEXICAL_ANALYSIS, y.lastStartLoc, 0, Ln(P));
        }
        U.key = E(v, P.value || "");
        break;
      default:
        {
          i(v, ze.UNEXPECTED_EMPTY_LINKED_KEY, y.lastStartLoc, 0);
          const M = v.context();
          const X = o(7, M.offset, M.startLoc);
          X.value = "";
          f(X, M.offset, M.startLoc);
          U.key = X;
          f(U, M.offset, M.startLoc);
          return {
            nextConsumeToken: P,
            node: U
          };
        }
    }
    f(U, v.currentOffset(), v.currentPosition());
    return {
      node: U
    };
  }
  function b(v) {
    const y = v.context();
    const U = y.currentType === 1 ? v.currentOffset() : y.offset;
    const P = y.currentType === 1 ? y.endLoc : y.startLoc;
    const M = o(2, U, P);
    M.items = [];
    let X = null;
    let N = null;
    do {
      const V = X || v.nextToken();
      X = null;
      switch (V.type) {
        case 0:
          if (V.value == null) {
            i(v, ze.UNEXPECTED_LEXICAL_ANALYSIS, y.lastStartLoc, 0, Ln(V));
          }
          M.items.push(c(v, V.value || ""));
          break;
        case 6:
          if (V.value == null) {
            i(v, ze.UNEXPECTED_LEXICAL_ANALYSIS, y.lastStartLoc, 0, Ln(V));
          }
          M.items.push(p(v, V.value || ""));
          break;
        case 4:
          N = true;
          break;
        case 5:
          if (V.value == null) {
            i(v, ze.UNEXPECTED_LEXICAL_ANALYSIS, y.lastStartLoc, 0, Ln(V));
          }
          M.items.push(d(v, V.value || "", !!N));
          if (N) {
            s(v, kE.USE_MODULO_SYNTAX, y.lastStartLoc, 0, Ln(V));
            N = null;
          }
          break;
        case 7:
          if (V.value == null) {
            i(v, ze.UNEXPECTED_LEXICAL_ANALYSIS, y.lastStartLoc, 0, Ln(V));
          }
          M.items.push(E(v, V.value || ""));
          break;
        case 8:
          {
            const Y = T(v);
            M.items.push(Y.node);
            X = Y.nextConsumeToken || null;
            break;
          }
      }
    } while (y.currentType !== 14 && y.currentType !== 1);
    const ae = y.currentType === 1 ? y.lastOffset : v.currentOffset();
    const Q = y.currentType === 1 ? y.lastEndLoc : v.currentPosition();
    f(M, ae, Q);
    return M;
  }
  function x(v, y, U, P) {
    const M = v.context();
    let X = P.items.length === 0;
    const N = o(1, y, U);
    N.cases = [];
    N.cases.push(P);
    do {
      const ae = b(v);
      X ||= ae.items.length === 0;
      N.cases.push(ae);
    } while (M.currentType !== 14);
    if (X) {
      i(v, ze.MUST_HAVE_MESSAGES_IN_PLURAL, U, 0);
    }
    f(N, v.currentOffset(), v.currentPosition());
    return N;
  }
  function A(v) {
    const y = v.context();
    const {
      offset: U,
      startLoc: P
    } = y;
    const M = b(v);
    if (y.currentType === 14) {
      return M;
    } else {
      return x(v, U, P, M);
    }
  }
  function R(v) {
    const y = FM(v, TS({}, t));
    const U = y.context();
    const P = o(0, U.offset, U.startLoc);
    if (e && P.loc) {
      P.loc.source = v;
    }
    P.body = A(y);
    if (t.onCacheKey) {
      P.cacheKey = t.onCacheKey(v);
    }
    if (U.currentType !== 14) {
      i(y, ze.UNEXPECTED_LEXICAL_ANALYSIS, U.lastStartLoc, 0, v[U.offset] || "");
    }
    f(P, y.currentOffset(), y.currentPosition());
    return P;
  }
  return {
    parse: R
  };
}
function Ln(t) {
  if (t.type === 14) {
    return "EOF";
  }
  const e = (t.value || "").replace(/\r?\n/gu, "\\n");
  if (e.length > 10) {
    return e.slice(0, 9) + "…";
  } else {
    return e;
  }
}
function zM(t, e = {}) {
  const r = {
    ast: t,
    helpers: new Set()
  };
  return {
    context: () => r,
    helper: s => {
      r.helpers.add(s);
      return s;
    }
  };
}
function jT(t, e) {
  for (let r = 0; r < t.length; r++) {
    GE(t[r], e);
  }
}
function GE(t, e) {
  switch (t.type) {
    case 1:
      jT(t.cases, e);
      e.helper("plural");
      break;
    case 2:
      jT(t.items, e);
      break;
    case 6:
      {
        GE(t.key, e);
        e.helper("linked");
        e.helper("type");
        break;
      }
    case 5:
      e.helper("interpolate");
      e.helper("list");
      break;
    case 4:
      e.helper("interpolate");
      e.helper("named");
      break;
  }
}
function qM(t, e = {}) {
  const r = zM(t);
  r.helper("normalize");
  if (t.body) {
    GE(t.body, r);
  }
  const n = r.context();
  t.helpers = Array.from(n.helpers);
}
function YM(t) {
  const e = t.body;
  if (e.type === 2) {
    zT(e);
  } else {
    e.cases.forEach(r => zT(r));
  }
  return t;
}
function zT(t) {
  if (t.items.length === 1) {
    const e = t.items[0];
    if (e.type === 3 || e.type === 9) {
      t.static = e.value;
      delete e.value;
    }
  } else {
    const e = [];
    for (let r = 0; r < t.items.length; r++) {
      const n = t.items[r];
      if (n.type !== 3 && n.type !== 9 || n.value == null) {
        break;
      }
      e.push(n.value);
    }
    if (e.length === t.items.length) {
      t.static = vS(e);
      for (let r = 0; r < t.items.length; r++) {
        const n = t.items[r];
        if (n.type === 3 || n.type === 9) {
          delete n.value;
        }
      }
    }
  }
}
const JM = "minifier";
function Aa(t) {
  t.t = t.type;
  switch (t.type) {
    case 0:
      {
        const e = t;
        Aa(e.body);
        e.b = e.body;
        delete e.body;
        break;
      }
    case 1:
      {
        const e = t;
        const r = e.cases;
        for (let n = 0; n < r.length; n++) {
          Aa(r[n]);
        }
        e.c = r;
        delete e.cases;
        break;
      }
    case 2:
      {
        const e = t;
        const r = e.items;
        for (let n = 0; n < r.length; n++) {
          Aa(r[n]);
        }
        e.i = r;
        delete e.items;
        if (e.static) {
          e.s = e.static;
          delete e.static;
        }
        break;
      }
    case 3:
    case 9:
    case 8:
    case 7:
      {
        const e = t;
        if (e.value) {
          e.v = e.value;
          delete e.value;
        }
        break;
      }
    case 6:
      {
        const e = t;
        Aa(e.key);
        e.k = e.key;
        delete e.key;
        if (e.modifier) {
          Aa(e.modifier);
          e.m = e.modifier;
          delete e.modifier;
        }
        break;
      }
    case 5:
      {
        const e = t;
        e.i = e.index;
        delete e.index;
        break;
      }
    case 4:
      {
        const e = t;
        e.k = e.key;
        delete e.key;
        break;
      }
    default:
      throw fo(ze.UNHANDLED_MINIFIER_NODE_TYPE, null, {
        domain: JM,
        args: [t.type]
      });
  }
  delete t.type;
}
const ZM = "parser";
function QM(t, e) {
  const {
    sourceMap: r,
    filename: n,
    breakLineCode: i,
    needIndent: s
  } = e;
  const o = e.location !== false;
  const f = {
    filename: n,
    code: "",
    column: 1,
    line: 1,
    offset: 0,
    map: undefined,
    breakLineCode: i,
    needIndent: s,
    indentLevel: 0
  };
  if (o && t.loc) {
    f.source = t.loc.source;
  }
  const c = () => f;
  function p(x, A) {
    f.code += x;
  }
  function d(x, A = true) {
    const R = A ? i : "";
    p(s ? R + "  ".repeat(x) : R);
  }
  function E(x = true) {
    const A = ++f.indentLevel;
    if (x) {
      d(A);
    }
  }
  function m(x = true) {
    const A = --f.indentLevel;
    if (x) {
      d(A);
    }
  }
  function g() {
    d(f.indentLevel);
  }
  return {
    context: c,
    push: p,
    indent: E,
    deindent: m,
    newline: g,
    helper: x => `_${x}`,
    needIndent: () => f.needIndent
  };
}
function e$(t, e) {
  const {
    helper: r
  } = t;
  t.push(`${r("linked")}(`);
  Za(t, e.key);
  if (e.modifier) {
    t.push(", ");
    Za(t, e.modifier);
    t.push(", _type");
  } else {
    t.push(", undefined, _type");
  }
  t.push(")");
}
function t$(t, e) {
  const {
    helper: r,
    needIndent: n
  } = t;
  t.push(`${r("normalize")}([`);
  t.indent(n());
  const i = e.items.length;
  for (let s = 0; s < i && (Za(t, e.items[s]), s !== i - 1); s++) {
    t.push(", ");
  }
  t.deindent(n());
  t.push("])");
}
function r$(t, e) {
  const {
    helper: r,
    needIndent: n
  } = t;
  if (e.cases.length > 1) {
    t.push(`${r("plural")}([`);
    t.indent(n());
    const i = e.cases.length;
    for (let s = 0; s < i && (Za(t, e.cases[s]), s !== i - 1); s++) {
      t.push(", ");
    }
    t.deindent(n());
    t.push("])");
  }
}
function n$(t, e) {
  if (e.body) {
    Za(t, e.body);
  } else {
    t.push("null");
  }
}
function Za(t, e) {
  const {
    helper: r
  } = t;
  switch (e.type) {
    case 0:
      n$(t, e);
      break;
    case 1:
      r$(t, e);
      break;
    case 2:
      t$(t, e);
      break;
    case 6:
      e$(t, e);
      break;
    case 8:
      t.push(JSON.stringify(e.value), e);
      break;
    case 7:
      t.push(JSON.stringify(e.value), e);
      break;
    case 5:
      t.push(`${r("interpolate")}(${r("list")}(${e.index}))`, e);
      break;
    case 4:
      t.push(`${r("interpolate")}(${r("named")}(${JSON.stringify(e.key)}))`, e);
      break;
    case 9:
      t.push(JSON.stringify(e.value), e);
      break;
    case 3:
      t.push(JSON.stringify(e.value), e);
      break;
    default:
      throw fo(ze.UNHANDLED_CODEGEN_NODE_TYPE, null, {
        domain: ZM,
        args: [e.type]
      });
  }
}
const i$ = (t, e = {}) => {
  const r = WT(e.mode) ? e.mode : "normal";
  const n = WT(e.filename) ? e.filename : "message.intl";
  const i = !!e.sourceMap;
  const s = e.breakLineCode ?? (r === "arrow" ? ";" : `
`);
  const o = e.needIndent ? e.needIndent : r !== "arrow";
  const f = t.helpers || [];
  const c = QM(t, {
    mode: r,
    filename: n,
    sourceMap: i,
    breakLineCode: s,
    needIndent: o
  });
  c.push(r === "normal" ? "function __msg__ (ctx) {" : "(ctx) => {");
  c.indent(o);
  if (f.length > 0) {
    c.push(`const { ${vS(f.map(E => `${E}: _${E}`), ", ")} } = ctx`);
    c.newline();
  }
  c.push("return ");
  Za(c, t);
  c.deindent(o);
  c.push("}");
  delete t.helpers;
  const {
    code: p,
    map: d
  } = c.context();
  return {
    ast: t,
    code: p,
    map: d ? d.toJSON() : undefined
  };
};
function s$(t, e = {}) {
  const r = TS({}, e);
  const n = !!r.jit;
  const i = !!r.minify;
  const s = r.optimize == null ? true : r.optimize;
  const f = jM(r).parse(t);
  if (n) {
    if (s) {
      YM(f);
    }
    if (i) {
      Aa(f);
    }
    return {
      ast: f,
      code: ""
    };
  } else {
    qM(f, r);
    return i$(f, r);
  }
} /*!
  * core-base v9.13.1
  * (c) 2024 kazuya kawaguchi
  * Released under the MIT License.
  */
function a$() {
  if (typeof __INTLIFY_JIT_COMPILATION__ != "boolean") {
    Af().__INTLIFY_JIT_COMPILATION__ = false;
  }
  if (typeof __INTLIFY_DROP_MESSAGE_COMPILER__ != "boolean") {
    Af().__INTLIFY_DROP_MESSAGE_COMPILER__ = false;
  }
}
const Es = [];
Es[0] = {
  w: [0],
  i: [3, 0],
  "[": [4],
  o: [7]
};
Es[1] = {
  w: [1],
  ".": [2],
  "[": [4],
  o: [7]
};
Es[2] = {
  w: [2],
  i: [3, 0],
  0: [3, 0]
};
Es[3] = {
  i: [3, 0],
  0: [3, 0],
  w: [1, 1],
  ".": [2, 1],
  "[": [4, 1],
  o: [7, 1]
};
Es[4] = {
  "'": [5, 0],
  "\"": [6, 0],
  "[": [4, 2],
  "]": [1, 3],
  o: 8,
  l: [4, 0]
};
Es[5] = {
  "'": [4, 0],
  o: 8,
  l: [5, 0]
};
Es[6] = {
  "\"": [4, 0],
  o: 8,
  l: [6, 0]
};
const o$ = /^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;
function l$(t) {
  return o$.test(t);
}
function u$(t) {
  const e = t.charCodeAt(0);
  const r = t.charCodeAt(t.length - 1);
  if (e === r && (e === 34 || e === 39)) {
    return t.slice(1, -1);
  } else {
    return t;
  }
}
function f$(t) {
  if (t == null) {
    return "o";
  }
  switch (t.charCodeAt(0)) {
    case 91:
    case 93:
    case 46:
    case 34:
    case 39:
      return t;
    case 95:
    case 36:
    case 45:
      return "i";
    case 9:
    case 10:
    case 13:
    case 160:
    case 65279:
    case 8232:
    case 8233:
      return "w";
  }
  return "i";
}
function c$(t) {
  const e = t.trim();
  if (t.charAt(0) === "0" && isNaN(parseInt(t))) {
    return false;
  } else if (l$(e)) {
    return u$(e);
  } else {
    return "*" + e;
  }
}
function p$(t) {
  const e = [];
  let r = -1;
  let n = 0;
  let i = 0;
  let s;
  let o;
  let f;
  let c;
  let p;
  let d;
  let E;
  const m = [];
  m[0] = () => {
    if (o === undefined) {
      o = f;
    } else {
      o += f;
    }
  };
  m[1] = () => {
    if (o !== undefined) {
      e.push(o);
      o = undefined;
    }
  };
  m[2] = () => {
    m[0]();
    i++;
  };
  m[3] = () => {
    if (i > 0) {
      i--;
      n = 4;
      m[0]();
    } else {
      i = 0;
      if (o === undefined || (o = c$(o), o === false)) {
        return false;
      }
      m[1]();
    }
  };
  function g() {
    const T = t[r + 1];
    if (n === 5 && T === "'" || n === 6 && T === "\"") {
      r++;
      f = "\\" + T;
      m[0]();
      return true;
    }
  }
  while (n !== null) {
    r++;
    s = t[r];
    if (s !== "\\" || !g()) {
      c = f$(s);
      E = Es[n];
      p = E[c] || E.l || 8;
      if (p === 8 || (n = p[0], p[1] !== undefined && (d = m[p[1]], d && (f = s, d() === false)))) {
        return;
      }
      if (n === 7) {
        return e;
      }
    }
  }
}
const qT = new Map();
function d$(t, e) {
  if (Ct(t)) {
    return t[e];
  } else {
    return null;
  }
}
function h$(t, e) {
  if (!Ct(t)) {
    return null;
  }
  let r = qT.get(e);
  if (!r) {
    r = p$(e);
    if (r) {
      qT.set(e, r);
    }
  }
  if (!r) {
    return null;
  }
  const n = r.length;
  let i = t;
  let s = 0;
  while (s < n) {
    const o = i[r[s]];
    if (o === undefined || kt(i)) {
      return null;
    }
    i = o;
    s++;
  }
  return i;
}
const E$ = t => t;
const m$ = t => "";
const g$ = "text";
const _$ = t => t.length === 0 ? "" : CM(t);
const T$ = LM;
function YT(t, e) {
  t = Math.abs(t);
  if (e === 2) {
    if (t) {
      if (t > 1) {
        return 1;
      } else {
        return 0;
      }
    } else {
      return 1;
    }
  } else if (t) {
    return Math.min(t, 2);
  } else {
    return 0;
  }
}
function v$(t) {
  const e = lr(t.pluralIndex) ? t.pluralIndex : -1;
  if (t.named && (lr(t.named.count) || lr(t.named.n))) {
    if (lr(t.named.count)) {
      return t.named.count;
    } else if (lr(t.named.n)) {
      return t.named.n;
    } else {
      return e;
    }
  } else {
    return e;
  }
}
function b$(t, e) {
  e.count ||= t;
  e.n ||= t;
}
function x$(t = {}) {
  const e = t.locale;
  const r = v$(t);
  const n = Ct(t.pluralRules) && Ne(e) && kt(t.pluralRules[e]) ? t.pluralRules[e] : YT;
  const i = Ct(t.pluralRules) && Ne(e) && kt(t.pluralRules[e]) ? YT : undefined;
  const s = A => A[n(r, A.length, i)];
  const o = t.list || [];
  const f = A => o[A];
  const c = t.named || {};
  if (lr(t.pluralIndex)) {
    b$(r, c);
  }
  const p = A => c[A];
  function d(A) {
    const R = kt(t.messages) ? t.messages(A) : Ct(t.messages) ? t.messages[A] : false;
    return R || (t.parent ? t.parent.message(A) : m$);
  }
  const E = A => t.modifiers ? t.modifiers[A] : E$;
  const m = Ze(t.processor) && kt(t.processor.normalize) ? t.processor.normalize : _$;
  const g = Ze(t.processor) && kt(t.processor.interpolate) ? t.processor.interpolate : T$;
  const T = Ze(t.processor) && Ne(t.processor.type) ? t.processor.type : g$;
  const x = {
    list: f,
    named: p,
    plural: s,
    linked: (A, ...R) => {
      const [v, y] = R;
      let U = "text";
      let P = "";
      if (R.length === 1) {
        if (Ct(v)) {
          P = v.modifier || P;
          U = v.type || U;
        } else if (Ne(v)) {
          P = v || P;
        }
      } else if (R.length === 2) {
        if (Ne(v)) {
          P = v || P;
        }
        if (Ne(y)) {
          U = y || U;
        }
      }
      const M = d(A)(x);
      const X = U === "vnode" && Wt(M) && P ? M[0] : M;
      if (P) {
        return E(P)(X, U);
      } else {
        return X;
      }
    },
    message: d,
    type: T,
    interpolate: g,
    normalize: m,
    values: Lr({}, o, c)
  };
  return x;
}
const bS = kE.__EXTEND_POINT__;
const Ps = Ec(bS);
const R$ = {
  NOT_FOUND_KEY: bS,
  FALLBACK_TO_TRANSLATE: Ps(),
  CANNOT_FORMAT_NUMBER: Ps(),
  FALLBACK_TO_NUMBER_FORMAT: Ps(),
  CANNOT_FORMAT_DATE: Ps(),
  FALLBACK_TO_DATE_FORMAT: Ps(),
  EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER: Ps(),
  __EXTEND_POINT__: Ps()
};
const xS = ze.__EXTEND_POINT__;
const Us = Ec(xS);
const Un = {
  INVALID_ARGUMENT: xS,
  INVALID_DATE_ARGUMENT: Us(),
  INVALID_ISO_DATE_ARGUMENT: Us(),
  NOT_SUPPORT_NON_STRING_MESSAGE: Us(),
  NOT_SUPPORT_LOCALE_PROMISE_VALUE: Us(),
  NOT_SUPPORT_LOCALE_ASYNC_FUNCTION: Us(),
  NOT_SUPPORT_LOCALE_TYPE: Us(),
  __EXTEND_POINT__: Us()
};
function Yn(t) {
  return fo(t, null, undefined);
}
function VE(t, e) {
  if (e.locale != null) {
    return JT(e.locale);
  } else {
    return JT(t.locale);
  }
}
let cd;
function JT(t) {
  if (Ne(t)) {
    return t;
  }
  if (kt(t)) {
    if (t.resolvedOnce && cd != null) {
      return cd;
    }
    if (t.constructor.name === "Function") {
      const e = t();
      if (AM(e)) {
        throw Yn(Un.NOT_SUPPORT_LOCALE_PROMISE_VALUE);
      }
      return cd = e;
    } else {
      throw Yn(Un.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION);
    }
  } else {
    throw Yn(Un.NOT_SUPPORT_LOCALE_TYPE);
  }
}
function S$(t, e, r) {
  return [...new Set([r, ...(Wt(e) ? e : Ct(e) ? Object.keys(e) : Ne(e) ? [e] : [r])])];
}
function RS(t, e, r) {
  const n = Ne(r) ? r : Qa;
  const i = t;
  i.__localeChainCache ||= new Map();
  let s = i.__localeChainCache.get(n);
  if (!s) {
    s = [];
    let o = [r];
    while (Wt(o)) {
      o = ZT(s, o, e);
    }
    const f = Wt(e) || !Ze(e) ? e : e.default ? e.default : null;
    o = Ne(f) ? [f] : f;
    if (Wt(o)) {
      ZT(s, o, false);
    }
    i.__localeChainCache.set(n, s);
  }
  return s;
}
function ZT(t, e, r) {
  let n = true;
  for (let i = 0; i < e.length && lt(n); i++) {
    const s = e[i];
    if (Ne(s)) {
      n = y$(t, e[i], r);
    }
  }
  return n;
}
function y$(t, e, r) {
  let n;
  const i = e.split("-");
  do {
    const s = i.join("-");
    n = A$(t, s, r);
    i.splice(-1, 1);
  } while (i.length && n === true);
  return n;
}
function A$(t, e, r) {
  let n = false;
  if (!t.includes(e) && (n = true, e)) {
    n = e[e.length - 1] !== "!";
    const i = e.replace(/!/g, "");
    t.push(i);
    if ((Wt(r) || Ze(r)) && r[i]) {
      n = r[i];
    }
  }
  return n;
}
const L$ = "9.13.1";
const mc = -1;
const Qa = "en-US";
const QT = "";
const ev = t => `${t.charAt(0).toLocaleUpperCase()}${t.substr(1)}`;
function C$() {
  return {
    upper: (t, e) => e === "text" && Ne(t) ? t.toUpperCase() : e === "vnode" && Ct(t) && "__v_isVNode" in t ? t.children.toUpperCase() : t,
    lower: (t, e) => e === "text" && Ne(t) ? t.toLowerCase() : e === "vnode" && Ct(t) && "__v_isVNode" in t ? t.children.toLowerCase() : t,
    capitalize: (t, e) => e === "text" && Ne(t) ? ev(t) : e === "vnode" && Ct(t) && "__v_isVNode" in t ? ev(t.children) : t
  };
}
let SS;
function tv(t) {
  SS = t;
}
let yS;
function w$(t) {
  yS = t;
}
let AS;
function O$(t) {
  AS = t;
}
let LS = null;
const rv = t => {
  LS = t;
};
const I$ = () => LS;
let nv = 0;
function N$(t = {}) {
  const e = kt(t.onWarn) ? t.onWarn : wM;
  const r = Ne(t.version) ? t.version : L$;
  const n = Ne(t.locale) || kt(t.locale) ? t.locale : Qa;
  const i = kt(n) ? Qa : n;
  const s = Wt(t.fallbackLocale) || Ze(t.fallbackLocale) || Ne(t.fallbackLocale) || t.fallbackLocale === false ? t.fallbackLocale : i;
  const o = Ze(t.messages) ? t.messages : {
    [i]: {}
  };
  const f = Ze(t.datetimeFormats) ? t.datetimeFormats : {
    [i]: {}
  };
  const c = Ze(t.numberFormats) ? t.numberFormats : {
    [i]: {}
  };
  const p = Lr({}, t.modifiers || {}, C$());
  const d = t.pluralRules || {};
  const E = kt(t.missing) ? t.missing : null;
  const m = lt(t.missingWarn) || fs(t.missingWarn) ? t.missingWarn : true;
  const g = lt(t.fallbackWarn) || fs(t.fallbackWarn) ? t.fallbackWarn : true;
  const T = !!t.fallbackFormat;
  const b = !!t.unresolving;
  const x = kt(t.postTranslation) ? t.postTranslation : null;
  const A = Ze(t.processor) ? t.processor : null;
  const R = lt(t.warnHtmlMessage) ? t.warnHtmlMessage : true;
  const v = !!t.escapeParameter;
  const y = kt(t.messageCompiler) ? t.messageCompiler : SS;
  const U = kt(t.messageResolver) ? t.messageResolver : yS || d$;
  const P = kt(t.localeFallbacker) ? t.localeFallbacker : AS || S$;
  const M = Ct(t.fallbackContext) ? t.fallbackContext : undefined;
  const X = t;
  const N = Ct(X.__datetimeFormatters) ? X.__datetimeFormatters : new Map();
  const ae = Ct(X.__numberFormatters) ? X.__numberFormatters : new Map();
  const Q = Ct(X.__meta) ? X.__meta : {};
  nv++;
  const V = {
    version: r,
    cid: nv,
    locale: n,
    fallbackLocale: s,
    messages: o,
    modifiers: p,
    pluralRules: d,
    missing: E,
    missingWarn: m,
    fallbackWarn: g,
    fallbackFormat: T,
    unresolving: b,
    postTranslation: x,
    processor: A,
    warnHtmlMessage: R,
    escapeParameter: v,
    messageCompiler: y,
    messageResolver: U,
    localeFallbacker: P,
    fallbackContext: M,
    onWarn: e,
    __meta: Q
  };
  V.datetimeFormats = f;
  V.numberFormats = c;
  V.__datetimeFormatters = N;
  V.__numberFormatters = ae;
  return V;
}
function FE(t, e, r, n, i) {
  const {
    missing: s,
    onWarn: o
  } = t;
  if (s !== null) {
    const f = s(t, r, e, i);
    if (Ne(f)) {
      return f;
    } else {
      return e;
    }
  } else {
    return e;
  }
}
function Vo(t, e, r) {
  const n = t;
  n.__localeChainCache = new Map();
  t.localeFallbacker(t, r, e);
}
function P$(t, e) {
  if (t === e) {
    return false;
  } else {
    return t.split("-")[0] === e.split("-")[0];
  }
}
function U$(t, e) {
  const r = e.indexOf(t);
  if (r === -1) {
    return false;
  }
  for (let n = r + 1; n < e.length; n++) {
    if (P$(t, e[n])) {
      return true;
    }
  }
  return false;
}
function pd(t) {
  return r => D$(r, t);
}
function D$(t, e) {
  const r = e.b || e.body;
  if ((r.t || r.type) === 1) {
    const n = r;
    const i = n.c || n.cases;
    return t.plural(i.reduce((s, o) => [...s, iv(t, o)], []));
  } else {
    return iv(t, r);
  }
}
function iv(t, e) {
  const r = e.s || e.static;
  if (r) {
    if (t.type === "text") {
      return r;
    } else {
      return t.normalize([r]);
    }
  }
  {
    const n = (e.i || e.items).reduce((i, s) => [...i, Sh(t, s)], []);
    return t.normalize(n);
  }
}
function Sh(t, e) {
  const r = e.t || e.type;
  switch (r) {
    case 3:
      {
        const n = e;
        return n.v || n.value;
      }
    case 9:
      {
        const n = e;
        return n.v || n.value;
      }
    case 4:
      {
        const n = e;
        return t.interpolate(t.named(n.k || n.key));
      }
    case 5:
      {
        const n = e;
        return t.interpolate(t.list(n.i ?? n.index));
      }
    case 6:
      {
        const n = e;
        const i = n.m || n.modifier;
        return t.linked(Sh(t, n.k || n.key), i ? Sh(t, i) : undefined, t.type);
      }
    case 7:
      {
        const n = e;
        return n.v || n.value;
      }
    case 8:
      {
        const n = e;
        return n.v || n.value;
      }
    default:
      throw new Error(`unhandled node type on format message part: ${r}`);
  }
}
const CS = t => t;
let wa = Object.create(null);
const eo = t => Ct(t) && (t.t === 0 || t.type === 0) && ("b" in t || "body" in t);
function wS(t, e = {}) {
  let r = false;
  const n = e.onError || BM;
  e.onError = i => {
    r = true;
    n(i);
  };
  return {
    ...s$(t, e),
    detectError: r
  };
}
const B$ = (t, e) => {
  if (!Ne(t)) {
    throw Yn(Un.NOT_SUPPORT_NON_STRING_MESSAGE);
  }
  {
    if (lt(e.warnHtmlMessage)) {
      e.warnHtmlMessage;
    }
    const n = (e.onCacheKey || CS)(t);
    const i = wa[n];
    if (i) {
      return i;
    }
    const {
      code: s,
      detectError: o
    } = wS(t, e);
    const f = new Function(`return ${s}`)();
    if (o) {
      return f;
    } else {
      return wa[n] = f;
    }
  }
};
function M$(t, e) {
  if (__INTLIFY_JIT_COMPILATION__ && !__INTLIFY_DROP_MESSAGE_COMPILER__ && Ne(t)) {
    if (lt(e.warnHtmlMessage)) {
      e.warnHtmlMessage;
    }
    const n = (e.onCacheKey || CS)(t);
    const i = wa[n];
    if (i) {
      return i;
    }
    const {
      ast: s,
      detectError: o
    } = wS(t, {
      ...e,
      location: false,
      jit: true
    });
    const f = pd(s);
    if (o) {
      return f;
    } else {
      return wa[n] = f;
    }
  } else {
    const r = t.cacheKey;
    if (r) {
      const n = wa[r];
      return n || (wa[r] = pd(t));
    } else {
      return pd(t);
    }
  }
}
const sv = () => "";
const Si = t => kt(t);
function av(t, ...e) {
  const {
    fallbackFormat: r,
    postTranslation: n,
    unresolving: i,
    messageCompiler: s,
    fallbackLocale: o,
    messages: f
  } = t;
  const [c, p] = yh(...e);
  const d = lt(p.missingWarn) ? p.missingWarn : t.missingWarn;
  const E = lt(p.fallbackWarn) ? p.fallbackWarn : t.fallbackWarn;
  const m = lt(p.escapeParameter) ? p.escapeParameter : t.escapeParameter;
  const g = !!p.resolvedMessage;
  const T = Ne(p.default) || lt(p.default) ? lt(p.default) ? s ? c : () => c : p.default : r ? s ? c : () => c : "";
  const b = r || T !== "";
  const x = VE(t, p);
  if (m) {
    $$(p);
  }
  let [A, R, v] = g ? [c, x, f[x] || {}] : OS(t, c, x, o, E, d);
  let y = A;
  let U = c;
  if (!g && !Ne(y) && !eo(y) && !Si(y) && b) {
    y = T;
    U = y;
  }
  if (!g && (!Ne(y) && !eo(y) && !Si(y) || !Ne(R))) {
    if (i) {
      return mc;
    } else {
      return c;
    }
  }
  let P = false;
  const M = () => {
    P = true;
  };
  const X = Si(y) ? y : IS(t, c, R, y, U, M);
  if (P) {
    return y;
  }
  const N = G$(t, R, v, p);
  const ae = x$(N);
  const Q = K$(t, X, ae);
  if (n) {
    return n(Q, c);
  } else {
    return Q;
  }
}
function $$(t) {
  if (Wt(t.list)) {
    t.list = t.list.map(e => Ne(e) ? HT(e) : e);
  } else if (Ct(t.named)) {
    Object.keys(t.named).forEach(e => {
      if (Ne(t.named[e])) {
        t.named[e] = HT(t.named[e]);
      }
    });
  }
}
function OS(t, e, r, n, i, s) {
  const {
    messages: o,
    onWarn: f,
    messageResolver: c,
    localeFallbacker: p
  } = t;
  const d = p(t, n, r);
  let E = {};
  let m;
  let g = null;
  const T = "translate";
  for (let b = 0; b < d.length && (m = d[b], E = o[m] || {}, (g = c(E, e)) === null && (g = E[e]), !Ne(g) && !eo(g) && !Si(g)); b++) {
    if (!U$(m, d)) {
      const x = FE(t, e, m, s, T);
      if (x !== e) {
        g = x;
      }
    }
  }
  return [g, m, E];
}
function IS(t, e, r, n, i, s) {
  const {
    messageCompiler: o,
    warnHtmlMessage: f
  } = t;
  if (Si(n)) {
    const p = n;
    p.locale = p.locale || r;
    p.key = p.key || e;
    return p;
  }
  if (o == null) {
    const p = () => n;
    p.locale = r;
    p.key = e;
    return p;
  }
  const c = o(n, k$(t, r, i, n, f, s));
  c.locale = r;
  c.key = e;
  c.source = n;
  return c;
}
function K$(t, e, r) {
  return e(r);
}
function yh(...t) {
  const [e, r, n] = t;
  const i = {};
  if (!Ne(e) && !lr(e) && !Si(e) && !eo(e)) {
    throw Yn(Un.INVALID_ARGUMENT);
  }
  const s = lr(e) ? String(e) : (Si(e), e);
  if (lr(r)) {
    i.plural = r;
  } else if (Ne(r)) {
    i.default = r;
  } else if (Ze(r) && !hc(r)) {
    i.named = r;
  } else if (Wt(r)) {
    i.list = r;
  }
  if (lr(n)) {
    i.plural = n;
  } else if (Ne(n)) {
    i.default = n;
  } else if (Ze(n)) {
    Lr(i, n);
  }
  return [s, i];
}
function k$(t, e, r, n, i, s) {
  return {
    locale: e,
    key: r,
    warnHtmlMessage: i,
    onError: o => {
      if (s) {
        s(o);
      }
      throw o;
    },
    onCacheKey: o => xM(e, r, o)
  };
}
function G$(t, e, r, n) {
  const {
    modifiers: i,
    pluralRules: s,
    messageResolver: o,
    fallbackLocale: f,
    fallbackWarn: c,
    missingWarn: p,
    fallbackContext: d
  } = t;
  const m = {
    locale: e,
    modifiers: i,
    pluralRules: s,
    messages: g => {
      let T = o(r, g);
      if (T == null && d) {
        const [,, b] = OS(d, g, e, f, c, p);
        T = o(b, g);
      }
      if (Ne(T) || eo(T)) {
        let b = false;
        const A = IS(t, g, e, T, g, () => {
          b = true;
        });
        if (b) {
          return sv;
        } else {
          return A;
        }
      } else if (Si(T)) {
        return T;
      } else {
        return sv;
      }
    }
  };
  if (t.processor) {
    m.processor = t.processor;
  }
  if (n.list) {
    m.list = n.list;
  }
  if (n.named) {
    m.named = n.named;
  }
  if (lr(n.plural)) {
    m.pluralIndex = n.plural;
  }
  return m;
}
function ov(t, ...e) {
  const {
    datetimeFormats: r,
    unresolving: n,
    fallbackLocale: i,
    onWarn: s,
    localeFallbacker: o
  } = t;
  const {
    __datetimeFormatters: f
  } = t;
  const [c, p, d, E] = Ah(...e);
  const m = lt(d.missingWarn) ? d.missingWarn : t.missingWarn;
  if (lt(d.fallbackWarn)) {
    d.fallbackWarn;
  } else {
    t.fallbackWarn;
  }
  const g = !!d.part;
  const T = VE(t, d);
  const b = o(t, i, T);
  if (!Ne(c) || c === "") {
    return new Intl.DateTimeFormat(T, E).format(p);
  }
  let x = {};
  let A;
  let R = null;
  const v = "datetime format";
  for (let P = 0; P < b.length && (A = b[P], x = r[A] || {}, R = x[c], !Ze(R)); P++) {
    FE(t, c, A, m, v);
  }
  if (!Ze(R) || !Ne(A)) {
    if (n) {
      return mc;
    } else {
      return c;
    }
  }
  let y = `${A}__${c}`;
  if (!hc(E)) {
    y = `${y}__${JSON.stringify(E)}`;
  }
  let U = f.get(y);
  if (!U) {
    U = new Intl.DateTimeFormat(A, Lr({}, R, E));
    f.set(y, U);
  }
  if (g) {
    return U.formatToParts(p);
  } else {
    return U.format(p);
  }
}
const NS = ["localeMatcher", "weekday", "era", "year", "month", "day", "hour", "minute", "second", "timeZoneName", "formatMatcher", "hour12", "timeZone", "dateStyle", "timeStyle", "calendar", "dayPeriod", "numberingSystem", "hourCycle", "fractionalSecondDigits"];
function Ah(...t) {
  const [e, r, n, i] = t;
  const s = {};
  let o = {};
  let f;
  if (Ne(e)) {
    const c = e.match(/(\d{4}-\d{2}-\d{2})(T|\s)?(.*)/);
    if (!c) {
      throw Yn(Un.INVALID_ISO_DATE_ARGUMENT);
    }
    const p = c[3] ? c[3].trim().startsWith("T") ? `${c[1].trim()}${c[3].trim()}` : `${c[1].trim()}T${c[3].trim()}` : c[1].trim();
    f = new Date(p);
    try {
      f.toISOString();
    } catch {
      throw Yn(Un.INVALID_ISO_DATE_ARGUMENT);
    }
  } else if (SM(e)) {
    if (isNaN(e.getTime())) {
      throw Yn(Un.INVALID_DATE_ARGUMENT);
    }
    f = e;
  } else if (lr(e)) {
    f = e;
  } else {
    throw Yn(Un.INVALID_ARGUMENT);
  }
  if (Ne(r)) {
    s.key = r;
  } else if (Ze(r)) {
    Object.keys(r).forEach(c => {
      if (NS.includes(c)) {
        o[c] = r[c];
      } else {
        s[c] = r[c];
      }
    });
  }
  if (Ne(n)) {
    s.locale = n;
  } else if (Ze(n)) {
    o = n;
  }
  if (Ze(i)) {
    o = i;
  }
  return [s.key || "", f, s, o];
}
function lv(t, e, r) {
  const n = t;
  for (const i in r) {
    const s = `${e}__${i}`;
    if (n.__datetimeFormatters.has(s)) {
      n.__datetimeFormatters.delete(s);
    }
  }
}
function uv(t, ...e) {
  const {
    numberFormats: r,
    unresolving: n,
    fallbackLocale: i,
    onWarn: s,
    localeFallbacker: o
  } = t;
  const {
    __numberFormatters: f
  } = t;
  const [c, p, d, E] = Lh(...e);
  const m = lt(d.missingWarn) ? d.missingWarn : t.missingWarn;
  if (lt(d.fallbackWarn)) {
    d.fallbackWarn;
  } else {
    t.fallbackWarn;
  }
  const g = !!d.part;
  const T = VE(t, d);
  const b = o(t, i, T);
  if (!Ne(c) || c === "") {
    return new Intl.NumberFormat(T, E).format(p);
  }
  let x = {};
  let A;
  let R = null;
  const v = "number format";
  for (let P = 0; P < b.length && (A = b[P], x = r[A] || {}, R = x[c], !Ze(R)); P++) {
    FE(t, c, A, m, v);
  }
  if (!Ze(R) || !Ne(A)) {
    if (n) {
      return mc;
    } else {
      return c;
    }
  }
  let y = `${A}__${c}`;
  if (!hc(E)) {
    y = `${y}__${JSON.stringify(E)}`;
  }
  let U = f.get(y);
  if (!U) {
    U = new Intl.NumberFormat(A, Lr({}, R, E));
    f.set(y, U);
  }
  if (g) {
    return U.formatToParts(p);
  } else {
    return U.format(p);
  }
}
const PS = ["localeMatcher", "style", "currency", "currencyDisplay", "currencySign", "useGrouping", "minimumIntegerDigits", "minimumFractionDigits", "maximumFractionDigits", "minimumSignificantDigits", "maximumSignificantDigits", "compactDisplay", "notation", "signDisplay", "unit", "unitDisplay", "roundingMode", "roundingPriority", "roundingIncrement", "trailingZeroDisplay"];
function Lh(...t) {
  const [e, r, n, i] = t;
  const s = {};
  let o = {};
  if (!lr(e)) {
    throw Yn(Un.INVALID_ARGUMENT);
  }
  const f = e;
  if (Ne(r)) {
    s.key = r;
  } else if (Ze(r)) {
    Object.keys(r).forEach(c => {
      if (PS.includes(c)) {
        o[c] = r[c];
      } else {
        s[c] = r[c];
      }
    });
  }
  if (Ne(n)) {
    s.locale = n;
  } else if (Ze(n)) {
    o = n;
  }
  if (Ze(i)) {
    o = i;
  }
  return [s.key || "", f, s, o];
}
function fv(t, e, r) {
  const n = t;
  for (const i in r) {
    const s = `${e}__${i}`;
    if (n.__numberFormatters.has(s)) {
      n.__numberFormatters.delete(s);
    }
  }
}
a$(); /*!
      * vue-i18n v9.13.1
      * (c) 2024 kazuya kawaguchi
      * Released under the MIT License.
      */
const V$ = "9.13.1";
function F$() {
  if (typeof __INTLIFY_JIT_COMPILATION__ != "boolean") {
    Af().__INTLIFY_JIT_COMPILATION__ = false;
  }
  if (typeof __INTLIFY_DROP_MESSAGE_COMPILER__ != "boolean") {
    Af().__INTLIFY_DROP_MESSAGE_COMPILER__ = false;
  }
}
const US = R$.__EXTEND_POINT__;
const mi = Ec(US);
mi();
mi();
mi();
mi();
mi();
mi();
mi();
mi();
mi();
const DS = Un.__EXTEND_POINT__;
const Hr = Ec(DS);
const ur = {
  UNEXPECTED_RETURN_TYPE: DS,
  INVALID_ARGUMENT: Hr(),
  MUST_BE_CALL_SETUP_TOP: Hr(),
  NOT_INSTALLED: Hr(),
  NOT_AVAILABLE_IN_LEGACY_MODE: Hr(),
  REQUIRED_VALUE: Hr(),
  INVALID_VALUE: Hr(),
  CANNOT_SETUP_VUE_DEVTOOLS_PLUGIN: Hr(),
  NOT_INSTALLED_WITH_PROVIDE: Hr(),
  UNEXPECTED_ERROR: Hr(),
  NOT_COMPATIBLE_LEGACY_VUE_I18N: Hr(),
  BRIDGE_SUPPORT_VUE_2_ONLY: Hr(),
  MUST_DEFINE_I18N_OPTION_IN_ALLOW_COMPOSITION: Hr(),
  NOT_AVAILABLE_COMPOSITION_IN_LEGACY: Hr(),
  __EXTEND_POINT__: Hr()
};
function hr(t, ...e) {
  return fo(t, null, undefined);
}
const Ch = hs("__translateVNode");
const wh = hs("__datetimeParts");
const Oh = hs("__numberParts");
const BS = hs("__setPluralRules");
const MS = hs("__injectWithOption");
const Ih = hs("__dispose");
function _l(t) {
  if (!Ct(t)) {
    return t;
  }
  for (const e in t) {
    if (Lf(t, e)) {
      if (!e.includes(".")) {
        if (Ct(t[e])) {
          _l(t[e]);
        }
      } else {
        const r = e.split(".");
        const n = r.length - 1;
        let i = t;
        let s = false;
        for (let o = 0; o < n; o++) {
          if (!(r[o] in i)) {
            i[r[o]] = {};
          }
          if (!Ct(i[r[o]])) {
            s = true;
            break;
          }
          i = i[r[o]];
        }
        if (!s) {
          i[r[n]] = t[e];
          delete t[e];
        }
        if (Ct(i[r[n]])) {
          _l(i[r[n]]);
        }
      }
    }
  }
  return t;
}
function gc(t, e) {
  const {
    messages: r,
    __i18n: n,
    messageResolver: i,
    flatJson: s
  } = e;
  const o = Ze(r) ? r : Wt(n) ? {} : {
    [t]: {}
  };
  if (Wt(n)) {
    n.forEach(f => {
      if ("locale" in f && "resource" in f) {
        const {
          locale: c,
          resource: p
        } = f;
        if (c) {
          o[c] = o[c] || {};
          of(p, o[c]);
        } else {
          of(p, o);
        }
      } else if (Ne(f)) {
        of(JSON.parse(f), o);
      }
    });
  }
  if (i == null && s) {
    for (const f in o) {
      if (Lf(o, f)) {
        _l(o[f]);
      }
    }
  }
  return o;
}
function H$(t) {
  return t.type;
}
function $S(t, e, r) {
  let n = Ct(e.messages) ? e.messages : {};
  if ("__i18nGlobal" in r) {
    n = gc(t.locale.value, {
      messages: n,
      __i18n: r.__i18nGlobal
    });
  }
  const i = Object.keys(n);
  if (i.length) {
    i.forEach(s => {
      t.mergeLocaleMessage(s, n[s]);
    });
  }
  {
    if (Ct(e.datetimeFormats)) {
      const s = Object.keys(e.datetimeFormats);
      if (s.length) {
        s.forEach(o => {
          t.mergeDateTimeFormat(o, e.datetimeFormats[o]);
        });
      }
    }
    if (Ct(e.numberFormats)) {
      const s = Object.keys(e.numberFormats);
      if (s.length) {
        s.forEach(o => {
          t.mergeNumberFormat(o, e.numberFormats[o]);
        });
      }
    }
  }
}
function cv(t) {
  return Gt(Ol, null, t, 0);
}
const pv = () => [];
const W$ = () => false;
let dv = 0;
function hv(t) {
  return (e, r, n, i) => t(r, n, Ya() || undefined, i);
}
function HE(t = {}, e) {
  const {
    __root: r,
    __injectWithOption: n
  } = t;
  const i = r === undefined;
  const s = t.flatJson;
  const o = yf ? Ds : yR;
  const f = !!t.translateExistCompatible;
  let c = lt(t.inheritLocale) ? t.inheritLocale : true;
  const p = o(r && c ? r.locale.value : Ne(t.locale) ? t.locale : Qa);
  const d = o(r && c ? r.fallbackLocale.value : Ne(t.fallbackLocale) || Wt(t.fallbackLocale) || Ze(t.fallbackLocale) || t.fallbackLocale === false ? t.fallbackLocale : p.value);
  const E = o(gc(p.value, t));
  const m = o(Ze(t.datetimeFormats) ? t.datetimeFormats : {
    [p.value]: {}
  });
  const g = o(Ze(t.numberFormats) ? t.numberFormats : {
    [p.value]: {}
  });
  let T = r ? r.missingWarn : lt(t.missingWarn) || fs(t.missingWarn) ? t.missingWarn : true;
  let b = r ? r.fallbackWarn : lt(t.fallbackWarn) || fs(t.fallbackWarn) ? t.fallbackWarn : true;
  let x = r ? r.fallbackRoot : lt(t.fallbackRoot) ? t.fallbackRoot : true;
  let A = !!t.fallbackFormat;
  let R = kt(t.missing) ? t.missing : null;
  let v = kt(t.missing) ? hv(t.missing) : null;
  let y = kt(t.postTranslation) ? t.postTranslation : null;
  let U = r ? r.warnHtmlMessage : lt(t.warnHtmlMessage) ? t.warnHtmlMessage : true;
  let P = !!t.escapeParameter;
  const M = r ? r.modifiers : Ze(t.modifiers) ? t.modifiers : {};
  let X = t.pluralRules || r && r.pluralRules;
  let N;
  N = (() => {
    if (i) {
      rv(null);
    }
    const se = {
      version: V$,
      locale: p.value,
      fallbackLocale: d.value,
      messages: E.value,
      modifiers: M,
      pluralRules: X,
      missing: v === null ? undefined : v,
      missingWarn: T,
      fallbackWarn: b,
      fallbackFormat: A,
      unresolving: true,
      postTranslation: y === null ? undefined : y,
      warnHtmlMessage: U,
      escapeParameter: P,
      messageResolver: t.messageResolver,
      messageCompiler: t.messageCompiler,
      __meta: {
        framework: "vue"
      }
    };
    se.datetimeFormats = m.value;
    se.numberFormats = g.value;
    se.__datetimeFormatters = Ze(N) ? N.__datetimeFormatters : undefined;
    se.__numberFormatters = Ze(N) ? N.__numberFormatters : undefined;
    const oe = N$(se);
    if (i) {
      rv(oe);
    }
    return oe;
  })();
  Vo(N, p.value, d.value);
  function Q() {
    return [p.value, d.value, E.value, m.value, g.value];
  }
  const V = gn({
    get: () => p.value,
    set: se => {
      p.value = se;
      N.locale = p.value;
    }
  });
  const Y = gn({
    get: () => d.value,
    set: se => {
      d.value = se;
      N.fallbackLocale = d.value;
      Vo(N, p.value, se);
    }
  });
  const k = gn(() => E.value);
  const w = gn(() => m.value);
  const j = gn(() => g.value);
  function W() {
    if (kt(y)) {
      return y;
    } else {
      return null;
    }
  }
  function te(se) {
    y = se;
    N.postTranslation = se;
  }
  function ie() {
    return R;
  }
  function _e(se) {
    if (se !== null) {
      v = hv(se);
    }
    R = se;
    N.missing = v;
  }
  const ye = (se, oe, $e, G, $, J) => {
    Q();
    let K;
    try {
      if (!i) {
        N.fallbackContext = r ? I$() : undefined;
      }
      K = se(N);
    } finally {
      if (!i) {
        N.fallbackContext = undefined;
      }
    }
    if ($e !== "translate exists" && lr(K) && K === mc || $e === "translate exists" && !K) {
      const [Z, ue] = oe();
      if (r && x) {
        return G(r);
      } else {
        return $(Z);
      }
    } else {
      if (J(K)) {
        return K;
      }
      throw hr(ur.UNEXPECTED_RETURN_TYPE);
    }
  };
  function Be(...se) {
    return ye(oe => Reflect.apply(av, null, [oe, ...se]), () => yh(...se), "translate", oe => Reflect.apply(oe.t, oe, [...se]), oe => oe, oe => Ne(oe));
  }
  function Le(...se) {
    const [oe, $e, G] = se;
    if (G && !Ct(G)) {
      throw hr(ur.INVALID_ARGUMENT);
    }
    return Be(oe, $e, Lr({
      resolvedMessage: true
    }, G || {}));
  }
  function Ge(...se) {
    return ye(oe => Reflect.apply(ov, null, [oe, ...se]), () => Ah(...se), "datetime format", oe => Reflect.apply(oe.d, oe, [...se]), () => QT, oe => Ne(oe));
  }
  function Rt(...se) {
    return ye(oe => Reflect.apply(uv, null, [oe, ...se]), () => Lh(...se), "number format", oe => Reflect.apply(oe.n, oe, [...se]), () => QT, oe => Ne(oe));
  }
  function je(se) {
    return se.map(oe => Ne(oe) || lr(oe) || lt(oe) ? cv(String(oe)) : oe);
  }
  const Ve = {
    normalize: je,
    interpolate: se => se,
    type: "vnode"
  };
  function ot(...se) {
    return ye(oe => {
      let $e;
      const G = oe;
      try {
        G.processor = Ve;
        $e = Reflect.apply(av, null, [G, ...se]);
      } finally {
        G.processor = null;
      }
      return $e;
    }, () => yh(...se), "translate", oe => oe[Ch](...se), oe => [cv(oe)], oe => Wt(oe));
  }
  function ft(...se) {
    return ye(oe => Reflect.apply(uv, null, [oe, ...se]), () => Lh(...se), "number format", oe => oe[Oh](...se), pv, oe => Ne(oe) || Wt(oe));
  }
  function Ut(...se) {
    return ye(oe => Reflect.apply(ov, null, [oe, ...se]), () => Ah(...se), "datetime format", oe => oe[wh](...se), pv, oe => Ne(oe) || Wt(oe));
  }
  function $t(se) {
    X = se;
    N.pluralRules = X;
  }
  function F(se, oe) {
    return ye(() => {
      if (!se) {
        return false;
      }
      const $e = Ne(oe) ? oe : p.value;
      const G = he($e);
      const $ = N.messageResolver(G, se);
      if (f) {
        return $ != null;
      } else {
        return eo($) || Si($) || Ne($);
      }
    }, () => [se], "translate exists", $e => Reflect.apply($e.te, $e, [se, oe]), W$, $e => lt($e));
  }
  function D(se) {
    let oe = null;
    const $e = RS(N, d.value, p.value);
    for (let G = 0; G < $e.length; G++) {
      const $ = E.value[$e[G]] || {};
      const J = N.messageResolver($, se);
      if (J != null) {
        oe = J;
        break;
      }
    }
    return oe;
  }
  function ne(se) {
    const oe = D(se);
    return oe ?? (r ? r.tm(se) || {} : {});
  }
  function he(se) {
    return E.value[se] || {};
  }
  function pe(se, oe) {
    if (s) {
      const $e = {
        [se]: oe
      };
      for (const G in $e) {
        if (Lf($e, G)) {
          _l($e[G]);
        }
      }
      oe = $e[se];
    }
    E.value[se] = oe;
    N.messages = E.value;
  }
  function xe(se, oe) {
    E.value[se] = E.value[se] || {};
    const $e = {
      [se]: oe
    };
    if (s) {
      for (const G in $e) {
        if (Lf($e, G)) {
          _l($e[G]);
        }
      }
    }
    oe = $e[se];
    of(oe, E.value[se]);
    N.messages = E.value;
  }
  function Te(se) {
    return m.value[se] || {};
  }
  function O(se, oe) {
    m.value[se] = oe;
    N.datetimeFormats = m.value;
    lv(N, se, oe);
  }
  function B(se, oe) {
    m.value[se] = Lr(m.value[se] || {}, oe);
    N.datetimeFormats = m.value;
    lv(N, se, oe);
  }
  function z(se) {
    return g.value[se] || {};
  }
  function fe(se, oe) {
    g.value[se] = oe;
    N.numberFormats = g.value;
    fv(N, se, oe);
  }
  function Ce(se, oe) {
    g.value[se] = Lr(g.value[se] || {}, oe);
    N.numberFormats = g.value;
    fv(N, se, oe);
  }
  dv++;
  if (r && yf) {
    $a(r.locale, se => {
      if (c) {
        p.value = se;
        N.locale = se;
        Vo(N, p.value, d.value);
      }
    });
    $a(r.fallbackLocale, se => {
      if (c) {
        d.value = se;
        N.fallbackLocale = se;
        Vo(N, p.value, d.value);
      }
    });
  }
  const ve = {
    id: dv,
    locale: V,
    fallbackLocale: Y,
    get inheritLocale() {
      return c;
    },
    set inheritLocale(se) {
      c = se;
      if (se && r) {
        p.value = r.locale.value;
        d.value = r.fallbackLocale.value;
        Vo(N, p.value, d.value);
      }
    },
    get availableLocales() {
      return Object.keys(E.value).sort();
    },
    messages: k,
    get modifiers() {
      return M;
    },
    get pluralRules() {
      return X || {};
    },
    get isGlobal() {
      return i;
    },
    get missingWarn() {
      return T;
    },
    set missingWarn(se) {
      T = se;
      N.missingWarn = T;
    },
    get fallbackWarn() {
      return b;
    },
    set fallbackWarn(se) {
      b = se;
      N.fallbackWarn = b;
    },
    get fallbackRoot() {
      return x;
    },
    set fallbackRoot(se) {
      x = se;
    },
    get fallbackFormat() {
      return A;
    },
    set fallbackFormat(se) {
      A = se;
      N.fallbackFormat = A;
    },
    get warnHtmlMessage() {
      return U;
    },
    set warnHtmlMessage(se) {
      U = se;
      N.warnHtmlMessage = se;
    },
    get escapeParameter() {
      return P;
    },
    set escapeParameter(se) {
      P = se;
      N.escapeParameter = se;
    },
    t: Be,
    getLocaleMessage: he,
    setLocaleMessage: pe,
    mergeLocaleMessage: xe,
    getPostTranslationHandler: W,
    setPostTranslationHandler: te,
    getMissingHandler: ie,
    setMissingHandler: _e,
    [BS]: $t
  };
  ve.datetimeFormats = w;
  ve.numberFormats = j;
  ve.rt = Le;
  ve.te = F;
  ve.tm = ne;
  ve.d = Ge;
  ve.n = Rt;
  ve.getDateTimeFormat = Te;
  ve.setDateTimeFormat = O;
  ve.mergeDateTimeFormat = B;
  ve.getNumberFormat = z;
  ve.setNumberFormat = fe;
  ve.mergeNumberFormat = Ce;
  ve[MS] = n;
  ve[Ch] = ot;
  ve[wh] = Ut;
  ve[Oh] = ft;
  return ve;
}
function X$(t) {
  const e = Ne(t.locale) ? t.locale : Qa;
  const r = Ne(t.fallbackLocale) || Wt(t.fallbackLocale) || Ze(t.fallbackLocale) || t.fallbackLocale === false ? t.fallbackLocale : e;
  const n = kt(t.missing) ? t.missing : undefined;
  const i = lt(t.silentTranslationWarn) || fs(t.silentTranslationWarn) ? !t.silentTranslationWarn : true;
  const s = lt(t.silentFallbackWarn) || fs(t.silentFallbackWarn) ? !t.silentFallbackWarn : true;
  const o = lt(t.fallbackRoot) ? t.fallbackRoot : true;
  const f = !!t.formatFallbackMessages;
  const c = Ze(t.modifiers) ? t.modifiers : {};
  const p = t.pluralizationRules;
  const d = kt(t.postTranslation) ? t.postTranslation : undefined;
  const E = Ne(t.warnHtmlInMessage) ? t.warnHtmlInMessage !== "off" : true;
  const m = !!t.escapeParameterHtml;
  const g = lt(t.sync) ? t.sync : true;
  let T = t.messages;
  if (Ze(t.sharedMessages)) {
    const P = t.sharedMessages;
    T = Object.keys(P).reduce((X, N) => {
      const ae = X[N] ||= {};
      Lr(ae, P[N]);
      return X;
    }, T || {});
  }
  const {
    __i18n: b,
    __root: x,
    __injectWithOption: A
  } = t;
  const R = t.datetimeFormats;
  const v = t.numberFormats;
  const y = t.flatJson;
  const U = t.translateExistCompatible;
  return {
    locale: e,
    fallbackLocale: r,
    messages: T,
    flatJson: y,
    datetimeFormats: R,
    numberFormats: v,
    missing: n,
    missingWarn: i,
    fallbackWarn: s,
    fallbackRoot: o,
    fallbackFormat: f,
    modifiers: c,
    pluralRules: p,
    postTranslation: d,
    warnHtmlMessage: E,
    escapeParameter: m,
    messageResolver: t.messageResolver,
    inheritLocale: g,
    translateExistCompatible: U,
    __i18n: b,
    __root: x,
    __injectWithOption: A
  };
}
function Nh(t = {}, e) {
  {
    const r = HE(X$(t));
    const {
      __extender: n
    } = t;
    const i = {
      id: r.id,
      get locale() {
        return r.locale.value;
      },
      set locale(s) {
        r.locale.value = s;
      },
      get fallbackLocale() {
        return r.fallbackLocale.value;
      },
      set fallbackLocale(s) {
        r.fallbackLocale.value = s;
      },
      get messages() {
        return r.messages.value;
      },
      get datetimeFormats() {
        return r.datetimeFormats.value;
      },
      get numberFormats() {
        return r.numberFormats.value;
      },
      get availableLocales() {
        return r.availableLocales;
      },
      get formatter() {
        return {
          interpolate() {
            return [];
          }
        };
      },
      set formatter(s) {},
      get missing() {
        return r.getMissingHandler();
      },
      set missing(s) {
        r.setMissingHandler(s);
      },
      get silentTranslationWarn() {
        if (lt(r.missingWarn)) {
          return !r.missingWarn;
        } else {
          return r.missingWarn;
        }
      },
      set silentTranslationWarn(s) {
        r.missingWarn = lt(s) ? !s : s;
      },
      get silentFallbackWarn() {
        if (lt(r.fallbackWarn)) {
          return !r.fallbackWarn;
        } else {
          return r.fallbackWarn;
        }
      },
      set silentFallbackWarn(s) {
        r.fallbackWarn = lt(s) ? !s : s;
      },
      get modifiers() {
        return r.modifiers;
      },
      get formatFallbackMessages() {
        return r.fallbackFormat;
      },
      set formatFallbackMessages(s) {
        r.fallbackFormat = s;
      },
      get postTranslation() {
        return r.getPostTranslationHandler();
      },
      set postTranslation(s) {
        r.setPostTranslationHandler(s);
      },
      get sync() {
        return r.inheritLocale;
      },
      set sync(s) {
        r.inheritLocale = s;
      },
      get warnHtmlInMessage() {
        if (r.warnHtmlMessage) {
          return "warn";
        } else {
          return "off";
        }
      },
      set warnHtmlInMessage(s) {
        r.warnHtmlMessage = s !== "off";
      },
      get escapeParameterHtml() {
        return r.escapeParameter;
      },
      set escapeParameterHtml(s) {
        r.escapeParameter = s;
      },
      get preserveDirectiveContent() {
        return true;
      },
      set preserveDirectiveContent(s) {},
      get pluralizationRules() {
        return r.pluralRules || {};
      },
      __composer: r,
      t(...s) {
        const [o, f, c] = s;
        const p = {};
        let d = null;
        let E = null;
        if (!Ne(o)) {
          throw hr(ur.INVALID_ARGUMENT);
        }
        const m = o;
        if (Ne(f)) {
          p.locale = f;
        } else if (Wt(f)) {
          d = f;
        } else if (Ze(f)) {
          E = f;
        }
        if (Wt(c)) {
          d = c;
        } else if (Ze(c)) {
          E = c;
        }
        return Reflect.apply(r.t, r, [m, d || E || {}, p]);
      },
      rt(...s) {
        return Reflect.apply(r.rt, r, [...s]);
      },
      tc(...s) {
        const [o, f, c] = s;
        const p = {
          plural: 1
        };
        let d = null;
        let E = null;
        if (!Ne(o)) {
          throw hr(ur.INVALID_ARGUMENT);
        }
        const m = o;
        if (Ne(f)) {
          p.locale = f;
        } else if (lr(f)) {
          p.plural = f;
        } else if (Wt(f)) {
          d = f;
        } else if (Ze(f)) {
          E = f;
        }
        if (Ne(c)) {
          p.locale = c;
        } else if (Wt(c)) {
          d = c;
        } else if (Ze(c)) {
          E = c;
        }
        return Reflect.apply(r.t, r, [m, d || E || {}, p]);
      },
      te(s, o) {
        return r.te(s, o);
      },
      tm(s) {
        return r.tm(s);
      },
      getLocaleMessage(s) {
        return r.getLocaleMessage(s);
      },
      setLocaleMessage(s, o) {
        r.setLocaleMessage(s, o);
      },
      mergeLocaleMessage(s, o) {
        r.mergeLocaleMessage(s, o);
      },
      d(...s) {
        return Reflect.apply(r.d, r, [...s]);
      },
      getDateTimeFormat(s) {
        return r.getDateTimeFormat(s);
      },
      setDateTimeFormat(s, o) {
        r.setDateTimeFormat(s, o);
      },
      mergeDateTimeFormat(s, o) {
        r.mergeDateTimeFormat(s, o);
      },
      n(...s) {
        return Reflect.apply(r.n, r, [...s]);
      },
      getNumberFormat(s) {
        return r.getNumberFormat(s);
      },
      setNumberFormat(s, o) {
        r.setNumberFormat(s, o);
      },
      mergeNumberFormat(s, o) {
        r.mergeNumberFormat(s, o);
      },
      getChoiceIndex(s, o) {
        return -1;
      }
    };
    i.__extender = n;
    return i;
  }
}
const WE = {
  tag: {
    type: [String, Object]
  },
  locale: {
    type: String
  },
  scope: {
    type: String,
    validator: t => t === "parent" || t === "global",
    default: "parent"
  },
  i18n: {
    type: Object
  }
};
function j$({
  slots: t
}, e) {
  if (e.length === 1 && e[0] === "default") {
    return (t.default ? t.default() : []).reduce((n, i) => [...n, ...(i.type === zt ? i.children : [i])], []);
  } else {
    return e.reduce((r, n) => {
      const i = t[n];
      if (i) {
        r[n] = i();
      }
      return r;
    }, {});
  }
}
function KS(t) {
  return zt;
}
const z$ = fr({
  name: "i18n-t",
  props: Lr({
    keypath: {
      type: String,
      required: true
    },
    plural: {
      type: [Number, String],
      validator: t => lr(t) || !isNaN(t)
    }
  }, WE),
  setup(t, e) {
    const {
      slots: r,
      attrs: n
    } = e;
    const i = t.i18n || XE({
      useScope: t.scope,
      __useComponent: true
    });
    return () => {
      const s = Object.keys(r).filter(E => E !== "_");
      const o = {};
      if (t.locale) {
        o.locale = t.locale;
      }
      if (t.plural !== undefined) {
        o.plural = Ne(t.plural) ? +t.plural : t.plural;
      }
      const f = j$(e, s);
      const c = i[Ch](t.keypath, f, o);
      const p = Lr({}, n);
      const d = Ne(t.tag) || Ct(t.tag) ? t.tag : KS();
      return $E(d, p, c);
    };
  }
});
const Ev = z$;
function q$(t) {
  return Wt(t) && !Ne(t[0]);
}
function kS(t, e, r, n) {
  const {
    slots: i,
    attrs: s
  } = e;
  return () => {
    const o = {
      part: true
    };
    let f = {};
    if (t.locale) {
      o.locale = t.locale;
    }
    if (Ne(t.format)) {
      o.key = t.format;
    } else if (Ct(t.format)) {
      if (Ne(t.format.key)) {
        o.key = t.format.key;
      }
      f = Object.keys(t.format).reduce((m, g) => r.includes(g) ? Lr({}, m, {
        [g]: t.format[g]
      }) : m, {});
    }
    const c = n(t.value, o, f);
    let p = [o.key];
    if (Wt(c)) {
      p = c.map((m, g) => {
        const T = i[m.type];
        const b = T ? T({
          [m.type]: m.value,
          index: g,
          parts: c
        }) : [m.value];
        if (q$(b)) {
          b[0].key = `${m.type}-${g}`;
        }
        return b;
      });
    } else if (Ne(c)) {
      p = [c];
    }
    const d = Lr({}, s);
    const E = Ne(t.tag) || Ct(t.tag) ? t.tag : KS();
    return $E(E, d, p);
  };
}
const Y$ = fr({
  name: "i18n-n",
  props: Lr({
    value: {
      type: Number,
      required: true
    },
    format: {
      type: [String, Object]
    }
  }, WE),
  setup(t, e) {
    const r = t.i18n || XE({
      useScope: t.scope,
      __useComponent: true
    });
    return kS(t, e, PS, (...n) => r[Oh](...n));
  }
});
const mv = Y$;
const J$ = fr({
  name: "i18n-d",
  props: Lr({
    value: {
      type: [Number, Date],
      required: true
    },
    format: {
      type: [String, Object]
    }
  }, WE),
  setup(t, e) {
    const r = t.i18n || XE({
      useScope: t.scope,
      __useComponent: true
    });
    return kS(t, e, NS, (...n) => r[wh](...n));
  }
});
const gv = J$;
function Z$(t, e) {
  const r = t;
  if (t.mode === "composition") {
    return r.__getInstance(e) || t.global;
  }
  {
    const n = r.__getInstance(e);
    if (n != null) {
      return n.__composer;
    } else {
      return t.global.__composer;
    }
  }
}
function Q$(t) {
  const e = o => {
    const {
      instance: f,
      modifiers: c,
      value: p
    } = o;
    if (!f || !f.$) {
      throw hr(ur.UNEXPECTED_ERROR);
    }
    const d = Z$(t, f.$);
    const E = _v(p);
    return [Reflect.apply(d.t, d, [...Tv(E)]), d];
  };
  return {
    created: (o, f) => {
      const [c, p] = e(f);
      if (yf && t.global === p) {
        o.__i18nWatcher = $a(p.locale, () => {
          if (f.instance) {
            f.instance.$forceUpdate();
          }
        });
      }
      o.__composer = p;
      o.textContent = c;
    },
    unmounted: o => {
      if (yf && o.__i18nWatcher) {
        o.__i18nWatcher();
        o.__i18nWatcher = undefined;
        delete o.__i18nWatcher;
      }
      if (o.__composer) {
        o.__composer = undefined;
        delete o.__composer;
      }
    },
    beforeUpdate: (o, {
      value: f
    }) => {
      if (o.__composer) {
        const c = o.__composer;
        const p = _v(f);
        o.textContent = Reflect.apply(c.t, c, [...Tv(p)]);
      }
    },
    getSSRProps: o => {
      const [f] = e(o);
      return {
        textContent: f
      };
    }
  };
}
function _v(t) {
  if (Ne(t)) {
    return {
      path: t
    };
  }
  if (Ze(t)) {
    if (!("path" in t)) {
      throw hr(ur.REQUIRED_VALUE, "path");
    }
    return t;
  } else {
    throw hr(ur.INVALID_VALUE);
  }
}
function Tv(t) {
  const {
    path: e,
    locale: r,
    args: n,
    choice: i,
    plural: s
  } = t;
  const o = {};
  const f = n || {};
  if (Ne(r)) {
    o.locale = r;
  }
  if (lr(i)) {
    o.plural = i;
  }
  if (lr(s)) {
    o.plural = s;
  }
  return [e, f, o];
}
function eK(t, e, ...r) {
  const n = Ze(r[0]) ? r[0] : {};
  const i = !!n.useI18nComponentName;
  if (lt(n.globalInstall) ? n.globalInstall : true) {
    [i ? "i18n" : Ev.name, "I18nT"].forEach(o => t.component(o, Ev));
    [mv.name, "I18nN"].forEach(o => t.component(o, mv));
    [gv.name, "I18nD"].forEach(o => t.component(o, gv));
  }
  t.directive("t", Q$(e));
}
function tK(t, e, r) {
  return {
    beforeCreate() {
      const n = Ya();
      if (!n) {
        throw hr(ur.UNEXPECTED_ERROR);
      }
      const i = this.$options;
      if (i.i18n) {
        const s = i.i18n;
        if (i.__i18n) {
          s.__i18n = i.__i18n;
        }
        s.__root = e;
        if (this === this.$root) {
          this.$i18n = vv(t, s);
        } else {
          s.__injectWithOption = true;
          s.__extender = r.__vueI18nExtend;
          this.$i18n = Nh(s);
          const o = this.$i18n;
          if (o.__extender) {
            o.__disposer = o.__extender(this.$i18n);
          }
        }
      } else if (i.__i18n) {
        if (this === this.$root) {
          this.$i18n = vv(t, i);
        } else {
          this.$i18n = Nh({
            __i18n: i.__i18n,
            __injectWithOption: true,
            __extender: r.__vueI18nExtend,
            __root: e
          });
          const s = this.$i18n;
          if (s.__extender) {
            s.__disposer = s.__extender(this.$i18n);
          }
        }
      } else {
        this.$i18n = t;
      }
      if (i.__i18nGlobal) {
        $S(e, i, i);
      }
      this.$t = (...s) => this.$i18n.t(...s);
      this.$rt = (...s) => this.$i18n.rt(...s);
      this.$tc = (...s) => this.$i18n.tc(...s);
      this.$te = (s, o) => this.$i18n.te(s, o);
      this.$d = (...s) => this.$i18n.d(...s);
      this.$n = (...s) => this.$i18n.n(...s);
      this.$tm = s => this.$i18n.tm(s);
      r.__setInstance(n, this.$i18n);
    },
    mounted() {},
    unmounted() {
      const n = Ya();
      if (!n) {
        throw hr(ur.UNEXPECTED_ERROR);
      }
      const i = this.$i18n;
      delete this.$t;
      delete this.$rt;
      delete this.$tc;
      delete this.$te;
      delete this.$d;
      delete this.$n;
      delete this.$tm;
      if (i.__disposer) {
        i.__disposer();
        delete i.__disposer;
        delete i.__extender;
      }
      r.__deleteInstance(n);
      delete this.$i18n;
    }
  };
}
function vv(t, e) {
  t.locale = e.locale || t.locale;
  t.fallbackLocale = e.fallbackLocale || t.fallbackLocale;
  t.missing = e.missing || t.missing;
  t.silentTranslationWarn = e.silentTranslationWarn || t.silentFallbackWarn;
  t.silentFallbackWarn = e.silentFallbackWarn || t.silentFallbackWarn;
  t.formatFallbackMessages = e.formatFallbackMessages || t.formatFallbackMessages;
  t.postTranslation = e.postTranslation || t.postTranslation;
  t.warnHtmlInMessage = e.warnHtmlInMessage || t.warnHtmlInMessage;
  t.escapeParameterHtml = e.escapeParameterHtml || t.escapeParameterHtml;
  t.sync = e.sync || t.sync;
  t.__composer[BS](e.pluralizationRules || t.pluralizationRules);
  const r = gc(t.locale, {
    messages: e.messages,
    __i18n: e.__i18n
  });
  Object.keys(r).forEach(n => t.mergeLocaleMessage(n, r[n]));
  if (e.datetimeFormats) {
    Object.keys(e.datetimeFormats).forEach(n => t.mergeDateTimeFormat(n, e.datetimeFormats[n]));
  }
  if (e.numberFormats) {
    Object.keys(e.numberFormats).forEach(n => t.mergeNumberFormat(n, e.numberFormats[n]));
  }
  return t;
}
const rK = hs("global-vue-i18n");
function nK(t = {}, e) {
  const r = lt(t.legacy) ? t.legacy : true;
  const n = lt(t.globalInjection) ? t.globalInjection : true;
  const i = r ? !!t.allowComposition : true;
  const s = new Map();
  const [o, f] = iK(t, r);
  const c = hs("");
  function p(m) {
    return s.get(m) || null;
  }
  function d(m, g) {
    s.set(m, g);
  }
  function E(m) {
    s.delete(m);
  }
  {
    const m = {
      get mode() {
        if (r) {
          return "legacy";
        } else {
          return "composition";
        }
      },
      get allowComposition() {
        return i;
      },
      async install(g, ...T) {
        g.__VUE_I18N_SYMBOL__ = c;
        g.provide(g.__VUE_I18N_SYMBOL__, m);
        if (Ze(T[0])) {
          const A = T[0];
          m.__composerExtend = A.__composerExtend;
          m.__vueI18nExtend = A.__vueI18nExtend;
        }
        let b = null;
        if (!r && n) {
          b = dK(g, m.global);
        }
        eK(g, m, ...T);
        if (r) {
          g.mixin(tK(f, f.__composer, m));
        }
        const x = g.unmount;
        g.unmount = () => {
          if (b) {
            b();
          }
          m.dispose();
          x();
        };
      },
      get global() {
        return f;
      },
      dispose() {
        o.stop();
      },
      __instances: s,
      __getInstance: p,
      __setInstance: d,
      __deleteInstance: E
    };
    return m;
  }
}
function XE(t = {}) {
  const e = Ya();
  if (e == null) {
    throw hr(ur.MUST_BE_CALL_SETUP_TOP);
  }
  if (!e.isCE && e.appContext.app != null && !e.appContext.app.__VUE_I18N_SYMBOL__) {
    throw hr(ur.NOT_INSTALLED);
  }
  const r = sK(e);
  const n = oK(r);
  const i = H$(e);
  const s = aK(t, i);
  if (r.mode === "legacy" && !t.__useComponent) {
    if (!r.allowComposition) {
      throw hr(ur.NOT_AVAILABLE_IN_LEGACY_MODE);
    }
    return cK(e, s, n, t);
  }
  if (s === "global") {
    $S(n, t, i);
    return n;
  }
  if (s === "parent") {
    let c = lK(r, e, t.__useComponent);
    if (c == null) {
      c = n;
    }
    return c;
  }
  const o = r;
  let f = o.__getInstance(e);
  if (f == null) {
    const c = Lr({}, t);
    if ("__i18n" in i) {
      c.__i18n = i.__i18n;
    }
    if (n) {
      c.__root = n;
    }
    f = HE(c);
    if (o.__composerExtend) {
      f[Ih] = o.__composerExtend(f);
    }
    fK(o, e, f);
    o.__setInstance(e, f);
  }
  return f;
}
function iK(t, e, r) {
  const n = aD();
  {
    const i = e ? n.run(() => Nh(t)) : n.run(() => HE(t));
    if (i == null) {
      throw hr(ur.UNEXPECTED_ERROR);
    }
    return [n, i];
  }
}
function sK(t) {
  {
    const e = Vs(t.isCE ? rK : t.appContext.app.__VUE_I18N_SYMBOL__);
    if (!e) {
      throw hr(t.isCE ? ur.NOT_INSTALLED_WITH_PROVIDE : ur.UNEXPECTED_ERROR);
    }
    return e;
  }
}
function aK(t, e) {
  if (hc(t)) {
    if ("__i18n" in e) {
      return "local";
    } else {
      return "global";
    }
  } else if (t.useScope) {
    return t.useScope;
  } else {
    return "local";
  }
}
function oK(t) {
  if (t.mode === "composition") {
    return t.global;
  } else {
    return t.global.__composer;
  }
}
function lK(t, e, r = false) {
  let n = null;
  const i = e.root;
  let s = uK(e, r);
  while (s != null) {
    const o = t;
    if (t.mode === "composition") {
      n = o.__getInstance(s);
    } else {
      const f = o.__getInstance(s);
      if (f != null) {
        n = f.__composer;
        if (r && n && !n[MS]) {
          n = null;
        }
      }
    }
    if (n != null || i === s) {
      break;
    }
    s = s.parent;
  }
  return n;
}
function uK(t, e = false) {
  if (t == null) {
    return null;
  } else {
    return e && t.vnode.ctx || t.parent;
  }
}
function fK(t, e, r) {
  NE(() => {}, e);
  PE(() => {
    const n = r;
    t.__deleteInstance(e);
    const i = n[Ih];
    if (i) {
      i();
      delete n[Ih];
    }
  }, e);
}
function cK(t, e, r, n = {}) {
  const i = e === "local";
  const s = yR(null);
  if (i && t.proxy && !t.proxy.$options.i18n && !t.proxy.$options.__i18n) {
    throw hr(ur.MUST_DEFINE_I18N_OPTION_IN_ALLOW_COMPOSITION);
  }
  const o = lt(n.inheritLocale) ? n.inheritLocale : !Ne(n.locale);
  const f = Ds(!i || o ? r.locale.value : Ne(n.locale) ? n.locale : Qa);
  const c = Ds(!i || o ? r.fallbackLocale.value : Ne(n.fallbackLocale) || Wt(n.fallbackLocale) || Ze(n.fallbackLocale) || n.fallbackLocale === false ? n.fallbackLocale : f.value);
  const p = Ds(gc(f.value, n));
  const d = Ds(Ze(n.datetimeFormats) ? n.datetimeFormats : {
    [f.value]: {}
  });
  const E = Ds(Ze(n.numberFormats) ? n.numberFormats : {
    [f.value]: {}
  });
  const m = i ? r.missingWarn : lt(n.missingWarn) || fs(n.missingWarn) ? n.missingWarn : true;
  const g = i ? r.fallbackWarn : lt(n.fallbackWarn) || fs(n.fallbackWarn) ? n.fallbackWarn : true;
  const T = i ? r.fallbackRoot : lt(n.fallbackRoot) ? n.fallbackRoot : true;
  const b = !!n.fallbackFormat;
  const x = kt(n.missing) ? n.missing : null;
  const A = kt(n.postTranslation) ? n.postTranslation : null;
  const R = i ? r.warnHtmlMessage : lt(n.warnHtmlMessage) ? n.warnHtmlMessage : true;
  const v = !!n.escapeParameter;
  const y = i ? r.modifiers : Ze(n.modifiers) ? n.modifiers : {};
  const U = n.pluralRules || i && r.pluralRules;
  function P() {
    return [f.value, c.value, p.value, d.value, E.value];
  }
  const M = gn({
    get: () => s.value ? s.value.locale.value : f.value,
    set: D => {
      if (s.value) {
        s.value.locale.value = D;
      }
      f.value = D;
    }
  });
  const X = gn({
    get: () => s.value ? s.value.fallbackLocale.value : c.value,
    set: D => {
      if (s.value) {
        s.value.fallbackLocale.value = D;
      }
      c.value = D;
    }
  });
  const N = gn(() => s.value ? s.value.messages.value : p.value);
  const ae = gn(() => d.value);
  const Q = gn(() => E.value);
  function V() {
    if (s.value) {
      return s.value.getPostTranslationHandler();
    } else {
      return A;
    }
  }
  function Y(D) {
    if (s.value) {
      s.value.setPostTranslationHandler(D);
    }
  }
  function k() {
    if (s.value) {
      return s.value.getMissingHandler();
    } else {
      return x;
    }
  }
  function w(D) {
    if (s.value) {
      s.value.setMissingHandler(D);
    }
  }
  function j(D) {
    P();
    return D();
  }
  function W(...D) {
    if (s.value) {
      return j(() => Reflect.apply(s.value.t, null, [...D]));
    } else {
      return j(() => "");
    }
  }
  function te(...D) {
    if (s.value) {
      return Reflect.apply(s.value.rt, null, [...D]);
    } else {
      return "";
    }
  }
  function ie(...D) {
    if (s.value) {
      return j(() => Reflect.apply(s.value.d, null, [...D]));
    } else {
      return j(() => "");
    }
  }
  function _e(...D) {
    if (s.value) {
      return j(() => Reflect.apply(s.value.n, null, [...D]));
    } else {
      return j(() => "");
    }
  }
  function ye(D) {
    if (s.value) {
      return s.value.tm(D);
    } else {
      return {};
    }
  }
  function Be(D, ne) {
    if (s.value) {
      return s.value.te(D, ne);
    } else {
      return false;
    }
  }
  function Le(D) {
    if (s.value) {
      return s.value.getLocaleMessage(D);
    } else {
      return {};
    }
  }
  function Ge(D, ne) {
    if (s.value) {
      s.value.setLocaleMessage(D, ne);
      p.value[D] = ne;
    }
  }
  function Rt(D, ne) {
    if (s.value) {
      s.value.mergeLocaleMessage(D, ne);
    }
  }
  function je(D) {
    if (s.value) {
      return s.value.getDateTimeFormat(D);
    } else {
      return {};
    }
  }
  function Et(D, ne) {
    if (s.value) {
      s.value.setDateTimeFormat(D, ne);
      d.value[D] = ne;
    }
  }
  function Ve(D, ne) {
    if (s.value) {
      s.value.mergeDateTimeFormat(D, ne);
    }
  }
  function ot(D) {
    if (s.value) {
      return s.value.getNumberFormat(D);
    } else {
      return {};
    }
  }
  function ft(D, ne) {
    if (s.value) {
      s.value.setNumberFormat(D, ne);
      E.value[D] = ne;
    }
  }
  function Ut(D, ne) {
    if (s.value) {
      s.value.mergeNumberFormat(D, ne);
    }
  }
  const $t = {
    get id() {
      if (s.value) {
        return s.value.id;
      } else {
        return -1;
      }
    },
    locale: M,
    fallbackLocale: X,
    messages: N,
    datetimeFormats: ae,
    numberFormats: Q,
    get inheritLocale() {
      if (s.value) {
        return s.value.inheritLocale;
      } else {
        return o;
      }
    },
    set inheritLocale(D) {
      if (s.value) {
        s.value.inheritLocale = D;
      }
    },
    get availableLocales() {
      if (s.value) {
        return s.value.availableLocales;
      } else {
        return Object.keys(p.value);
      }
    },
    get modifiers() {
      if (s.value) {
        return s.value.modifiers;
      } else {
        return y;
      }
    },
    get pluralRules() {
      if (s.value) {
        return s.value.pluralRules;
      } else {
        return U;
      }
    },
    get isGlobal() {
      if (s.value) {
        return s.value.isGlobal;
      } else {
        return false;
      }
    },
    get missingWarn() {
      if (s.value) {
        return s.value.missingWarn;
      } else {
        return m;
      }
    },
    set missingWarn(D) {
      if (s.value) {
        s.value.missingWarn = D;
      }
    },
    get fallbackWarn() {
      if (s.value) {
        return s.value.fallbackWarn;
      } else {
        return g;
      }
    },
    set fallbackWarn(D) {
      if (s.value) {
        s.value.missingWarn = D;
      }
    },
    get fallbackRoot() {
      if (s.value) {
        return s.value.fallbackRoot;
      } else {
        return T;
      }
    },
    set fallbackRoot(D) {
      if (s.value) {
        s.value.fallbackRoot = D;
      }
    },
    get fallbackFormat() {
      if (s.value) {
        return s.value.fallbackFormat;
      } else {
        return b;
      }
    },
    set fallbackFormat(D) {
      if (s.value) {
        s.value.fallbackFormat = D;
      }
    },
    get warnHtmlMessage() {
      if (s.value) {
        return s.value.warnHtmlMessage;
      } else {
        return R;
      }
    },
    set warnHtmlMessage(D) {
      if (s.value) {
        s.value.warnHtmlMessage = D;
      }
    },
    get escapeParameter() {
      if (s.value) {
        return s.value.escapeParameter;
      } else {
        return v;
      }
    },
    set escapeParameter(D) {
      if (s.value) {
        s.value.escapeParameter = D;
      }
    },
    t: W,
    getPostTranslationHandler: V,
    setPostTranslationHandler: Y,
    getMissingHandler: k,
    setMissingHandler: w,
    rt: te,
    d: ie,
    n: _e,
    tm: ye,
    te: Be,
    getLocaleMessage: Le,
    setLocaleMessage: Ge,
    mergeLocaleMessage: Rt,
    getDateTimeFormat: je,
    setDateTimeFormat: Et,
    mergeDateTimeFormat: Ve,
    getNumberFormat: ot,
    setNumberFormat: ft,
    mergeNumberFormat: Ut
  };
  function F(D) {
    D.locale.value = f.value;
    D.fallbackLocale.value = c.value;
    Object.keys(p.value).forEach(ne => {
      D.mergeLocaleMessage(ne, p.value[ne]);
    });
    Object.keys(d.value).forEach(ne => {
      D.mergeDateTimeFormat(ne, d.value[ne]);
    });
    Object.keys(E.value).forEach(ne => {
      D.mergeNumberFormat(ne, E.value[ne]);
    });
    D.escapeParameter = v;
    D.fallbackFormat = b;
    D.fallbackRoot = T;
    D.fallbackWarn = g;
    D.missingWarn = m;
    D.warnHtmlMessage = R;
  }
  DR(() => {
    if (t.proxy == null || t.proxy.$i18n == null) {
      throw hr(ur.NOT_AVAILABLE_COMPOSITION_IN_LEGACY);
    }
    const D = s.value = t.proxy.$i18n.__composer;
    if (e === "global") {
      f.value = D.locale.value;
      c.value = D.fallbackLocale.value;
      p.value = D.messages.value;
      d.value = D.datetimeFormats.value;
      E.value = D.numberFormats.value;
    } else if (i) {
      F(D);
    }
  });
  return $t;
}
const pK = ["locale", "fallbackLocale", "availableLocales"];
const bv = ["t", "rt", "d", "n", "tm", "te"];
function dK(t, e) {
  const r = Object.create(null);
  pK.forEach(i => {
    const s = Object.getOwnPropertyDescriptor(e, i);
    if (!s) {
      throw hr(ur.UNEXPECTED_ERROR);
    }
    const o = $r(s.value) ? {
      get() {
        return s.value.value;
      },
      set(f) {
        s.value.value = f;
      }
    } : {
      get() {
        return s.get && s.get();
      }
    };
    Object.defineProperty(r, i, o);
  });
  t.config.globalProperties.$i18n = r;
  bv.forEach(i => {
    const s = Object.getOwnPropertyDescriptor(e, i);
    if (!s || !s.value) {
      throw hr(ur.UNEXPECTED_ERROR);
    }
    Object.defineProperty(t.config.globalProperties, `$${i}`, s);
  });
  return () => {
    delete t.config.globalProperties.$i18n;
    bv.forEach(i => {
      delete t.config.globalProperties[`$${i}`];
    });
  };
}
F$();
if (__INTLIFY_JIT_COMPILATION__) {
  tv(M$);
} else {
  tv(B$);
}
w$(h$);
O$(RS);
function xv(t) {
  return t !== null && typeof t == "object" && "constructor" in t && t.constructor === Object;
}
function jE(t = {}, e = {}) {
  Object.keys(e).forEach(r => {
    if (typeof t[r] === "undefined") {
      t[r] = e[r];
    } else if (xv(e[r]) && xv(t[r]) && Object.keys(e[r]).length > 0) {
      jE(t[r], e[r]);
    }
  });
}
const GS = {
  body: {},
  addEventListener() {},
  removeEventListener() {},
  activeElement: {
    blur() {},
    nodeName: ""
  },
  querySelector() {
    return null;
  },
  querySelectorAll() {
    return [];
  },
  getElementById() {
    return null;
  },
  createEvent() {
    return {
      initEvent() {}
    };
  },
  createElement() {
    return {
      children: [],
      childNodes: [],
      style: {},
      setAttribute() {},
      getElementsByTagName() {
        return [];
      }
    };
  },
  createElementNS() {
    return {};
  },
  importNode() {
    return null;
  },
  location: {
    hash: "",
    host: "",
    hostname: "",
    href: "",
    origin: "",
    pathname: "",
    protocol: "",
    search: ""
  }
};
function Cr() {
  const t = typeof document !== "undefined" ? document : {};
  jE(t, GS);
  return t;
}
const hK = {
  document: GS,
  navigator: {
    userAgent: ""
  },
  location: {
    hash: "",
    host: "",
    hostname: "",
    href: "",
    origin: "",
    pathname: "",
    protocol: "",
    search: ""
  },
  history: {
    replaceState() {},
    pushState() {},
    go() {},
    back() {}
  },
  CustomEvent: function () {
    return this;
  },
  addEventListener() {},
  removeEventListener() {},
  getComputedStyle() {
    return {
      getPropertyValue() {
        return "";
      }
    };
  },
  Image() {},
  Date() {},
  screen: {},
  setTimeout() {},
  clearTimeout() {},
  matchMedia() {
    return {};
  },
  requestAnimationFrame(t) {
    if (typeof setTimeout === "undefined") {
      t();
      return null;
    } else {
      return setTimeout(t, 0);
    }
  },
  cancelAnimationFrame(t) {
    if (typeof setTimeout !== "undefined") {
      clearTimeout(t);
    }
  }
};
function Zt() {
  const t = typeof window !== "undefined" ? window : {};
  jE(t, hK);
  return t;
}
function EK(t) {
  const e = t;
  Object.keys(e).forEach(r => {
    try {
      e[r] = null;
    } catch {}
    try {
      delete e[r];
    } catch {}
  });
}
function js(t, e = 0) {
  return setTimeout(t, e);
}
function _n() {
  return Date.now();
}
function mK(t) {
  const e = Zt();
  let r;
  if (e.getComputedStyle) {
    r = e.getComputedStyle(t, null);
  }
  if (!r && t.currentStyle) {
    r = t.currentStyle;
  }
  r ||= t.style;
  return r;
}
function Ph(t, e = "x") {
  const r = Zt();
  let n;
  let i;
  let s;
  const o = mK(t);
  if (r.WebKitCSSMatrix) {
    i = o.transform || o.webkitTransform;
    if (i.split(",").length > 6) {
      i = i.split(", ").map(f => f.replace(",", ".")).join(", ");
    }
    s = new r.WebKitCSSMatrix(i === "none" ? "" : i);
  } else {
    s = o.MozTransform || o.OTransform || o.MsTransform || o.msTransform || o.transform || o.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,");
    n = s.toString().split(",");
  }
  if (e === "x") {
    if (r.WebKitCSSMatrix) {
      i = s.m41;
    } else if (n.length === 16) {
      i = parseFloat(n[12]);
    } else {
      i = parseFloat(n[4]);
    }
  }
  if (e === "y") {
    if (r.WebKitCSSMatrix) {
      i = s.m42;
    } else if (n.length === 16) {
      i = parseFloat(n[13]);
    } else {
      i = parseFloat(n[5]);
    }
  }
  return i || 0;
}
function zo(t) {
  return typeof t == "object" && t !== null && t.constructor && Object.prototype.toString.call(t).slice(8, -1) === "Object";
}
function gK(t) {
  if (typeof window !== "undefined" && typeof window.HTMLElement !== "undefined") {
    return t instanceof HTMLElement;
  } else {
    return t && (t.nodeType === 1 || t.nodeType === 11);
  }
}
function nn() {
  const t = Object(arguments.length <= 0 ? undefined : arguments[0]);
  const e = ["__proto__", "constructor", "prototype"];
  for (let r = 1; r < arguments.length; r += 1) {
    const n = r < 0 || arguments.length <= r ? undefined : arguments[r];
    if (n != null && !gK(n)) {
      const i = Object.keys(Object(n)).filter(s => e.indexOf(s) < 0);
      for (let s = 0, o = i.length; s < o; s += 1) {
        const f = i[s];
        const c = Object.getOwnPropertyDescriptor(n, f);
        if (c !== undefined && c.enumerable) {
          if (zo(t[f]) && zo(n[f])) {
            if (n[f].__swiper__) {
              t[f] = n[f];
            } else {
              nn(t[f], n[f]);
            }
          } else if (!zo(t[f]) && zo(n[f])) {
            t[f] = {};
            if (n[f].__swiper__) {
              t[f] = n[f];
            } else {
              nn(t[f], n[f]);
            }
          } else {
            t[f] = n[f];
          }
        }
      }
    }
  }
  return t;
}
function qo(t, e, r) {
  t.style.setProperty(e, r);
}
function VS(t) {
  let {
    swiper: e,
    targetPosition: r,
    side: n
  } = t;
  const i = Zt();
  const s = -e.translate;
  let o = null;
  let f;
  const c = e.params.speed;
  e.wrapperEl.style.scrollSnapType = "none";
  i.cancelAnimationFrame(e.cssModeFrameID);
  const p = r > s ? "next" : "prev";
  const d = (m, g) => p === "next" && m >= g || p === "prev" && m <= g;
  const E = () => {
    f = new Date().getTime();
    if (o === null) {
      o = f;
    }
    const m = Math.max(Math.min((f - o) / c, 1), 0);
    const g = 0.5 - Math.cos(m * Math.PI) / 2;
    let T = s + g * (r - s);
    if (d(T, r)) {
      T = r;
    }
    e.wrapperEl.scrollTo({
      [n]: T
    });
    if (d(T, r)) {
      e.wrapperEl.style.overflow = "hidden";
      e.wrapperEl.style.scrollSnapType = "";
      setTimeout(() => {
        e.wrapperEl.style.overflow = "";
        e.wrapperEl.scrollTo({
          [n]: T
        });
      });
      i.cancelAnimationFrame(e.cssModeFrameID);
      return;
    }
    e.cssModeFrameID = i.requestAnimationFrame(E);
  };
  E();
}
function Zs(t) {
  return t.querySelector(".swiper-slide-transform") || t.shadowRoot && t.shadowRoot.querySelector(".swiper-slide-transform") || t;
}
function br(t, e = "") {
  return [...t.children].filter(r => r.matches(e));
}
function Dn(t, e = []) {
  const r = document.createElement(t);
  r.classList.add(...(Array.isArray(e) ? e : [e]));
  return r;
}
function wf(t) {
  const e = Zt();
  const r = Cr();
  const n = t.getBoundingClientRect();
  const i = r.body;
  const s = t.clientTop || i.clientTop || 0;
  const o = t.clientLeft || i.clientLeft || 0;
  const f = t === e ? e.scrollY : t.scrollTop;
  const c = t === e ? e.scrollX : t.scrollLeft;
  return {
    top: n.top + f - s,
    left: n.left + c - o
  };
}
function _K(t, e) {
  const r = [];
  while (t.previousElementSibling) {
    const n = t.previousElementSibling;
    if (e) {
      if (n.matches(e)) {
        r.push(n);
      }
    } else {
      r.push(n);
    }
    t = n;
  }
  return r;
}
function TK(t, e) {
  const r = [];
  while (t.nextElementSibling) {
    const n = t.nextElementSibling;
    if (e) {
      if (n.matches(e)) {
        r.push(n);
      }
    } else {
      r.push(n);
    }
    t = n;
  }
  return r;
}
function Zi(t, e) {
  return Zt().getComputedStyle(t, null).getPropertyValue(e);
}
function Tl(t) {
  let e = t;
  let r;
  if (e) {
    for (r = 0; (e = e.previousSibling) !== null;) {
      if (e.nodeType === 1) {
        r += 1;
      }
    }
    return r;
  }
}
function Fs(t, e) {
  const r = [];
  let n = t.parentElement;
  while (n) {
    if (e) {
      if (n.matches(e)) {
        r.push(n);
      }
    } else {
      r.push(n);
    }
    n = n.parentElement;
  }
  return r;
}
function rl(t, e) {
  function r(n) {
    if (n.target === t) {
      e.call(t, n);
      t.removeEventListener("transitionend", r);
    }
  }
  if (e) {
    t.addEventListener("transitionend", r);
  }
}
function Uh(t, e, r) {
  const n = Zt();
  return t[e === "width" ? "offsetWidth" : "offsetHeight"] + parseFloat(n.getComputedStyle(t, null).getPropertyValue(e === "width" ? "margin-right" : "margin-top")) + parseFloat(n.getComputedStyle(t, null).getPropertyValue(e === "width" ? "margin-left" : "margin-bottom"));
}
let dd;
function vK() {
  const t = Zt();
  const e = Cr();
  return {
    smoothScroll: e.documentElement && e.documentElement.style && "scrollBehavior" in e.documentElement.style,
    touch: !!("ontouchstart" in t) || !!t.DocumentTouch && !!(e instanceof t.DocumentTouch)
  };
}
function FS() {
  dd ||= vK();
  return dd;
}
let hd;
function bK(t) {
  let {
    userAgent: e
  } = t === undefined ? {} : t;
  const r = FS();
  const n = Zt();
  const i = n.navigator.platform;
  const s = e || n.navigator.userAgent;
  const o = {
    ios: false,
    android: false
  };
  const f = n.screen.width;
  const c = n.screen.height;
  const p = s.match(/(Android);?[\s\/]+([\d.]+)?/);
  let d = s.match(/(iPad).*OS\s([\d_]+)/);
  const E = s.match(/(iPod)(.*OS\s([\d_]+))?/);
  const m = !d && s.match(/(iPhone\sOS|iOS)\s([\d_]+)/);
  const g = i === "Win32";
  let T = i === "MacIntel";
  const b = ["1024x1366", "1366x1024", "834x1194", "1194x834", "834x1112", "1112x834", "768x1024", "1024x768", "820x1180", "1180x820", "810x1080", "1080x810"];
  if (!d && T && r.touch && b.indexOf(`${f}x${c}`) >= 0) {
    d = s.match(/(Version)\/([\d.]+)/);
    d ||= [0, 1, "13_0_0"];
    T = false;
  }
  if (p && !g) {
    o.os = "android";
    o.android = true;
  }
  if (d || m || E) {
    o.os = "ios";
    o.ios = true;
  }
  return o;
}
function xK(t = {}) {
  hd ||= bK(t);
  return hd;
}
let Ed;
function RK() {
  const t = Zt();
  let e = false;
  function r() {
    const n = t.navigator.userAgent.toLowerCase();
    return n.indexOf("safari") >= 0 && n.indexOf("chrome") < 0 && n.indexOf("android") < 0;
  }
  if (r()) {
    const n = String(t.navigator.userAgent);
    if (n.includes("Version/")) {
      const [i, s] = n.split("Version/")[1].split(" ")[0].split(".").map(o => Number(o));
      e = i < 16 || i === 16 && s < 2;
    }
  }
  return {
    isSafari: e || r(),
    needPerspectiveFix: e,
    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(t.navigator.userAgent)
  };
}
function SK() {
  Ed ||= RK();
  return Ed;
}
function yK(t) {
  let {
    swiper: e,
    on: r,
    emit: n
  } = t;
  const i = Zt();
  let s = null;
  let o = null;
  const f = () => {
    if (!!e && !e.destroyed && !!e.initialized) {
      n("beforeResize");
      n("resize");
    }
  };
  const c = () => {
    if (!!e && !e.destroyed && !!e.initialized) {
      s = new ResizeObserver(E => {
        o = i.requestAnimationFrame(() => {
          const {
            width: m,
            height: g
          } = e;
          let T = m;
          let b = g;
          E.forEach(x => {
            let {
              contentBoxSize: A,
              contentRect: R,
              target: v
            } = x;
            if (!v || v === e.el) {
              T = R ? R.width : (A[0] || A).inlineSize;
              b = R ? R.height : (A[0] || A).blockSize;
            }
          });
          if (T !== m || b !== g) {
            f();
          }
        });
      });
      s.observe(e.el);
    }
  };
  const p = () => {
    if (o) {
      i.cancelAnimationFrame(o);
    }
    if (s && s.unobserve && e.el) {
      s.unobserve(e.el);
      s = null;
    }
  };
  const d = () => {
    if (!!e && !e.destroyed && !!e.initialized) {
      n("orientationchange");
    }
  };
  r("init", () => {
    if (e.params.resizeObserver && typeof i.ResizeObserver !== "undefined") {
      c();
      return;
    }
    i.addEventListener("resize", f);
    i.addEventListener("orientationchange", d);
  });
  r("destroy", () => {
    p();
    i.removeEventListener("resize", f);
    i.removeEventListener("orientationchange", d);
  });
}
function AK(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n,
    emit: i
  } = t;
  const s = [];
  const o = Zt();
  const f = function (d, E = {}) {
    const m = o.MutationObserver || o.WebkitMutationObserver;
    const g = new m(T => {
      if (e.__preventObserver__) {
        return;
      }
      if (T.length === 1) {
        i("observerUpdate", T[0]);
        return;
      }
      const b = function () {
        i("observerUpdate", T[0]);
      };
      if (o.requestAnimationFrame) {
        o.requestAnimationFrame(b);
      } else {
        o.setTimeout(b, 0);
      }
    });
    g.observe(d, {
      attributes: typeof E.attributes === "undefined" ? true : E.attributes,
      childList: typeof E.childList === "undefined" ? true : E.childList,
      characterData: typeof E.characterData === "undefined" ? true : E.characterData
    });
    s.push(g);
  };
  const c = () => {
    if (e.params.observer) {
      if (e.params.observeParents) {
        const d = Fs(e.hostEl);
        for (let E = 0; E < d.length; E += 1) {
          f(d[E]);
        }
      }
      f(e.hostEl, {
        childList: e.params.observeSlideChildren
      });
      f(e.wrapperEl, {
        attributes: false
      });
    }
  };
  const p = () => {
    s.forEach(d => {
      d.disconnect();
    });
    s.splice(0, s.length);
  };
  r({
    observer: false,
    observeParents: false,
    observeSlideChildren: false
  });
  n("init", c);
  n("destroy", p);
}
var LK = {
  on(t, e, r) {
    const n = this;
    if (!n.eventsListeners || n.destroyed || typeof e != "function") {
      return n;
    }
    const i = r ? "unshift" : "push";
    t.split(" ").forEach(s => {
      n.eventsListeners[s] ||= [];
      n.eventsListeners[s][i](e);
    });
    return n;
  },
  once(t, e, r) {
    const n = this;
    if (!n.eventsListeners || n.destroyed || typeof e != "function") {
      return n;
    }
    function i() {
      n.off(t, i);
      if (i.__emitterProxy) {
        delete i.__emitterProxy;
      }
      for (var s = arguments.length, o = new Array(s), f = 0; f < s; f++) {
        o[f] = arguments[f];
      }
      e.apply(n, o);
    }
    i.__emitterProxy = e;
    return n.on(t, i, r);
  },
  onAny(t, e) {
    const r = this;
    if (!r.eventsListeners || r.destroyed || typeof t != "function") {
      return r;
    }
    const n = e ? "unshift" : "push";
    if (r.eventsAnyListeners.indexOf(t) < 0) {
      r.eventsAnyListeners[n](t);
    }
    return r;
  },
  offAny(t) {
    const e = this;
    if (!e.eventsListeners || e.destroyed || !e.eventsAnyListeners) {
      return e;
    }
    const r = e.eventsAnyListeners.indexOf(t);
    if (r >= 0) {
      e.eventsAnyListeners.splice(r, 1);
    }
    return e;
  },
  off(t, e) {
    const r = this;
    if (!!r.eventsListeners && !r.destroyed && !!r.eventsListeners) {
      t.split(" ").forEach(n => {
        if (typeof e === "undefined") {
          r.eventsListeners[n] = [];
        } else if (r.eventsListeners[n]) {
          r.eventsListeners[n].forEach((i, s) => {
            if (i === e || i.__emitterProxy && i.__emitterProxy === e) {
              r.eventsListeners[n].splice(s, 1);
            }
          });
        }
      });
    }
    return r;
  },
  emit() {
    const t = this;
    if (!t.eventsListeners || t.destroyed || !t.eventsListeners) {
      return t;
    }
    let e;
    let r;
    let n;
    for (var i = arguments.length, s = new Array(i), o = 0; o < i; o++) {
      s[o] = arguments[o];
    }
    if (typeof s[0] == "string" || Array.isArray(s[0])) {
      e = s[0];
      r = s.slice(1, s.length);
      n = t;
    } else {
      e = s[0].events;
      r = s[0].data;
      n = s[0].context || t;
    }
    r.unshift(n);
    (Array.isArray(e) ? e : e.split(" ")).forEach(c => {
      if (t.eventsAnyListeners && t.eventsAnyListeners.length) {
        t.eventsAnyListeners.forEach(p => {
          p.apply(n, [c, ...r]);
        });
      }
      if (t.eventsListeners && t.eventsListeners[c]) {
        t.eventsListeners[c].forEach(p => {
          p.apply(n, r);
        });
      }
    });
    return t;
  }
};
function CK() {
  const t = this;
  let e;
  let r;
  const n = t.el;
  if (typeof t.params.width !== "undefined" && t.params.width !== null) {
    e = t.params.width;
  } else {
    e = n.clientWidth;
  }
  if (typeof t.params.height !== "undefined" && t.params.height !== null) {
    r = t.params.height;
  } else {
    r = n.clientHeight;
  }
  if ((e !== 0 || !t.isHorizontal()) && (r !== 0 || !t.isVertical())) {
    e = e - parseInt(Zi(n, "padding-left") || 0, 10) - parseInt(Zi(n, "padding-right") || 0, 10);
    r = r - parseInt(Zi(n, "padding-top") || 0, 10) - parseInt(Zi(n, "padding-bottom") || 0, 10);
    if (Number.isNaN(e)) {
      e = 0;
    }
    if (Number.isNaN(r)) {
      r = 0;
    }
    Object.assign(t, {
      width: e,
      height: r,
      size: t.isHorizontal() ? e : r
    });
  }
}
function wK() {
  const t = this;
  function e(Q) {
    if (t.isHorizontal()) {
      return Q;
    } else {
      return {
        width: "height",
        "margin-top": "margin-left",
        "margin-bottom ": "margin-right",
        "margin-left": "margin-top",
        "margin-right": "margin-bottom",
        "padding-left": "padding-top",
        "padding-right": "padding-bottom",
        marginRight: "marginBottom"
      }[Q];
    }
  }
  function r(Q, V) {
    return parseFloat(Q.getPropertyValue(e(V)) || 0);
  }
  const n = t.params;
  const {
    wrapperEl: i,
    slidesEl: s,
    size: o,
    rtlTranslate: f,
    wrongRTL: c
  } = t;
  const p = t.virtual && n.virtual.enabled;
  const d = p ? t.virtual.slides.length : t.slides.length;
  const E = br(s, `.${t.params.slideClass}, swiper-slide`);
  const m = p ? t.virtual.slides.length : E.length;
  let g = [];
  const T = [];
  const b = [];
  let x = n.slidesOffsetBefore;
  if (typeof x == "function") {
    x = n.slidesOffsetBefore.call(t);
  }
  let A = n.slidesOffsetAfter;
  if (typeof A == "function") {
    A = n.slidesOffsetAfter.call(t);
  }
  const R = t.snapGrid.length;
  const v = t.slidesGrid.length;
  let y = n.spaceBetween;
  let U = -x;
  let P = 0;
  let M = 0;
  if (typeof o === "undefined") {
    return;
  }
  if (typeof y == "string" && y.indexOf("%") >= 0) {
    y = parseFloat(y.replace("%", "")) / 100 * o;
  } else if (typeof y == "string") {
    y = parseFloat(y);
  }
  t.virtualSize = -y;
  E.forEach(Q => {
    if (f) {
      Q.style.marginLeft = "";
    } else {
      Q.style.marginRight = "";
    }
    Q.style.marginBottom = "";
    Q.style.marginTop = "";
  });
  if (n.centeredSlides && n.cssMode) {
    qo(i, "--swiper-centered-offset-before", "");
    qo(i, "--swiper-centered-offset-after", "");
  }
  const X = n.grid && n.grid.rows > 1 && t.grid;
  if (X) {
    t.grid.initSlides(m);
  }
  let N;
  const ae = n.slidesPerView === "auto" && n.breakpoints && Object.keys(n.breakpoints).filter(Q => typeof n.breakpoints[Q].slidesPerView !== "undefined").length > 0;
  for (let Q = 0; Q < m; Q += 1) {
    N = 0;
    let V;
    if (E[Q]) {
      V = E[Q];
    }
    if (X) {
      t.grid.updateSlide(Q, V, m, e);
    }
    if (!E[Q] || Zi(V, "display") !== "none") {
      if (n.slidesPerView === "auto") {
        if (ae) {
          E[Q].style[e("width")] = "";
        }
        const Y = getComputedStyle(V);
        const k = V.style.transform;
        const w = V.style.webkitTransform;
        if (k) {
          V.style.transform = "none";
        }
        if (w) {
          V.style.webkitTransform = "none";
        }
        if (n.roundLengths) {
          N = t.isHorizontal() ? Uh(V, "width") : Uh(V, "height");
        } else {
          const j = r(Y, "width");
          const W = r(Y, "padding-left");
          const te = r(Y, "padding-right");
          const ie = r(Y, "margin-left");
          const _e = r(Y, "margin-right");
          const ye = Y.getPropertyValue("box-sizing");
          if (ye && ye === "border-box") {
            N = j + ie + _e;
          } else {
            const {
              clientWidth: Be,
              offsetWidth: Le
            } = V;
            N = j + W + te + ie + _e + (Le - Be);
          }
        }
        if (k) {
          V.style.transform = k;
        }
        if (w) {
          V.style.webkitTransform = w;
        }
        if (n.roundLengths) {
          N = Math.floor(N);
        }
      } else {
        N = (o - (n.slidesPerView - 1) * y) / n.slidesPerView;
        if (n.roundLengths) {
          N = Math.floor(N);
        }
        if (E[Q]) {
          E[Q].style[e("width")] = `${N}px`;
        }
      }
      if (E[Q]) {
        E[Q].swiperSlideSize = N;
      }
      b.push(N);
      if (n.centeredSlides) {
        U = U + N / 2 + P / 2 + y;
        if (P === 0 && Q !== 0) {
          U = U - o / 2 - y;
        }
        if (Q === 0) {
          U = U - o / 2 - y;
        }
        if (Math.abs(U) < 1 / 1000) {
          U = 0;
        }
        if (n.roundLengths) {
          U = Math.floor(U);
        }
        if (M % n.slidesPerGroup === 0) {
          g.push(U);
        }
        T.push(U);
      } else {
        if (n.roundLengths) {
          U = Math.floor(U);
        }
        if ((M - Math.min(t.params.slidesPerGroupSkip, M)) % t.params.slidesPerGroup === 0) {
          g.push(U);
        }
        T.push(U);
        U = U + N + y;
      }
      t.virtualSize += N + y;
      P = N;
      M += 1;
    }
  }
  t.virtualSize = Math.max(t.virtualSize, o) + A;
  if (f && c && (n.effect === "slide" || n.effect === "coverflow")) {
    i.style.width = `${t.virtualSize + y}px`;
  }
  if (n.setWrapperSize) {
    i.style[e("width")] = `${t.virtualSize + y}px`;
  }
  if (X) {
    t.grid.updateWrapperSize(N, g, e);
  }
  if (!n.centeredSlides) {
    const Q = [];
    for (let V = 0; V < g.length; V += 1) {
      let Y = g[V];
      if (n.roundLengths) {
        Y = Math.floor(Y);
      }
      if (g[V] <= t.virtualSize - o) {
        Q.push(Y);
      }
    }
    g = Q;
    if (Math.floor(t.virtualSize - o) - Math.floor(g[g.length - 1]) > 1) {
      g.push(t.virtualSize - o);
    }
  }
  if (p && n.loop) {
    const Q = b[0] + y;
    if (n.slidesPerGroup > 1) {
      const V = Math.ceil((t.virtual.slidesBefore + t.virtual.slidesAfter) / n.slidesPerGroup);
      const Y = Q * n.slidesPerGroup;
      for (let k = 0; k < V; k += 1) {
        g.push(g[g.length - 1] + Y);
      }
    }
    for (let V = 0; V < t.virtual.slidesBefore + t.virtual.slidesAfter; V += 1) {
      if (n.slidesPerGroup === 1) {
        g.push(g[g.length - 1] + Q);
      }
      T.push(T[T.length - 1] + Q);
      t.virtualSize += Q;
    }
  }
  if (g.length === 0) {
    g = [0];
  }
  if (y !== 0) {
    const Q = t.isHorizontal() && f ? "marginLeft" : e("marginRight");
    E.filter((V, Y) => !n.cssMode || n.loop ? true : Y !== E.length - 1).forEach(V => {
      V.style[Q] = `${y}px`;
    });
  }
  if (n.centeredSlides && n.centeredSlidesBounds) {
    let Q = 0;
    b.forEach(Y => {
      Q += Y + (y || 0);
    });
    Q -= y;
    const V = Q - o;
    g = g.map(Y => Y <= 0 ? -x : Y > V ? V + A : Y);
  }
  if (n.centerInsufficientSlides) {
    let Q = 0;
    b.forEach(V => {
      Q += V + (y || 0);
    });
    Q -= y;
    if (Q < o) {
      const V = (o - Q) / 2;
      g.forEach((Y, k) => {
        g[k] = Y - V;
      });
      T.forEach((Y, k) => {
        T[k] = Y + V;
      });
    }
  }
  Object.assign(t, {
    slides: E,
    snapGrid: g,
    slidesGrid: T,
    slidesSizesGrid: b
  });
  if (n.centeredSlides && n.cssMode && !n.centeredSlidesBounds) {
    qo(i, "--swiper-centered-offset-before", `${-g[0]}px`);
    qo(i, "--swiper-centered-offset-after", `${t.size / 2 - b[b.length - 1] / 2}px`);
    const Q = -t.snapGrid[0];
    const V = -t.slidesGrid[0];
    t.snapGrid = t.snapGrid.map(Y => Y + Q);
    t.slidesGrid = t.slidesGrid.map(Y => Y + V);
  }
  if (m !== d) {
    t.emit("slidesLengthChange");
  }
  if (g.length !== R) {
    if (t.params.watchOverflow) {
      t.checkOverflow();
    }
    t.emit("snapGridLengthChange");
  }
  if (T.length !== v) {
    t.emit("slidesGridLengthChange");
  }
  if (n.watchSlidesProgress) {
    t.updateSlidesOffset();
  }
  if (!p && !n.cssMode && (n.effect === "slide" || n.effect === "fade")) {
    const Q = `${n.containerModifierClass}backface-hidden`;
    const V = t.el.classList.contains(Q);
    if (m <= n.maxBackfaceHiddenSlides) {
      if (!V) {
        t.el.classList.add(Q);
      }
    } else if (V) {
      t.el.classList.remove(Q);
    }
  }
}
function OK(t) {
  const e = this;
  const r = [];
  const n = e.virtual && e.params.virtual.enabled;
  let i = 0;
  let s;
  if (typeof t == "number") {
    e.setTransition(t);
  } else if (t === true) {
    e.setTransition(e.params.speed);
  }
  const o = f => n ? e.slides[e.getSlideIndexByData(f)] : e.slides[f];
  if (e.params.slidesPerView !== "auto" && e.params.slidesPerView > 1) {
    if (e.params.centeredSlides) {
      (e.visibleSlides || []).forEach(f => {
        r.push(f);
      });
    } else {
      for (s = 0; s < Math.ceil(e.params.slidesPerView); s += 1) {
        const f = e.activeIndex + s;
        if (f > e.slides.length && !n) {
          break;
        }
        r.push(o(f));
      }
    }
  } else {
    r.push(o(e.activeIndex));
  }
  for (s = 0; s < r.length; s += 1) {
    if (typeof r[s] !== "undefined") {
      const f = r[s].offsetHeight;
      i = f > i ? f : i;
    }
  }
  if (i || i === 0) {
    e.wrapperEl.style.height = `${i}px`;
  }
}
function IK() {
  const t = this;
  const e = t.slides;
  const r = t.isElement ? t.isHorizontal() ? t.wrapperEl.offsetLeft : t.wrapperEl.offsetTop : 0;
  for (let n = 0; n < e.length; n += 1) {
    e[n].swiperSlideOffset = (t.isHorizontal() ? e[n].offsetLeft : e[n].offsetTop) - r - t.cssOverflowAdjustment();
  }
}
function NK(t = this && this.translate || 0) {
  const e = this;
  const r = e.params;
  const {
    slides: n,
    rtlTranslate: i,
    snapGrid: s
  } = e;
  if (n.length === 0) {
    return;
  }
  if (typeof n[0].swiperSlideOffset === "undefined") {
    e.updateSlidesOffset();
  }
  let o = -t;
  if (i) {
    o = t;
  }
  n.forEach(c => {
    c.classList.remove(r.slideVisibleClass);
  });
  e.visibleSlidesIndexes = [];
  e.visibleSlides = [];
  let f = r.spaceBetween;
  if (typeof f == "string" && f.indexOf("%") >= 0) {
    f = parseFloat(f.replace("%", "")) / 100 * e.size;
  } else if (typeof f == "string") {
    f = parseFloat(f);
  }
  for (let c = 0; c < n.length; c += 1) {
    const p = n[c];
    let d = p.swiperSlideOffset;
    if (r.cssMode && r.centeredSlides) {
      d -= n[0].swiperSlideOffset;
    }
    const E = (o + (r.centeredSlides ? e.minTranslate() : 0) - d) / (p.swiperSlideSize + f);
    const m = (o - s[0] + (r.centeredSlides ? e.minTranslate() : 0) - d) / (p.swiperSlideSize + f);
    const g = -(o - d);
    const T = g + e.slidesSizesGrid[c];
    if (g >= 0 && g < e.size - 1 || T > 1 && T <= e.size || g <= 0 && T >= e.size) {
      e.visibleSlides.push(p);
      e.visibleSlidesIndexes.push(c);
      n[c].classList.add(r.slideVisibleClass);
    }
    p.progress = i ? -E : E;
    p.originalProgress = i ? -m : m;
  }
}
function PK(t) {
  const e = this;
  if (typeof t === "undefined") {
    const d = e.rtlTranslate ? -1 : 1;
    t = e && e.translate && e.translate * d || 0;
  }
  const r = e.params;
  const n = e.maxTranslate() - e.minTranslate();
  let {
    progress: i,
    isBeginning: s,
    isEnd: o,
    progressLoop: f
  } = e;
  const c = s;
  const p = o;
  if (n === 0) {
    i = 0;
    s = true;
    o = true;
  } else {
    i = (t - e.minTranslate()) / n;
    const d = Math.abs(t - e.minTranslate()) < 1;
    const E = Math.abs(t - e.maxTranslate()) < 1;
    s = d || i <= 0;
    o = E || i >= 1;
    if (d) {
      i = 0;
    }
    if (E) {
      i = 1;
    }
  }
  if (r.loop) {
    const d = e.getSlideIndexByData(0);
    const E = e.getSlideIndexByData(e.slides.length - 1);
    const m = e.slidesGrid[d];
    const g = e.slidesGrid[E];
    const T = e.slidesGrid[e.slidesGrid.length - 1];
    const b = Math.abs(t);
    if (b >= m) {
      f = (b - m) / T;
    } else {
      f = (b + T - g) / T;
    }
    if (f > 1) {
      f -= 1;
    }
  }
  Object.assign(e, {
    progress: i,
    progressLoop: f,
    isBeginning: s,
    isEnd: o
  });
  if (r.watchSlidesProgress || r.centeredSlides && r.autoHeight) {
    e.updateSlidesProgress(t);
  }
  if (s && !c) {
    e.emit("reachBeginning toEdge");
  }
  if (o && !p) {
    e.emit("reachEnd toEdge");
  }
  if (c && !s || p && !o) {
    e.emit("fromEdge");
  }
  e.emit("progress", i);
}
function UK() {
  const t = this;
  const {
    slides: e,
    params: r,
    slidesEl: n,
    activeIndex: i
  } = t;
  const s = t.virtual && r.virtual.enabled;
  const o = c => br(n, `.${r.slideClass}${c}, swiper-slide${c}`)[0];
  e.forEach(c => {
    c.classList.remove(r.slideActiveClass, r.slideNextClass, r.slidePrevClass);
  });
  let f;
  if (s) {
    if (r.loop) {
      let c = i - t.virtual.slidesBefore;
      if (c < 0) {
        c = t.virtual.slides.length + c;
      }
      if (c >= t.virtual.slides.length) {
        c -= t.virtual.slides.length;
      }
      f = o(`[data-swiper-slide-index="${c}"]`);
    } else {
      f = o(`[data-swiper-slide-index="${i}"]`);
    }
  } else {
    f = e[i];
  }
  if (f) {
    f.classList.add(r.slideActiveClass);
    let c = TK(f, `.${r.slideClass}, swiper-slide`)[0];
    if (r.loop && !c) {
      c = e[0];
    }
    if (c) {
      c.classList.add(r.slideNextClass);
    }
    let p = _K(f, `.${r.slideClass}, swiper-slide`)[0];
    if (r.loop && !p === 0) {
      p = e[e.length - 1];
    }
    if (p) {
      p.classList.add(r.slidePrevClass);
    }
  }
  t.emitSlidesClasses();
}
const lf = (t, e) => {
  if (!t || t.destroyed || !t.params) {
    return;
  }
  const r = () => t.isElement ? "swiper-slide" : `.${t.params.slideClass}`;
  const n = e.closest(r());
  if (n) {
    let i = n.querySelector(`.${t.params.lazyPreloaderClass}`);
    if (!i && t.isElement) {
      if (n.shadowRoot) {
        i = n.shadowRoot.querySelector(`.${t.params.lazyPreloaderClass}`);
      } else {
        requestAnimationFrame(() => {
          if (n.shadowRoot) {
            i = n.shadowRoot.querySelector(`.${t.params.lazyPreloaderClass}`);
            if (i) {
              i.remove();
            }
          }
        });
      }
    }
    if (i) {
      i.remove();
    }
  }
};
const md = (t, e) => {
  if (!t.slides[e]) {
    return;
  }
  const r = t.slides[e].querySelector("[loading=\"lazy\"]");
  if (r) {
    r.removeAttribute("loading");
  }
};
const Dh = t => {
  if (!t || t.destroyed || !t.params) {
    return;
  }
  let e = t.params.lazyPreloadPrevNext;
  const r = t.slides.length;
  if (!r || !e || e < 0) {
    return;
  }
  e = Math.min(e, r);
  const n = t.params.slidesPerView === "auto" ? t.slidesPerViewDynamic() : Math.ceil(t.params.slidesPerView);
  const i = t.activeIndex;
  if (t.params.grid && t.params.grid.rows > 1) {
    const o = i;
    const f = [o - e];
    f.push(...Array.from({
      length: e
    }).map((c, p) => o + n + p));
    t.slides.forEach((c, p) => {
      if (f.includes(c.column)) {
        md(t, p);
      }
    });
    return;
  }
  const s = i + n - 1;
  if (t.params.rewind || t.params.loop) {
    for (let o = i - e; o <= s + e; o += 1) {
      const f = (o % r + r) % r;
      if (f < i || f > s) {
        md(t, f);
      }
    }
  } else {
    for (let o = Math.max(i - e, 0); o <= Math.min(s + e, r - 1); o += 1) {
      if (o !== i && (o > s || o < i)) {
        md(t, o);
      }
    }
  }
};
function DK(t) {
  const {
    slidesGrid: e,
    params: r
  } = t;
  const n = t.rtlTranslate ? t.translate : -t.translate;
  let i;
  for (let s = 0; s < e.length; s += 1) {
    if (typeof e[s + 1] !== "undefined") {
      if (n >= e[s] && n < e[s + 1] - (e[s + 1] - e[s]) / 2) {
        i = s;
      } else if (n >= e[s] && n < e[s + 1]) {
        i = s + 1;
      }
    } else if (n >= e[s]) {
      i = s;
    }
  }
  if (r.normalizeSlideIndex && (i < 0 || typeof i === "undefined")) {
    i = 0;
  }
  return i;
}
function BK(t) {
  const e = this;
  const r = e.rtlTranslate ? e.translate : -e.translate;
  const {
    snapGrid: n,
    params: i,
    activeIndex: s,
    realIndex: o,
    snapIndex: f
  } = e;
  let c = t;
  let p;
  const d = m => {
    let g = m - e.virtual.slidesBefore;
    if (g < 0) {
      g = e.virtual.slides.length + g;
    }
    if (g >= e.virtual.slides.length) {
      g -= e.virtual.slides.length;
    }
    return g;
  };
  if (typeof c === "undefined") {
    c = DK(e);
  }
  if (n.indexOf(r) >= 0) {
    p = n.indexOf(r);
  } else {
    const m = Math.min(i.slidesPerGroupSkip, c);
    p = m + Math.floor((c - m) / i.slidesPerGroup);
  }
  if (p >= n.length) {
    p = n.length - 1;
  }
  if (c === s) {
    if (p !== f) {
      e.snapIndex = p;
      e.emit("snapIndexChange");
    }
    if (e.params.loop && e.virtual && e.params.virtual.enabled) {
      e.realIndex = d(c);
    }
    return;
  }
  let E;
  if (e.virtual && i.virtual.enabled && i.loop) {
    E = d(c);
  } else if (e.slides[c]) {
    E = parseInt(e.slides[c].getAttribute("data-swiper-slide-index") || c, 10);
  } else {
    E = c;
  }
  Object.assign(e, {
    previousSnapIndex: f,
    snapIndex: p,
    previousRealIndex: o,
    realIndex: E,
    previousIndex: s,
    activeIndex: c
  });
  if (e.initialized) {
    Dh(e);
  }
  e.emit("activeIndexChange");
  e.emit("snapIndexChange");
  if (e.initialized || e.params.runCallbacksOnInit) {
    if (o !== E) {
      e.emit("realIndexChange");
    }
    e.emit("slideChange");
  }
}
function MK(t, e) {
  const r = this;
  const n = r.params;
  let i = t.closest(`.${n.slideClass}, swiper-slide`);
  if (!i && r.isElement && e && e.length > 1 && e.includes(t)) {
    [...e.slice(e.indexOf(t) + 1, e.length)].forEach(f => {
      if (!i && f.matches && f.matches(`.${n.slideClass}, swiper-slide`)) {
        i = f;
      }
    });
  }
  let s = false;
  let o;
  if (i) {
    for (let f = 0; f < r.slides.length; f += 1) {
      if (r.slides[f] === i) {
        s = true;
        o = f;
        break;
      }
    }
  }
  if (i && s) {
    r.clickedSlide = i;
    if (r.virtual && r.params.virtual.enabled) {
      r.clickedIndex = parseInt(i.getAttribute("data-swiper-slide-index"), 10);
    } else {
      r.clickedIndex = o;
    }
  } else {
    r.clickedSlide = undefined;
    r.clickedIndex = undefined;
    return;
  }
  if (n.slideToClickedSlide && r.clickedIndex !== undefined && r.clickedIndex !== r.activeIndex) {
    r.slideToClickedSlide();
  }
}
var $K = {
  updateSize: CK,
  updateSlides: wK,
  updateAutoHeight: OK,
  updateSlidesOffset: IK,
  updateSlidesProgress: NK,
  updateProgress: PK,
  updateSlidesClasses: UK,
  updateActiveIndex: BK,
  updateClickedSlide: MK
};
function KK(t = this.isHorizontal() ? "x" : "y") {
  const e = this;
  const {
    params: r,
    rtlTranslate: n,
    translate: i,
    wrapperEl: s
  } = e;
  if (r.virtualTranslate) {
    if (n) {
      return -i;
    } else {
      return i;
    }
  }
  if (r.cssMode) {
    return i;
  }
  let o = Ph(s, t);
  o += e.cssOverflowAdjustment();
  if (n) {
    o = -o;
  }
  return o || 0;
}
function kK(t, e) {
  const r = this;
  const {
    rtlTranslate: n,
    params: i,
    wrapperEl: s,
    progress: o
  } = r;
  let f = 0;
  let c = 0;
  const p = 0;
  if (r.isHorizontal()) {
    f = n ? -t : t;
  } else {
    c = t;
  }
  if (i.roundLengths) {
    f = Math.floor(f);
    c = Math.floor(c);
  }
  r.previousTranslate = r.translate;
  r.translate = r.isHorizontal() ? f : c;
  if (i.cssMode) {
    s[r.isHorizontal() ? "scrollLeft" : "scrollTop"] = r.isHorizontal() ? -f : -c;
  } else if (!i.virtualTranslate) {
    if (r.isHorizontal()) {
      f -= r.cssOverflowAdjustment();
    } else {
      c -= r.cssOverflowAdjustment();
    }
    s.style.transform = `translate3d(${f}px, ${c}px, ${p}px)`;
  }
  let d;
  const E = r.maxTranslate() - r.minTranslate();
  if (E === 0) {
    d = 0;
  } else {
    d = (t - r.minTranslate()) / E;
  }
  if (d !== o) {
    r.updateProgress(t);
  }
  r.emit("setTranslate", r.translate, e);
}
function GK() {
  return -this.snapGrid[0];
}
function VK() {
  return -this.snapGrid[this.snapGrid.length - 1];
}
function FK(t = 0, e = this.params.speed, r = true, n = true, i) {
  const s = this;
  const {
    params: o,
    wrapperEl: f
  } = s;
  if (s.animating && o.preventInteractionOnTransition) {
    return false;
  }
  const c = s.minTranslate();
  const p = s.maxTranslate();
  let d;
  if (n && t > c) {
    d = c;
  } else if (n && t < p) {
    d = p;
  } else {
    d = t;
  }
  s.updateProgress(d);
  if (o.cssMode) {
    const E = s.isHorizontal();
    if (e === 0) {
      f[E ? "scrollLeft" : "scrollTop"] = -d;
    } else {
      if (!s.support.smoothScroll) {
        VS({
          swiper: s,
          targetPosition: -d,
          side: E ? "left" : "top"
        });
        return true;
      }
      f.scrollTo({
        [E ? "left" : "top"]: -d,
        behavior: "smooth"
      });
    }
    return true;
  }
  if (e === 0) {
    s.setTransition(0);
    s.setTranslate(d);
    if (r) {
      s.emit("beforeTransitionStart", e, i);
      s.emit("transitionEnd");
    }
  } else {
    s.setTransition(e);
    s.setTranslate(d);
    if (r) {
      s.emit("beforeTransitionStart", e, i);
      s.emit("transitionStart");
    }
    if (!s.animating) {
      s.animating = true;
      s.onTranslateToWrapperTransitionEnd ||= function (m) {
        if (!!s && !s.destroyed) {
          if (m.target === this) {
            s.wrapperEl.removeEventListener("transitionend", s.onTranslateToWrapperTransitionEnd);
            s.onTranslateToWrapperTransitionEnd = null;
            delete s.onTranslateToWrapperTransitionEnd;
            if (r) {
              s.emit("transitionEnd");
            }
          }
        }
      };
      s.wrapperEl.addEventListener("transitionend", s.onTranslateToWrapperTransitionEnd);
    }
  }
  return true;
}
var HK = {
  getTranslate: KK,
  setTranslate: kK,
  minTranslate: GK,
  maxTranslate: VK,
  translateTo: FK
};
function WK(t, e) {
  const r = this;
  if (!r.params.cssMode) {
    r.wrapperEl.style.transitionDuration = `${t}ms`;
    r.wrapperEl.style.transitionDelay = t === 0 ? "0ms" : "";
  }
  r.emit("setTransition", t, e);
}
function HS(t) {
  let {
    swiper: e,
    runCallbacks: r,
    direction: n,
    step: i
  } = t;
  const {
    activeIndex: s,
    previousIndex: o
  } = e;
  let f = n;
  if (!f) {
    if (s > o) {
      f = "next";
    } else if (s < o) {
      f = "prev";
    } else {
      f = "reset";
    }
  }
  e.emit(`transition${i}`);
  if (r && s !== o) {
    if (f === "reset") {
      e.emit(`slideResetTransition${i}`);
      return;
    }
    e.emit(`slideChangeTransition${i}`);
    if (f === "next") {
      e.emit(`slideNextTransition${i}`);
    } else {
      e.emit(`slidePrevTransition${i}`);
    }
  }
}
function XK(t = true, e) {
  const r = this;
  const {
    params: n
  } = r;
  if (!n.cssMode) {
    if (n.autoHeight) {
      r.updateAutoHeight();
    }
    HS({
      swiper: r,
      runCallbacks: t,
      direction: e,
      step: "Start"
    });
  }
}
function jK(t = true, e) {
  const r = this;
  const {
    params: n
  } = r;
  r.animating = false;
  if (!n.cssMode) {
    r.setTransition(0);
    HS({
      swiper: r,
      runCallbacks: t,
      direction: e,
      step: "End"
    });
  }
}
var zK = {
  setTransition: WK,
  transitionStart: XK,
  transitionEnd: jK
};
function qK(t = 0, e = this.params.speed, r = true, n, i) {
  if (typeof t == "string") {
    t = parseInt(t, 10);
  }
  const s = this;
  let o = t;
  if (o < 0) {
    o = 0;
  }
  const {
    params: f,
    snapGrid: c,
    slidesGrid: p,
    previousIndex: d,
    activeIndex: E,
    rtlTranslate: m,
    wrapperEl: g,
    enabled: T
  } = s;
  if (s.animating && f.preventInteractionOnTransition || !T && !n && !i) {
    return false;
  }
  const b = Math.min(s.params.slidesPerGroupSkip, o);
  let x = b + Math.floor((o - b) / s.params.slidesPerGroup);
  if (x >= c.length) {
    x = c.length - 1;
  }
  const A = -c[x];
  if (f.normalizeSlideIndex) {
    for (let v = 0; v < p.length; v += 1) {
      const y = -Math.floor(A * 100);
      const U = Math.floor(p[v] * 100);
      const P = Math.floor(p[v + 1] * 100);
      if (typeof p[v + 1] !== "undefined") {
        if (y >= U && y < P - (P - U) / 2) {
          o = v;
        } else if (y >= U && y < P) {
          o = v + 1;
        }
      } else if (y >= U) {
        o = v;
      }
    }
  }
  if (s.initialized && o !== E && (!s.allowSlideNext && (m ? A > s.translate && A > s.minTranslate() : A < s.translate && A < s.minTranslate()) || !s.allowSlidePrev && A > s.translate && A > s.maxTranslate() && (E || 0) !== o)) {
    return false;
  }
  if (o !== (d || 0) && r) {
    s.emit("beforeSlideChangeStart");
  }
  s.updateProgress(A);
  let R;
  if (o > E) {
    R = "next";
  } else if (o < E) {
    R = "prev";
  } else {
    R = "reset";
  }
  if (m && -A === s.translate || !m && A === s.translate) {
    s.updateActiveIndex(o);
    if (f.autoHeight) {
      s.updateAutoHeight();
    }
    s.updateSlidesClasses();
    if (f.effect !== "slide") {
      s.setTranslate(A);
    }
    if (R !== "reset") {
      s.transitionStart(r, R);
      s.transitionEnd(r, R);
    }
    return false;
  }
  if (f.cssMode) {
    const v = s.isHorizontal();
    const y = m ? A : -A;
    if (e === 0) {
      const U = s.virtual && s.params.virtual.enabled;
      if (U) {
        s.wrapperEl.style.scrollSnapType = "none";
        s._immediateVirtual = true;
      }
      if (U && !s._cssModeVirtualInitialSet && s.params.initialSlide > 0) {
        s._cssModeVirtualInitialSet = true;
        requestAnimationFrame(() => {
          g[v ? "scrollLeft" : "scrollTop"] = y;
        });
      } else {
        g[v ? "scrollLeft" : "scrollTop"] = y;
      }
      if (U) {
        requestAnimationFrame(() => {
          s.wrapperEl.style.scrollSnapType = "";
          s._immediateVirtual = false;
        });
      }
    } else {
      if (!s.support.smoothScroll) {
        VS({
          swiper: s,
          targetPosition: y,
          side: v ? "left" : "top"
        });
        return true;
      }
      g.scrollTo({
        [v ? "left" : "top"]: y,
        behavior: "smooth"
      });
    }
    return true;
  }
  s.setTransition(e);
  s.setTranslate(A);
  s.updateActiveIndex(o);
  s.updateSlidesClasses();
  s.emit("beforeTransitionStart", e, n);
  s.transitionStart(r, R);
  if (e === 0) {
    s.transitionEnd(r, R);
  } else if (!s.animating) {
    s.animating = true;
    s.onSlideToWrapperTransitionEnd ||= function (y) {
      if (!!s && !s.destroyed) {
        if (y.target === this) {
          s.wrapperEl.removeEventListener("transitionend", s.onSlideToWrapperTransitionEnd);
          s.onSlideToWrapperTransitionEnd = null;
          delete s.onSlideToWrapperTransitionEnd;
          s.transitionEnd(r, R);
        }
      }
    };
    s.wrapperEl.addEventListener("transitionend", s.onSlideToWrapperTransitionEnd);
  }
  return true;
}
function YK(t = 0, e = this.params.speed, r = true, n) {
  if (typeof t == "string") {
    t = parseInt(t, 10);
  }
  const i = this;
  let s = t;
  if (i.params.loop) {
    if (i.virtual && i.params.virtual.enabled) {
      s = s + i.virtual.slidesBefore;
    } else {
      s = i.getSlideIndexByData(s);
    }
  }
  return i.slideTo(s, e, r, n);
}
function JK(t = this.params.speed, e = true, r) {
  const n = this;
  const {
    enabled: i,
    params: s,
    animating: o
  } = n;
  if (!i) {
    return n;
  }
  let f = s.slidesPerGroup;
  if (s.slidesPerView === "auto" && s.slidesPerGroup === 1 && s.slidesPerGroupAuto) {
    f = Math.max(n.slidesPerViewDynamic("current", true), 1);
  }
  const c = n.activeIndex < s.slidesPerGroupSkip ? 1 : f;
  const p = n.virtual && s.virtual.enabled;
  if (s.loop) {
    if (o && !p && s.loopPreventsSliding) {
      return false;
    }
    n.loopFix({
      direction: "next"
    });
    n._clientLeft = n.wrapperEl.clientLeft;
    if (n.activeIndex === n.slides.length - 1 && s.cssMode) {
      requestAnimationFrame(() => {
        n.slideTo(n.activeIndex + c, t, e, r);
      });
      return true;
    }
  }
  if (s.rewind && n.isEnd) {
    return n.slideTo(0, t, e, r);
  } else {
    return n.slideTo(n.activeIndex + c, t, e, r);
  }
}
function ZK(t = this.params.speed, e = true, r) {
  const n = this;
  const {
    params: i,
    snapGrid: s,
    slidesGrid: o,
    rtlTranslate: f,
    enabled: c,
    animating: p
  } = n;
  if (!c) {
    return n;
  }
  const d = n.virtual && i.virtual.enabled;
  if (i.loop) {
    if (p && !d && i.loopPreventsSliding) {
      return false;
    }
    n.loopFix({
      direction: "prev"
    });
    n._clientLeft = n.wrapperEl.clientLeft;
  }
  const E = f ? n.translate : -n.translate;
  function m(A) {
    if (A < 0) {
      return -Math.floor(Math.abs(A));
    } else {
      return Math.floor(A);
    }
  }
  const g = m(E);
  const T = s.map(A => m(A));
  let b = s[T.indexOf(g) - 1];
  if (typeof b === "undefined" && i.cssMode) {
    let A;
    s.forEach((R, v) => {
      if (g >= R) {
        A = v;
      }
    });
    if (typeof A !== "undefined") {
      b = s[A > 0 ? A - 1 : A];
    }
  }
  let x = 0;
  if (typeof b !== "undefined") {
    x = o.indexOf(b);
    if (x < 0) {
      x = n.activeIndex - 1;
    }
    if (i.slidesPerView === "auto" && i.slidesPerGroup === 1 && i.slidesPerGroupAuto) {
      x = x - n.slidesPerViewDynamic("previous", true) + 1;
      x = Math.max(x, 0);
    }
  }
  if (i.rewind && n.isBeginning) {
    const A = n.params.virtual && n.params.virtual.enabled && n.virtual ? n.virtual.slides.length - 1 : n.slides.length - 1;
    return n.slideTo(A, t, e, r);
  } else if (i.loop && n.activeIndex === 0 && i.cssMode) {
    requestAnimationFrame(() => {
      n.slideTo(x, t, e, r);
    });
    return true;
  }
  return n.slideTo(x, t, e, r);
}
function QK(t = this.params.speed, e = true, r) {
  const n = this;
  return n.slideTo(n.activeIndex, t, e, r);
}
function ek(t = this.params.speed, e = true, r, n = 0.5) {
  const i = this;
  let s = i.activeIndex;
  const o = Math.min(i.params.slidesPerGroupSkip, s);
  const f = o + Math.floor((s - o) / i.params.slidesPerGroup);
  const c = i.rtlTranslate ? i.translate : -i.translate;
  if (c >= i.snapGrid[f]) {
    const p = i.snapGrid[f];
    const d = i.snapGrid[f + 1];
    if (c - p > (d - p) * n) {
      s += i.params.slidesPerGroup;
    }
  } else {
    const p = i.snapGrid[f - 1];
    const d = i.snapGrid[f];
    if (c - p <= (d - p) * n) {
      s -= i.params.slidesPerGroup;
    }
  }
  s = Math.max(s, 0);
  s = Math.min(s, i.slidesGrid.length - 1);
  return i.slideTo(s, t, e, r);
}
function tk() {
  const t = this;
  const {
    params: e,
    slidesEl: r
  } = t;
  const n = e.slidesPerView === "auto" ? t.slidesPerViewDynamic() : e.slidesPerView;
  let i = t.clickedIndex;
  let s;
  const o = t.isElement ? "swiper-slide" : `.${e.slideClass}`;
  if (e.loop) {
    if (t.animating) {
      return;
    }
    s = parseInt(t.clickedSlide.getAttribute("data-swiper-slide-index"), 10);
    if (e.centeredSlides) {
      if (i < t.loopedSlides - n / 2 || i > t.slides.length - t.loopedSlides + n / 2) {
        t.loopFix();
        i = t.getSlideIndex(br(r, `${o}[data-swiper-slide-index="${s}"]`)[0]);
        js(() => {
          t.slideTo(i);
        });
      } else {
        t.slideTo(i);
      }
    } else if (i > t.slides.length - n) {
      t.loopFix();
      i = t.getSlideIndex(br(r, `${o}[data-swiper-slide-index="${s}"]`)[0]);
      js(() => {
        t.slideTo(i);
      });
    } else {
      t.slideTo(i);
    }
  } else {
    t.slideTo(i);
  }
}
var rk = {
  slideTo: qK,
  slideToLoop: YK,
  slideNext: JK,
  slidePrev: ZK,
  slideReset: QK,
  slideToClosest: ek,
  slideToClickedSlide: tk
};
function nk(t) {
  const e = this;
  const {
    params: r,
    slidesEl: n
  } = e;
  if (!r.loop || e.virtual && e.params.virtual.enabled) {
    return;
  }
  br(n, `.${r.slideClass}, swiper-slide`).forEach((s, o) => {
    s.setAttribute("data-swiper-slide-index", o);
  });
  e.loopFix({
    slideRealIndex: t,
    direction: r.centeredSlides ? undefined : "next"
  });
}
function ik(t) {
  let {
    slideRealIndex: e,
    slideTo: r = true,
    direction: n,
    setTranslate: i,
    activeSlideIndex: s,
    byController: o,
    byMousewheel: f
  } = t === undefined ? {} : t;
  const c = this;
  if (!c.params.loop) {
    return;
  }
  c.emit("beforeLoopFix");
  const {
    slides: p,
    allowSlidePrev: d,
    allowSlideNext: E,
    slidesEl: m,
    params: g
  } = c;
  c.allowSlidePrev = true;
  c.allowSlideNext = true;
  if (c.virtual && g.virtual.enabled) {
    if (r) {
      if (!g.centeredSlides && c.snapIndex === 0) {
        c.slideTo(c.virtual.slides.length, 0, false, true);
      } else if (g.centeredSlides && c.snapIndex < g.slidesPerView) {
        c.slideTo(c.virtual.slides.length + c.snapIndex, 0, false, true);
      } else if (c.snapIndex === c.snapGrid.length - 1) {
        c.slideTo(c.virtual.slidesBefore, 0, false, true);
      }
    }
    c.allowSlidePrev = d;
    c.allowSlideNext = E;
    c.emit("loopFix");
    return;
  }
  const T = g.slidesPerView === "auto" ? c.slidesPerViewDynamic() : Math.ceil(parseFloat(g.slidesPerView, 10));
  let b = g.loopedSlides || T;
  if (b % g.slidesPerGroup !== 0) {
    b += g.slidesPerGroup - b % g.slidesPerGroup;
  }
  c.loopedSlides = b;
  const x = [];
  const A = [];
  let R = c.activeIndex;
  if (typeof s === "undefined") {
    s = c.getSlideIndex(c.slides.filter(M => M.classList.contains(g.slideActiveClass))[0]);
  } else {
    R = s;
  }
  const v = n === "next" || !n;
  const y = n === "prev" || !n;
  let U = 0;
  let P = 0;
  if (s < b) {
    U = Math.max(b - s, g.slidesPerGroup);
    for (let M = 0; M < b - s; M += 1) {
      const X = M - Math.floor(M / p.length) * p.length;
      x.push(p.length - X - 1);
    }
  } else if (s > c.slides.length - b * 2) {
    P = Math.max(s - (c.slides.length - b * 2), g.slidesPerGroup);
    for (let M = 0; M < P; M += 1) {
      const X = M - Math.floor(M / p.length) * p.length;
      A.push(X);
    }
  }
  if (y) {
    x.forEach(M => {
      c.slides[M].swiperLoopMoveDOM = true;
      m.prepend(c.slides[M]);
      c.slides[M].swiperLoopMoveDOM = false;
    });
  }
  if (v) {
    A.forEach(M => {
      c.slides[M].swiperLoopMoveDOM = true;
      m.append(c.slides[M]);
      c.slides[M].swiperLoopMoveDOM = false;
    });
  }
  c.recalcSlides();
  if (g.slidesPerView === "auto") {
    c.updateSlides();
  }
  if (g.watchSlidesProgress) {
    c.updateSlidesOffset();
  }
  if (r) {
    if (x.length > 0 && y) {
      if (typeof e === "undefined") {
        const M = c.slidesGrid[R];
        const N = c.slidesGrid[R + U] - M;
        if (f) {
          c.setTranslate(c.translate - N);
        } else {
          c.slideTo(R + U, 0, false, true);
          if (i) {
            c.touches[c.isHorizontal() ? "startX" : "startY"] += N;
            c.touchEventsData.currentTranslate = c.translate;
          }
        }
      } else if (i) {
        c.slideToLoop(e, 0, false, true);
        c.touchEventsData.currentTranslate = c.translate;
      }
    } else if (A.length > 0 && v) {
      if (typeof e === "undefined") {
        const M = c.slidesGrid[R];
        const N = c.slidesGrid[R - P] - M;
        if (f) {
          c.setTranslate(c.translate - N);
        } else {
          c.slideTo(R - P, 0, false, true);
          if (i) {
            c.touches[c.isHorizontal() ? "startX" : "startY"] += N;
            c.touchEventsData.currentTranslate = c.translate;
          }
        }
      } else {
        c.slideToLoop(e, 0, false, true);
      }
    }
  }
  c.allowSlidePrev = d;
  c.allowSlideNext = E;
  if (c.controller && c.controller.control && !o) {
    const M = {
      slideRealIndex: e,
      direction: n,
      setTranslate: i,
      activeSlideIndex: s,
      byController: true
    };
    if (Array.isArray(c.controller.control)) {
      c.controller.control.forEach(X => {
        if (!X.destroyed && X.params.loop) {
          X.loopFix({
            ...M,
            slideTo: X.params.slidesPerView === g.slidesPerView ? r : false
          });
        }
      });
    } else if (c.controller.control instanceof c.constructor && c.controller.control.params.loop) {
      c.controller.control.loopFix({
        ...M,
        slideTo: c.controller.control.params.slidesPerView === g.slidesPerView ? r : false
      });
    }
  }
  c.emit("loopFix");
}
function sk() {
  const t = this;
  const {
    params: e,
    slidesEl: r
  } = t;
  if (!e.loop || t.virtual && t.params.virtual.enabled) {
    return;
  }
  t.recalcSlides();
  const n = [];
  t.slides.forEach(i => {
    const s = typeof i.swiperSlideIndex === "undefined" ? i.getAttribute("data-swiper-slide-index") * 1 : i.swiperSlideIndex;
    n[s] = i;
  });
  t.slides.forEach(i => {
    i.removeAttribute("data-swiper-slide-index");
  });
  n.forEach(i => {
    r.append(i);
  });
  t.recalcSlides();
  t.slideTo(t.realIndex, 0);
}
var ak = {
  loopCreate: nk,
  loopFix: ik,
  loopDestroy: sk
};
function ok(t) {
  const e = this;
  if (!e.params.simulateTouch || e.params.watchOverflow && e.isLocked || e.params.cssMode) {
    return;
  }
  const r = e.params.touchEventsTarget === "container" ? e.el : e.wrapperEl;
  if (e.isElement) {
    e.__preventObserver__ = true;
  }
  r.style.cursor = "move";
  r.style.cursor = t ? "grabbing" : "grab";
  if (e.isElement) {
    requestAnimationFrame(() => {
      e.__preventObserver__ = false;
    });
  }
}
function lk() {
  const t = this;
  if ((!t.params.watchOverflow || !t.isLocked) && !t.params.cssMode) {
    if (t.isElement) {
      t.__preventObserver__ = true;
    }
    t[t.params.touchEventsTarget === "container" ? "el" : "wrapperEl"].style.cursor = "";
    if (t.isElement) {
      requestAnimationFrame(() => {
        t.__preventObserver__ = false;
      });
    }
  }
}
var uk = {
  setGrabCursor: ok,
  unsetGrabCursor: lk
};
function fk(t, e = this) {
  function r(n) {
    if (!n || n === Cr() || n === Zt()) {
      return null;
    }
    if (n.assignedSlot) {
      n = n.assignedSlot;
    }
    const i = n.closest(t);
    if (!i && !n.getRootNode) {
      return null;
    } else {
      return i || r(n.getRootNode().host);
    }
  }
  return r(e);
}
function ck(t) {
  const e = this;
  const r = Cr();
  const n = Zt();
  const i = e.touchEventsData;
  i.evCache.push(t);
  const {
    params: s,
    touches: o,
    enabled: f
  } = e;
  if (!f || !s.simulateTouch && t.pointerType === "mouse" || e.animating && s.preventInteractionOnTransition) {
    return;
  }
  if (!e.animating && s.cssMode && s.loop) {
    e.loopFix();
  }
  let c = t;
  if (c.originalEvent) {
    c = c.originalEvent;
  }
  let p = c.target;
  if (s.touchEventsTarget === "wrapper" && !e.wrapperEl.contains(p) || "which" in c && c.which === 3 || "button" in c && c.button > 0 || i.isTouched && i.isMoved) {
    return;
  }
  const d = !!s.noSwipingClass && s.noSwipingClass !== "";
  const E = t.composedPath ? t.composedPath() : t.path;
  if (d && c.target && c.target.shadowRoot && E) {
    p = E[0];
  }
  const m = s.noSwipingSelector ? s.noSwipingSelector : `.${s.noSwipingClass}`;
  const g = !!c.target && !!c.target.shadowRoot;
  if (s.noSwiping && (g ? fk(m, p) : p.closest(m))) {
    e.allowClick = true;
    return;
  }
  if (s.swipeHandler && !p.closest(s.swipeHandler)) {
    return;
  }
  o.currentX = c.pageX;
  o.currentY = c.pageY;
  const T = o.currentX;
  const b = o.currentY;
  const x = s.edgeSwipeDetection || s.iOSEdgeSwipeDetection;
  const A = s.edgeSwipeThreshold || s.iOSEdgeSwipeThreshold;
  if (x && (T <= A || T >= n.innerWidth - A)) {
    if (x === "prevent") {
      t.preventDefault();
    } else {
      return;
    }
  }
  Object.assign(i, {
    isTouched: true,
    isMoved: false,
    allowTouchCallbacks: true,
    isScrolling: undefined,
    startMoving: undefined
  });
  o.startX = T;
  o.startY = b;
  i.touchStartTime = _n();
  e.allowClick = true;
  e.updateSize();
  e.swipeDirection = undefined;
  if (s.threshold > 0) {
    i.allowThresholdMove = false;
  }
  let R = true;
  if (p.matches(i.focusableElements)) {
    R = false;
    if (p.nodeName === "SELECT") {
      i.isTouched = false;
    }
  }
  if (r.activeElement && r.activeElement.matches(i.focusableElements) && r.activeElement !== p) {
    r.activeElement.blur();
  }
  const v = R && e.allowTouchMove && s.touchStartPreventDefault;
  if ((s.touchStartForcePreventDefault || v) && !p.isContentEditable) {
    c.preventDefault();
  }
  if (s.freeMode && s.freeMode.enabled && e.freeMode && e.animating && !s.cssMode) {
    e.freeMode.onTouchStart();
  }
  e.emit("touchStart", c);
}
function pk(t) {
  const e = Cr();
  const r = this;
  const n = r.touchEventsData;
  const {
    params: i,
    touches: s,
    rtlTranslate: o,
    enabled: f
  } = r;
  if (!f || !i.simulateTouch && t.pointerType === "mouse") {
    return;
  }
  let c = t;
  if (c.originalEvent) {
    c = c.originalEvent;
  }
  if (!n.isTouched) {
    if (n.startMoving && n.isScrolling) {
      r.emit("touchMoveOpposite", c);
    }
    return;
  }
  const p = n.evCache.findIndex(M => M.pointerId === c.pointerId);
  if (p >= 0) {
    n.evCache[p] = c;
  }
  const d = n.evCache.length > 1 ? n.evCache[0] : c;
  const E = d.pageX;
  const m = d.pageY;
  if (c.preventedByNestedSwiper) {
    s.startX = E;
    s.startY = m;
    return;
  }
  if (!r.allowTouchMove) {
    if (!c.target.matches(n.focusableElements)) {
      r.allowClick = false;
    }
    if (n.isTouched) {
      Object.assign(s, {
        startX: E,
        startY: m,
        prevX: r.touches.currentX,
        prevY: r.touches.currentY,
        currentX: E,
        currentY: m
      });
      n.touchStartTime = _n();
    }
    return;
  }
  if (i.touchReleaseOnEdges && !i.loop) {
    if (r.isVertical()) {
      if (m < s.startY && r.translate <= r.maxTranslate() || m > s.startY && r.translate >= r.minTranslate()) {
        n.isTouched = false;
        n.isMoved = false;
        return;
      }
    } else if (E < s.startX && r.translate <= r.maxTranslate() || E > s.startX && r.translate >= r.minTranslate()) {
      return;
    }
  }
  if (e.activeElement && c.target === e.activeElement && c.target.matches(n.focusableElements)) {
    n.isMoved = true;
    r.allowClick = false;
    return;
  }
  if (n.allowTouchCallbacks) {
    r.emit("touchMove", c);
  }
  if (c.targetTouches && c.targetTouches.length > 1) {
    return;
  }
  s.currentX = E;
  s.currentY = m;
  const g = s.currentX - s.startX;
  const T = s.currentY - s.startY;
  if (r.params.threshold && Math.sqrt(g ** 2 + T ** 2) < r.params.threshold) {
    return;
  }
  if (typeof n.isScrolling === "undefined") {
    let M;
    if (r.isHorizontal() && s.currentY === s.startY || r.isVertical() && s.currentX === s.startX) {
      n.isScrolling = false;
    } else if (g * g + T * T >= 25) {
      M = Math.atan2(Math.abs(T), Math.abs(g)) * 180 / Math.PI;
      n.isScrolling = r.isHorizontal() ? M > i.touchAngle : 90 - M > i.touchAngle;
    }
  }
  if (n.isScrolling) {
    r.emit("touchMoveOpposite", c);
  }
  if (typeof n.startMoving === "undefined" && (s.currentX !== s.startX || s.currentY !== s.startY)) {
    n.startMoving = true;
  }
  if (n.isScrolling || r.zoom && r.params.zoom && r.params.zoom.enabled && n.evCache.length > 1) {
    n.isTouched = false;
    return;
  }
  if (!n.startMoving) {
    return;
  }
  r.allowClick = false;
  if (!i.cssMode && c.cancelable) {
    c.preventDefault();
  }
  if (i.touchMoveStopPropagation && !i.nested) {
    c.stopPropagation();
  }
  let b = r.isHorizontal() ? g : T;
  let x = r.isHorizontal() ? s.currentX - s.previousX : s.currentY - s.previousY;
  if (i.oneWayMovement) {
    b = Math.abs(b) * (o ? 1 : -1);
    x = Math.abs(x) * (o ? 1 : -1);
  }
  s.diff = b;
  b *= i.touchRatio;
  if (o) {
    b = -b;
    x = -x;
  }
  const A = r.touchesDirection;
  r.swipeDirection = b > 0 ? "prev" : "next";
  r.touchesDirection = x > 0 ? "prev" : "next";
  const R = r.params.loop && !i.cssMode;
  const v = r.swipeDirection === "next" && r.allowSlideNext || r.swipeDirection === "prev" && r.allowSlidePrev;
  if (!n.isMoved) {
    if (R && v) {
      r.loopFix({
        direction: r.swipeDirection
      });
    }
    n.startTranslate = r.getTranslate();
    r.setTransition(0);
    if (r.animating) {
      const M = new window.CustomEvent("transitionend", {
        bubbles: true,
        cancelable: true
      });
      r.wrapperEl.dispatchEvent(M);
    }
    n.allowMomentumBounce = false;
    if (i.grabCursor && (r.allowSlideNext === true || r.allowSlidePrev === true)) {
      r.setGrabCursor(true);
    }
    r.emit("sliderFirstMove", c);
  }
  let y;
  if (n.isMoved && A !== r.touchesDirection && R && v && Math.abs(b) >= 1) {
    r.loopFix({
      direction: r.swipeDirection,
      setTranslate: true
    });
    y = true;
  }
  r.emit("sliderMove", c);
  n.isMoved = true;
  n.currentTranslate = b + n.startTranslate;
  let U = true;
  let P = i.resistanceRatio;
  if (i.touchReleaseOnEdges) {
    P = 0;
  }
  if (b > 0) {
    if (R && v && !y && n.currentTranslate > (i.centeredSlides ? r.minTranslate() - r.size / 2 : r.minTranslate())) {
      r.loopFix({
        direction: "prev",
        setTranslate: true,
        activeSlideIndex: 0
      });
    }
    if (n.currentTranslate > r.minTranslate()) {
      U = false;
      if (i.resistance) {
        n.currentTranslate = r.minTranslate() - 1 + (-r.minTranslate() + n.startTranslate + b) ** P;
      }
    }
  } else if (b < 0) {
    if (R && v && !y && n.currentTranslate < (i.centeredSlides ? r.maxTranslate() + r.size / 2 : r.maxTranslate())) {
      r.loopFix({
        direction: "next",
        setTranslate: true,
        activeSlideIndex: r.slides.length - (i.slidesPerView === "auto" ? r.slidesPerViewDynamic() : Math.ceil(parseFloat(i.slidesPerView, 10)))
      });
    }
    if (n.currentTranslate < r.maxTranslate()) {
      U = false;
      if (i.resistance) {
        n.currentTranslate = r.maxTranslate() + 1 - (r.maxTranslate() - n.startTranslate - b) ** P;
      }
    }
  }
  if (U) {
    c.preventedByNestedSwiper = true;
  }
  if (!r.allowSlideNext && r.swipeDirection === "next" && n.currentTranslate < n.startTranslate) {
    n.currentTranslate = n.startTranslate;
  }
  if (!r.allowSlidePrev && r.swipeDirection === "prev" && n.currentTranslate > n.startTranslate) {
    n.currentTranslate = n.startTranslate;
  }
  if (!r.allowSlidePrev && !r.allowSlideNext) {
    n.currentTranslate = n.startTranslate;
  }
  if (i.threshold > 0) {
    if (Math.abs(b) > i.threshold || n.allowThresholdMove) {
      if (!n.allowThresholdMove) {
        n.allowThresholdMove = true;
        s.startX = s.currentX;
        s.startY = s.currentY;
        n.currentTranslate = n.startTranslate;
        s.diff = r.isHorizontal() ? s.currentX - s.startX : s.currentY - s.startY;
        return;
      }
    } else {
      n.currentTranslate = n.startTranslate;
      return;
    }
  }
  if (!!i.followFinger && !i.cssMode) {
    if (i.freeMode && i.freeMode.enabled && r.freeMode || i.watchSlidesProgress) {
      r.updateActiveIndex();
      r.updateSlidesClasses();
    }
    if (i.freeMode && i.freeMode.enabled && r.freeMode) {
      r.freeMode.onTouchMove();
    }
    r.updateProgress(n.currentTranslate);
    r.setTranslate(n.currentTranslate);
  }
}
function dk(t) {
  const e = this;
  const r = e.touchEventsData;
  const n = r.evCache.findIndex(v => v.pointerId === t.pointerId);
  if (n >= 0) {
    r.evCache.splice(n, 1);
  }
  if (["pointercancel", "pointerout", "pointerleave", "contextmenu"].includes(t.type) && (!["pointercancel", "contextmenu"].includes(t.type) || !e.browser.isSafari && !e.browser.isWebView)) {
    return;
  }
  const {
    params: i,
    touches: s,
    rtlTranslate: o,
    slidesGrid: f,
    enabled: c
  } = e;
  if (!c || !i.simulateTouch && t.pointerType === "mouse") {
    return;
  }
  let p = t;
  if (p.originalEvent) {
    p = p.originalEvent;
  }
  if (r.allowTouchCallbacks) {
    e.emit("touchEnd", p);
  }
  r.allowTouchCallbacks = false;
  if (!r.isTouched) {
    if (r.isMoved && i.grabCursor) {
      e.setGrabCursor(false);
    }
    r.isMoved = false;
    r.startMoving = false;
    return;
  }
  if (i.grabCursor && r.isMoved && r.isTouched && (e.allowSlideNext === true || e.allowSlidePrev === true)) {
    e.setGrabCursor(false);
  }
  const d = _n();
  const E = d - r.touchStartTime;
  if (e.allowClick) {
    const v = p.path || p.composedPath && p.composedPath();
    e.updateClickedSlide(v && v[0] || p.target, v);
    e.emit("tap click", p);
    if (E < 300 && d - r.lastClickTime < 300) {
      e.emit("doubleTap doubleClick", p);
    }
  }
  r.lastClickTime = _n();
  js(() => {
    if (!e.destroyed) {
      e.allowClick = true;
    }
  });
  if (!r.isTouched || !r.isMoved || !e.swipeDirection || s.diff === 0 || r.currentTranslate === r.startTranslate) {
    r.isTouched = false;
    r.isMoved = false;
    r.startMoving = false;
    return;
  }
  r.isTouched = false;
  r.isMoved = false;
  r.startMoving = false;
  let m;
  if (i.followFinger) {
    m = o ? e.translate : -e.translate;
  } else {
    m = -r.currentTranslate;
  }
  if (i.cssMode) {
    return;
  }
  if (i.freeMode && i.freeMode.enabled) {
    e.freeMode.onTouchEnd({
      currentPos: m
    });
    return;
  }
  let g = 0;
  let T = e.slidesSizesGrid[0];
  for (let v = 0; v < f.length; v += v < i.slidesPerGroupSkip ? 1 : i.slidesPerGroup) {
    const y = v < i.slidesPerGroupSkip - 1 ? 1 : i.slidesPerGroup;
    if (typeof f[v + y] !== "undefined") {
      if (m >= f[v] && m < f[v + y]) {
        g = v;
        T = f[v + y] - f[v];
      }
    } else if (m >= f[v]) {
      g = v;
      T = f[f.length - 1] - f[f.length - 2];
    }
  }
  let b = null;
  let x = null;
  if (i.rewind) {
    if (e.isBeginning) {
      x = i.virtual && i.virtual.enabled && e.virtual ? e.virtual.slides.length - 1 : e.slides.length - 1;
    } else if (e.isEnd) {
      b = 0;
    }
  }
  const A = (m - f[g]) / T;
  const R = g < i.slidesPerGroupSkip - 1 ? 1 : i.slidesPerGroup;
  if (E > i.longSwipesMs) {
    if (!i.longSwipes) {
      e.slideTo(e.activeIndex);
      return;
    }
    if (e.swipeDirection === "next") {
      if (A >= i.longSwipesRatio) {
        e.slideTo(i.rewind && e.isEnd ? b : g + R);
      } else {
        e.slideTo(g);
      }
    }
    if (e.swipeDirection === "prev") {
      if (A > 1 - i.longSwipesRatio) {
        e.slideTo(g + R);
      } else if (x !== null && A < 0 && Math.abs(A) > i.longSwipesRatio) {
        e.slideTo(x);
      } else {
        e.slideTo(g);
      }
    }
  } else {
    if (!i.shortSwipes) {
      e.slideTo(e.activeIndex);
      return;
    }
    if (e.navigation && (p.target === e.navigation.nextEl || p.target === e.navigation.prevEl)) {
      if (p.target === e.navigation.nextEl) {
        e.slideTo(g + R);
      } else {
        e.slideTo(g);
      }
    } else {
      if (e.swipeDirection === "next") {
        e.slideTo(b !== null ? b : g + R);
      }
      if (e.swipeDirection === "prev") {
        e.slideTo(x !== null ? x : g);
      }
    }
  }
}
function Rv() {
  const t = this;
  const {
    params: e,
    el: r
  } = t;
  if (r && r.offsetWidth === 0) {
    return;
  }
  if (e.breakpoints) {
    t.setBreakpoint();
  }
  const {
    allowSlideNext: n,
    allowSlidePrev: i,
    snapGrid: s
  } = t;
  const o = t.virtual && t.params.virtual.enabled;
  t.allowSlideNext = true;
  t.allowSlidePrev = true;
  t.updateSize();
  t.updateSlides();
  t.updateSlidesClasses();
  const f = o && e.loop;
  if ((e.slidesPerView === "auto" || e.slidesPerView > 1) && t.isEnd && !t.isBeginning && !t.params.centeredSlides && !f) {
    t.slideTo(t.slides.length - 1, 0, false, true);
  } else if (t.params.loop && !o) {
    t.slideToLoop(t.realIndex, 0, false, true);
  } else {
    t.slideTo(t.activeIndex, 0, false, true);
  }
  if (t.autoplay && t.autoplay.running && t.autoplay.paused) {
    clearTimeout(t.autoplay.resizeTimeout);
    t.autoplay.resizeTimeout = setTimeout(() => {
      if (t.autoplay && t.autoplay.running && t.autoplay.paused) {
        t.autoplay.resume();
      }
    }, 500);
  }
  t.allowSlidePrev = i;
  t.allowSlideNext = n;
  if (t.params.watchOverflow && s !== t.snapGrid) {
    t.checkOverflow();
  }
}
function hk(t) {
  const e = this;
  if (e.enabled) {
    if (!e.allowClick) {
      if (e.params.preventClicks) {
        t.preventDefault();
      }
      if (e.params.preventClicksPropagation && e.animating) {
        t.stopPropagation();
        t.stopImmediatePropagation();
      }
    }
  }
}
function Ek() {
  const t = this;
  const {
    wrapperEl: e,
    rtlTranslate: r,
    enabled: n
  } = t;
  if (!n) {
    return;
  }
  t.previousTranslate = t.translate;
  if (t.isHorizontal()) {
    t.translate = -e.scrollLeft;
  } else {
    t.translate = -e.scrollTop;
  }
  if (t.translate === 0) {
    t.translate = 0;
  }
  t.updateActiveIndex();
  t.updateSlidesClasses();
  let i;
  const s = t.maxTranslate() - t.minTranslate();
  if (s === 0) {
    i = 0;
  } else {
    i = (t.translate - t.minTranslate()) / s;
  }
  if (i !== t.progress) {
    t.updateProgress(r ? -t.translate : t.translate);
  }
  t.emit("setTranslate", t.translate, false);
}
function mk(t) {
  const e = this;
  lf(e, t.target);
  if (!e.params.cssMode && (e.params.slidesPerView === "auto" || !!e.params.autoHeight)) {
    e.update();
  }
}
let Sv = false;
function gk() {}
const WS = (t, e) => {
  const r = Cr();
  const {
    params: n,
    el: i,
    wrapperEl: s,
    device: o
  } = t;
  const f = !!n.nested;
  const c = e === "on" ? "addEventListener" : "removeEventListener";
  const p = e;
  i[c]("pointerdown", t.onTouchStart, {
    passive: false
  });
  r[c]("pointermove", t.onTouchMove, {
    passive: false,
    capture: f
  });
  r[c]("pointerup", t.onTouchEnd, {
    passive: true
  });
  r[c]("pointercancel", t.onTouchEnd, {
    passive: true
  });
  r[c]("pointerout", t.onTouchEnd, {
    passive: true
  });
  r[c]("pointerleave", t.onTouchEnd, {
    passive: true
  });
  r[c]("contextmenu", t.onTouchEnd, {
    passive: true
  });
  if (n.preventClicks || n.preventClicksPropagation) {
    i[c]("click", t.onClick, true);
  }
  if (n.cssMode) {
    s[c]("scroll", t.onScroll);
  }
  if (n.updateOnWindowResize) {
    t[p](o.ios || o.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", Rv, true);
  } else {
    t[p]("observerUpdate", Rv, true);
  }
  i[c]("load", t.onLoad, {
    capture: true
  });
};
function _k() {
  const t = this;
  const e = Cr();
  const {
    params: r
  } = t;
  t.onTouchStart = ck.bind(t);
  t.onTouchMove = pk.bind(t);
  t.onTouchEnd = dk.bind(t);
  if (r.cssMode) {
    t.onScroll = Ek.bind(t);
  }
  t.onClick = hk.bind(t);
  t.onLoad = mk.bind(t);
  if (!Sv) {
    e.addEventListener("touchstart", gk);
    Sv = true;
  }
  WS(t, "on");
}
function Tk() {
  WS(this, "off");
}
var vk = {
  attachEvents: _k,
  detachEvents: Tk
};
const yv = (t, e) => t.grid && e.grid && e.grid.rows > 1;
function bk() {
  const t = this;
  const {
    realIndex: e,
    initialized: r,
    params: n,
    el: i
  } = t;
  const s = n.breakpoints;
  if (!s || s && Object.keys(s).length === 0) {
    return;
  }
  const o = t.getBreakpoint(s, t.params.breakpointsBase, t.el);
  if (!o || t.currentBreakpoint === o) {
    return;
  }
  const c = (o in s ? s[o] : undefined) || t.originalParams;
  const p = yv(t, n);
  const d = yv(t, c);
  const E = n.enabled;
  if (p && !d) {
    i.classList.remove(`${n.containerModifierClass}grid`, `${n.containerModifierClass}grid-column`);
    t.emitContainerClasses();
  } else if (!p && d) {
    i.classList.add(`${n.containerModifierClass}grid`);
    if (c.grid.fill && c.grid.fill === "column" || !c.grid.fill && n.grid.fill === "column") {
      i.classList.add(`${n.containerModifierClass}grid-column`);
    }
    t.emitContainerClasses();
  }
  ["navigation", "pagination", "scrollbar"].forEach(A => {
    if (typeof c[A] === "undefined") {
      return;
    }
    const R = n[A] && n[A].enabled;
    const v = c[A] && c[A].enabled;
    if (R && !v) {
      t[A].disable();
    }
    if (!R && v) {
      t[A].enable();
    }
  });
  const m = c.direction && c.direction !== n.direction;
  const g = n.loop && (c.slidesPerView !== n.slidesPerView || m);
  const T = n.loop;
  if (m && r) {
    t.changeDirection();
  }
  nn(t.params, c);
  const b = t.params.enabled;
  const x = t.params.loop;
  Object.assign(t, {
    allowTouchMove: t.params.allowTouchMove,
    allowSlideNext: t.params.allowSlideNext,
    allowSlidePrev: t.params.allowSlidePrev
  });
  if (E && !b) {
    t.disable();
  } else if (!E && b) {
    t.enable();
  }
  t.currentBreakpoint = o;
  t.emit("_beforeBreakpoint", c);
  if (r) {
    if (g) {
      t.loopDestroy();
      t.loopCreate(e);
      t.updateSlides();
    } else if (!T && x) {
      t.loopCreate(e);
      t.updateSlides();
    } else if (T && !x) {
      t.loopDestroy();
    }
  }
  t.emit("breakpoint", c);
}
function xk(t, e = "window", r) {
  if (!t || e === "container" && !r) {
    return;
  }
  let n = false;
  const i = Zt();
  const s = e === "window" ? i.innerHeight : r.clientHeight;
  const o = Object.keys(t).map(f => {
    if (typeof f == "string" && f.indexOf("@") === 0) {
      const c = parseFloat(f.substr(1));
      return {
        value: s * c,
        point: f
      };
    }
    return {
      value: f,
      point: f
    };
  });
  o.sort((f, c) => parseInt(f.value, 10) - parseInt(c.value, 10));
  for (let f = 0; f < o.length; f += 1) {
    const {
      point: c,
      value: p
    } = o[f];
    if (e === "window") {
      if (i.matchMedia(`(min-width: ${p}px)`).matches) {
        n = c;
      }
    } else if (p <= r.clientWidth) {
      n = c;
    }
  }
  return n || "max";
}
var Rk = {
  setBreakpoint: bk,
  getBreakpoint: xk
};
function Sk(t, e) {
  const r = [];
  t.forEach(n => {
    if (typeof n == "object") {
      Object.keys(n).forEach(i => {
        if (n[i]) {
          r.push(e + i);
        }
      });
    } else if (typeof n == "string") {
      r.push(e + n);
    }
  });
  return r;
}
function yk() {
  const t = this;
  const {
    classNames: e,
    params: r,
    rtl: n,
    el: i,
    device: s
  } = t;
  const o = Sk(["initialized", r.direction, {
    "free-mode": t.params.freeMode && r.freeMode.enabled
  }, {
    autoheight: r.autoHeight
  }, {
    rtl: n
  }, {
    grid: r.grid && r.grid.rows > 1
  }, {
    "grid-column": r.grid && r.grid.rows > 1 && r.grid.fill === "column"
  }, {
    android: s.android
  }, {
    ios: s.ios
  }, {
    "css-mode": r.cssMode
  }, {
    centered: r.cssMode && r.centeredSlides
  }, {
    "watch-progress": r.watchSlidesProgress
  }], r.containerModifierClass);
  e.push(...o);
  i.classList.add(...e);
  t.emitContainerClasses();
}
function Ak() {
  const t = this;
  const {
    el: e,
    classNames: r
  } = t;
  e.classList.remove(...r);
  t.emitContainerClasses();
}
var Lk = {
  addClasses: yk,
  removeClasses: Ak
};
function Ck() {
  const t = this;
  const {
    isLocked: e,
    params: r
  } = t;
  const {
    slidesOffsetBefore: n
  } = r;
  if (n) {
    const i = t.slides.length - 1;
    const s = t.slidesGrid[i] + t.slidesSizesGrid[i] + n * 2;
    t.isLocked = t.size > s;
  } else {
    t.isLocked = t.snapGrid.length === 1;
  }
  if (r.allowSlideNext === true) {
    t.allowSlideNext = !t.isLocked;
  }
  if (r.allowSlidePrev === true) {
    t.allowSlidePrev = !t.isLocked;
  }
  if (e && e !== t.isLocked) {
    t.isEnd = false;
  }
  if (e !== t.isLocked) {
    t.emit(t.isLocked ? "lock" : "unlock");
  }
}
var wk = {
  checkOverflow: Ck
};
var Bh = {
  init: true,
  direction: "horizontal",
  oneWayMovement: false,
  touchEventsTarget: "wrapper",
  initialSlide: 0,
  speed: 300,
  cssMode: false,
  updateOnWindowResize: true,
  resizeObserver: true,
  nested: false,
  createElements: false,
  enabled: true,
  focusableElements: "input, select, option, textarea, button, video, label",
  width: null,
  height: null,
  preventInteractionOnTransition: false,
  userAgent: null,
  url: null,
  edgeSwipeDetection: false,
  edgeSwipeThreshold: 20,
  autoHeight: false,
  setWrapperSize: false,
  virtualTranslate: false,
  effect: "slide",
  breakpoints: undefined,
  breakpointsBase: "window",
  spaceBetween: 0,
  slidesPerView: 1,
  slidesPerGroup: 1,
  slidesPerGroupSkip: 0,
  slidesPerGroupAuto: false,
  centeredSlides: false,
  centeredSlidesBounds: false,
  slidesOffsetBefore: 0,
  slidesOffsetAfter: 0,
  normalizeSlideIndex: true,
  centerInsufficientSlides: false,
  watchOverflow: true,
  roundLengths: false,
  touchRatio: 1,
  touchAngle: 45,
  simulateTouch: true,
  shortSwipes: true,
  longSwipes: true,
  longSwipesRatio: 0.5,
  longSwipesMs: 300,
  followFinger: true,
  allowTouchMove: true,
  threshold: 5,
  touchMoveStopPropagation: false,
  touchStartPreventDefault: true,
  touchStartForcePreventDefault: false,
  touchReleaseOnEdges: false,
  uniqueNavElements: true,
  resistance: true,
  resistanceRatio: 0.85,
  watchSlidesProgress: false,
  grabCursor: false,
  preventClicks: true,
  preventClicksPropagation: true,
  slideToClickedSlide: false,
  loop: false,
  loopedSlides: null,
  loopPreventsSliding: true,
  rewind: false,
  allowSlidePrev: true,
  allowSlideNext: true,
  swipeHandler: null,
  noSwiping: true,
  noSwipingClass: "swiper-no-swiping",
  noSwipingSelector: null,
  passiveListeners: true,
  maxBackfaceHiddenSlides: 10,
  containerModifierClass: "swiper-",
  slideClass: "swiper-slide",
  slideActiveClass: "swiper-slide-active",
  slideVisibleClass: "swiper-slide-visible",
  slideNextClass: "swiper-slide-next",
  slidePrevClass: "swiper-slide-prev",
  wrapperClass: "swiper-wrapper",
  lazyPreloaderClass: "swiper-lazy-preloader",
  lazyPreloadPrevNext: 0,
  runCallbacksOnInit: true,
  _emitClasses: false
};
function Ok(t, e) {
  return function (n = {}) {
    const i = Object.keys(n)[0];
    const s = n[i];
    if (typeof s != "object" || s === null) {
      nn(e, n);
      return;
    }
    if (t[i] === true) {
      t[i] = {
        enabled: true
      };
    }
    if (i === "navigation" && t[i] && t[i].enabled && !t[i].prevEl && !t[i].nextEl) {
      t[i].auto = true;
    }
    if (["pagination", "scrollbar"].indexOf(i) >= 0 && t[i] && t[i].enabled && !t[i].el) {
      t[i].auto = true;
    }
    if (!(i in t) || !("enabled" in s)) {
      nn(e, n);
      return;
    }
    if (typeof t[i] == "object" && !("enabled" in t[i])) {
      t[i].enabled = true;
    }
    t[i] ||= {
      enabled: false
    };
    nn(e, n);
  };
}
const gd = {
  eventsEmitter: LK,
  update: $K,
  translate: HK,
  transition: zK,
  slide: rk,
  loop: ak,
  grabCursor: uk,
  events: vk,
  breakpoints: Rk,
  checkOverflow: wk,
  classes: Lk
};
const _d = {};
class rn {
  constructor() {
    let e;
    let r;
    for (var n = arguments.length, i = new Array(n), s = 0; s < n; s++) {
      i[s] = arguments[s];
    }
    if (i.length === 1 && i[0].constructor && Object.prototype.toString.call(i[0]).slice(8, -1) === "Object") {
      r = i[0];
    } else {
      [e, r] = i;
    }
    r ||= {};
    r = nn({}, r);
    if (e && !r.el) {
      r.el = e;
    }
    const o = Cr();
    if (r.el && typeof r.el == "string" && o.querySelectorAll(r.el).length > 1) {
      const d = [];
      o.querySelectorAll(r.el).forEach(E => {
        const m = nn({}, r, {
          el: E
        });
        d.push(new rn(m));
      });
      return d;
    }
    const f = this;
    f.__swiper__ = true;
    f.support = FS();
    f.device = xK({
      userAgent: r.userAgent
    });
    f.browser = SK();
    f.eventsListeners = {};
    f.eventsAnyListeners = [];
    f.modules = [...f.__modules__];
    if (r.modules && Array.isArray(r.modules)) {
      f.modules.push(...r.modules);
    }
    const c = {};
    f.modules.forEach(d => {
      d({
        params: r,
        swiper: f,
        extendParams: Ok(r, c),
        on: f.on.bind(f),
        once: f.once.bind(f),
        off: f.off.bind(f),
        emit: f.emit.bind(f)
      });
    });
    const p = nn({}, Bh, c);
    f.params = nn({}, p, _d, r);
    f.originalParams = nn({}, f.params);
    f.passedParams = nn({}, r);
    if (f.params && f.params.on) {
      Object.keys(f.params.on).forEach(d => {
        f.on(d, f.params.on[d]);
      });
    }
    if (f.params && f.params.onAny) {
      f.onAny(f.params.onAny);
    }
    Object.assign(f, {
      enabled: f.params.enabled,
      el: e,
      classNames: [],
      slides: [],
      slidesGrid: [],
      snapGrid: [],
      slidesSizesGrid: [],
      isHorizontal() {
        return f.params.direction === "horizontal";
      },
      isVertical() {
        return f.params.direction === "vertical";
      },
      activeIndex: 0,
      realIndex: 0,
      isBeginning: true,
      isEnd: false,
      translate: 0,
      previousTranslate: 0,
      progress: 0,
      velocity: 0,
      animating: false,
      cssOverflowAdjustment() {
        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;
      },
      allowSlideNext: f.params.allowSlideNext,
      allowSlidePrev: f.params.allowSlidePrev,
      touchEventsData: {
        isTouched: undefined,
        isMoved: undefined,
        allowTouchCallbacks: undefined,
        touchStartTime: undefined,
        isScrolling: undefined,
        currentTranslate: undefined,
        startTranslate: undefined,
        allowThresholdMove: undefined,
        focusableElements: f.params.focusableElements,
        lastClickTime: 0,
        clickTimeout: undefined,
        velocities: [],
        allowMomentumBounce: undefined,
        startMoving: undefined,
        evCache: []
      },
      allowClick: true,
      allowTouchMove: f.params.allowTouchMove,
      touches: {
        startX: 0,
        startY: 0,
        currentX: 0,
        currentY: 0,
        diff: 0
      },
      imagesToLoad: [],
      imagesLoaded: 0
    });
    f.emit("_swiper");
    if (f.params.init) {
      f.init();
    }
    return f;
  }
  getSlideIndex(e) {
    const {
      slidesEl: r,
      params: n
    } = this;
    const i = br(r, `.${n.slideClass}, swiper-slide`);
    const s = Tl(i[0]);
    return Tl(e) - s;
  }
  getSlideIndexByData(e) {
    return this.getSlideIndex(this.slides.filter(r => r.getAttribute("data-swiper-slide-index") * 1 === e)[0]);
  }
  recalcSlides() {
    const e = this;
    const {
      slidesEl: r,
      params: n
    } = e;
    e.slides = br(r, `.${n.slideClass}, swiper-slide`);
  }
  enable() {
    const e = this;
    if (!e.enabled) {
      e.enabled = true;
      if (e.params.grabCursor) {
        e.setGrabCursor();
      }
      e.emit("enable");
    }
  }
  disable() {
    const e = this;
    if (e.enabled) {
      e.enabled = false;
      if (e.params.grabCursor) {
        e.unsetGrabCursor();
      }
      e.emit("disable");
    }
  }
  setProgress(e, r) {
    const n = this;
    e = Math.min(Math.max(e, 0), 1);
    const i = n.minTranslate();
    const o = (n.maxTranslate() - i) * e + i;
    n.translateTo(o, typeof r === "undefined" ? 0 : r);
    n.updateActiveIndex();
    n.updateSlidesClasses();
  }
  emitContainerClasses() {
    const e = this;
    if (!e.params._emitClasses || !e.el) {
      return;
    }
    const r = e.el.className.split(" ").filter(n => n.indexOf("swiper") === 0 || n.indexOf(e.params.containerModifierClass) === 0);
    e.emit("_containerClasses", r.join(" "));
  }
  getSlideClasses(e) {
    const r = this;
    if (r.destroyed) {
      return "";
    } else {
      return e.className.split(" ").filter(n => n.indexOf("swiper-slide") === 0 || n.indexOf(r.params.slideClass) === 0).join(" ");
    }
  }
  emitSlidesClasses() {
    const e = this;
    if (!e.params._emitClasses || !e.el) {
      return;
    }
    const r = [];
    e.slides.forEach(n => {
      const i = e.getSlideClasses(n);
      r.push({
        slideEl: n,
        classNames: i
      });
      e.emit("_slideClass", n, i);
    });
    e.emit("_slideClasses", r);
  }
  slidesPerViewDynamic(e = "current", r = false) {
    const n = this;
    const {
      params: i,
      slides: s,
      slidesGrid: o,
      slidesSizesGrid: f,
      size: c,
      activeIndex: p
    } = n;
    let d = 1;
    if (typeof i.slidesPerView == "number") {
      return i.slidesPerView;
    }
    if (i.centeredSlides) {
      let E = s[p] ? s[p].swiperSlideSize : 0;
      let m;
      for (let g = p + 1; g < s.length; g += 1) {
        if (s[g] && !m) {
          E += s[g].swiperSlideSize;
          d += 1;
          if (E > c) {
            m = true;
          }
        }
      }
      for (let g = p - 1; g >= 0; g -= 1) {
        if (s[g] && !m) {
          E += s[g].swiperSlideSize;
          d += 1;
          if (E > c) {
            m = true;
          }
        }
      }
    } else if (e === "current") {
      for (let E = p + 1; E < s.length; E += 1) {
        if (r ? o[E] + f[E] - o[p] < c : o[E] - o[p] < c) {
          d += 1;
        }
      }
    } else {
      for (let E = p - 1; E >= 0; E -= 1) {
        if (o[p] - o[E] < c) {
          d += 1;
        }
      }
    }
    return d;
  }
  update() {
    const e = this;
    if (!e || e.destroyed) {
      return;
    }
    const {
      snapGrid: r,
      params: n
    } = e;
    if (n.breakpoints) {
      e.setBreakpoint();
    }
    [...e.el.querySelectorAll("[loading=\"lazy\"]")].forEach(o => {
      if (o.complete) {
        lf(e, o);
      }
    });
    e.updateSize();
    e.updateSlides();
    e.updateProgress();
    e.updateSlidesClasses();
    function i() {
      const o = e.rtlTranslate ? e.translate * -1 : e.translate;
      const f = Math.min(Math.max(o, e.maxTranslate()), e.minTranslate());
      e.setTranslate(f);
      e.updateActiveIndex();
      e.updateSlidesClasses();
    }
    let s;
    if (n.freeMode && n.freeMode.enabled && !n.cssMode) {
      i();
      if (n.autoHeight) {
        e.updateAutoHeight();
      }
    } else {
      if ((n.slidesPerView === "auto" || n.slidesPerView > 1) && e.isEnd && !n.centeredSlides) {
        const o = e.virtual && n.virtual.enabled ? e.virtual.slides : e.slides;
        s = e.slideTo(o.length - 1, 0, false, true);
      } else {
        s = e.slideTo(e.activeIndex, 0, false, true);
      }
      if (!s) {
        i();
      }
    }
    if (n.watchOverflow && r !== e.snapGrid) {
      e.checkOverflow();
    }
    e.emit("update");
  }
  changeDirection(e, r = true) {
    const n = this;
    const i = n.params.direction;
    e ||= i === "horizontal" ? "vertical" : "horizontal";
    if (e !== i && (e === "horizontal" || e === "vertical")) {
      n.el.classList.remove(`${n.params.containerModifierClass}${i}`);
      n.el.classList.add(`${n.params.containerModifierClass}${e}`);
      n.emitContainerClasses();
      n.params.direction = e;
      n.slides.forEach(s => {
        if (e === "vertical") {
          s.style.width = "";
        } else {
          s.style.height = "";
        }
      });
      n.emit("changeDirection");
      if (r) {
        n.update();
      }
    }
    return n;
  }
  changeLanguageDirection(e) {
    const r = this;
    if ((!r.rtl || e !== "rtl") && (!!r.rtl || e !== "ltr")) {
      r.rtl = e === "rtl";
      r.rtlTranslate = r.params.direction === "horizontal" && r.rtl;
      if (r.rtl) {
        r.el.classList.add(`${r.params.containerModifierClass}rtl`);
        r.el.dir = "rtl";
      } else {
        r.el.classList.remove(`${r.params.containerModifierClass}rtl`);
        r.el.dir = "ltr";
      }
      r.update();
    }
  }
  mount(e) {
    const r = this;
    if (r.mounted) {
      return true;
    }
    let n = e || r.params.el;
    if (typeof n == "string") {
      n = document.querySelector(n);
    }
    if (!n) {
      return false;
    }
    n.swiper = r;
    if (n.parentNode && n.parentNode.host && n.parentNode.host.nodeName === "SWIPER-CONTAINER") {
      r.isElement = true;
    }
    const i = () => `.${(r.params.wrapperClass || "").trim().split(" ").join(".")}`;
    let o = n && n.shadowRoot && n.shadowRoot.querySelector ? n.shadowRoot.querySelector(i()) : br(n, i())[0];
    if (!o && r.params.createElements) {
      o = Dn("div", r.params.wrapperClass);
      n.append(o);
      br(n, `.${r.params.slideClass}`).forEach(f => {
        o.append(f);
      });
    }
    Object.assign(r, {
      el: n,
      wrapperEl: o,
      slidesEl: r.isElement && !n.parentNode.host.slideSlots ? n.parentNode.host : o,
      hostEl: r.isElement ? n.parentNode.host : n,
      mounted: true,
      rtl: n.dir.toLowerCase() === "rtl" || Zi(n, "direction") === "rtl",
      rtlTranslate: r.params.direction === "horizontal" && (n.dir.toLowerCase() === "rtl" || Zi(n, "direction") === "rtl"),
      wrongRTL: Zi(o, "display") === "-webkit-box"
    });
    return true;
  }
  init(e) {
    const r = this;
    if (r.initialized || r.mount(e) === false) {
      return r;
    }
    r.emit("beforeInit");
    if (r.params.breakpoints) {
      r.setBreakpoint();
    }
    r.addClasses();
    r.updateSize();
    r.updateSlides();
    if (r.params.watchOverflow) {
      r.checkOverflow();
    }
    if (r.params.grabCursor && r.enabled) {
      r.setGrabCursor();
    }
    if (r.params.loop && r.virtual && r.params.virtual.enabled) {
      r.slideTo(r.params.initialSlide + r.virtual.slidesBefore, 0, r.params.runCallbacksOnInit, false, true);
    } else {
      r.slideTo(r.params.initialSlide, 0, r.params.runCallbacksOnInit, false, true);
    }
    if (r.params.loop) {
      r.loopCreate();
    }
    r.attachEvents();
    const i = [...r.el.querySelectorAll("[loading=\"lazy\"]")];
    if (r.isElement) {
      i.push(...r.hostEl.querySelectorAll("[loading=\"lazy\"]"));
    }
    i.forEach(s => {
      if (s.complete) {
        lf(r, s);
      } else {
        s.addEventListener("load", o => {
          lf(r, o.target);
        });
      }
    });
    Dh(r);
    r.initialized = true;
    Dh(r);
    r.emit("init");
    r.emit("afterInit");
    return r;
  }
  destroy(e = true, r = true) {
    const n = this;
    const {
      params: i,
      el: s,
      wrapperEl: o,
      slides: f
    } = n;
    if (typeof n.params !== "undefined" && !n.destroyed) {
      n.emit("beforeDestroy");
      n.initialized = false;
      n.detachEvents();
      if (i.loop) {
        n.loopDestroy();
      }
      if (r) {
        n.removeClasses();
        s.removeAttribute("style");
        o.removeAttribute("style");
        if (f && f.length) {
          f.forEach(c => {
            c.classList.remove(i.slideVisibleClass, i.slideActiveClass, i.slideNextClass, i.slidePrevClass);
            c.removeAttribute("style");
            c.removeAttribute("data-swiper-slide-index");
          });
        }
      }
      n.emit("destroy");
      Object.keys(n.eventsListeners).forEach(c => {
        n.off(c);
      });
      if (e !== false) {
        n.el.swiper = null;
        EK(n);
      }
      n.destroyed = true;
    }
    return null;
  }
  static extendDefaults(e) {
    nn(_d, e);
  }
  static get extendedDefaults() {
    return _d;
  }
  static get defaults() {
    return Bh;
  }
  static installModule(e) {
    rn.prototype.__modules__ ||= [];
    const r = rn.prototype.__modules__;
    if (typeof e == "function" && r.indexOf(e) < 0) {
      r.push(e);
    }
  }
  static use(e) {
    if (Array.isArray(e)) {
      e.forEach(r => rn.installModule(r));
      return rn;
    } else {
      rn.installModule(e);
      return rn;
    }
  }
}
Object.keys(gd).forEach(t => {
  Object.keys(gd[t]).forEach(e => {
    rn.prototype[e] = gd[t][e];
  });
});
rn.use([yK, AK]);
function Ik(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n,
    emit: i
  } = t;
  r({
    virtual: {
      enabled: false,
      slides: [],
      cache: true,
      renderSlide: null,
      renderExternal: null,
      renderExternalUpdate: true,
      addSlidesBefore: 0,
      addSlidesAfter: 0
    }
  });
  let s;
  const o = Cr();
  e.virtual = {
    cache: {},
    from: undefined,
    to: undefined,
    slides: [],
    offset: 0,
    slidesGrid: []
  };
  const f = o.createElement("div");
  function c(T, b) {
    const x = e.params.virtual;
    if (x.cache && e.virtual.cache[b]) {
      return e.virtual.cache[b];
    }
    let A;
    if (x.renderSlide) {
      A = x.renderSlide.call(e, T, b);
      if (typeof A == "string") {
        f.innerHTML = A;
        A = f.children[0];
      }
    } else if (e.isElement) {
      A = Dn("swiper-slide");
    } else {
      A = Dn("div", e.params.slideClass);
    }
    A.setAttribute("data-swiper-slide-index", b);
    if (!x.renderSlide) {
      A.innerHTML = T;
    }
    if (x.cache) {
      e.virtual.cache[b] = A;
    }
    return A;
  }
  function p(T) {
    const {
      slidesPerView: b,
      slidesPerGroup: x,
      centeredSlides: A,
      loop: R
    } = e.params;
    const {
      addSlidesBefore: v,
      addSlidesAfter: y
    } = e.params.virtual;
    const {
      from: U,
      to: P,
      slides: M,
      slidesGrid: X,
      offset: N
    } = e.virtual;
    if (!e.params.cssMode) {
      e.updateActiveIndex();
    }
    const ae = e.activeIndex || 0;
    let Q;
    if (e.rtlTranslate) {
      Q = "right";
    } else {
      Q = e.isHorizontal() ? "left" : "top";
    }
    let V;
    let Y;
    if (A) {
      V = Math.floor(b / 2) + x + y;
      Y = Math.floor(b / 2) + x + v;
    } else {
      V = b + (x - 1) + y;
      Y = (R ? b : x) + v;
    }
    let k = ae - Y;
    let w = ae + V;
    if (!R) {
      k = Math.max(k, 0);
      w = Math.min(w, M.length - 1);
    }
    let j = (e.slidesGrid[k] || 0) - (e.slidesGrid[0] || 0);
    if (R && ae >= Y) {
      k -= Y;
      if (!A) {
        j += e.slidesGrid[0];
      }
    } else if (R && ae < Y) {
      k = -Y;
      if (A) {
        j += e.slidesGrid[0];
      }
    }
    Object.assign(e.virtual, {
      from: k,
      to: w,
      offset: j,
      slidesGrid: e.slidesGrid,
      slidesBefore: Y,
      slidesAfter: V
    });
    function W() {
      e.updateSlides();
      e.updateProgress();
      e.updateSlidesClasses();
      i("virtualUpdate");
    }
    if (U === k && P === w && !T) {
      if (e.slidesGrid !== X && j !== N) {
        e.slides.forEach(Le => {
          Le.style[Q] = `${j - Math.abs(e.cssOverflowAdjustment())}px`;
        });
      }
      e.updateProgress();
      i("virtualUpdate");
      return;
    }
    if (e.params.virtual.renderExternal) {
      e.params.virtual.renderExternal.call(e, {
        offset: j,
        from: k,
        to: w,
        slides: function () {
          const Ge = [];
          for (let Rt = k; Rt <= w; Rt += 1) {
            Ge.push(M[Rt]);
          }
          return Ge;
        }()
      });
      if (e.params.virtual.renderExternalUpdate) {
        W();
      } else {
        i("virtualUpdate");
      }
      return;
    }
    const te = [];
    const ie = [];
    const _e = Le => {
      let Ge = Le;
      if (Le < 0) {
        Ge = M.length + Le;
      } else if (Ge >= M.length) {
        Ge = Ge - M.length;
      }
      return Ge;
    };
    if (T) {
      e.slides.filter(Le => Le.matches(`.${e.params.slideClass}, swiper-slide`)).forEach(Le => {
        Le.remove();
      });
    } else {
      for (let Le = U; Le <= P; Le += 1) {
        if (Le < k || Le > w) {
          const Ge = _e(Le);
          e.slides.filter(Rt => Rt.matches(`.${e.params.slideClass}[data-swiper-slide-index="${Ge}"], swiper-slide[data-swiper-slide-index="${Ge}"]`)).forEach(Rt => {
            Rt.remove();
          });
        }
      }
    }
    const ye = R ? -M.length : 0;
    const Be = R ? M.length * 2 : M.length;
    for (let Le = ye; Le < Be; Le += 1) {
      if (Le >= k && Le <= w) {
        const Ge = _e(Le);
        if (typeof P === "undefined" || T) {
          ie.push(Ge);
        } else {
          if (Le > P) {
            ie.push(Ge);
          }
          if (Le < U) {
            te.push(Ge);
          }
        }
      }
    }
    ie.forEach(Le => {
      e.slidesEl.append(c(M[Le], Le));
    });
    if (R) {
      for (let Le = te.length - 1; Le >= 0; Le -= 1) {
        const Ge = te[Le];
        e.slidesEl.prepend(c(M[Ge], Ge));
      }
    } else {
      te.sort((Le, Ge) => Ge - Le);
      te.forEach(Le => {
        e.slidesEl.prepend(c(M[Le], Le));
      });
    }
    br(e.slidesEl, ".swiper-slide, swiper-slide").forEach(Le => {
      Le.style[Q] = `${j - Math.abs(e.cssOverflowAdjustment())}px`;
    });
    W();
  }
  function d(T) {
    if (typeof T == "object" && "length" in T) {
      for (let b = 0; b < T.length; b += 1) {
        if (T[b]) {
          e.virtual.slides.push(T[b]);
        }
      }
    } else {
      e.virtual.slides.push(T);
    }
    p(true);
  }
  function E(T) {
    const b = e.activeIndex;
    let x = b + 1;
    let A = 1;
    if (Array.isArray(T)) {
      for (let R = 0; R < T.length; R += 1) {
        if (T[R]) {
          e.virtual.slides.unshift(T[R]);
        }
      }
      x = b + T.length;
      A = T.length;
    } else {
      e.virtual.slides.unshift(T);
    }
    if (e.params.virtual.cache) {
      const R = e.virtual.cache;
      const v = {};
      Object.keys(R).forEach(y => {
        const U = R[y];
        const P = U.getAttribute("data-swiper-slide-index");
        if (P) {
          U.setAttribute("data-swiper-slide-index", parseInt(P, 10) + A);
        }
        v[parseInt(y, 10) + A] = U;
      });
      e.virtual.cache = v;
    }
    p(true);
    e.slideTo(x, 0);
  }
  function m(T) {
    if (typeof T === "undefined" || T === null) {
      return;
    }
    let b = e.activeIndex;
    if (Array.isArray(T)) {
      for (let x = T.length - 1; x >= 0; x -= 1) {
        if (e.params.virtual.cache) {
          delete e.virtual.cache[T[x]];
          Object.keys(e.virtual.cache).forEach(A => {
            if (A > T) {
              e.virtual.cache[A - 1] = e.virtual.cache[A];
              e.virtual.cache[A - 1].setAttribute("data-swiper-slide-index", A - 1);
              delete e.virtual.cache[A];
            }
          });
        }
        e.virtual.slides.splice(T[x], 1);
        if (T[x] < b) {
          b -= 1;
        }
        b = Math.max(b, 0);
      }
    } else {
      if (e.params.virtual.cache) {
        delete e.virtual.cache[T];
        Object.keys(e.virtual.cache).forEach(x => {
          if (x > T) {
            e.virtual.cache[x - 1] = e.virtual.cache[x];
            e.virtual.cache[x - 1].setAttribute("data-swiper-slide-index", x - 1);
            delete e.virtual.cache[x];
          }
        });
      }
      e.virtual.slides.splice(T, 1);
      if (T < b) {
        b -= 1;
      }
      b = Math.max(b, 0);
    }
    p(true);
    e.slideTo(b, 0);
  }
  function g() {
    e.virtual.slides = [];
    if (e.params.virtual.cache) {
      e.virtual.cache = {};
    }
    p(true);
    e.slideTo(0, 0);
  }
  n("beforeInit", () => {
    if (!e.params.virtual.enabled) {
      return;
    }
    let T;
    if (typeof e.passedParams.virtual.slides === "undefined") {
      const b = [...e.slidesEl.children].filter(x => x.matches(`.${e.params.slideClass}, swiper-slide`));
      if (b && b.length) {
        e.virtual.slides = [...b];
        T = true;
        b.forEach((x, A) => {
          x.setAttribute("data-swiper-slide-index", A);
          e.virtual.cache[A] = x;
          x.remove();
        });
      }
    }
    if (!T) {
      e.virtual.slides = e.params.virtual.slides;
    }
    e.classNames.push(`${e.params.containerModifierClass}virtual`);
    e.params.watchSlidesProgress = true;
    e.originalParams.watchSlidesProgress = true;
    p();
  });
  n("setTranslate", () => {
    if (e.params.virtual.enabled) {
      if (e.params.cssMode && !e._immediateVirtual) {
        clearTimeout(s);
        s = setTimeout(() => {
          p();
        }, 100);
      } else {
        p();
      }
    }
  });
  n("init update resize", () => {
    if (e.params.virtual.enabled && e.params.cssMode) {
      qo(e.wrapperEl, "--swiper-virtual-size", `${e.virtualSize}px`);
    }
  });
  Object.assign(e.virtual, {
    appendSlide: d,
    prependSlide: E,
    removeSlide: m,
    removeAllSlides: g,
    update: p
  });
}
function Nk(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n,
    emit: i
  } = t;
  const s = Cr();
  const o = Zt();
  e.keyboard = {
    enabled: false
  };
  r({
    keyboard: {
      enabled: false,
      onlyInViewport: true,
      pageUpDown: true
    }
  });
  function f(d) {
    if (!e.enabled) {
      return;
    }
    const {
      rtlTranslate: E
    } = e;
    let m = d;
    if (m.originalEvent) {
      m = m.originalEvent;
    }
    const g = m.keyCode || m.charCode;
    const T = e.params.keyboard.pageUpDown;
    const b = T && g === 33;
    const x = T && g === 34;
    const A = g === 37;
    const R = g === 39;
    const v = g === 38;
    const y = g === 40;
    if (!e.allowSlideNext && (e.isHorizontal() && R || e.isVertical() && y || x) || !e.allowSlidePrev && (e.isHorizontal() && A || e.isVertical() && v || b)) {
      return false;
    }
    if (!m.shiftKey && !m.altKey && !m.ctrlKey && !m.metaKey && (!s.activeElement || !s.activeElement.nodeName || s.activeElement.nodeName.toLowerCase() !== "input" && s.activeElement.nodeName.toLowerCase() !== "textarea")) {
      if (e.params.keyboard.onlyInViewport && (b || x || A || R || v || y)) {
        let U = false;
        if (Fs(e.el, `.${e.params.slideClass}, swiper-slide`).length > 0 && Fs(e.el, `.${e.params.slideActiveClass}`).length === 0) {
          return;
        }
        const P = e.el;
        const M = P.clientWidth;
        const X = P.clientHeight;
        const N = o.innerWidth;
        const ae = o.innerHeight;
        const Q = wf(P);
        if (E) {
          Q.left -= P.scrollLeft;
        }
        const V = [[Q.left, Q.top], [Q.left + M, Q.top], [Q.left, Q.top + X], [Q.left + M, Q.top + X]];
        for (let Y = 0; Y < V.length; Y += 1) {
          const k = V[Y];
          if (k[0] >= 0 && k[0] <= N && k[1] >= 0 && k[1] <= ae) {
            if (k[0] === 0 && k[1] === 0) {
              continue;
            }
            U = true;
          }
        }
        if (!U) {
          return;
        }
      }
      if (e.isHorizontal()) {
        if (b || x || A || R) {
          if (m.preventDefault) {
            m.preventDefault();
          } else {
            m.returnValue = false;
          }
        }
        if ((x || R) && !E || (b || A) && E) {
          e.slideNext();
        }
        if ((b || A) && !E || (x || R) && E) {
          e.slidePrev();
        }
      } else {
        if (b || x || v || y) {
          if (m.preventDefault) {
            m.preventDefault();
          } else {
            m.returnValue = false;
          }
        }
        if (x || y) {
          e.slideNext();
        }
        if (b || v) {
          e.slidePrev();
        }
      }
      i("keyPress", g);
    }
  }
  function c() {
    if (!e.keyboard.enabled) {
      s.addEventListener("keydown", f);
      e.keyboard.enabled = true;
    }
  }
  function p() {
    if (e.keyboard.enabled) {
      s.removeEventListener("keydown", f);
      e.keyboard.enabled = false;
    }
  }
  n("init", () => {
    if (e.params.keyboard.enabled) {
      c();
    }
  });
  n("destroy", () => {
    if (e.keyboard.enabled) {
      p();
    }
  });
  Object.assign(e.keyboard, {
    enable: c,
    disable: p
  });
}
function Pk(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n,
    emit: i
  } = t;
  const s = Zt();
  r({
    mousewheel: {
      enabled: false,
      releaseOnEdges: false,
      invert: false,
      forceToAxis: false,
      sensitivity: 1,
      eventsTarget: "container",
      thresholdDelta: null,
      thresholdTime: null,
      noMousewheelClass: "swiper-no-mousewheel"
    }
  });
  e.mousewheel = {
    enabled: false
  };
  let o;
  let f = _n();
  let c;
  const p = [];
  function d(v) {
    let M = 0;
    let X = 0;
    let N = 0;
    let ae = 0;
    if ("detail" in v) {
      X = v.detail;
    }
    if ("wheelDelta" in v) {
      X = -v.wheelDelta / 120;
    }
    if ("wheelDeltaY" in v) {
      X = -v.wheelDeltaY / 120;
    }
    if ("wheelDeltaX" in v) {
      M = -v.wheelDeltaX / 120;
    }
    if ("axis" in v && v.axis === v.HORIZONTAL_AXIS) {
      M = X;
      X = 0;
    }
    N = M * 10;
    ae = X * 10;
    if ("deltaY" in v) {
      ae = v.deltaY;
    }
    if ("deltaX" in v) {
      N = v.deltaX;
    }
    if (v.shiftKey && !N) {
      N = ae;
      ae = 0;
    }
    if ((N || ae) && v.deltaMode) {
      if (v.deltaMode === 1) {
        N *= 40;
        ae *= 40;
      } else {
        N *= 800;
        ae *= 800;
      }
    }
    if (N && !M) {
      M = N < 1 ? -1 : 1;
    }
    if (ae && !X) {
      X = ae < 1 ? -1 : 1;
    }
    return {
      spinX: M,
      spinY: X,
      pixelX: N,
      pixelY: ae
    };
  }
  function E() {
    if (e.enabled) {
      e.mouseEntered = true;
    }
  }
  function m() {
    if (e.enabled) {
      e.mouseEntered = false;
    }
  }
  function g(v) {
    if (e.params.mousewheel.thresholdDelta && v.delta < e.params.mousewheel.thresholdDelta || e.params.mousewheel.thresholdTime && _n() - f < e.params.mousewheel.thresholdTime) {
      return false;
    } else if (v.delta >= 6 && _n() - f < 60) {
      return true;
    } else {
      if (v.direction < 0) {
        if ((!e.isEnd || e.params.loop) && !e.animating) {
          e.slideNext();
          i("scroll", v.raw);
        }
      } else if ((!e.isBeginning || e.params.loop) && !e.animating) {
        e.slidePrev();
        i("scroll", v.raw);
      }
      f = new s.Date().getTime();
      return false;
    }
  }
  function T(v) {
    const y = e.params.mousewheel;
    if (v.direction < 0) {
      if (e.isEnd && !e.params.loop && y.releaseOnEdges) {
        return true;
      }
    } else if (e.isBeginning && !e.params.loop && y.releaseOnEdges) {
      return true;
    }
    return false;
  }
  function b(v) {
    let y = v;
    let U = true;
    if (!e.enabled || v.target.closest(`.${e.params.mousewheel.noMousewheelClass}`)) {
      return;
    }
    const P = e.params.mousewheel;
    if (e.params.cssMode) {
      y.preventDefault();
    }
    let M = e.el;
    if (e.params.mousewheel.eventsTarget !== "container") {
      M = document.querySelector(e.params.mousewheel.eventsTarget);
    }
    const X = M && M.contains(y.target);
    if (!e.mouseEntered && !X && !P.releaseOnEdges) {
      return true;
    }
    if (y.originalEvent) {
      y = y.originalEvent;
    }
    let N = 0;
    const ae = e.rtlTranslate ? -1 : 1;
    const Q = d(y);
    if (P.forceToAxis) {
      if (e.isHorizontal()) {
        if (Math.abs(Q.pixelX) > Math.abs(Q.pixelY)) {
          N = -Q.pixelX * ae;
        } else {
          return true;
        }
      } else if (Math.abs(Q.pixelY) > Math.abs(Q.pixelX)) {
        N = -Q.pixelY;
      } else {
        return true;
      }
    } else {
      N = Math.abs(Q.pixelX) > Math.abs(Q.pixelY) ? -Q.pixelX * ae : -Q.pixelY;
    }
    if (N === 0) {
      return true;
    }
    if (P.invert) {
      N = -N;
    }
    let V = e.getTranslate() + N * P.sensitivity;
    if (V >= e.minTranslate()) {
      V = e.minTranslate();
    }
    if (V <= e.maxTranslate()) {
      V = e.maxTranslate();
    }
    U = e.params.loop ? true : V !== e.minTranslate() && V !== e.maxTranslate();
    if (U && e.params.nested) {
      y.stopPropagation();
    }
    if (!e.params.freeMode || !e.params.freeMode.enabled) {
      const Y = {
        time: _n(),
        delta: Math.abs(N),
        direction: Math.sign(N),
        raw: v
      };
      if (p.length >= 2) {
        p.shift();
      }
      const k = p.length ? p[p.length - 1] : undefined;
      p.push(Y);
      if (k) {
        if (Y.direction !== k.direction || Y.delta > k.delta || Y.time > k.time + 150) {
          g(Y);
        }
      } else {
        g(Y);
      }
      if (T(Y)) {
        return true;
      }
    } else {
      const Y = {
        time: _n(),
        delta: Math.abs(N),
        direction: Math.sign(N)
      };
      const k = c && Y.time < c.time + 500 && Y.delta <= c.delta && Y.direction === c.direction;
      if (!k) {
        c = undefined;
        let w = e.getTranslate() + N * P.sensitivity;
        const j = e.isBeginning;
        const W = e.isEnd;
        if (w >= e.minTranslate()) {
          w = e.minTranslate();
        }
        if (w <= e.maxTranslate()) {
          w = e.maxTranslate();
        }
        e.setTransition(0);
        e.setTranslate(w);
        e.updateProgress();
        e.updateActiveIndex();
        e.updateSlidesClasses();
        if (!j && e.isBeginning || !W && e.isEnd) {
          e.updateSlidesClasses();
        }
        if (e.params.loop) {
          e.loopFix({
            direction: Y.direction < 0 ? "next" : "prev",
            byMousewheel: true
          });
        }
        if (e.params.freeMode.sticky) {
          clearTimeout(o);
          o = undefined;
          if (p.length >= 15) {
            p.shift();
          }
          const te = p.length ? p[p.length - 1] : undefined;
          const ie = p[0];
          p.push(Y);
          if (te && (Y.delta > te.delta || Y.direction !== te.direction)) {
            p.splice(0);
          } else if (p.length >= 15 && Y.time - ie.time < 500 && ie.delta - Y.delta >= 1 && Y.delta <= 6) {
            const _e = N > 0 ? 0.8 : 0.2;
            c = Y;
            p.splice(0);
            o = js(() => {
              e.slideToClosest(e.params.speed, true, undefined, _e);
            }, 0);
          }
          o ||= js(() => {
            c = Y;
            p.splice(0);
            e.slideToClosest(e.params.speed, true, undefined, 0.5);
          }, 500);
        }
        if (!k) {
          i("scroll", y);
        }
        if (e.params.autoplay && e.params.autoplayDisableOnInteraction) {
          e.autoplay.stop();
        }
        if (P.releaseOnEdges && (w === e.minTranslate() || w === e.maxTranslate())) {
          return true;
        }
      }
    }
    if (y.preventDefault) {
      y.preventDefault();
    } else {
      y.returnValue = false;
    }
    return false;
  }
  function x(v) {
    let y = e.el;
    if (e.params.mousewheel.eventsTarget !== "container") {
      y = document.querySelector(e.params.mousewheel.eventsTarget);
    }
    y[v]("mouseenter", E);
    y[v]("mouseleave", m);
    y[v]("wheel", b);
  }
  function A() {
    if (e.params.cssMode) {
      e.wrapperEl.removeEventListener("wheel", b);
      return true;
    } else if (e.mousewheel.enabled) {
      return false;
    } else {
      x("addEventListener");
      e.mousewheel.enabled = true;
      return true;
    }
  }
  function R() {
    if (e.params.cssMode) {
      e.wrapperEl.addEventListener(event, b);
      return true;
    } else if (e.mousewheel.enabled) {
      x("removeEventListener");
      e.mousewheel.enabled = false;
      return true;
    } else {
      return false;
    }
  }
  n("init", () => {
    if (!e.params.mousewheel.enabled && e.params.cssMode) {
      R();
    }
    if (e.params.mousewheel.enabled) {
      A();
    }
  });
  n("destroy", () => {
    if (e.params.cssMode) {
      A();
    }
    if (e.mousewheel.enabled) {
      R();
    }
  });
  Object.assign(e.mousewheel, {
    enable: A,
    disable: R
  });
}
function zE(t, e, r, n) {
  if (t.params.createElements) {
    Object.keys(n).forEach(i => {
      if (!r[i] && r.auto === true) {
        let s = br(t.el, `.${n[i]}`)[0];
        if (!s) {
          s = Dn("div", n[i]);
          s.className = n[i];
          t.el.append(s);
        }
        r[i] = s;
        e[i] = s;
      }
    });
  }
  return r;
}
function Uk(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n,
    emit: i
  } = t;
  r({
    navigation: {
      nextEl: null,
      prevEl: null,
      hideOnClick: false,
      disabledClass: "swiper-button-disabled",
      hiddenClass: "swiper-button-hidden",
      lockClass: "swiper-button-lock",
      navigationDisabledClass: "swiper-navigation-disabled"
    }
  });
  e.navigation = {
    nextEl: null,
    prevEl: null
  };
  const s = b => (Array.isArray(b) ? b : [b]).filter(x => !!x);
  function o(b) {
    let x;
    if (b && typeof b == "string" && e.isElement && (x = e.el.querySelector(b), x)) {
      return x;
    } else {
      if (b) {
        if (typeof b == "string") {
          x = [...document.querySelectorAll(b)];
        }
        if (e.params.uniqueNavElements && typeof b == "string" && x.length > 1 && e.el.querySelectorAll(b).length === 1) {
          x = e.el.querySelector(b);
        }
      }
      if (b && !x) {
        return b;
      } else {
        return x;
      }
    }
  }
  function f(b, x) {
    const A = e.params.navigation;
    b = s(b);
    b.forEach(R => {
      if (R) {
        R.classList[x ? "add" : "remove"](...A.disabledClass.split(" "));
        if (R.tagName === "BUTTON") {
          R.disabled = x;
        }
        if (e.params.watchOverflow && e.enabled) {
          R.classList[e.isLocked ? "add" : "remove"](A.lockClass);
        }
      }
    });
  }
  function c() {
    const {
      nextEl: b,
      prevEl: x
    } = e.navigation;
    if (e.params.loop) {
      f(x, false);
      f(b, false);
      return;
    }
    f(x, e.isBeginning && !e.params.rewind);
    f(b, e.isEnd && !e.params.rewind);
  }
  function p(b) {
    b.preventDefault();
    if (!e.isBeginning || !!e.params.loop || !!e.params.rewind) {
      e.slidePrev();
      i("navigationPrev");
    }
  }
  function d(b) {
    b.preventDefault();
    if (!e.isEnd || !!e.params.loop || !!e.params.rewind) {
      e.slideNext();
      i("navigationNext");
    }
  }
  function E() {
    const b = e.params.navigation;
    e.params.navigation = zE(e, e.originalParams.navigation, e.params.navigation, {
      nextEl: "swiper-button-next",
      prevEl: "swiper-button-prev"
    });
    if (!b.nextEl && !b.prevEl) {
      return;
    }
    let x = o(b.nextEl);
    let A = o(b.prevEl);
    Object.assign(e.navigation, {
      nextEl: x,
      prevEl: A
    });
    x = s(x);
    A = s(A);
    const R = (v, y) => {
      if (v) {
        v.addEventListener("click", y === "next" ? d : p);
      }
      if (!e.enabled && v) {
        v.classList.add(...b.lockClass.split(" "));
      }
    };
    x.forEach(v => R(v, "next"));
    A.forEach(v => R(v, "prev"));
  }
  function m() {
    let {
      nextEl: b,
      prevEl: x
    } = e.navigation;
    b = s(b);
    x = s(x);
    const A = (R, v) => {
      R.removeEventListener("click", v === "next" ? d : p);
      R.classList.remove(...e.params.navigation.disabledClass.split(" "));
    };
    b.forEach(R => A(R, "next"));
    x.forEach(R => A(R, "prev"));
  }
  n("init", () => {
    if (e.params.navigation.enabled === false) {
      T();
    } else {
      E();
      c();
    }
  });
  n("toEdge fromEdge lock unlock", () => {
    c();
  });
  n("destroy", () => {
    m();
  });
  n("enable disable", () => {
    let {
      nextEl: b,
      prevEl: x
    } = e.navigation;
    b = s(b);
    x = s(x);
    if (e.enabled) {
      c();
      return;
    }
    [...b, ...x].filter(A => !!A).forEach(A => A.classList.add(e.params.navigation.lockClass));
  });
  n("click", (b, x) => {
    let {
      nextEl: A,
      prevEl: R
    } = e.navigation;
    A = s(A);
    R = s(R);
    const v = x.target;
    if (e.params.navigation.hideOnClick && !R.includes(v) && !A.includes(v)) {
      if (e.pagination && e.params.pagination && e.params.pagination.clickable && (e.pagination.el === v || e.pagination.el.contains(v))) {
        return;
      }
      let y;
      if (A.length) {
        y = A[0].classList.contains(e.params.navigation.hiddenClass);
      } else if (R.length) {
        y = R[0].classList.contains(e.params.navigation.hiddenClass);
      }
      i(y === true ? "navigationShow" : "navigationHide");
      [...A, ...R].filter(U => !!U).forEach(U => U.classList.toggle(e.params.navigation.hiddenClass));
    }
  });
  const g = () => {
    e.el.classList.remove(...e.params.navigation.navigationDisabledClass.split(" "));
    E();
    c();
  };
  const T = () => {
    e.el.classList.add(...e.params.navigation.navigationDisabledClass.split(" "));
    m();
  };
  Object.assign(e.navigation, {
    enable: g,
    disable: T,
    update: c,
    init: E,
    destroy: m
  });
}
function Ji(t = "") {
  return `.${t.trim().replace(/([\.:!+\/])/g, "\\$1").replace(/ /g, ".")}`;
}
function Dk(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n,
    emit: i
  } = t;
  const s = "swiper-pagination";
  r({
    pagination: {
      el: null,
      bulletElement: "span",
      clickable: false,
      hideOnClick: false,
      renderBullet: null,
      renderProgressbar: null,
      renderFraction: null,
      renderCustom: null,
      progressbarOpposite: false,
      type: "bullets",
      dynamicBullets: false,
      dynamicMainBullets: 1,
      formatFractionCurrent: R => R,
      formatFractionTotal: R => R,
      bulletClass: `${s}-bullet`,
      bulletActiveClass: `${s}-bullet-active`,
      modifierClass: `${s}-`,
      currentClass: `${s}-current`,
      totalClass: `${s}-total`,
      hiddenClass: `${s}-hidden`,
      progressbarFillClass: `${s}-progressbar-fill`,
      progressbarOppositeClass: `${s}-progressbar-opposite`,
      clickableClass: `${s}-clickable`,
      lockClass: `${s}-lock`,
      horizontalClass: `${s}-horizontal`,
      verticalClass: `${s}-vertical`,
      paginationDisabledClass: `${s}-disabled`
    }
  });
  e.pagination = {
    el: null,
    bullets: []
  };
  let o;
  let f = 0;
  const c = R => (Array.isArray(R) ? R : [R]).filter(v => !!v);
  function p() {
    return !e.params.pagination.el || !e.pagination.el || Array.isArray(e.pagination.el) && e.pagination.el.length === 0;
  }
  function d(R, v) {
    const {
      bulletActiveClass: y
    } = e.params.pagination;
    if (R) {
      R = R[`${v === "prev" ? "previous" : "next"}ElementSibling`];
      if (R) {
        R.classList.add(`${y}-${v}`);
        R = R[`${v === "prev" ? "previous" : "next"}ElementSibling`];
        if (R) {
          R.classList.add(`${y}-${v}-${v}`);
        }
      }
    }
  }
  function E(R) {
    const v = R.target.closest(Ji(e.params.pagination.bulletClass));
    if (!v) {
      return;
    }
    R.preventDefault();
    const y = Tl(v) * e.params.slidesPerGroup;
    if (e.params.loop) {
      if (e.realIndex === y) {
        return;
      }
      const U = e.realIndex;
      const P = e.getSlideIndexByData(y);
      const M = e.getSlideIndexByData(e.realIndex);
      const X = N => {
        const ae = e.activeIndex;
        e.loopFix({
          direction: N,
          activeSlideIndex: P,
          slideTo: false
        });
        const Q = e.activeIndex;
        if (ae === Q) {
          e.slideToLoop(U, 0, false, true);
        }
      };
      if (P > e.slides.length - e.loopedSlides) {
        X(P > M ? "next" : "prev");
      } else if (e.params.centeredSlides) {
        const N = e.params.slidesPerView === "auto" ? e.slidesPerViewDynamic() : Math.ceil(parseFloat(e.params.slidesPerView, 10));
        if (P < Math.floor(N / 2)) {
          X("prev");
        }
      }
      e.slideToLoop(y);
    } else {
      e.slideTo(y);
    }
  }
  function m() {
    const R = e.rtl;
    const v = e.params.pagination;
    if (p()) {
      return;
    }
    let y = e.pagination.el;
    y = c(y);
    let U;
    let P;
    const M = e.virtual && e.params.virtual.enabled ? e.virtual.slides.length : e.slides.length;
    const X = e.params.loop ? Math.ceil(M / e.params.slidesPerGroup) : e.snapGrid.length;
    if (e.params.loop) {
      P = e.previousRealIndex || 0;
      U = e.params.slidesPerGroup > 1 ? Math.floor(e.realIndex / e.params.slidesPerGroup) : e.realIndex;
    } else if (typeof e.snapIndex !== "undefined") {
      U = e.snapIndex;
      P = e.previousSnapIndex;
    } else {
      P = e.previousIndex || 0;
      U = e.activeIndex || 0;
    }
    if (v.type === "bullets" && e.pagination.bullets && e.pagination.bullets.length > 0) {
      const N = e.pagination.bullets;
      let ae;
      let Q;
      let V;
      if (v.dynamicBullets) {
        o = Uh(N[0], e.isHorizontal() ? "width" : "height");
        y.forEach(Y => {
          Y.style[e.isHorizontal() ? "width" : "height"] = `${o * (v.dynamicMainBullets + 4)}px`;
        });
        if (v.dynamicMainBullets > 1 && P !== undefined) {
          f += U - (P || 0);
          if (f > v.dynamicMainBullets - 1) {
            f = v.dynamicMainBullets - 1;
          } else if (f < 0) {
            f = 0;
          }
        }
        ae = Math.max(U - f, 0);
        Q = ae + (Math.min(N.length, v.dynamicMainBullets) - 1);
        V = (Q + ae) / 2;
      }
      N.forEach(Y => {
        const k = [...["", "-next", "-next-next", "-prev", "-prev-prev", "-main"].map(w => `${v.bulletActiveClass}${w}`)].map(w => typeof w == "string" && w.includes(" ") ? w.split(" ") : w).flat();
        Y.classList.remove(...k);
      });
      if (y.length > 1) {
        N.forEach(Y => {
          const k = Tl(Y);
          if (k === U) {
            Y.classList.add(...v.bulletActiveClass.split(" "));
          } else if (e.isElement) {
            Y.setAttribute("part", "bullet");
          }
          if (v.dynamicBullets) {
            if (k >= ae && k <= Q) {
              Y.classList.add(...`${v.bulletActiveClass}-main`.split(" "));
            }
            if (k === ae) {
              d(Y, "prev");
            }
            if (k === Q) {
              d(Y, "next");
            }
          }
        });
      } else {
        const Y = N[U];
        if (Y) {
          Y.classList.add(...v.bulletActiveClass.split(" "));
        }
        if (e.isElement) {
          N.forEach((k, w) => {
            k.setAttribute("part", w === U ? "bullet-active" : "bullet");
          });
        }
        if (v.dynamicBullets) {
          const k = N[ae];
          const w = N[Q];
          for (let j = ae; j <= Q; j += 1) {
            if (N[j]) {
              N[j].classList.add(...`${v.bulletActiveClass}-main`.split(" "));
            }
          }
          d(k, "prev");
          d(w, "next");
        }
      }
      if (v.dynamicBullets) {
        const Y = Math.min(N.length, v.dynamicMainBullets + 4);
        const k = (o * Y - o) / 2 - V * o;
        const w = R ? "right" : "left";
        N.forEach(j => {
          j.style[e.isHorizontal() ? w : "top"] = `${k}px`;
        });
      }
    }
    y.forEach((N, ae) => {
      if (v.type === "fraction") {
        N.querySelectorAll(Ji(v.currentClass)).forEach(Q => {
          Q.textContent = v.formatFractionCurrent(U + 1);
        });
        N.querySelectorAll(Ji(v.totalClass)).forEach(Q => {
          Q.textContent = v.formatFractionTotal(X);
        });
      }
      if (v.type === "progressbar") {
        let Q;
        if (v.progressbarOpposite) {
          Q = e.isHorizontal() ? "vertical" : "horizontal";
        } else {
          Q = e.isHorizontal() ? "horizontal" : "vertical";
        }
        const V = (U + 1) / X;
        let Y = 1;
        let k = 1;
        if (Q === "horizontal") {
          Y = V;
        } else {
          k = V;
        }
        N.querySelectorAll(Ji(v.progressbarFillClass)).forEach(w => {
          w.style.transform = `translate3d(0,0,0) scaleX(${Y}) scaleY(${k})`;
          w.style.transitionDuration = `${e.params.speed}ms`;
        });
      }
      if (v.type === "custom" && v.renderCustom) {
        N.innerHTML = v.renderCustom(e, U + 1, X);
        if (ae === 0) {
          i("paginationRender", N);
        }
      } else {
        if (ae === 0) {
          i("paginationRender", N);
        }
        i("paginationUpdate", N);
      }
      if (e.params.watchOverflow && e.enabled) {
        N.classList[e.isLocked ? "add" : "remove"](v.lockClass);
      }
    });
  }
  function g() {
    const R = e.params.pagination;
    if (p()) {
      return;
    }
    const v = e.virtual && e.params.virtual.enabled ? e.virtual.slides.length : e.slides.length;
    let y = e.pagination.el;
    y = c(y);
    let U = "";
    if (R.type === "bullets") {
      let P = e.params.loop ? Math.ceil(v / e.params.slidesPerGroup) : e.snapGrid.length;
      if (e.params.freeMode && e.params.freeMode.enabled && P > v) {
        P = v;
      }
      for (let M = 0; M < P; M += 1) {
        if (R.renderBullet) {
          U += R.renderBullet.call(e, M, R.bulletClass);
        } else {
          U += `<${R.bulletElement} ${e.isElement ? "part=\"bullet\"" : ""} class="${R.bulletClass}"></${R.bulletElement}>`;
        }
      }
    }
    if (R.type === "fraction") {
      if (R.renderFraction) {
        U = R.renderFraction.call(e, R.currentClass, R.totalClass);
      } else {
        U = `<span class="${R.currentClass}"></span> / <span class="${R.totalClass}"></span>`;
      }
    }
    if (R.type === "progressbar") {
      if (R.renderProgressbar) {
        U = R.renderProgressbar.call(e, R.progressbarFillClass);
      } else {
        U = `<span class="${R.progressbarFillClass}"></span>`;
      }
    }
    e.pagination.bullets = [];
    y.forEach(P => {
      if (R.type !== "custom") {
        P.innerHTML = U || "";
      }
      if (R.type === "bullets") {
        e.pagination.bullets.push(...P.querySelectorAll(Ji(R.bulletClass)));
      }
    });
    if (R.type !== "custom") {
      i("paginationRender", y[0]);
    }
  }
  function T() {
    e.params.pagination = zE(e, e.originalParams.pagination, e.params.pagination, {
      el: "swiper-pagination"
    });
    const R = e.params.pagination;
    if (!R.el) {
      return;
    }
    let v;
    if (typeof R.el == "string" && e.isElement) {
      v = e.el.querySelector(R.el);
    }
    if (!v && typeof R.el == "string") {
      v = [...document.querySelectorAll(R.el)];
    }
    v ||= R.el;
    if (!!v && v.length !== 0) {
      if (e.params.uniqueNavElements && typeof R.el == "string" && Array.isArray(v) && v.length > 1) {
        v = [...e.el.querySelectorAll(R.el)];
        if (v.length > 1) {
          v = v.filter(y => Fs(y, ".swiper")[0] === e.el)[0];
        }
      }
      if (Array.isArray(v) && v.length === 1) {
        v = v[0];
      }
      Object.assign(e.pagination, {
        el: v
      });
      v = c(v);
      v.forEach(y => {
        if (R.type === "bullets" && R.clickable) {
          y.classList.add(...(R.clickableClass || "").split(" "));
        }
        y.classList.add(R.modifierClass + R.type);
        y.classList.add(e.isHorizontal() ? R.horizontalClass : R.verticalClass);
        if (R.type === "bullets" && R.dynamicBullets) {
          y.classList.add(`${R.modifierClass}${R.type}-dynamic`);
          f = 0;
          if (R.dynamicMainBullets < 1) {
            R.dynamicMainBullets = 1;
          }
        }
        if (R.type === "progressbar" && R.progressbarOpposite) {
          y.classList.add(R.progressbarOppositeClass);
        }
        if (R.clickable) {
          y.addEventListener("click", E);
        }
        if (!e.enabled) {
          y.classList.add(R.lockClass);
        }
      });
    }
  }
  function b() {
    const R = e.params.pagination;
    if (p()) {
      return;
    }
    let v = e.pagination.el;
    if (v) {
      v = c(v);
      v.forEach(y => {
        y.classList.remove(R.hiddenClass);
        y.classList.remove(R.modifierClass + R.type);
        y.classList.remove(e.isHorizontal() ? R.horizontalClass : R.verticalClass);
        if (R.clickable) {
          y.classList.remove(...(R.clickableClass || "").split(" "));
          y.removeEventListener("click", E);
        }
      });
    }
    if (e.pagination.bullets) {
      e.pagination.bullets.forEach(y => y.classList.remove(...R.bulletActiveClass.split(" ")));
    }
  }
  n("changeDirection", () => {
    if (!e.pagination || !e.pagination.el) {
      return;
    }
    const R = e.params.pagination;
    let {
      el: v
    } = e.pagination;
    v = c(v);
    v.forEach(y => {
      y.classList.remove(R.horizontalClass, R.verticalClass);
      y.classList.add(e.isHorizontal() ? R.horizontalClass : R.verticalClass);
    });
  });
  n("init", () => {
    if (e.params.pagination.enabled === false) {
      A();
    } else {
      T();
      g();
      m();
    }
  });
  n("activeIndexChange", () => {
    if (typeof e.snapIndex === "undefined") {
      m();
    }
  });
  n("snapIndexChange", () => {
    m();
  });
  n("snapGridLengthChange", () => {
    g();
    m();
  });
  n("destroy", () => {
    b();
  });
  n("enable disable", () => {
    let {
      el: R
    } = e.pagination;
    if (R) {
      R = c(R);
      R.forEach(v => v.classList[e.enabled ? "remove" : "add"](e.params.pagination.lockClass));
    }
  });
  n("lock unlock", () => {
    m();
  });
  n("click", (R, v) => {
    const y = v.target;
    const U = c(e.pagination.el);
    if (e.params.pagination.el && e.params.pagination.hideOnClick && U && U.length > 0 && !y.classList.contains(e.params.pagination.bulletClass)) {
      if (e.navigation && (e.navigation.nextEl && y === e.navigation.nextEl || e.navigation.prevEl && y === e.navigation.prevEl)) {
        return;
      }
      const P = U[0].classList.contains(e.params.pagination.hiddenClass);
      i(P === true ? "paginationShow" : "paginationHide");
      U.forEach(M => M.classList.toggle(e.params.pagination.hiddenClass));
    }
  });
  const x = () => {
    e.el.classList.remove(e.params.pagination.paginationDisabledClass);
    let {
      el: R
    } = e.pagination;
    if (R) {
      R = c(R);
      R.forEach(v => v.classList.remove(e.params.pagination.paginationDisabledClass));
    }
    T();
    g();
    m();
  };
  const A = () => {
    e.el.classList.add(e.params.pagination.paginationDisabledClass);
    let {
      el: R
    } = e.pagination;
    if (R) {
      R = c(R);
      R.forEach(v => v.classList.add(e.params.pagination.paginationDisabledClass));
    }
    b();
  };
  Object.assign(e.pagination, {
    enable: x,
    disable: A,
    render: g,
    update: m,
    init: T,
    destroy: b
  });
}
function Bk(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n,
    emit: i
  } = t;
  const s = Cr();
  let o = false;
  let f = null;
  let c = null;
  let p;
  let d;
  let E;
  let m;
  r({
    scrollbar: {
      el: null,
      dragSize: "auto",
      hide: false,
      draggable: false,
      snapOnRelease: true,
      lockClass: "swiper-scrollbar-lock",
      dragClass: "swiper-scrollbar-drag",
      scrollbarDisabledClass: "swiper-scrollbar-disabled",
      horizontalClass: "swiper-scrollbar-horizontal",
      verticalClass: "swiper-scrollbar-vertical"
    }
  });
  e.scrollbar = {
    el: null,
    dragEl: null
  };
  function g() {
    if (!e.params.scrollbar.el || !e.scrollbar.el) {
      return;
    }
    const {
      scrollbar: V,
      rtlTranslate: Y
    } = e;
    const {
      dragEl: k,
      el: w
    } = V;
    const j = e.params.scrollbar;
    const W = e.params.loop ? e.progressLoop : e.progress;
    let te = d;
    let ie = (E - d) * W;
    if (Y) {
      ie = -ie;
      if (ie > 0) {
        te = d - ie;
        ie = 0;
      } else if (-ie + d > E) {
        te = E + ie;
      }
    } else if (ie < 0) {
      te = d + ie;
      ie = 0;
    } else if (ie + d > E) {
      te = E - ie;
    }
    if (e.isHorizontal()) {
      k.style.transform = `translate3d(${ie}px, 0, 0)`;
      k.style.width = `${te}px`;
    } else {
      k.style.transform = `translate3d(0px, ${ie}px, 0)`;
      k.style.height = `${te}px`;
    }
    if (j.hide) {
      clearTimeout(f);
      w.style.opacity = 1;
      f = setTimeout(() => {
        w.style.opacity = 0;
        w.style.transitionDuration = "400ms";
      }, 1000);
    }
  }
  function T(V) {
    if (!!e.params.scrollbar.el && !!e.scrollbar.el) {
      e.scrollbar.dragEl.style.transitionDuration = `${V}ms`;
    }
  }
  function b() {
    if (!e.params.scrollbar.el || !e.scrollbar.el) {
      return;
    }
    const {
      scrollbar: V
    } = e;
    const {
      dragEl: Y,
      el: k
    } = V;
    Y.style.width = "";
    Y.style.height = "";
    E = e.isHorizontal() ? k.offsetWidth : k.offsetHeight;
    m = e.size / (e.virtualSize + e.params.slidesOffsetBefore - (e.params.centeredSlides ? e.snapGrid[0] : 0));
    if (e.params.scrollbar.dragSize === "auto") {
      d = E * m;
    } else {
      d = parseInt(e.params.scrollbar.dragSize, 10);
    }
    if (e.isHorizontal()) {
      Y.style.width = `${d}px`;
    } else {
      Y.style.height = `${d}px`;
    }
    if (m >= 1) {
      k.style.display = "none";
    } else {
      k.style.display = "";
    }
    if (e.params.scrollbar.hide) {
      k.style.opacity = 0;
    }
    if (e.params.watchOverflow && e.enabled) {
      V.el.classList[e.isLocked ? "add" : "remove"](e.params.scrollbar.lockClass);
    }
  }
  function x(V) {
    if (e.isHorizontal()) {
      return V.clientX;
    } else {
      return V.clientY;
    }
  }
  function A(V) {
    const {
      scrollbar: Y,
      rtlTranslate: k
    } = e;
    const {
      el: w
    } = Y;
    let j;
    j = (x(V) - wf(w)[e.isHorizontal() ? "left" : "top"] - (p !== null ? p : d / 2)) / (E - d);
    j = Math.max(Math.min(j, 1), 0);
    if (k) {
      j = 1 - j;
    }
    const W = e.minTranslate() + (e.maxTranslate() - e.minTranslate()) * j;
    e.updateProgress(W);
    e.setTranslate(W);
    e.updateActiveIndex();
    e.updateSlidesClasses();
  }
  function R(V) {
    const Y = e.params.scrollbar;
    const {
      scrollbar: k,
      wrapperEl: w
    } = e;
    const {
      el: j,
      dragEl: W
    } = k;
    o = true;
    p = V.target === W ? x(V) - V.target.getBoundingClientRect()[e.isHorizontal() ? "left" : "top"] : null;
    V.preventDefault();
    V.stopPropagation();
    w.style.transitionDuration = "100ms";
    W.style.transitionDuration = "100ms";
    A(V);
    clearTimeout(c);
    j.style.transitionDuration = "0ms";
    if (Y.hide) {
      j.style.opacity = 1;
    }
    if (e.params.cssMode) {
      e.wrapperEl.style["scroll-snap-type"] = "none";
    }
    i("scrollbarDragStart", V);
  }
  function v(V) {
    const {
      scrollbar: Y,
      wrapperEl: k
    } = e;
    const {
      el: w,
      dragEl: j
    } = Y;
    if (o) {
      if (V.preventDefault) {
        V.preventDefault();
      } else {
        V.returnValue = false;
      }
      A(V);
      k.style.transitionDuration = "0ms";
      w.style.transitionDuration = "0ms";
      j.style.transitionDuration = "0ms";
      i("scrollbarDragMove", V);
    }
  }
  function y(V) {
    const Y = e.params.scrollbar;
    const {
      scrollbar: k,
      wrapperEl: w
    } = e;
    const {
      el: j
    } = k;
    if (o) {
      o = false;
      if (e.params.cssMode) {
        e.wrapperEl.style["scroll-snap-type"] = "";
        w.style.transitionDuration = "";
      }
      if (Y.hide) {
        clearTimeout(c);
        c = js(() => {
          j.style.opacity = 0;
          j.style.transitionDuration = "400ms";
        }, 1000);
      }
      i("scrollbarDragEnd", V);
      if (Y.snapOnRelease) {
        e.slideToClosest();
      }
    }
  }
  function U(V) {
    const {
      scrollbar: Y,
      params: k
    } = e;
    const w = Y.el;
    if (!w) {
      return;
    }
    const j = w;
    const W = k.passiveListeners ? {
      passive: false,
      capture: false
    } : false;
    const te = k.passiveListeners ? {
      passive: true,
      capture: false
    } : false;
    if (!j) {
      return;
    }
    const ie = V === "on" ? "addEventListener" : "removeEventListener";
    j[ie]("pointerdown", R, W);
    s[ie]("pointermove", v, W);
    s[ie]("pointerup", y, te);
  }
  function P() {
    if (!!e.params.scrollbar.el && !!e.scrollbar.el) {
      U("on");
    }
  }
  function M() {
    if (!!e.params.scrollbar.el && !!e.scrollbar.el) {
      U("off");
    }
  }
  function X() {
    const {
      scrollbar: V,
      el: Y
    } = e;
    e.params.scrollbar = zE(e, e.originalParams.scrollbar, e.params.scrollbar, {
      el: "swiper-scrollbar"
    });
    const k = e.params.scrollbar;
    if (!k.el) {
      return;
    }
    let w;
    if (typeof k.el == "string" && e.isElement) {
      w = e.el.querySelector(k.el);
    }
    if (!w && typeof k.el == "string") {
      w = s.querySelectorAll(k.el);
    } else {
      w ||= k.el;
    }
    if (e.params.uniqueNavElements && typeof k.el == "string" && w.length > 1 && Y.querySelectorAll(k.el).length === 1) {
      w = Y.querySelector(k.el);
    }
    if (w.length > 0) {
      w = w[0];
    }
    w.classList.add(e.isHorizontal() ? k.horizontalClass : k.verticalClass);
    let j;
    if (w) {
      j = w.querySelector(`.${e.params.scrollbar.dragClass}`);
      if (!j) {
        j = Dn("div", e.params.scrollbar.dragClass);
        w.append(j);
      }
    }
    Object.assign(V, {
      el: w,
      dragEl: j
    });
    if (k.draggable) {
      P();
    }
    if (w) {
      w.classList[e.enabled ? "remove" : "add"](e.params.scrollbar.lockClass);
    }
  }
  function N() {
    const V = e.params.scrollbar;
    const Y = e.scrollbar.el;
    if (Y) {
      Y.classList.remove(e.isHorizontal() ? V.horizontalClass : V.verticalClass);
    }
    M();
  }
  n("init", () => {
    if (e.params.scrollbar.enabled === false) {
      Q();
    } else {
      X();
      b();
      g();
    }
  });
  n("update resize observerUpdate lock unlock", () => {
    b();
  });
  n("setTranslate", () => {
    g();
  });
  n("setTransition", (V, Y) => {
    T(Y);
  });
  n("enable disable", () => {
    const {
      el: V
    } = e.scrollbar;
    if (V) {
      V.classList[e.enabled ? "remove" : "add"](e.params.scrollbar.lockClass);
    }
  });
  n("destroy", () => {
    N();
  });
  const ae = () => {
    e.el.classList.remove(e.params.scrollbar.scrollbarDisabledClass);
    if (e.scrollbar.el) {
      e.scrollbar.el.classList.remove(e.params.scrollbar.scrollbarDisabledClass);
    }
    X();
    b();
    g();
  };
  const Q = () => {
    e.el.classList.add(e.params.scrollbar.scrollbarDisabledClass);
    if (e.scrollbar.el) {
      e.scrollbar.el.classList.add(e.params.scrollbar.scrollbarDisabledClass);
    }
    N();
  };
  Object.assign(e.scrollbar, {
    enable: ae,
    disable: Q,
    updateSize: b,
    setTranslate: g,
    init: X,
    destroy: N
  });
}
function Mk(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n
  } = t;
  r({
    parallax: {
      enabled: false
    }
  });
  const i = "[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]";
  const s = (c, p) => {
    const {
      rtl: d
    } = e;
    const E = d ? -1 : 1;
    const m = c.getAttribute("data-swiper-parallax") || "0";
    let g = c.getAttribute("data-swiper-parallax-x");
    let T = c.getAttribute("data-swiper-parallax-y");
    const b = c.getAttribute("data-swiper-parallax-scale");
    const x = c.getAttribute("data-swiper-parallax-opacity");
    const A = c.getAttribute("data-swiper-parallax-rotate");
    if (g || T) {
      g = g || "0";
      T = T || "0";
    } else if (e.isHorizontal()) {
      g = m;
      T = "0";
    } else {
      T = m;
      g = "0";
    }
    if (g.indexOf("%") >= 0) {
      g = `${parseInt(g, 10) * p * E}%`;
    } else {
      g = `${g * p * E}px`;
    }
    if (T.indexOf("%") >= 0) {
      T = `${parseInt(T, 10) * p}%`;
    } else {
      T = `${T * p}px`;
    }
    if (typeof x !== "undefined" && x !== null) {
      const v = x - (x - 1) * (1 - Math.abs(p));
      c.style.opacity = v;
    }
    let R = `translate3d(${g}, ${T}, 0px)`;
    if (typeof b !== "undefined" && b !== null) {
      const v = b - (b - 1) * (1 - Math.abs(p));
      R += ` scale(${v})`;
    }
    if (A && typeof A !== "undefined" && A !== null) {
      const v = A * p * -1;
      R += ` rotate(${v}deg)`;
    }
    c.style.transform = R;
  };
  const o = () => {
    const {
      el: c,
      slides: p,
      progress: d,
      snapGrid: E,
      isElement: m
    } = e;
    const g = br(c, i);
    if (e.isElement) {
      g.push(...br(e.hostEl, i));
    }
    g.forEach(T => {
      s(T, d);
    });
    p.forEach((T, b) => {
      let x = T.progress;
      if (e.params.slidesPerGroup > 1 && e.params.slidesPerView !== "auto") {
        x += Math.ceil(b / 2) - d * (E.length - 1);
      }
      x = Math.min(Math.max(x, -1), 1);
      T.querySelectorAll(`${i}, [data-swiper-parallax-rotate]`).forEach(A => {
        s(A, x);
      });
    });
  };
  const f = function (c = e.params.speed) {
    const {
      el: p,
      hostEl: d
    } = e;
    const E = [...p.querySelectorAll(i)];
    if (e.isElement) {
      E.push(...d.querySelectorAll(i));
    }
    E.forEach(m => {
      let g = parseInt(m.getAttribute("data-swiper-parallax-duration"), 10) || c;
      if (c === 0) {
        g = 0;
      }
      m.style.transitionDuration = `${g}ms`;
    });
  };
  n("beforeInit", () => {
    if (e.params.parallax.enabled) {
      e.params.watchSlidesProgress = true;
      e.originalParams.watchSlidesProgress = true;
    }
  });
  n("init", () => {
    if (e.params.parallax.enabled) {
      o();
    }
  });
  n("setTranslate", () => {
    if (e.params.parallax.enabled) {
      o();
    }
  });
  n("setTransition", (c, p) => {
    if (e.params.parallax.enabled) {
      f(p);
    }
  });
}
function $k(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n,
    emit: i
  } = t;
  const s = Zt();
  r({
    zoom: {
      enabled: false,
      maxRatio: 3,
      minRatio: 1,
      toggle: true,
      containerClass: "swiper-zoom-container",
      zoomedSlideClass: "swiper-slide-zoomed"
    }
  });
  e.zoom = {
    enabled: false
  };
  let o = 1;
  let f = false;
  let c;
  let p;
  const d = [];
  const E = {
    originX: 0,
    originY: 0,
    slideEl: undefined,
    slideWidth: undefined,
    slideHeight: undefined,
    imageEl: undefined,
    imageWrapEl: undefined,
    maxRatio: 3
  };
  const m = {
    isTouched: undefined,
    isMoved: undefined,
    currentX: undefined,
    currentY: undefined,
    minX: undefined,
    minY: undefined,
    maxX: undefined,
    maxY: undefined,
    width: undefined,
    height: undefined,
    startX: undefined,
    startY: undefined,
    touchesStart: {},
    touchesCurrent: {}
  };
  const g = {
    x: undefined,
    y: undefined,
    prevPositionX: undefined,
    prevPositionY: undefined,
    prevTime: undefined
  };
  let T = 1;
  Object.defineProperty(e.zoom, "scale", {
    get() {
      return T;
    },
    set(W) {
      if (T !== W) {
        const te = E.imageEl;
        const ie = E.slideEl;
        i("zoomChange", W, te, ie);
      }
      T = W;
    }
  });
  function b() {
    if (d.length < 2) {
      return 1;
    }
    const W = d[0].pageX;
    const te = d[0].pageY;
    const ie = d[1].pageX;
    const _e = d[1].pageY;
    return Math.sqrt((ie - W) ** 2 + (_e - te) ** 2);
  }
  function x() {
    if (d.length < 2) {
      return {
        x: null,
        y: null
      };
    }
    const W = E.imageEl.getBoundingClientRect();
    return [(d[0].pageX + (d[1].pageX - d[0].pageX) / 2 - W.x - s.scrollX) / o, (d[0].pageY + (d[1].pageY - d[0].pageY) / 2 - W.y - s.scrollY) / o];
  }
  function A() {
    if (e.isElement) {
      return "swiper-slide";
    } else {
      return `.${e.params.slideClass}`;
    }
  }
  function R(W) {
    const te = A();
    return !!W.target.matches(te) || e.slides.filter(ie => ie.contains(W.target)).length > 0;
  }
  function v(W) {
    const te = `.${e.params.zoom.containerClass}`;
    return !!W.target.matches(te) || [...e.hostEl.querySelectorAll(te)].filter(ie => ie.contains(W.target)).length > 0;
  }
  function y(W) {
    if (W.pointerType === "mouse") {
      d.splice(0, d.length);
    }
    if (!R(W)) {
      return;
    }
    const te = e.params.zoom;
    c = false;
    p = false;
    d.push(W);
    if (d.length >= 2) {
      c = true;
      E.scaleStart = b();
      if (!E.slideEl) {
        E.slideEl = W.target.closest(`.${e.params.slideClass}, swiper-slide`);
        E.slideEl ||= e.slides[e.activeIndex];
        let ie = E.slideEl.querySelector(`.${te.containerClass}`);
        ie &&= ie.querySelectorAll("picture, img, svg, canvas, .swiper-zoom-target")[0];
        E.imageEl = ie;
        if (ie) {
          E.imageWrapEl = Fs(E.imageEl, `.${te.containerClass}`)[0];
        } else {
          E.imageWrapEl = undefined;
        }
        if (!E.imageWrapEl) {
          E.imageEl = undefined;
          return;
        }
        E.maxRatio = E.imageWrapEl.getAttribute("data-swiper-zoom") || te.maxRatio;
      }
      if (E.imageEl) {
        const [ie, _e] = x();
        E.originX = ie;
        E.originY = _e;
        E.imageEl.style.transitionDuration = "0ms";
      }
      f = true;
    }
  }
  function U(W) {
    if (!R(W)) {
      return;
    }
    const te = e.params.zoom;
    const ie = e.zoom;
    const _e = d.findIndex(ye => ye.pointerId === W.pointerId);
    if (_e >= 0) {
      d[_e] = W;
    }
    if (d.length >= 2) {
      p = true;
      E.scaleMove = b();
      if (E.imageEl) {
        ie.scale = E.scaleMove / E.scaleStart * o;
        if (ie.scale > E.maxRatio) {
          ie.scale = E.maxRatio - 1 + (ie.scale - E.maxRatio + 1) ** 0.5;
        }
        if (ie.scale < te.minRatio) {
          ie.scale = te.minRatio + 1 - (te.minRatio - ie.scale + 1) ** 0.5;
        }
        E.imageEl.style.transform = `translate3d(0,0,0) scale(${ie.scale})`;
      }
    }
  }
  function P(W) {
    if (!R(W) || W.pointerType === "mouse" && W.type === "pointerout") {
      return;
    }
    const te = e.params.zoom;
    const ie = e.zoom;
    const _e = d.findIndex(ye => ye.pointerId === W.pointerId);
    if (_e >= 0) {
      d.splice(_e, 1);
    }
    if (!!c && !!p) {
      c = false;
      p = false;
      if (E.imageEl) {
        ie.scale = Math.max(Math.min(ie.scale, E.maxRatio), te.minRatio);
        E.imageEl.style.transitionDuration = `${e.params.speed}ms`;
        E.imageEl.style.transform = `translate3d(0,0,0) scale(${ie.scale})`;
        o = ie.scale;
        f = false;
        if (ie.scale > 1 && E.slideEl) {
          E.slideEl.classList.add(`${te.zoomedSlideClass}`);
        } else if (ie.scale <= 1 && E.slideEl) {
          E.slideEl.classList.remove(`${te.zoomedSlideClass}`);
        }
        if (ie.scale === 1) {
          E.originX = 0;
          E.originY = 0;
          E.slideEl = undefined;
        }
      }
    }
  }
  function M(W) {
    const te = e.device;
    if (!E.imageEl || m.isTouched) {
      return;
    }
    if (te.android && W.cancelable) {
      W.preventDefault();
    }
    m.isTouched = true;
    const ie = d.length > 0 ? d[0] : W;
    m.touchesStart.x = ie.pageX;
    m.touchesStart.y = ie.pageY;
  }
  function X(W) {
    if (!R(W) || !v(W)) {
      return;
    }
    const te = e.zoom;
    if (!E.imageEl || !m.isTouched || !E.slideEl) {
      return;
    }
    if (!m.isMoved) {
      m.width = E.imageEl.offsetWidth;
      m.height = E.imageEl.offsetHeight;
      m.startX = Ph(E.imageWrapEl, "x") || 0;
      m.startY = Ph(E.imageWrapEl, "y") || 0;
      E.slideWidth = E.slideEl.offsetWidth;
      E.slideHeight = E.slideEl.offsetHeight;
      E.imageWrapEl.style.transitionDuration = "0ms";
    }
    const ie = m.width * te.scale;
    const _e = m.height * te.scale;
    if (ie < E.slideWidth && _e < E.slideHeight) {
      return;
    }
    m.minX = Math.min(E.slideWidth / 2 - ie / 2, 0);
    m.maxX = -m.minX;
    m.minY = Math.min(E.slideHeight / 2 - _e / 2, 0);
    m.maxY = -m.minY;
    m.touchesCurrent.x = d.length > 0 ? d[0].pageX : W.pageX;
    m.touchesCurrent.y = d.length > 0 ? d[0].pageY : W.pageY;
    if (Math.max(Math.abs(m.touchesCurrent.x - m.touchesStart.x), Math.abs(m.touchesCurrent.y - m.touchesStart.y)) > 5) {
      e.allowClick = false;
    }
    if (!m.isMoved && !f) {
      if (e.isHorizontal() && (Math.floor(m.minX) === Math.floor(m.startX) && m.touchesCurrent.x < m.touchesStart.x || Math.floor(m.maxX) === Math.floor(m.startX) && m.touchesCurrent.x > m.touchesStart.x)) {
        m.isTouched = false;
        return;
      }
      if (!e.isHorizontal() && (Math.floor(m.minY) === Math.floor(m.startY) && m.touchesCurrent.y < m.touchesStart.y || Math.floor(m.maxY) === Math.floor(m.startY) && m.touchesCurrent.y > m.touchesStart.y)) {
        m.isTouched = false;
        return;
      }
    }
    if (W.cancelable) {
      W.preventDefault();
    }
    W.stopPropagation();
    m.isMoved = true;
    const Be = (te.scale - o) / (E.maxRatio - e.params.zoom.minRatio);
    const {
      originX: Le,
      originY: Ge
    } = E;
    m.currentX = m.touchesCurrent.x - m.touchesStart.x + m.startX + Be * (m.width - Le * 2);
    m.currentY = m.touchesCurrent.y - m.touchesStart.y + m.startY + Be * (m.height - Ge * 2);
    if (m.currentX < m.minX) {
      m.currentX = m.minX + 1 - (m.minX - m.currentX + 1) ** 0.8;
    }
    if (m.currentX > m.maxX) {
      m.currentX = m.maxX - 1 + (m.currentX - m.maxX + 1) ** 0.8;
    }
    if (m.currentY < m.minY) {
      m.currentY = m.minY + 1 - (m.minY - m.currentY + 1) ** 0.8;
    }
    if (m.currentY > m.maxY) {
      m.currentY = m.maxY - 1 + (m.currentY - m.maxY + 1) ** 0.8;
    }
    g.prevPositionX ||= m.touchesCurrent.x;
    g.prevPositionY ||= m.touchesCurrent.y;
    g.prevTime ||= Date.now();
    g.x = (m.touchesCurrent.x - g.prevPositionX) / (Date.now() - g.prevTime) / 2;
    g.y = (m.touchesCurrent.y - g.prevPositionY) / (Date.now() - g.prevTime) / 2;
    if (Math.abs(m.touchesCurrent.x - g.prevPositionX) < 2) {
      g.x = 0;
    }
    if (Math.abs(m.touchesCurrent.y - g.prevPositionY) < 2) {
      g.y = 0;
    }
    g.prevPositionX = m.touchesCurrent.x;
    g.prevPositionY = m.touchesCurrent.y;
    g.prevTime = Date.now();
    E.imageWrapEl.style.transform = `translate3d(${m.currentX}px, ${m.currentY}px,0)`;
  }
  function N() {
    const W = e.zoom;
    if (!E.imageEl) {
      return;
    }
    if (!m.isTouched || !m.isMoved) {
      m.isTouched = false;
      m.isMoved = false;
      return;
    }
    m.isTouched = false;
    m.isMoved = false;
    let te = 300;
    let ie = 300;
    const _e = g.x * te;
    const ye = m.currentX + _e;
    const Be = g.y * ie;
    const Le = m.currentY + Be;
    if (g.x !== 0) {
      te = Math.abs((ye - m.currentX) / g.x);
    }
    if (g.y !== 0) {
      ie = Math.abs((Le - m.currentY) / g.y);
    }
    const Ge = Math.max(te, ie);
    m.currentX = ye;
    m.currentY = Le;
    const Rt = m.width * W.scale;
    const je = m.height * W.scale;
    m.minX = Math.min(E.slideWidth / 2 - Rt / 2, 0);
    m.maxX = -m.minX;
    m.minY = Math.min(E.slideHeight / 2 - je / 2, 0);
    m.maxY = -m.minY;
    m.currentX = Math.max(Math.min(m.currentX, m.maxX), m.minX);
    m.currentY = Math.max(Math.min(m.currentY, m.maxY), m.minY);
    E.imageWrapEl.style.transitionDuration = `${Ge}ms`;
    E.imageWrapEl.style.transform = `translate3d(${m.currentX}px, ${m.currentY}px,0)`;
  }
  function ae() {
    const W = e.zoom;
    if (E.slideEl && e.activeIndex !== e.slides.indexOf(E.slideEl)) {
      if (E.imageEl) {
        E.imageEl.style.transform = "translate3d(0,0,0) scale(1)";
      }
      if (E.imageWrapEl) {
        E.imageWrapEl.style.transform = "translate3d(0,0,0)";
      }
      E.slideEl.classList.remove(`${e.params.zoom.zoomedSlideClass}`);
      W.scale = 1;
      o = 1;
      E.slideEl = undefined;
      E.imageEl = undefined;
      E.imageWrapEl = undefined;
      E.originX = 0;
      E.originY = 0;
    }
  }
  function Q(W) {
    const te = e.zoom;
    const ie = e.params.zoom;
    if (!E.slideEl) {
      if (W && W.target) {
        E.slideEl = W.target.closest(`.${e.params.slideClass}, swiper-slide`);
      }
      if (!E.slideEl) {
        if (e.params.virtual && e.params.virtual.enabled && e.virtual) {
          E.slideEl = br(e.slidesEl, `.${e.params.slideActiveClass}`)[0];
        } else {
          E.slideEl = e.slides[e.activeIndex];
        }
      }
      let Te = E.slideEl.querySelector(`.${ie.containerClass}`);
      Te &&= Te.querySelectorAll("picture, img, svg, canvas, .swiper-zoom-target")[0];
      E.imageEl = Te;
      if (Te) {
        E.imageWrapEl = Fs(E.imageEl, `.${ie.containerClass}`)[0];
      } else {
        E.imageWrapEl = undefined;
      }
    }
    if (!E.imageEl || !E.imageWrapEl) {
      return;
    }
    if (e.params.cssMode) {
      e.wrapperEl.style.overflow = "hidden";
      e.wrapperEl.style.touchAction = "none";
    }
    E.slideEl.classList.add(`${ie.zoomedSlideClass}`);
    let _e;
    let ye;
    let Be;
    let Le;
    let Ge;
    let Rt;
    let je;
    let Et;
    let Ve;
    let ot;
    let ft;
    let Ut;
    let $t;
    let F;
    let D;
    let ne;
    let he;
    let pe;
    if (typeof m.touchesStart.x === "undefined" && W) {
      _e = W.pageX;
      ye = W.pageY;
    } else {
      _e = m.touchesStart.x;
      ye = m.touchesStart.y;
    }
    const xe = typeof W == "number" ? W : null;
    if (o === 1 && xe) {
      _e = undefined;
      ye = undefined;
    }
    te.scale = xe || E.imageWrapEl.getAttribute("data-swiper-zoom") || ie.maxRatio;
    o = xe || E.imageWrapEl.getAttribute("data-swiper-zoom") || ie.maxRatio;
    if (W && (o !== 1 || !xe)) {
      he = E.slideEl.offsetWidth;
      pe = E.slideEl.offsetHeight;
      Be = wf(E.slideEl).left + s.scrollX;
      Le = wf(E.slideEl).top + s.scrollY;
      Ge = Be + he / 2 - _e;
      Rt = Le + pe / 2 - ye;
      Ve = E.imageEl.offsetWidth;
      ot = E.imageEl.offsetHeight;
      ft = Ve * te.scale;
      Ut = ot * te.scale;
      $t = Math.min(he / 2 - ft / 2, 0);
      F = Math.min(pe / 2 - Ut / 2, 0);
      D = -$t;
      ne = -F;
      je = Ge * te.scale;
      Et = Rt * te.scale;
      if (je < $t) {
        je = $t;
      }
      if (je > D) {
        je = D;
      }
      if (Et < F) {
        Et = F;
      }
      if (Et > ne) {
        Et = ne;
      }
    } else {
      je = 0;
      Et = 0;
    }
    if (xe && te.scale === 1) {
      E.originX = 0;
      E.originY = 0;
    }
    E.imageWrapEl.style.transitionDuration = "300ms";
    E.imageWrapEl.style.transform = `translate3d(${je}px, ${Et}px,0)`;
    E.imageEl.style.transitionDuration = "300ms";
    E.imageEl.style.transform = `translate3d(0,0,0) scale(${te.scale})`;
  }
  function V() {
    const W = e.zoom;
    const te = e.params.zoom;
    if (!E.slideEl) {
      if (e.params.virtual && e.params.virtual.enabled && e.virtual) {
        E.slideEl = br(e.slidesEl, `.${e.params.slideActiveClass}`)[0];
      } else {
        E.slideEl = e.slides[e.activeIndex];
      }
      let ie = E.slideEl.querySelector(`.${te.containerClass}`);
      ie &&= ie.querySelectorAll("picture, img, svg, canvas, .swiper-zoom-target")[0];
      E.imageEl = ie;
      if (ie) {
        E.imageWrapEl = Fs(E.imageEl, `.${te.containerClass}`)[0];
      } else {
        E.imageWrapEl = undefined;
      }
    }
    if (!!E.imageEl && !!E.imageWrapEl) {
      if (e.params.cssMode) {
        e.wrapperEl.style.overflow = "";
        e.wrapperEl.style.touchAction = "";
      }
      W.scale = 1;
      o = 1;
      E.imageWrapEl.style.transitionDuration = "300ms";
      E.imageWrapEl.style.transform = "translate3d(0,0,0)";
      E.imageEl.style.transitionDuration = "300ms";
      E.imageEl.style.transform = "translate3d(0,0,0) scale(1)";
      E.slideEl.classList.remove(`${te.zoomedSlideClass}`);
      E.slideEl = undefined;
      E.originX = 0;
      E.originY = 0;
    }
  }
  function Y(W) {
    const te = e.zoom;
    if (te.scale && te.scale !== 1) {
      V();
    } else {
      Q(W);
    }
  }
  function k() {
    const W = e.params.passiveListeners ? {
      passive: true,
      capture: false
    } : false;
    const te = e.params.passiveListeners ? {
      passive: false,
      capture: true
    } : true;
    return {
      passiveListener: W,
      activeListenerWithCapture: te
    };
  }
  function w() {
    const W = e.zoom;
    if (W.enabled) {
      return;
    }
    W.enabled = true;
    const {
      passiveListener: te,
      activeListenerWithCapture: ie
    } = k();
    e.wrapperEl.addEventListener("pointerdown", y, te);
    e.wrapperEl.addEventListener("pointermove", U, ie);
    ["pointerup", "pointercancel", "pointerout"].forEach(_e => {
      e.wrapperEl.addEventListener(_e, P, te);
    });
    e.wrapperEl.addEventListener("pointermove", X, ie);
  }
  function j() {
    const W = e.zoom;
    if (!W.enabled) {
      return;
    }
    W.enabled = false;
    const {
      passiveListener: te,
      activeListenerWithCapture: ie
    } = k();
    e.wrapperEl.removeEventListener("pointerdown", y, te);
    e.wrapperEl.removeEventListener("pointermove", U, ie);
    ["pointerup", "pointercancel", "pointerout"].forEach(_e => {
      e.wrapperEl.removeEventListener(_e, P, te);
    });
    e.wrapperEl.removeEventListener("pointermove", X, ie);
  }
  n("init", () => {
    if (e.params.zoom.enabled) {
      w();
    }
  });
  n("destroy", () => {
    j();
  });
  n("touchStart", (W, te) => {
    if (e.zoom.enabled) {
      M(te);
    }
  });
  n("touchEnd", (W, te) => {
    if (e.zoom.enabled) {
      N();
    }
  });
  n("doubleTap", (W, te) => {
    if (!e.animating && e.params.zoom.enabled && e.zoom.enabled && e.params.zoom.toggle) {
      Y(te);
    }
  });
  n("transitionEnd", () => {
    if (e.zoom.enabled && e.params.zoom.enabled) {
      ae();
    }
  });
  n("slideChange", () => {
    if (e.zoom.enabled && e.params.zoom.enabled && e.params.cssMode) {
      ae();
    }
  });
  Object.assign(e.zoom, {
    enable: w,
    disable: j,
    in: Q,
    out: V,
    toggle: Y
  });
}
function Kk(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n
  } = t;
  r({
    controller: {
      control: undefined,
      inverse: false,
      by: "slide"
    }
  });
  e.controller = {
    control: undefined
  };
  function i(p, d) {
    const E = function () {
      let b;
      let x;
      let A;
      return (R, v) => {
        x = -1;
        b = R.length;
        while (b - x > 1) {
          A = b + x >> 1;
          if (R[A] <= v) {
            x = A;
          } else {
            b = A;
          }
        }
        return b;
      };
    }();
    this.x = p;
    this.y = d;
    this.lastIndex = p.length - 1;
    let m;
    let g;
    this.interpolate = function (b) {
      if (b) {
        g = E(this.x, b);
        m = g - 1;
        return (b - this.x[m]) * (this.y[g] - this.y[m]) / (this.x[g] - this.x[m]) + this.y[m];
      } else {
        return 0;
      }
    };
    return this;
  }
  function s(p) {
    e.controller.spline = e.params.loop ? new i(e.slidesGrid, p.slidesGrid) : new i(e.snapGrid, p.snapGrid);
  }
  function o(p, d) {
    const E = e.controller.control;
    let m;
    let g;
    const T = e.constructor;
    function b(x) {
      if (x.destroyed) {
        return;
      }
      const A = e.rtlTranslate ? -e.translate : e.translate;
      if (e.params.controller.by === "slide") {
        s(x);
        g = -e.controller.spline.interpolate(-A);
      }
      if (!g || e.params.controller.by === "container") {
        m = (x.maxTranslate() - x.minTranslate()) / (e.maxTranslate() - e.minTranslate());
        if (Number.isNaN(m) || !Number.isFinite(m)) {
          m = 1;
        }
        g = (A - e.minTranslate()) * m + x.minTranslate();
      }
      if (e.params.controller.inverse) {
        g = x.maxTranslate() - g;
      }
      x.updateProgress(g);
      x.setTranslate(g, e);
      x.updateActiveIndex();
      x.updateSlidesClasses();
    }
    if (Array.isArray(E)) {
      for (let x = 0; x < E.length; x += 1) {
        if (E[x] !== d && E[x] instanceof T) {
          b(E[x]);
        }
      }
    } else if (E instanceof T && d !== E) {
      b(E);
    }
  }
  function f(p, d) {
    const E = e.constructor;
    const m = e.controller.control;
    let g;
    function T(b) {
      if (!b.destroyed) {
        b.setTransition(p, e);
        if (p !== 0) {
          b.transitionStart();
          if (b.params.autoHeight) {
            js(() => {
              b.updateAutoHeight();
            });
          }
          rl(b.wrapperEl, () => {
            if (m) {
              b.transitionEnd();
            }
          });
        }
      }
    }
    if (Array.isArray(m)) {
      for (g = 0; g < m.length; g += 1) {
        if (m[g] !== d && m[g] instanceof E) {
          T(m[g]);
        }
      }
    } else if (m instanceof E && d !== m) {
      T(m);
    }
  }
  function c() {
    if (e.controller.control && e.controller.spline) {
      e.controller.spline = undefined;
      delete e.controller.spline;
    }
  }
  n("beforeInit", () => {
    if (typeof window !== "undefined" && (typeof e.params.controller.control == "string" || e.params.controller.control instanceof HTMLElement)) {
      const p = document.querySelector(e.params.controller.control);
      if (p && p.swiper) {
        e.controller.control = p.swiper;
      } else if (p) {
        const d = E => {
          e.controller.control = E.detail[0];
          e.update();
          p.removeEventListener("init", d);
        };
        p.addEventListener("init", d);
      }
      return;
    }
    e.controller.control = e.params.controller.control;
  });
  n("update", () => {
    c();
  });
  n("resize", () => {
    c();
  });
  n("observerUpdate", () => {
    c();
  });
  n("setTranslate", (p, d, E) => {
    if (!!e.controller.control && !e.controller.control.destroyed) {
      e.controller.setTranslate(d, E);
    }
  });
  n("setTransition", (p, d, E) => {
    if (!!e.controller.control && !e.controller.control.destroyed) {
      e.controller.setTransition(d, E);
    }
  });
  Object.assign(e.controller, {
    setTranslate: o,
    setTransition: f
  });
}
function kk(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n
  } = t;
  r({
    a11y: {
      enabled: true,
      notificationClass: "swiper-notification",
      prevSlideMessage: "Previous slide",
      nextSlideMessage: "Next slide",
      firstSlideMessage: "This is the first slide",
      lastSlideMessage: "This is the last slide",
      paginationBulletMessage: "Go to slide {{index}}",
      slideLabelMessage: "{{index}} / {{slidesLength}}",
      containerMessage: null,
      containerRoleDescriptionMessage: null,
      itemRoleDescriptionMessage: null,
      slideRole: "group",
      id: null
    }
  });
  e.a11y = {
    clicked: false
  };
  let i = null;
  function s(k) {
    const w = i;
    if (w.length !== 0) {
      w.innerHTML = "";
      w.innerHTML = k;
    }
  }
  const o = k => (Array.isArray(k) ? k : [k]).filter(w => !!w);
  function f(k) {
    const w = () => Math.round(Math.random() * 16).toString(16);
    return "x".repeat(k).replace(/x/g, w);
  }
  function c(k) {
    k = o(k);
    k.forEach(w => {
      w.setAttribute("tabIndex", "0");
    });
  }
  function p(k) {
    k = o(k);
    k.forEach(w => {
      w.setAttribute("tabIndex", "-1");
    });
  }
  function d(k, w) {
    k = o(k);
    k.forEach(j => {
      j.setAttribute("role", w);
    });
  }
  function E(k, w) {
    k = o(k);
    k.forEach(j => {
      j.setAttribute("aria-roledescription", w);
    });
  }
  function m(k, w) {
    k = o(k);
    k.forEach(j => {
      j.setAttribute("aria-controls", w);
    });
  }
  function g(k, w) {
    k = o(k);
    k.forEach(j => {
      j.setAttribute("aria-label", w);
    });
  }
  function T(k, w) {
    k = o(k);
    k.forEach(j => {
      j.setAttribute("id", w);
    });
  }
  function b(k, w) {
    k = o(k);
    k.forEach(j => {
      j.setAttribute("aria-live", w);
    });
  }
  function x(k) {
    k = o(k);
    k.forEach(w => {
      w.setAttribute("aria-disabled", true);
    });
  }
  function A(k) {
    k = o(k);
    k.forEach(w => {
      w.setAttribute("aria-disabled", false);
    });
  }
  function R(k) {
    if (k.keyCode !== 13 && k.keyCode !== 32) {
      return;
    }
    const w = e.params.a11y;
    const j = k.target;
    if (!e.pagination || !e.pagination.el || j !== e.pagination.el && !e.pagination.el.contains(k.target) || !!k.target.matches(Ji(e.params.pagination.bulletClass))) {
      if (e.navigation && e.navigation.nextEl && j === e.navigation.nextEl) {
        if (!e.isEnd || !!e.params.loop) {
          e.slideNext();
        }
        if (e.isEnd) {
          s(w.lastSlideMessage);
        } else {
          s(w.nextSlideMessage);
        }
      }
      if (e.navigation && e.navigation.prevEl && j === e.navigation.prevEl) {
        if (!e.isBeginning || !!e.params.loop) {
          e.slidePrev();
        }
        if (e.isBeginning) {
          s(w.firstSlideMessage);
        } else {
          s(w.prevSlideMessage);
        }
      }
      if (e.pagination && j.matches(Ji(e.params.pagination.bulletClass))) {
        j.click();
      }
    }
  }
  function v() {
    if (e.params.loop || e.params.rewind || !e.navigation) {
      return;
    }
    const {
      nextEl: k,
      prevEl: w
    } = e.navigation;
    if (w) {
      if (e.isBeginning) {
        x(w);
        p(w);
      } else {
        A(w);
        c(w);
      }
    }
    if (k) {
      if (e.isEnd) {
        x(k);
        p(k);
      } else {
        A(k);
        c(k);
      }
    }
  }
  function y() {
    return e.pagination && e.pagination.bullets && e.pagination.bullets.length;
  }
  function U() {
    return y() && e.params.pagination.clickable;
  }
  function P() {
    const k = e.params.a11y;
    if (y()) {
      e.pagination.bullets.forEach(w => {
        if (e.params.pagination.clickable) {
          c(w);
          if (!e.params.pagination.renderBullet) {
            d(w, "button");
            g(w, k.paginationBulletMessage.replace(/\{\{index\}\}/, Tl(w) + 1));
          }
        }
        if (w.matches(Ji(e.params.pagination.bulletActiveClass))) {
          w.setAttribute("aria-current", "true");
        } else {
          w.removeAttribute("aria-current");
        }
      });
    }
  }
  const M = (k, w, j) => {
    c(k);
    if (k.tagName !== "BUTTON") {
      d(k, "button");
      k.addEventListener("keydown", R);
    }
    g(k, j);
    m(k, w);
  };
  const X = () => {
    e.a11y.clicked = true;
  };
  const N = () => {
    requestAnimationFrame(() => {
      requestAnimationFrame(() => {
        if (!e.destroyed) {
          e.a11y.clicked = false;
        }
      });
    });
  };
  const ae = k => {
    if (e.a11y.clicked) {
      return;
    }
    const w = k.target.closest(`.${e.params.slideClass}, swiper-slide`);
    if (!w || !e.slides.includes(w)) {
      return;
    }
    const j = e.slides.indexOf(w) === e.activeIndex;
    const W = e.params.watchSlidesProgress && e.visibleSlides && e.visibleSlides.includes(w);
    if (!j && !W && (!k.sourceCapabilities || !k.sourceCapabilities.firesTouchEvents)) {
      if (e.isHorizontal()) {
        e.el.scrollLeft = 0;
      } else {
        e.el.scrollTop = 0;
      }
      e.slideTo(e.slides.indexOf(w), 0);
    }
  };
  const Q = () => {
    const k = e.params.a11y;
    if (k.itemRoleDescriptionMessage) {
      E(e.slides, k.itemRoleDescriptionMessage);
    }
    if (k.slideRole) {
      d(e.slides, k.slideRole);
    }
    const w = e.slides.length;
    if (k.slideLabelMessage) {
      e.slides.forEach((j, W) => {
        const te = e.params.loop ? parseInt(j.getAttribute("data-swiper-slide-index"), 10) : W;
        const ie = k.slideLabelMessage.replace(/\{\{index\}\}/, te + 1).replace(/\{\{slidesLength\}\}/, w);
        g(j, ie);
      });
    }
  };
  const V = () => {
    const k = e.params.a11y;
    e.el.append(i);
    const w = e.el;
    if (k.containerRoleDescriptionMessage) {
      E(w, k.containerRoleDescriptionMessage);
    }
    if (k.containerMessage) {
      g(w, k.containerMessage);
    }
    const j = e.wrapperEl;
    const W = k.id || j.getAttribute("id") || `swiper-wrapper-${f(16)}`;
    const te = e.params.autoplay && e.params.autoplay.enabled ? "off" : "polite";
    T(j, W);
    b(j, te);
    Q();
    let {
      nextEl: ie,
      prevEl: _e
    } = e.navigation ? e.navigation : {};
    ie = o(ie);
    _e = o(_e);
    if (ie) {
      ie.forEach(ye => M(ye, W, k.nextSlideMessage));
    }
    if (_e) {
      _e.forEach(ye => M(ye, W, k.prevSlideMessage));
    }
    if (U()) {
      (Array.isArray(e.pagination.el) ? e.pagination.el : [e.pagination.el]).forEach(Be => {
        Be.addEventListener("keydown", R);
      });
    }
    e.el.addEventListener("focus", ae, true);
    e.el.addEventListener("pointerdown", X, true);
    e.el.addEventListener("pointerup", N, true);
  };
  function Y() {
    if (i) {
      i.remove();
    }
    let {
      nextEl: k,
      prevEl: w
    } = e.navigation ? e.navigation : {};
    k = o(k);
    w = o(w);
    if (k) {
      k.forEach(j => j.removeEventListener("keydown", R));
    }
    if (w) {
      w.forEach(j => j.removeEventListener("keydown", R));
    }
    if (U()) {
      (Array.isArray(e.pagination.el) ? e.pagination.el : [e.pagination.el]).forEach(W => {
        W.removeEventListener("keydown", R);
      });
    }
    e.el.removeEventListener("focus", ae, true);
    e.el.removeEventListener("pointerdown", X, true);
    e.el.removeEventListener("pointerup", N, true);
  }
  n("beforeInit", () => {
    i = Dn("span", e.params.a11y.notificationClass);
    i.setAttribute("aria-live", "assertive");
    i.setAttribute("aria-atomic", "true");
  });
  n("afterInit", () => {
    if (e.params.a11y.enabled) {
      V();
    }
  });
  n("slidesLengthChange snapGridLengthChange slidesGridLengthChange", () => {
    if (e.params.a11y.enabled) {
      Q();
    }
  });
  n("fromEdge toEdge afterInit lock unlock", () => {
    if (e.params.a11y.enabled) {
      v();
    }
  });
  n("paginationUpdate", () => {
    if (e.params.a11y.enabled) {
      P();
    }
  });
  n("destroy", () => {
    if (e.params.a11y.enabled) {
      Y();
    }
  });
}
function Gk(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n
  } = t;
  r({
    history: {
      enabled: false,
      root: "",
      replaceState: false,
      key: "slides",
      keepQuery: false
    }
  });
  let i = false;
  let s = {};
  const o = g => g.toString().replace(/\s+/g, "-").replace(/[^\w-]+/g, "").replace(/--+/g, "-").replace(/^-+/, "").replace(/-+$/, "");
  const f = g => {
    const T = Zt();
    let b;
    if (g) {
      b = new URL(g);
    } else {
      b = T.location;
    }
    const x = b.pathname.slice(1).split("/").filter(y => y !== "");
    const A = x.length;
    const R = x[A - 2];
    const v = x[A - 1];
    return {
      key: R,
      value: v
    };
  };
  const c = (g, T) => {
    const b = Zt();
    if (!i || !e.params.history.enabled) {
      return;
    }
    let x;
    if (e.params.url) {
      x = new URL(e.params.url);
    } else {
      x = b.location;
    }
    const A = e.slides[T];
    let R = o(A.getAttribute("data-history"));
    if (e.params.history.root.length > 0) {
      let y = e.params.history.root;
      if (y[y.length - 1] === "/") {
        y = y.slice(0, y.length - 1);
      }
      R = `${y}/${g ? `${g}/` : ""}${R}`;
    } else if (!x.pathname.includes(g)) {
      R = `${g ? `${g}/` : ""}${R}`;
    }
    if (e.params.history.keepQuery) {
      R += x.search;
    }
    const v = b.history.state;
    if (!v || v.value !== R) {
      if (e.params.history.replaceState) {
        b.history.replaceState({
          value: R
        }, null, R);
      } else {
        b.history.pushState({
          value: R
        }, null, R);
      }
    }
  };
  const p = (g, T, b) => {
    if (T) {
      for (let x = 0, A = e.slides.length; x < A; x += 1) {
        const R = e.slides[x];
        if (o(R.getAttribute("data-history")) === T) {
          const y = e.getSlideIndex(R);
          e.slideTo(y, g, b);
        }
      }
    } else {
      e.slideTo(0, g, b);
    }
  };
  const d = () => {
    s = f(e.params.url);
    p(e.params.speed, s.value, false);
  };
  const E = () => {
    const g = Zt();
    if (e.params.history) {
      if (!g.history || !g.history.pushState) {
        e.params.history.enabled = false;
        e.params.hashNavigation.enabled = true;
        return;
      }
      i = true;
      s = f(e.params.url);
      if (!s.key && !s.value) {
        if (!e.params.history.replaceState) {
          g.addEventListener("popstate", d);
        }
        return;
      }
      p(0, s.value, e.params.runCallbacksOnInit);
      if (!e.params.history.replaceState) {
        g.addEventListener("popstate", d);
      }
    }
  };
  const m = () => {
    const g = Zt();
    if (!e.params.history.replaceState) {
      g.removeEventListener("popstate", d);
    }
  };
  n("init", () => {
    if (e.params.history.enabled) {
      E();
    }
  });
  n("destroy", () => {
    if (e.params.history.enabled) {
      m();
    }
  });
  n("transitionEnd _freeModeNoMomentumRelease", () => {
    if (i) {
      c(e.params.history.key, e.activeIndex);
    }
  });
  n("slideChange", () => {
    if (i && e.params.cssMode) {
      c(e.params.history.key, e.activeIndex);
    }
  });
}
function Vk(t) {
  let {
    swiper: e,
    extendParams: r,
    emit: n,
    on: i
  } = t;
  let s = false;
  const o = Cr();
  const f = Zt();
  r({
    hashNavigation: {
      enabled: false,
      replaceState: false,
      watchState: false,
      getSlideIndex(m, g) {
        if (e.virtual && e.params.virtual.enabled) {
          const T = e.slides.filter(x => x.getAttribute("data-hash") === g)[0];
          if (T) {
            return parseInt(T.getAttribute("data-swiper-slide-index"), 10);
          } else {
            return 0;
          }
        }
        return e.getSlideIndex(br(e.slidesEl, `.${e.params.slideClass}[data-hash="${g}"], swiper-slide[data-hash="${g}"]`)[0]);
      }
    }
  });
  const c = () => {
    n("hashChange");
    const m = o.location.hash.replace("#", "");
    const g = e.virtual && e.params.virtual.enabled ? e.slidesEl.querySelector(`[data-swiper-slide-index="${e.activeIndex}"]`) : e.slides[e.activeIndex];
    const T = g ? g.getAttribute("data-hash") : "";
    if (m !== T) {
      const b = e.params.hashNavigation.getSlideIndex(e, m);
      if (typeof b === "undefined" || Number.isNaN(b)) {
        return;
      }
      e.slideTo(b);
    }
  };
  const p = () => {
    if (!s || !e.params.hashNavigation.enabled) {
      return;
    }
    const m = e.virtual && e.params.virtual.enabled ? e.slidesEl.querySelector(`[data-swiper-slide-index="${e.activeIndex}"]`) : e.slides[e.activeIndex];
    const g = m ? m.getAttribute("data-hash") || m.getAttribute("data-history") : "";
    if (e.params.hashNavigation.replaceState && f.history && f.history.replaceState) {
      f.history.replaceState(null, null, `#${g}` || "");
      n("hashSet");
    } else {
      o.location.hash = g || "";
      n("hashSet");
    }
  };
  const d = () => {
    if (!e.params.hashNavigation.enabled || e.params.history && e.params.history.enabled) {
      return;
    }
    s = true;
    const m = o.location.hash.replace("#", "");
    if (m) {
      const T = e.params.hashNavigation.getSlideIndex(e, m);
      e.slideTo(T || 0, 0, e.params.runCallbacksOnInit, true);
    }
    if (e.params.hashNavigation.watchState) {
      f.addEventListener("hashchange", c);
    }
  };
  const E = () => {
    if (e.params.hashNavigation.watchState) {
      f.removeEventListener("hashchange", c);
    }
  };
  i("init", () => {
    if (e.params.hashNavigation.enabled) {
      d();
    }
  });
  i("destroy", () => {
    if (e.params.hashNavigation.enabled) {
      E();
    }
  });
  i("transitionEnd _freeModeNoMomentumRelease", () => {
    if (s) {
      p();
    }
  });
  i("slideChange", () => {
    if (s && e.params.cssMode) {
      p();
    }
  });
}
function Fk(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n,
    emit: i,
    params: s
  } = t;
  e.autoplay = {
    running: false,
    paused: false,
    timeLeft: 0
  };
  r({
    autoplay: {
      enabled: false,
      delay: 3000,
      waitForTransition: true,
      disableOnInteraction: true,
      stopOnLastSlide: false,
      reverseDirection: false,
      pauseOnMouseEnter: false
    }
  });
  let o;
  let f;
  let c = s && s.autoplay ? s.autoplay.delay : 3000;
  let p = s && s.autoplay ? s.autoplay.delay : 3000;
  let d;
  let E = new Date().getTime;
  let m;
  let g;
  let T;
  let b;
  let x;
  let A;
  function R(W) {
    if (!!e && !e.destroyed && !!e.wrapperEl) {
      if (W.target === e.wrapperEl) {
        e.wrapperEl.removeEventListener("transitionend", R);
        N();
      }
    }
  }
  const v = () => {
    if (e.destroyed || !e.autoplay.running) {
      return;
    }
    if (e.autoplay.paused) {
      m = true;
    } else if (m) {
      p = d;
      m = false;
    }
    const W = e.autoplay.paused ? d : E + p - new Date().getTime();
    e.autoplay.timeLeft = W;
    i("autoplayTimeLeft", W, W / c);
    f = requestAnimationFrame(() => {
      v();
    });
  };
  const y = () => {
    let W;
    if (e.virtual && e.params.virtual.enabled) {
      W = e.slides.filter(ie => ie.classList.contains("swiper-slide-active"))[0];
    } else {
      W = e.slides[e.activeIndex];
    }
    if (W) {
      return parseInt(W.getAttribute("data-swiper-autoplay"), 10);
    } else {
      return undefined;
    }
  };
  const U = W => {
    if (e.destroyed || !e.autoplay.running) {
      return;
    }
    cancelAnimationFrame(f);
    v();
    let te = typeof W === "undefined" ? e.params.autoplay.delay : W;
    c = e.params.autoplay.delay;
    p = e.params.autoplay.delay;
    const ie = y();
    if (!Number.isNaN(ie) && ie > 0 && typeof W === "undefined") {
      te = ie;
      c = ie;
      p = ie;
    }
    d = te;
    const _e = e.params.speed;
    const ye = () => {
      if (!!e && !e.destroyed) {
        if (e.params.autoplay.reverseDirection) {
          if (!e.isBeginning || e.params.loop || e.params.rewind) {
            e.slidePrev(_e, true, true);
            i("autoplay");
          } else if (!e.params.autoplay.stopOnLastSlide) {
            e.slideTo(e.slides.length - 1, _e, true, true);
            i("autoplay");
          }
        } else if (!e.isEnd || e.params.loop || e.params.rewind) {
          e.slideNext(_e, true, true);
          i("autoplay");
        } else if (!e.params.autoplay.stopOnLastSlide) {
          e.slideTo(0, _e, true, true);
          i("autoplay");
        }
        if (e.params.cssMode) {
          E = new Date().getTime();
          requestAnimationFrame(() => {
            U();
          });
        }
      }
    };
    if (te > 0) {
      clearTimeout(o);
      o = setTimeout(() => {
        ye();
      }, te);
    } else {
      requestAnimationFrame(() => {
        ye();
      });
    }
    return te;
  };
  const P = () => {
    e.autoplay.running = true;
    U();
    i("autoplayStart");
  };
  const M = () => {
    e.autoplay.running = false;
    clearTimeout(o);
    cancelAnimationFrame(f);
    i("autoplayStop");
  };
  const X = (W, te) => {
    if (e.destroyed || !e.autoplay.running) {
      return;
    }
    clearTimeout(o);
    if (!W) {
      A = true;
    }
    const ie = () => {
      i("autoplayPause");
      if (e.params.autoplay.waitForTransition) {
        e.wrapperEl.addEventListener("transitionend", R);
      } else {
        N();
      }
    };
    e.autoplay.paused = true;
    if (te) {
      if (x) {
        d = e.params.autoplay.delay;
      }
      x = false;
      ie();
      return;
    }
    d = (d || e.params.autoplay.delay) - (new Date().getTime() - E);
    if (!e.isEnd || d >= 0 || !!e.params.loop) {
      if (d < 0) {
        d = 0;
      }
      ie();
    }
  };
  const N = () => {
    if ((!e.isEnd || d >= 0 || !!e.params.loop) && !e.destroyed && !!e.autoplay.running) {
      E = new Date().getTime();
      if (A) {
        A = false;
        U(d);
      } else {
        U();
      }
      e.autoplay.paused = false;
      i("autoplayResume");
    }
  };
  const ae = () => {
    if (e.destroyed || !e.autoplay.running) {
      return;
    }
    const W = Cr();
    if (W.visibilityState === "hidden") {
      A = true;
      X(true);
    }
    if (W.visibilityState === "visible") {
      N();
    }
  };
  const Q = W => {
    if (W.pointerType === "mouse") {
      A = true;
      if (!e.animating && !e.autoplay.paused) {
        X(true);
      }
    }
  };
  const V = W => {
    if (W.pointerType === "mouse" && e.autoplay.paused) {
      N();
    }
  };
  const Y = () => {
    if (e.params.autoplay.pauseOnMouseEnter) {
      e.el.addEventListener("pointerenter", Q);
      e.el.addEventListener("pointerleave", V);
    }
  };
  const k = () => {
    e.el.removeEventListener("pointerenter", Q);
    e.el.removeEventListener("pointerleave", V);
  };
  const w = () => {
    Cr().addEventListener("visibilitychange", ae);
  };
  const j = () => {
    Cr().removeEventListener("visibilitychange", ae);
  };
  n("init", () => {
    if (e.params.autoplay.enabled) {
      Y();
      w();
      E = new Date().getTime();
      P();
    }
  });
  n("destroy", () => {
    k();
    j();
    if (e.autoplay.running) {
      M();
    }
  });
  n("beforeTransitionStart", (W, te, ie) => {
    if (!e.destroyed && !!e.autoplay.running) {
      if (ie || !e.params.autoplay.disableOnInteraction) {
        X(true, true);
      } else {
        M();
      }
    }
  });
  n("sliderFirstMove", () => {
    if (!e.destroyed && !!e.autoplay.running) {
      if (e.params.autoplay.disableOnInteraction) {
        M();
        return;
      }
      g = true;
      T = false;
      A = false;
      b = setTimeout(() => {
        A = true;
        T = true;
        X(true);
      }, 200);
    }
  });
  n("touchEnd", () => {
    if (!e.destroyed && !!e.autoplay.running && !!g) {
      clearTimeout(b);
      clearTimeout(o);
      if (e.params.autoplay.disableOnInteraction) {
        T = false;
        g = false;
        return;
      }
      if (T && e.params.cssMode) {
        N();
      }
      T = false;
      g = false;
    }
  });
  n("slideChange", () => {
    if (!e.destroyed && !!e.autoplay.running) {
      x = true;
    }
  });
  Object.assign(e.autoplay, {
    start: P,
    stop: M,
    pause: X,
    resume: N
  });
}
function Hk(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n
  } = t;
  r({
    thumbs: {
      swiper: null,
      multipleActiveThumbs: true,
      autoScrollOffset: 0,
      slideThumbActiveClass: "swiper-slide-thumb-active",
      thumbsContainerClass: "swiper-thumbs"
    }
  });
  let i = false;
  let s = false;
  e.thumbs = {
    swiper: null
  };
  function o() {
    const p = e.thumbs.swiper;
    if (!p || p.destroyed) {
      return;
    }
    const d = p.clickedIndex;
    const E = p.clickedSlide;
    if (E && E.classList.contains(e.params.thumbs.slideThumbActiveClass) || typeof d === "undefined" || d === null) {
      return;
    }
    let m;
    if (p.params.loop) {
      m = parseInt(p.clickedSlide.getAttribute("data-swiper-slide-index"), 10);
    } else {
      m = d;
    }
    if (e.params.loop) {
      e.slideToLoop(m);
    } else {
      e.slideTo(m);
    }
  }
  function f() {
    const {
      thumbs: p
    } = e.params;
    if (i) {
      return false;
    }
    i = true;
    const d = e.constructor;
    if (p.swiper instanceof d) {
      e.thumbs.swiper = p.swiper;
      Object.assign(e.thumbs.swiper.originalParams, {
        watchSlidesProgress: true,
        slideToClickedSlide: false
      });
      Object.assign(e.thumbs.swiper.params, {
        watchSlidesProgress: true,
        slideToClickedSlide: false
      });
      e.thumbs.swiper.update();
    } else if (zo(p.swiper)) {
      const E = Object.assign({}, p.swiper);
      Object.assign(E, {
        watchSlidesProgress: true,
        slideToClickedSlide: false
      });
      e.thumbs.swiper = new d(E);
      s = true;
    }
    e.thumbs.swiper.el.classList.add(e.params.thumbs.thumbsContainerClass);
    e.thumbs.swiper.on("tap", o);
    return true;
  }
  function c(p) {
    const d = e.thumbs.swiper;
    if (!d || d.destroyed) {
      return;
    }
    const E = d.params.slidesPerView === "auto" ? d.slidesPerViewDynamic() : d.params.slidesPerView;
    let m = 1;
    const g = e.params.thumbs.slideThumbActiveClass;
    if (e.params.slidesPerView > 1 && !e.params.centeredSlides) {
      m = e.params.slidesPerView;
    }
    if (!e.params.thumbs.multipleActiveThumbs) {
      m = 1;
    }
    m = Math.floor(m);
    d.slides.forEach(x => x.classList.remove(g));
    if (d.params.loop || d.params.virtual && d.params.virtual.enabled) {
      for (let x = 0; x < m; x += 1) {
        br(d.slidesEl, `[data-swiper-slide-index="${e.realIndex + x}"]`).forEach(A => {
          A.classList.add(g);
        });
      }
    } else {
      for (let x = 0; x < m; x += 1) {
        if (d.slides[e.realIndex + x]) {
          d.slides[e.realIndex + x].classList.add(g);
        }
      }
    }
    const T = e.params.thumbs.autoScrollOffset;
    const b = T && !d.params.loop;
    if (e.realIndex !== d.realIndex || b) {
      const x = d.activeIndex;
      let A;
      let R;
      if (d.params.loop) {
        const v = d.slides.filter(y => y.getAttribute("data-swiper-slide-index") === `${e.realIndex}`)[0];
        A = d.slides.indexOf(v);
        R = e.activeIndex > e.previousIndex ? "next" : "prev";
      } else {
        A = e.realIndex;
        R = A > e.previousIndex ? "next" : "prev";
      }
      if (b) {
        A += R === "next" ? T : T * -1;
      }
      if (d.visibleSlidesIndexes && d.visibleSlidesIndexes.indexOf(A) < 0) {
        if (d.params.centeredSlides) {
          if (A > x) {
            A = A - Math.floor(E / 2) + 1;
          } else {
            A = A + Math.floor(E / 2) - 1;
          }
        } else if (A > x) {
          d.params.slidesPerGroup;
        }
        d.slideTo(A, p ? 0 : undefined);
      }
    }
  }
  n("beforeInit", () => {
    const {
      thumbs: p
    } = e.params;
    if (!!p && !!p.swiper) {
      if (typeof p.swiper == "string" || p.swiper instanceof HTMLElement) {
        const d = Cr();
        const E = () => {
          const g = typeof p.swiper == "string" ? d.querySelector(p.swiper) : p.swiper;
          if (g && g.swiper) {
            p.swiper = g.swiper;
            f();
            c(true);
          } else if (g) {
            const T = b => {
              p.swiper = b.detail[0];
              g.removeEventListener("init", T);
              f();
              c(true);
              p.swiper.update();
              e.update();
            };
            g.addEventListener("init", T);
          }
          return g;
        };
        const m = () => {
          if (e.destroyed) {
            return;
          }
          if (!E()) {
            requestAnimationFrame(m);
          }
        };
        requestAnimationFrame(m);
      } else {
        f();
        c(true);
      }
    }
  });
  n("slideChange update resize observerUpdate", () => {
    c();
  });
  n("setTransition", (p, d) => {
    const E = e.thumbs.swiper;
    if (!!E && !E.destroyed) {
      E.setTransition(d);
    }
  });
  n("beforeDestroy", () => {
    const p = e.thumbs.swiper;
    if (!!p && !p.destroyed) {
      if (s) {
        p.destroy();
      }
    }
  });
  Object.assign(e.thumbs, {
    init: f,
    update: c
  });
}
function Wk(t) {
  let {
    swiper: e,
    extendParams: r,
    emit: n,
    once: i
  } = t;
  r({
    freeMode: {
      enabled: false,
      momentum: true,
      momentumRatio: 1,
      momentumBounce: true,
      momentumBounceRatio: 1,
      momentumVelocityRatio: 1,
      sticky: false,
      minimumVelocity: 0.02
    }
  });
  function s() {
    if (e.params.cssMode) {
      return;
    }
    const c = e.getTranslate();
    e.setTranslate(c);
    e.setTransition(0);
    e.touchEventsData.velocities.length = 0;
    e.freeMode.onTouchEnd({
      currentPos: e.rtl ? e.translate : -e.translate
    });
  }
  function o() {
    if (e.params.cssMode) {
      return;
    }
    const {
      touchEventsData: c,
      touches: p
    } = e;
    if (c.velocities.length === 0) {
      c.velocities.push({
        position: p[e.isHorizontal() ? "startX" : "startY"],
        time: c.touchStartTime
      });
    }
    c.velocities.push({
      position: p[e.isHorizontal() ? "currentX" : "currentY"],
      time: _n()
    });
  }
  function f(c) {
    let {
      currentPos: p
    } = c;
    if (e.params.cssMode) {
      return;
    }
    const {
      params: d,
      wrapperEl: E,
      rtlTranslate: m,
      snapGrid: g,
      touchEventsData: T
    } = e;
    const x = _n() - T.touchStartTime;
    if (p < -e.minTranslate()) {
      e.slideTo(e.activeIndex);
      return;
    }
    if (p > -e.maxTranslate()) {
      if (e.slides.length < g.length) {
        e.slideTo(g.length - 1);
      } else {
        e.slideTo(e.slides.length - 1);
      }
      return;
    }
    if (d.freeMode.momentum) {
      if (T.velocities.length > 1) {
        const X = T.velocities.pop();
        const N = T.velocities.pop();
        const ae = X.position - N.position;
        const Q = X.time - N.time;
        e.velocity = ae / Q;
        e.velocity /= 2;
        if (Math.abs(e.velocity) < d.freeMode.minimumVelocity) {
          e.velocity = 0;
        }
        if (Q > 150 || _n() - X.time > 300) {
          e.velocity = 0;
        }
      } else {
        e.velocity = 0;
      }
      e.velocity *= d.freeMode.momentumVelocityRatio;
      T.velocities.length = 0;
      let A = d.freeMode.momentumRatio * 1000;
      const R = e.velocity * A;
      let v = e.translate + R;
      if (m) {
        v = -v;
      }
      let y = false;
      let U;
      const P = Math.abs(e.velocity) * 20 * d.freeMode.momentumBounceRatio;
      let M;
      if (v < e.maxTranslate()) {
        if (d.freeMode.momentumBounce) {
          if (v + e.maxTranslate() < -P) {
            v = e.maxTranslate() - P;
          }
          U = e.maxTranslate();
          y = true;
          T.allowMomentumBounce = true;
        } else {
          v = e.maxTranslate();
        }
        if (d.loop && d.centeredSlides) {
          M = true;
        }
      } else if (v > e.minTranslate()) {
        if (d.freeMode.momentumBounce) {
          if (v - e.minTranslate() > P) {
            v = e.minTranslate() + P;
          }
          U = e.minTranslate();
          y = true;
          T.allowMomentumBounce = true;
        } else {
          v = e.minTranslate();
        }
        if (d.loop && d.centeredSlides) {
          M = true;
        }
      } else if (d.freeMode.sticky) {
        let X;
        for (let N = 0; N < g.length; N += 1) {
          if (g[N] > -v) {
            X = N;
            break;
          }
        }
        if (Math.abs(g[X] - v) < Math.abs(g[X - 1] - v) || e.swipeDirection === "next") {
          v = g[X];
        } else {
          v = g[X - 1];
        }
        v = -v;
      }
      if (M) {
        i("transitionEnd", () => {
          e.loopFix();
        });
      }
      if (e.velocity !== 0) {
        if (m) {
          A = Math.abs((-v - e.translate) / e.velocity);
        } else {
          A = Math.abs((v - e.translate) / e.velocity);
        }
        if (d.freeMode.sticky) {
          const X = Math.abs((m ? -v : v) - e.translate);
          const N = e.slidesSizesGrid[e.activeIndex];
          if (X < N) {
            A = d.speed;
          } else if (X < N * 2) {
            A = d.speed * 1.5;
          } else {
            A = d.speed * 2.5;
          }
        }
      } else if (d.freeMode.sticky) {
        e.slideToClosest();
        return;
      }
      if (d.freeMode.momentumBounce && y) {
        e.updateProgress(U);
        e.setTransition(A);
        e.setTranslate(v);
        e.transitionStart(true, e.swipeDirection);
        e.animating = true;
        rl(E, () => {
          if (!!e && !e.destroyed && !!T.allowMomentumBounce) {
            n("momentumBounce");
            e.setTransition(d.speed);
            setTimeout(() => {
              e.setTranslate(U);
              rl(E, () => {
                if (!!e && !e.destroyed) {
                  e.transitionEnd();
                }
              });
            }, 0);
          }
        });
      } else if (e.velocity) {
        n("_freeModeNoMomentumRelease");
        e.updateProgress(v);
        e.setTransition(A);
        e.setTranslate(v);
        e.transitionStart(true, e.swipeDirection);
        if (!e.animating) {
          e.animating = true;
          rl(E, () => {
            if (!!e && !e.destroyed) {
              e.transitionEnd();
            }
          });
        }
      } else {
        e.updateProgress(v);
      }
      e.updateActiveIndex();
      e.updateSlidesClasses();
    } else if (d.freeMode.sticky) {
      e.slideToClosest();
      return;
    } else if (d.freeMode) {
      n("_freeModeNoMomentumRelease");
    }
    if (!d.freeMode.momentum || x >= d.longSwipesMs) {
      e.updateProgress();
      e.updateActiveIndex();
      e.updateSlidesClasses();
    }
  }
  Object.assign(e, {
    freeMode: {
      onTouchStart: s,
      onTouchMove: o,
      onTouchEnd: f
    }
  });
}
function Xk(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n
  } = t;
  r({
    grid: {
      rows: 1,
      fill: "column"
    }
  });
  let i;
  let s;
  let o;
  let f;
  const c = () => {
    let T = e.params.spaceBetween;
    if (typeof T == "string" && T.indexOf("%") >= 0) {
      T = parseFloat(T.replace("%", "")) / 100 * e.size;
    } else if (typeof T == "string") {
      T = parseFloat(T);
    }
    return T;
  };
  const p = T => {
    const {
      slidesPerView: b
    } = e.params;
    const {
      rows: x,
      fill: A
    } = e.params.grid;
    o = Math.floor(T / x);
    if (Math.floor(T / x) === T / x) {
      i = T;
    } else {
      i = Math.ceil(T / x) * x;
    }
    if (b !== "auto" && A === "row") {
      i = Math.max(i, b * x);
    }
    s = i / x;
  };
  const d = (T, b, x, A) => {
    const {
      slidesPerGroup: R
    } = e.params;
    const v = c();
    const {
      rows: y,
      fill: U
    } = e.params.grid;
    let P;
    let M;
    let X;
    if (U === "row" && R > 1) {
      const N = Math.floor(T / (R * y));
      const ae = T - y * R * N;
      const Q = N === 0 ? R : Math.min(Math.ceil((x - N * y * R) / y), R);
      X = Math.floor(ae / Q);
      M = ae - X * Q + N * R;
      P = M + X * i / y;
      b.style.order = P;
    } else if (U === "column") {
      M = Math.floor(T / y);
      X = T - M * y;
      if (M > o || M === o && X === y - 1) {
        X += 1;
        if (X >= y) {
          X = 0;
          M += 1;
        }
      }
    } else {
      X = Math.floor(T / s);
      M = T - X * s;
    }
    b.row = X;
    b.column = M;
    b.style[A("margin-top")] = X !== 0 ? v && `${v}px` : "";
  };
  const E = (T, b, x) => {
    const {
      centeredSlides: A,
      roundLengths: R
    } = e.params;
    const v = c();
    const {
      rows: y
    } = e.params.grid;
    e.virtualSize = (T + v) * i;
    e.virtualSize = Math.ceil(e.virtualSize / y) - v;
    e.wrapperEl.style[x("width")] = `${e.virtualSize + v}px`;
    if (A) {
      const U = [];
      for (let P = 0; P < b.length; P += 1) {
        let M = b[P];
        if (R) {
          M = Math.floor(M);
        }
        if (b[P] < e.virtualSize + b[0]) {
          U.push(M);
        }
      }
      b.splice(0, b.length);
      b.push(...U);
    }
  };
  const m = () => {
    f = e.params.grid && e.params.grid.rows > 1;
  };
  const g = () => {
    const {
      params: T,
      el: b
    } = e;
    const x = T.grid && T.grid.rows > 1;
    if (f && !x) {
      b.classList.remove(`${T.containerModifierClass}grid`, `${T.containerModifierClass}grid-column`);
      o = 1;
      e.emitContainerClasses();
    } else if (!f && x) {
      b.classList.add(`${T.containerModifierClass}grid`);
      if (T.grid.fill === "column") {
        b.classList.add(`${T.containerModifierClass}grid-column`);
      }
      e.emitContainerClasses();
    }
    f = x;
  };
  n("init", m);
  n("update", g);
  e.grid = {
    initSlides: p,
    updateSlide: d,
    updateWrapperSize: E
  };
}
function jk(t) {
  const e = this;
  const {
    params: r,
    slidesEl: n
  } = e;
  if (r.loop) {
    e.loopDestroy();
  }
  const i = s => {
    if (typeof s == "string") {
      const o = document.createElement("div");
      o.innerHTML = s;
      n.append(o.children[0]);
      o.innerHTML = "";
    } else {
      n.append(s);
    }
  };
  if (typeof t == "object" && "length" in t) {
    for (let s = 0; s < t.length; s += 1) {
      if (t[s]) {
        i(t[s]);
      }
    }
  } else {
    i(t);
  }
  e.recalcSlides();
  if (r.loop) {
    e.loopCreate();
  }
  if (!r.observer || e.isElement) {
    e.update();
  }
}
function zk(t) {
  const e = this;
  const {
    params: r,
    activeIndex: n,
    slidesEl: i
  } = e;
  if (r.loop) {
    e.loopDestroy();
  }
  let s = n + 1;
  const o = f => {
    if (typeof f == "string") {
      const c = document.createElement("div");
      c.innerHTML = f;
      i.prepend(c.children[0]);
      c.innerHTML = "";
    } else {
      i.prepend(f);
    }
  };
  if (typeof t == "object" && "length" in t) {
    for (let f = 0; f < t.length; f += 1) {
      if (t[f]) {
        o(t[f]);
      }
    }
    s = n + t.length;
  } else {
    o(t);
  }
  e.recalcSlides();
  if (r.loop) {
    e.loopCreate();
  }
  if (!r.observer || e.isElement) {
    e.update();
  }
  e.slideTo(s, 0, false);
}
function qk(t, e) {
  const r = this;
  const {
    params: n,
    activeIndex: i,
    slidesEl: s
  } = r;
  let o = i;
  if (n.loop) {
    o -= r.loopedSlides;
    r.loopDestroy();
    r.recalcSlides();
  }
  const f = r.slides.length;
  if (t <= 0) {
    r.prependSlide(e);
    return;
  }
  if (t >= f) {
    r.appendSlide(e);
    return;
  }
  let c = o > t ? o + 1 : o;
  const p = [];
  for (let d = f - 1; d >= t; d -= 1) {
    const E = r.slides[d];
    E.remove();
    p.unshift(E);
  }
  if (typeof e == "object" && "length" in e) {
    for (let d = 0; d < e.length; d += 1) {
      if (e[d]) {
        s.append(e[d]);
      }
    }
    c = o > t ? o + e.length : o;
  } else {
    s.append(e);
  }
  for (let d = 0; d < p.length; d += 1) {
    s.append(p[d]);
  }
  r.recalcSlides();
  if (n.loop) {
    r.loopCreate();
  }
  if (!n.observer || r.isElement) {
    r.update();
  }
  if (n.loop) {
    r.slideTo(c + r.loopedSlides, 0, false);
  } else {
    r.slideTo(c, 0, false);
  }
}
function Yk(t) {
  const e = this;
  const {
    params: r,
    activeIndex: n
  } = e;
  let i = n;
  if (r.loop) {
    i -= e.loopedSlides;
    e.loopDestroy();
  }
  let s = i;
  let o;
  if (typeof t == "object" && "length" in t) {
    for (let f = 0; f < t.length; f += 1) {
      o = t[f];
      if (e.slides[o]) {
        e.slides[o].remove();
      }
      if (o < s) {
        s -= 1;
      }
    }
    s = Math.max(s, 0);
  } else {
    o = t;
    if (e.slides[o]) {
      e.slides[o].remove();
    }
    if (o < s) {
      s -= 1;
    }
    s = Math.max(s, 0);
  }
  e.recalcSlides();
  if (r.loop) {
    e.loopCreate();
  }
  if (!r.observer || e.isElement) {
    e.update();
  }
  if (r.loop) {
    e.slideTo(s + e.loopedSlides, 0, false);
  } else {
    e.slideTo(s, 0, false);
  }
}
function Jk() {
  const t = this;
  const e = [];
  for (let r = 0; r < t.slides.length; r += 1) {
    e.push(r);
  }
  t.removeSlide(e);
}
function Zk(t) {
  let {
    swiper: e
  } = t;
  Object.assign(e, {
    appendSlide: jk.bind(e),
    prependSlide: zk.bind(e),
    addSlide: qk.bind(e),
    removeSlide: Yk.bind(e),
    removeAllSlides: Jk.bind(e)
  });
}
function co(t) {
  const {
    effect: e,
    swiper: r,
    on: n,
    setTranslate: i,
    setTransition: s,
    overwriteParams: o,
    perspective: f,
    recreateShadows: c,
    getEffectParams: p
  } = t;
  n("beforeInit", () => {
    if (r.params.effect !== e) {
      return;
    }
    r.classNames.push(`${r.params.containerModifierClass}${e}`);
    if (f && f()) {
      r.classNames.push(`${r.params.containerModifierClass}3d`);
    }
    const E = o ? o() : {};
    Object.assign(r.params, E);
    Object.assign(r.originalParams, E);
  });
  n("setTranslate", () => {
    if (r.params.effect === e) {
      i();
    }
  });
  n("setTransition", (E, m) => {
    if (r.params.effect === e) {
      s(m);
    }
  });
  n("transitionEnd", () => {
    if (r.params.effect === e && c) {
      if (!p || !p().slideShadows) {
        return;
      }
      r.slides.forEach(E => {
        E.querySelectorAll(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").forEach(m => m.remove());
      });
      c();
    }
  });
  let d;
  n("virtualUpdate", () => {
    if (r.params.effect === e) {
      if (!r.slides.length) {
        d = true;
      }
      requestAnimationFrame(() => {
        if (d && r.slides && r.slides.length) {
          i();
          d = false;
        }
      });
    }
  });
}
function Nl(t, e) {
  const r = Zs(e);
  if (r !== e) {
    r.style.backfaceVisibility = "hidden";
    r.style["-webkit-backface-visibility"] = "hidden";
  }
  return r;
}
function _c(t) {
  let {
    swiper: e,
    duration: r,
    transformElements: n,
    allSlides: i
  } = t;
  const {
    activeIndex: s
  } = e;
  const o = f => f.parentElement ? f.parentElement : e.slides.filter(p => p.shadowRoot && p.shadowRoot === f.parentNode)[0];
  if (e.params.virtualTranslate && r !== 0) {
    let f = false;
    let c;
    if (i) {
      c = n;
    } else {
      c = n.filter(p => {
        const d = p.classList.contains("swiper-slide-transform") ? o(p) : p;
        return e.getSlideIndex(d) === s;
      });
    }
    c.forEach(p => {
      rl(p, () => {
        if (f || !e || e.destroyed) {
          return;
        }
        f = true;
        e.animating = false;
        const d = new window.CustomEvent("transitionend", {
          bubbles: true,
          cancelable: true
        });
        e.wrapperEl.dispatchEvent(d);
      });
    });
  }
}
function Qk(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n
  } = t;
  r({
    fadeEffect: {
      crossFade: false
    }
  });
  co({
    effect: "fade",
    swiper: e,
    on: n,
    setTranslate: () => {
      const {
        slides: o
      } = e;
      const f = e.params.fadeEffect;
      for (let c = 0; c < o.length; c += 1) {
        const p = e.slides[c];
        let E = -p.swiperSlideOffset;
        if (!e.params.virtualTranslate) {
          E -= e.translate;
        }
        let m = 0;
        if (!e.isHorizontal()) {
          m = E;
          E = 0;
        }
        const g = e.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(p.progress), 0) : 1 + Math.min(Math.max(p.progress, -1), 0);
        const T = Nl(f, p);
        T.style.opacity = g;
        T.style.transform = `translate3d(${E}px, ${m}px, 0px)`;
      }
    },
    setTransition: o => {
      const f = e.slides.map(c => Zs(c));
      f.forEach(c => {
        c.style.transitionDuration = `${o}ms`;
      });
      _c({
        swiper: e,
        duration: o,
        transformElements: f,
        allSlides: true
      });
    },
    overwriteParams: () => ({
      slidesPerView: 1,
      slidesPerGroup: 1,
      watchSlidesProgress: true,
      spaceBetween: 0,
      virtualTranslate: !e.params.cssMode
    })
  });
}
function e2(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n
  } = t;
  r({
    cubeEffect: {
      slideShadows: true,
      shadow: true,
      shadowOffset: 20,
      shadowScale: 0.94
    }
  });
  const i = (c, p, d) => {
    let E = d ? c.querySelector(".swiper-slide-shadow-left") : c.querySelector(".swiper-slide-shadow-top");
    let m = d ? c.querySelector(".swiper-slide-shadow-right") : c.querySelector(".swiper-slide-shadow-bottom");
    if (!E) {
      E = Dn("div", `swiper-slide-shadow-cube swiper-slide-shadow-${d ? "left" : "top"}`.split(" "));
      c.append(E);
    }
    if (!m) {
      m = Dn("div", `swiper-slide-shadow-cube swiper-slide-shadow-${d ? "right" : "bottom"}`.split(" "));
      c.append(m);
    }
    if (E) {
      E.style.opacity = Math.max(-p, 0);
    }
    if (m) {
      m.style.opacity = Math.max(p, 0);
    }
  };
  co({
    effect: "cube",
    swiper: e,
    on: n,
    setTranslate: () => {
      const {
        el: c,
        wrapperEl: p,
        slides: d,
        width: E,
        height: m,
        rtlTranslate: g,
        size: T,
        browser: b
      } = e;
      const x = e.params.cubeEffect;
      const A = e.isHorizontal();
      const R = e.virtual && e.params.virtual.enabled;
      let v = 0;
      let y;
      if (x.shadow) {
        if (A) {
          y = e.wrapperEl.querySelector(".swiper-cube-shadow");
          if (!y) {
            y = Dn("div", "swiper-cube-shadow");
            e.wrapperEl.append(y);
          }
          y.style.height = `${E}px`;
        } else {
          y = c.querySelector(".swiper-cube-shadow");
          if (!y) {
            y = Dn("div", "swiper-cube-shadow");
            c.append(y);
          }
        }
      }
      for (let P = 0; P < d.length; P += 1) {
        const M = d[P];
        let X = P;
        if (R) {
          X = parseInt(M.getAttribute("data-swiper-slide-index"), 10);
        }
        let N = X * 90;
        let ae = Math.floor(N / 360);
        if (g) {
          N = -N;
          ae = Math.floor(-N / 360);
        }
        const Q = Math.max(Math.min(M.progress, 1), -1);
        let V = 0;
        let Y = 0;
        let k = 0;
        if (X % 4 === 0) {
          V = -ae * 4 * T;
          k = 0;
        } else if ((X - 1) % 4 === 0) {
          V = 0;
          k = -ae * 4 * T;
        } else if ((X - 2) % 4 === 0) {
          V = T + ae * 4 * T;
          k = T;
        } else if ((X - 3) % 4 === 0) {
          V = -T;
          k = T * 3 + T * 4 * ae;
        }
        if (g) {
          V = -V;
        }
        if (!A) {
          Y = V;
          V = 0;
        }
        const w = `rotateX(${A ? 0 : -N}deg) rotateY(${A ? N : 0}deg) translate3d(${V}px, ${Y}px, ${k}px)`;
        if (Q <= 1 && Q > -1) {
          v = X * 90 + Q * 90;
          if (g) {
            v = -X * 90 - Q * 90;
          }
        }
        M.style.transform = w;
        if (x.slideShadows) {
          i(M, Q, A);
        }
      }
      p.style.transformOrigin = `50% 50% -${T / 2}px`;
      p.style["-webkit-transform-origin"] = `50% 50% -${T / 2}px`;
      if (x.shadow) {
        if (A) {
          y.style.transform = `translate3d(0px, ${E / 2 + x.shadowOffset}px, ${-E / 2}px) rotateX(90deg) rotateZ(0deg) scale(${x.shadowScale})`;
        } else {
          const P = Math.abs(v) - Math.floor(Math.abs(v) / 90) * 90;
          const M = 1.5 - (Math.sin(P * 2 * Math.PI / 360) / 2 + Math.cos(P * 2 * Math.PI / 360) / 2);
          const X = x.shadowScale;
          const N = x.shadowScale / M;
          const ae = x.shadowOffset;
          y.style.transform = `scale3d(${X}, 1, ${N}) translate3d(0px, ${m / 2 + ae}px, ${-m / 2 / N}px) rotateX(-90deg)`;
        }
      }
      const U = (b.isSafari || b.isWebView) && b.needPerspectiveFix ? -T / 2 : 0;
      p.style.transform = `translate3d(0px,0,${U}px) rotateX(${e.isHorizontal() ? 0 : v}deg) rotateY(${e.isHorizontal() ? -v : 0}deg)`;
      p.style.setProperty("--swiper-cube-translate-z", `${U}px`);
    },
    setTransition: c => {
      const {
        el: p,
        slides: d
      } = e;
      d.forEach(E => {
        E.style.transitionDuration = `${c}ms`;
        E.querySelectorAll(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").forEach(m => {
          m.style.transitionDuration = `${c}ms`;
        });
      });
      if (e.params.cubeEffect.shadow && !e.isHorizontal()) {
        const E = p.querySelector(".swiper-cube-shadow");
        if (E) {
          E.style.transitionDuration = `${c}ms`;
        }
      }
    },
    recreateShadows: () => {
      const c = e.isHorizontal();
      e.slides.forEach(p => {
        const d = Math.max(Math.min(p.progress, 1), -1);
        i(p, d, c);
      });
    },
    getEffectParams: () => e.params.cubeEffect,
    perspective: () => true,
    overwriteParams: () => ({
      slidesPerView: 1,
      slidesPerGroup: 1,
      watchSlidesProgress: true,
      resistanceRatio: 0,
      spaceBetween: 0,
      centeredSlides: false,
      virtualTranslate: true
    })
  });
}
function to(t, e, r) {
  const n = `swiper-slide-shadow${r ? `-${r}` : ""}${t ? ` swiper-slide-shadow-${t}` : ""}`;
  const i = Zs(e);
  let s = i.querySelector(`.${n.split(" ").join(".")}`);
  if (!s) {
    s = Dn("div", n.split(" "));
    i.append(s);
  }
  return s;
}
function t2(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n
  } = t;
  r({
    flipEffect: {
      slideShadows: true,
      limitRotation: true
    }
  });
  const i = (c, p) => {
    let d = e.isHorizontal() ? c.querySelector(".swiper-slide-shadow-left") : c.querySelector(".swiper-slide-shadow-top");
    let E = e.isHorizontal() ? c.querySelector(".swiper-slide-shadow-right") : c.querySelector(".swiper-slide-shadow-bottom");
    d ||= to("flip", c, e.isHorizontal() ? "left" : "top");
    E ||= to("flip", c, e.isHorizontal() ? "right" : "bottom");
    if (d) {
      d.style.opacity = Math.max(-p, 0);
    }
    if (E) {
      E.style.opacity = Math.max(p, 0);
    }
  };
  co({
    effect: "flip",
    swiper: e,
    on: n,
    setTranslate: () => {
      const {
        slides: c,
        rtlTranslate: p
      } = e;
      const d = e.params.flipEffect;
      for (let E = 0; E < c.length; E += 1) {
        const m = c[E];
        let g = m.progress;
        if (e.params.flipEffect.limitRotation) {
          g = Math.max(Math.min(m.progress, 1), -1);
        }
        const T = m.swiperSlideOffset;
        let x = g * -180;
        let A = 0;
        let R = e.params.cssMode ? -T - e.translate : -T;
        let v = 0;
        if (e.isHorizontal()) {
          if (p) {
            x = -x;
          }
        } else {
          v = R;
          R = 0;
          A = -x;
          x = 0;
        }
        m.style.zIndex = -Math.abs(Math.round(g)) + c.length;
        if (d.slideShadows) {
          i(m, g);
        }
        const y = `translate3d(${R}px, ${v}px, 0px) rotateX(${A}deg) rotateY(${x}deg)`;
        const U = Nl(d, m);
        U.style.transform = y;
      }
    },
    setTransition: c => {
      const p = e.slides.map(d => Zs(d));
      p.forEach(d => {
        d.style.transitionDuration = `${c}ms`;
        d.querySelectorAll(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").forEach(E => {
          E.style.transitionDuration = `${c}ms`;
        });
      });
      _c({
        swiper: e,
        duration: c,
        transformElements: p
      });
    },
    recreateShadows: () => {
      e.params.flipEffect;
      e.slides.forEach(c => {
        let p = c.progress;
        if (e.params.flipEffect.limitRotation) {
          p = Math.max(Math.min(c.progress, 1), -1);
        }
        i(c, p);
      });
    },
    getEffectParams: () => e.params.flipEffect,
    perspective: () => true,
    overwriteParams: () => ({
      slidesPerView: 1,
      slidesPerGroup: 1,
      watchSlidesProgress: true,
      spaceBetween: 0,
      virtualTranslate: !e.params.cssMode
    })
  });
}
function r2(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n
  } = t;
  r({
    coverflowEffect: {
      rotate: 50,
      stretch: 0,
      depth: 100,
      scale: 1,
      modifier: 1,
      slideShadows: true
    }
  });
  co({
    effect: "coverflow",
    swiper: e,
    on: n,
    setTranslate: () => {
      const {
        width: o,
        height: f,
        slides: c,
        slidesSizesGrid: p
      } = e;
      const d = e.params.coverflowEffect;
      const E = e.isHorizontal();
      const m = e.translate;
      const g = E ? -m + o / 2 : -m + f / 2;
      const T = E ? d.rotate : -d.rotate;
      const b = d.depth;
      for (let x = 0, A = c.length; x < A; x += 1) {
        const R = c[x];
        const v = p[x];
        const y = R.swiperSlideOffset;
        const U = (g - y - v / 2) / v;
        const P = typeof d.modifier == "function" ? d.modifier(U) : U * d.modifier;
        let M = E ? T * P : 0;
        let X = E ? 0 : T * P;
        let N = -b * Math.abs(P);
        let ae = d.stretch;
        if (typeof ae == "string" && ae.indexOf("%") !== -1) {
          ae = parseFloat(d.stretch) / 100 * v;
        }
        let Q = E ? 0 : ae * P;
        let V = E ? ae * P : 0;
        let Y = 1 - (1 - d.scale) * Math.abs(P);
        if (Math.abs(V) < 0.001) {
          V = 0;
        }
        if (Math.abs(Q) < 0.001) {
          Q = 0;
        }
        if (Math.abs(N) < 0.001) {
          N = 0;
        }
        if (Math.abs(M) < 0.001) {
          M = 0;
        }
        if (Math.abs(X) < 0.001) {
          X = 0;
        }
        if (Math.abs(Y) < 0.001) {
          Y = 0;
        }
        const k = `translate3d(${V}px,${Q}px,${N}px)  rotateX(${X}deg) rotateY(${M}deg) scale(${Y})`;
        const w = Nl(d, R);
        w.style.transform = k;
        R.style.zIndex = -Math.abs(Math.round(P)) + 1;
        if (d.slideShadows) {
          let j = E ? R.querySelector(".swiper-slide-shadow-left") : R.querySelector(".swiper-slide-shadow-top");
          let W = E ? R.querySelector(".swiper-slide-shadow-right") : R.querySelector(".swiper-slide-shadow-bottom");
          j ||= to("coverflow", R, E ? "left" : "top");
          W ||= to("coverflow", R, E ? "right" : "bottom");
          if (j) {
            j.style.opacity = P > 0 ? P : 0;
          }
          if (W) {
            W.style.opacity = -P > 0 ? -P : 0;
          }
        }
      }
    },
    setTransition: o => {
      e.slides.map(c => Zs(c)).forEach(c => {
        c.style.transitionDuration = `${o}ms`;
        c.querySelectorAll(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").forEach(p => {
          p.style.transitionDuration = `${o}ms`;
        });
      });
    },
    perspective: () => true,
    overwriteParams: () => ({
      watchSlidesProgress: true
    })
  });
}
function n2(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n
  } = t;
  r({
    creativeEffect: {
      limitProgress: 1,
      shadowPerProgress: false,
      progressMultiplier: 1,
      perspective: true,
      prev: {
        translate: [0, 0, 0],
        rotate: [0, 0, 0],
        opacity: 1,
        scale: 1
      },
      next: {
        translate: [0, 0, 0],
        rotate: [0, 0, 0],
        opacity: 1,
        scale: 1
      }
    }
  });
  const i = f => typeof f == "string" ? f : `${f}px`;
  co({
    effect: "creative",
    swiper: e,
    on: n,
    setTranslate: () => {
      const {
        slides: f,
        wrapperEl: c,
        slidesSizesGrid: p
      } = e;
      const d = e.params.creativeEffect;
      const {
        progressMultiplier: E
      } = d;
      const m = e.params.centeredSlides;
      if (m) {
        const g = p[0] / 2 - e.params.slidesOffsetBefore || 0;
        c.style.transform = `translateX(calc(50% - ${g}px))`;
      }
      for (let g = 0; g < f.length; g += 1) {
        const T = f[g];
        const b = T.progress;
        const x = Math.min(Math.max(T.progress, -d.limitProgress), d.limitProgress);
        let A = x;
        if (!m) {
          A = Math.min(Math.max(T.originalProgress, -d.limitProgress), d.limitProgress);
        }
        const R = T.swiperSlideOffset;
        const v = [e.params.cssMode ? -R - e.translate : -R, 0, 0];
        const y = [0, 0, 0];
        let U = false;
        if (!e.isHorizontal()) {
          v[1] = v[0];
          v[0] = 0;
        }
        let P = {
          translate: [0, 0, 0],
          rotate: [0, 0, 0],
          scale: 1,
          opacity: 1
        };
        if (x < 0) {
          P = d.next;
          U = true;
        } else if (x > 0) {
          P = d.prev;
          U = true;
        }
        v.forEach((Y, k) => {
          v[k] = `calc(${Y}px + (${i(P.translate[k])} * ${Math.abs(x * E)}))`;
        });
        y.forEach((Y, k) => {
          y[k] = P.rotate[k] * Math.abs(x * E);
        });
        T.style.zIndex = -Math.abs(Math.round(b)) + f.length;
        const M = v.join(", ");
        const X = `rotateX(${y[0]}deg) rotateY(${y[1]}deg) rotateZ(${y[2]}deg)`;
        const N = A < 0 ? `scale(${1 + (1 - P.scale) * A * E})` : `scale(${1 - (1 - P.scale) * A * E})`;
        const ae = A < 0 ? 1 + (1 - P.opacity) * A * E : 1 - (1 - P.opacity) * A * E;
        const Q = `translate3d(${M}) ${X} ${N}`;
        if (U && P.shadow || !U) {
          let Y = T.querySelector(".swiper-slide-shadow");
          if (!Y && P.shadow) {
            Y = to("creative", T);
          }
          if (Y) {
            const k = d.shadowPerProgress ? x * (1 / d.limitProgress) : x;
            Y.style.opacity = Math.min(Math.max(Math.abs(k), 0), 1);
          }
        }
        const V = Nl(d, T);
        V.style.transform = Q;
        V.style.opacity = ae;
        if (P.origin) {
          V.style.transformOrigin = P.origin;
        }
      }
    },
    setTransition: f => {
      const c = e.slides.map(p => Zs(p));
      c.forEach(p => {
        p.style.transitionDuration = `${f}ms`;
        p.querySelectorAll(".swiper-slide-shadow").forEach(d => {
          d.style.transitionDuration = `${f}ms`;
        });
      });
      _c({
        swiper: e,
        duration: f,
        transformElements: c,
        allSlides: true
      });
    },
    perspective: () => e.params.creativeEffect.perspective,
    overwriteParams: () => ({
      watchSlidesProgress: true,
      virtualTranslate: !e.params.cssMode
    })
  });
}
function i2(t) {
  let {
    swiper: e,
    extendParams: r,
    on: n
  } = t;
  r({
    cardsEffect: {
      slideShadows: true,
      rotate: true,
      perSlideRotate: 2,
      perSlideOffset: 8
    }
  });
  co({
    effect: "cards",
    swiper: e,
    on: n,
    setTranslate: () => {
      const {
        slides: o,
        activeIndex: f,
        rtlTranslate: c
      } = e;
      const p = e.params.cardsEffect;
      const {
        startTranslate: d,
        isTouched: E
      } = e.touchEventsData;
      const m = c ? -e.translate : e.translate;
      for (let g = 0; g < o.length; g += 1) {
        const T = o[g];
        const b = T.progress;
        const x = Math.min(Math.max(b, -4), 4);
        let A = T.swiperSlideOffset;
        if (e.params.centeredSlides && !e.params.cssMode) {
          e.wrapperEl.style.transform = `translateX(${e.minTranslate()}px)`;
        }
        if (e.params.centeredSlides && e.params.cssMode) {
          A -= o[0].swiperSlideOffset;
        }
        let R = e.params.cssMode ? -A - e.translate : -A;
        let v = 0;
        const y = Math.abs(x) * -100;
        let U = 1;
        let P = -p.perSlideRotate * x;
        let M = p.perSlideOffset - Math.abs(x) * 0.75;
        const X = e.virtual && e.params.virtual.enabled ? e.virtual.from + g : g;
        const N = (X === f || X === f - 1) && x > 0 && x < 1 && (E || e.params.cssMode) && m < d;
        const ae = (X === f || X === f + 1) && x < 0 && x > -1 && (E || e.params.cssMode) && m > d;
        if (N || ae) {
          const k = (1 - Math.abs((Math.abs(x) - 0.5) / 0.5)) ** 0.5;
          P += x * -28 * k;
          U += k * -0.5;
          M += k * 96;
          v = `${k * -25 * Math.abs(x)}%`;
        }
        if (x < 0) {
          R = `calc(${R}px ${c ? "-" : "+"} (${M * Math.abs(x)}%))`;
        } else if (x > 0) {
          R = `calc(${R}px ${c ? "-" : "+"} (-${M * Math.abs(x)}%))`;
        } else {
          R = `${R}px`;
        }
        if (!e.isHorizontal()) {
          const k = v;
          v = R;
          R = k;
        }
        const Q = x < 0 ? `${1 + (1 - U) * x}` : `${1 - (1 - U) * x}`;
        const V = `
        translate3d(${R}, ${v}, ${y}px)
        rotateZ(${p.rotate ? c ? -P : P : 0}deg)
        scale(${Q})
      `;
        if (p.slideShadows) {
          let k = T.querySelector(".swiper-slide-shadow");
          k ||= to("cards", T);
          if (k) {
            k.style.opacity = Math.min(Math.max((Math.abs(x) - 0.5) / 0.5, 0), 1);
          }
        }
        T.style.zIndex = -Math.abs(Math.round(b)) + o.length;
        const Y = Nl(p, T);
        Y.style.transform = V;
      }
    },
    setTransition: o => {
      const f = e.slides.map(c => Zs(c));
      f.forEach(c => {
        c.style.transitionDuration = `${o}ms`;
        c.querySelectorAll(".swiper-slide-shadow").forEach(p => {
          p.style.transitionDuration = `${o}ms`;
        });
      });
      _c({
        swiper: e,
        duration: o,
        transformElements: f
      });
    },
    perspective: () => true,
    overwriteParams: () => ({
      watchSlidesProgress: true,
      virtualTranslate: !e.params.cssMode
    })
  });
}
const s2 = [Ik, Nk, Pk, Uk, Dk, Bk, Mk, $k, Kk, kk, Gk, Vk, Fk, Hk, Wk, Xk, Zk, Qk, e2, t2, r2, n2, i2];
rn.use(s2);
const Tc = ["eventsPrefix", "injectStyles", "injectStylesUrls", "modules", "init", "_direction", "oneWayMovement", "touchEventsTarget", "initialSlide", "_speed", "cssMode", "updateOnWindowResize", "resizeObserver", "nested", "focusableElements", "_enabled", "_width", "_height", "preventInteractionOnTransition", "userAgent", "url", "_edgeSwipeDetection", "_edgeSwipeThreshold", "_freeMode", "_autoHeight", "setWrapperSize", "virtualTranslate", "_effect", "breakpoints", "breakpointsBase", "_spaceBetween", "_slidesPerView", "maxBackfaceHiddenSlides", "_grid", "_slidesPerGroup", "_slidesPerGroupSkip", "_slidesPerGroupAuto", "_centeredSlides", "_centeredSlidesBounds", "_slidesOffsetBefore", "_slidesOffsetAfter", "normalizeSlideIndex", "_centerInsufficientSlides", "_watchOverflow", "roundLengths", "touchRatio", "touchAngle", "simulateTouch", "_shortSwipes", "_longSwipes", "longSwipesRatio", "longSwipesMs", "_followFinger", "allowTouchMove", "_threshold", "touchMoveStopPropagation", "touchStartPreventDefault", "touchStartForcePreventDefault", "touchReleaseOnEdges", "uniqueNavElements", "_resistance", "_resistanceRatio", "_watchSlidesProgress", "_grabCursor", "preventClicks", "preventClicksPropagation", "_slideToClickedSlide", "_loop", "loopedSlides", "loopPreventsSliding", "_rewind", "_allowSlidePrev", "_allowSlideNext", "_swipeHandler", "_noSwiping", "noSwipingClass", "noSwipingSelector", "passiveListeners", "containerModifierClass", "slideClass", "slideActiveClass", "slideVisibleClass", "slideNextClass", "slidePrevClass", "wrapperClass", "lazyPreloaderClass", "lazyPreloadPrevNext", "runCallbacksOnInit", "observer", "observeParents", "observeSlideChildren", "a11y", "_autoplay", "_controller", "coverflowEffect", "cubeEffect", "fadeEffect", "flipEffect", "creativeEffect", "cardsEffect", "hashNavigation", "history", "keyboard", "mousewheel", "_navigation", "_pagination", "parallax", "_scrollbar", "_thumbs", "virtual", "zoom", "control"];
function ro(t) {
  return typeof t == "object" && t !== null && t.constructor && Object.prototype.toString.call(t).slice(8, -1) === "Object" && !t.__swiper__;
}
function Of(t, e) {
  const r = ["__proto__", "constructor", "prototype"];
  Object.keys(e).filter(n => r.indexOf(n) < 0).forEach(n => {
    if (typeof t[n] === "undefined") {
      t[n] = e[n];
    } else if (ro(e[n]) && ro(t[n]) && Object.keys(e[n]).length > 0) {
      if (e[n].__swiper__) {
        t[n] = e[n];
      } else {
        Of(t[n], e[n]);
      }
    } else {
      t[n] = e[n];
    }
  });
}
function a2(t = {}) {
  return t.navigation && typeof t.navigation.nextEl === "undefined" && typeof t.navigation.prevEl === "undefined";
}
function o2(t = {}) {
  return t.pagination && typeof t.pagination.el === "undefined";
}
function l2(t = {}) {
  return t.scrollbar && typeof t.scrollbar.el === "undefined";
}
function uf(t = "") {
  return t.replace(/-[a-z]/g, e => e.toUpperCase().replace("-", ""));
}
function u2(t) {
  let {
    swiper: e,
    slides: r,
    passedParams: n,
    changedParams: i,
    nextEl: s,
    prevEl: o,
    scrollbarEl: f,
    paginationEl: c
  } = t;
  const p = i.filter(N => N !== "children" && N !== "direction" && N !== "wrapperClass");
  const {
    params: d,
    pagination: E,
    navigation: m,
    scrollbar: g,
    virtual: T,
    thumbs: b
  } = e;
  let x;
  let A;
  let R;
  let v;
  let y;
  let U;
  let P;
  let M;
  if (i.includes("thumbs") && n.thumbs && n.thumbs.swiper && d.thumbs && !d.thumbs.swiper) {
    x = true;
  }
  if (i.includes("controller") && n.controller && n.controller.control && d.controller && !d.controller.control) {
    A = true;
  }
  if (i.includes("pagination") && n.pagination && (n.pagination.el || c) && (d.pagination || d.pagination === false) && E && !E.el) {
    R = true;
  }
  if (i.includes("scrollbar") && n.scrollbar && (n.scrollbar.el || f) && (d.scrollbar || d.scrollbar === false) && g && !g.el) {
    v = true;
  }
  if (i.includes("navigation") && n.navigation && (n.navigation.prevEl || o) && (n.navigation.nextEl || s) && (d.navigation || d.navigation === false) && m && !m.prevEl && !m.nextEl) {
    y = true;
  }
  const X = N => {
    if (e[N]) {
      e[N].destroy();
      if (N === "navigation") {
        if (e.isElement) {
          e[N].prevEl.remove();
          e[N].nextEl.remove();
        }
        d[N].prevEl = undefined;
        d[N].nextEl = undefined;
        e[N].prevEl = undefined;
        e[N].nextEl = undefined;
      } else {
        if (e.isElement) {
          e[N].el.remove();
        }
        d[N].el = undefined;
        e[N].el = undefined;
      }
    }
  };
  if (i.includes("loop") && e.isElement) {
    if (d.loop && !n.loop) {
      U = true;
    } else if (!d.loop && n.loop) {
      P = true;
    } else {
      M = true;
    }
  }
  p.forEach(N => {
    if (ro(d[N]) && ro(n[N])) {
      Of(d[N], n[N]);
      if ((N === "navigation" || N === "pagination" || N === "scrollbar") && "enabled" in n[N] && !n[N].enabled) {
        X(N);
      }
    } else {
      const ae = n[N];
      if ((ae === true || ae === false) && (N === "navigation" || N === "pagination" || N === "scrollbar")) {
        if (ae === false) {
          X(N);
        }
      } else {
        d[N] = n[N];
      }
    }
  });
  if (p.includes("controller") && !A && e.controller && e.controller.control && d.controller && d.controller.control) {
    e.controller.control = d.controller.control;
  }
  if (i.includes("children") && r && T && d.virtual.enabled) {
    T.slides = r;
    T.update(true);
  }
  if (i.includes("children") && r && d.loop) {
    M = true;
  }
  if (x && b.init()) {
    b.update(true);
  }
  if (A) {
    e.controller.control = d.controller.control;
  }
  if (R) {
    if (e.isElement && (!c || typeof c == "string")) {
      c = document.createElement("div");
      c.classList.add("swiper-pagination");
      c.part.add("pagination");
      e.el.appendChild(c);
    }
    if (c) {
      d.pagination.el = c;
    }
    E.init();
    E.render();
    E.update();
  }
  if (v) {
    if (e.isElement && (!f || typeof f == "string")) {
      f = document.createElement("div");
      f.classList.add("swiper-scrollbar");
      f.part.add("scrollbar");
      e.el.appendChild(f);
    }
    if (f) {
      d.scrollbar.el = f;
    }
    g.init();
    g.updateSize();
    g.setTranslate();
  }
  if (y) {
    if (e.isElement) {
      if (!s || typeof s == "string") {
        s = document.createElement("div");
        s.classList.add("swiper-button-next");
        s.innerHTML = e.hostEl.constructor.nextButtonSvg;
        s.part.add("button-next");
        e.el.appendChild(s);
      }
      if (!o || typeof o == "string") {
        o = document.createElement("div");
        o.classList.add("swiper-button-prev");
        o.innerHTML = e.hostEl.constructor.prevButtonSvg;
        o.part.add("button-prev");
        e.el.appendChild(o);
      }
    }
    if (s) {
      d.navigation.nextEl = s;
    }
    if (o) {
      d.navigation.prevEl = o;
    }
    m.init();
    m.update();
  }
  if (i.includes("allowSlideNext")) {
    e.allowSlideNext = n.allowSlideNext;
  }
  if (i.includes("allowSlidePrev")) {
    e.allowSlidePrev = n.allowSlidePrev;
  }
  if (i.includes("direction")) {
    e.changeDirection(n.direction, false);
  }
  if (U || M) {
    e.loopDestroy();
  }
  if (P || M) {
    e.loopCreate();
  }
  e.update();
}
const Av = t => {
  if (parseFloat(t) === Number(t)) {
    return Number(t);
  }
  if (t === "true" || t === "") {
    return true;
  }
  if (t === "false") {
    return false;
  }
  if (t === "null") {
    return null;
  }
  if (t !== "undefined") {
    if (typeof t == "string" && t.includes("{") && t.includes("}") && t.includes("\"")) {
      let e;
      try {
        e = JSON.parse(t);
      } catch {
        e = t;
      }
      return e;
    }
    return t;
  }
};
const Lv = ["a11y", "autoplay", "controller", "cards-effect", "coverflow-effect", "creative-effect", "cube-effect", "fade-effect", "flip-effect", "free-mode", "grid", "hash-navigation", "history", "keyboard", "mousewheel", "navigation", "pagination", "parallax", "scrollbar", "thumbs", "virtual", "zoom"];
function Cv(t, e, r) {
  const n = {};
  const i = {};
  Of(n, Bh);
  const s = [...Tc, "on"];
  const o = s.map(c => c.replace(/_/, ""));
  s.forEach(c => {
    c = c.replace("_", "");
    if (typeof t[c] !== "undefined") {
      i[c] = t[c];
    }
  });
  const f = [...t.attributes];
  if (typeof e == "string" && typeof r !== "undefined") {
    f.push({
      name: e,
      value: ro(r) ? {
        ...r
      } : r
    });
  }
  f.forEach(c => {
    const p = Lv.filter(d => c.name.indexOf(`${d}-`) === 0)[0];
    if (p) {
      const d = uf(p);
      const E = uf(c.name.split(`${p}-`)[1]);
      if (typeof i[d] === "undefined") {
        i[d] = {};
      }
      if (i[d] === true) {
        i[d] = {
          enabled: true
        };
      }
      i[d][E] = Av(c.value);
    } else {
      const d = uf(c.name);
      if (!o.includes(d)) {
        return;
      }
      const E = Av(c.value);
      if (i[d] && Lv.includes(c.name) && !ro(E)) {
        if (i[d].constructor !== Object) {
          i[d] = {};
        }
        i[d].enabled = !!E;
      } else {
        i[d] = E;
      }
    }
  });
  Of(n, i);
  if (n.navigation) {
    n.navigation = {
      prevEl: ".swiper-button-prev",
      nextEl: ".swiper-button-next",
      ...(n.navigation !== true ? n.navigation : {})
    };
  } else if (n.navigation === false) {
    delete n.navigation;
  }
  if (n.scrollbar) {
    n.scrollbar = {
      el: ".swiper-scrollbar",
      ...(n.scrollbar !== true ? n.scrollbar : {})
    };
  } else if (n.scrollbar === false) {
    delete n.scrollbar;
  }
  if (n.pagination) {
    n.pagination = {
      el: ".swiper-pagination",
      ...(n.pagination !== true ? n.pagination : {})
    };
  } else if (n.pagination === false) {
    delete n.pagination;
  }
  return {
    params: n,
    passedParams: i
  };
}
const f2 = ":host{--swiper-theme-color:#007aff}:host{position:relative;display:block;margin-left:auto;margin-right:auto;z-index:1}.swiper{width:100%;height:100%;margin-left:auto;margin-right:auto;position:relative;overflow:hidden;overflow:clip;list-style:none;padding:0;z-index:1;display:block}.swiper-vertical>.swiper-wrapper{flex-direction:column}.swiper-wrapper{position:relative;width:100%;height:100%;z-index:1;display:flex;transition-property:transform;transition-timing-function:var(--swiper-wrapper-transition-timing-function,initial);box-sizing:content-box}.swiper-android ::slotted(swiper-slide),.swiper-ios ::slotted(swiper-slide),.swiper-wrapper{transform:translate3d(0px,0,0)}.swiper-horizontal{touch-action:pan-y}.swiper-vertical{touch-action:pan-x}::slotted(swiper-slide){flex-shrink:0;width:100%;height:100%;position:relative;transition-property:transform;display:block}::slotted(.swiper-slide-invisible-blank){visibility:hidden}.swiper-autoheight,.swiper-autoheight ::slotted(swiper-slide){height:auto}.swiper-autoheight .swiper-wrapper{align-items:flex-start;transition-property:transform,height}.swiper-backface-hidden ::slotted(swiper-slide){transform:translateZ(0);-webkit-backface-visibility:hidden;backface-visibility:hidden}.swiper-3d.swiper-css-mode .swiper-wrapper{perspective:1200px}.swiper-3d .swiper-wrapper{transform-style:preserve-3d}.swiper-3d{perspective:1200px}.swiper-3d .swiper-cube-shadow,.swiper-3d ::slotted(swiper-slide){transform-style:preserve-3d}.swiper-css-mode>.swiper-wrapper{overflow:auto;scrollbar-width:none;-ms-overflow-style:none}.swiper-css-mode>.swiper-wrapper::-webkit-scrollbar{display:none}.swiper-css-mode ::slotted(swiper-slide){scroll-snap-align:start start}.swiper-css-mode.swiper-horizontal>.swiper-wrapper{scroll-snap-type:x mandatory}.swiper-css-mode.swiper-vertical>.swiper-wrapper{scroll-snap-type:y mandatory}.swiper-css-mode.swiper-free-mode>.swiper-wrapper{scroll-snap-type:none}.swiper-css-mode.swiper-free-mode ::slotted(swiper-slide){scroll-snap-align:none}.swiper-css-mode.swiper-centered>.swiper-wrapper::before{content:'';flex-shrink:0;order:9999}.swiper-css-mode.swiper-centered ::slotted(swiper-slide){scroll-snap-align:center center;scroll-snap-stop:always}.swiper-css-mode.swiper-centered.swiper-horizontal ::slotted(swiper-slide):first-child{margin-inline-start:var(--swiper-centered-offset-before)}.swiper-css-mode.swiper-centered.swiper-horizontal>.swiper-wrapper::before{height:100%;min-height:1px;width:var(--swiper-centered-offset-after)}.swiper-css-mode.swiper-centered.swiper-vertical ::slotted(swiper-slide):first-child{margin-block-start:var(--swiper-centered-offset-before)}.swiper-css-mode.swiper-centered.swiper-vertical>.swiper-wrapper::before{width:100%;min-width:1px;height:var(--swiper-centered-offset-after)}.swiper-virtual ::slotted(swiper-slide){-webkit-backface-visibility:hidden;transform:translateZ(0)}.swiper-virtual.swiper-css-mode .swiper-wrapper::after{content:'';position:absolute;left:0;top:0;pointer-events:none}.swiper-virtual.swiper-css-mode.swiper-horizontal .swiper-wrapper::after{height:1px;width:var(--swiper-virtual-size)}.swiper-virtual.swiper-css-mode.swiper-vertical .swiper-wrapper::after{width:1px;height:var(--swiper-virtual-size)}:host{--swiper-navigation-size:44px}.swiper-button-next,.swiper-button-prev{position:absolute;top:var(--swiper-navigation-top-offset,50%);width:calc(var(--swiper-navigation-size)/ 44 * 27);height:var(--swiper-navigation-size);margin-top:calc(0px - (var(--swiper-navigation-size)/ 2));z-index:10;cursor:pointer;display:flex;align-items:center;justify-content:center;color:var(--swiper-navigation-color,var(--swiper-theme-color))}.swiper-button-next.swiper-button-disabled,.swiper-button-prev.swiper-button-disabled{opacity:.35;cursor:auto;pointer-events:none}.swiper-button-next.swiper-button-hidden,.swiper-button-prev.swiper-button-hidden{opacity:0;cursor:auto;pointer-events:none}.swiper-navigation-disabled .swiper-button-next,.swiper-navigation-disabled .swiper-button-prev{display:none!important}.swiper-button-next svg,.swiper-button-prev svg{width:100%;height:100%;object-fit:contain;transform-origin:center}.swiper-rtl .swiper-button-next svg,.swiper-rtl .swiper-button-prev svg{transform:rotate(180deg)}.swiper-button-prev,.swiper-rtl .swiper-button-next{left:var(--swiper-navigation-sides-offset,10px);right:auto}.swiper-button-next,.swiper-rtl .swiper-button-prev{right:var(--swiper-navigation-sides-offset,10px);left:auto}.swiper-button-lock{display:none}.swiper-pagination{position:absolute;text-align:center;transition:.3s opacity;transform:translate3d(0,0,0);z-index:10}.swiper-pagination.swiper-pagination-hidden{opacity:0}.swiper-pagination-disabled>.swiper-pagination,.swiper-pagination.swiper-pagination-disabled{display:none!important}.swiper-horizontal>.swiper-pagination-bullets,.swiper-pagination-bullets.swiper-pagination-horizontal,.swiper-pagination-custom,.swiper-pagination-fraction{bottom:var(--swiper-pagination-bottom,8px);top:var(--swiper-pagination-top,auto);left:0;width:100%}.swiper-pagination-bullets-dynamic{overflow:hidden;font-size:0}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{transform:scale(.33);position:relative}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active{transform:scale(1)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-main{transform:scale(1)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev{transform:scale(.66)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev-prev{transform:scale(.33)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next{transform:scale(.66)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next-next{transform:scale(.33)}.swiper-pagination-bullet{width:var(--swiper-pagination-bullet-width,var(--swiper-pagination-bullet-size,8px));height:var(--swiper-pagination-bullet-height,var(--swiper-pagination-bullet-size,8px));display:inline-block;border-radius:var(--swiper-pagination-bullet-border-radius,50%);background:var(--swiper-pagination-bullet-inactive-color,#000);opacity:var(--swiper-pagination-bullet-inactive-opacity, .2)}button.swiper-pagination-bullet{border:none;margin:0;padding:0;box-shadow:none;-webkit-appearance:none;appearance:none}.swiper-pagination-clickable .swiper-pagination-bullet{cursor:pointer}.swiper-pagination-bullet:only-child{display:none!important}.swiper-pagination-bullet-active{opacity:var(--swiper-pagination-bullet-opacity, 1);background:var(--swiper-pagination-color,var(--swiper-theme-color))}.swiper-pagination-vertical.swiper-pagination-bullets,.swiper-vertical>.swiper-pagination-bullets{right:var(--swiper-pagination-right,8px);left:var(--swiper-pagination-left,auto);top:50%;transform:translate3d(0px,-50%,0)}.swiper-pagination-vertical.swiper-pagination-bullets .swiper-pagination-bullet,.swiper-vertical>.swiper-pagination-bullets .swiper-pagination-bullet{margin:var(--swiper-pagination-bullet-vertical-gap,6px) 0;display:block}.swiper-pagination-vertical.swiper-pagination-bullets.swiper-pagination-bullets-dynamic,.swiper-vertical>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic{top:50%;transform:translateY(-50%);width:8px}.swiper-pagination-vertical.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet,.swiper-vertical>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{display:inline-block;transition:.2s transform,.2s top}.swiper-horizontal>.swiper-pagination-bullets .swiper-pagination-bullet,.swiper-pagination-horizontal.swiper-pagination-bullets .swiper-pagination-bullet{margin:0 var(--swiper-pagination-bullet-horizontal-gap,4px)}.swiper-horizontal>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic,.swiper-pagination-horizontal.swiper-pagination-bullets.swiper-pagination-bullets-dynamic{left:50%;transform:translateX(-50%);white-space:nowrap}.swiper-horizontal>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet,.swiper-pagination-horizontal.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{transition:.2s transform,.2s left}.swiper-horizontal.swiper-rtl>.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{transition:.2s transform,.2s right}.swiper-pagination-fraction{color:var(--swiper-pagination-fraction-color,inherit)}.swiper-pagination-progressbar{background:var(--swiper-pagination-progressbar-bg-color,rgba(0,0,0,.25));position:absolute}.swiper-pagination-progressbar .swiper-pagination-progressbar-fill{background:var(--swiper-pagination-color,var(--swiper-theme-color));position:absolute;left:0;top:0;width:100%;height:100%;transform:scale(0);transform-origin:left top}.swiper-rtl .swiper-pagination-progressbar .swiper-pagination-progressbar-fill{transform-origin:right top}.swiper-horizontal>.swiper-pagination-progressbar,.swiper-pagination-progressbar.swiper-pagination-horizontal,.swiper-pagination-progressbar.swiper-pagination-vertical.swiper-pagination-progressbar-opposite,.swiper-vertical>.swiper-pagination-progressbar.swiper-pagination-progressbar-opposite{width:100%;height:var(--swiper-pagination-progressbar-size,4px);left:0;top:0}.swiper-horizontal>.swiper-pagination-progressbar.swiper-pagination-progressbar-opposite,.swiper-pagination-progressbar.swiper-pagination-horizontal.swiper-pagination-progressbar-opposite,.swiper-pagination-progressbar.swiper-pagination-vertical,.swiper-vertical>.swiper-pagination-progressbar{width:var(--swiper-pagination-progressbar-size,4px);height:100%;left:0;top:0}.swiper-pagination-lock{display:none}.swiper-scrollbar{border-radius:var(--swiper-scrollbar-border-radius,10px);position:relative;touch-action:none;background:var(--swiper-scrollbar-bg-color,rgba(0,0,0,.1))}.swiper-scrollbar-disabled>.swiper-scrollbar,.swiper-scrollbar.swiper-scrollbar-disabled{display:none!important}.swiper-horizontal>.swiper-scrollbar,.swiper-scrollbar.swiper-scrollbar-horizontal{position:absolute;left:var(--swiper-scrollbar-sides-offset,1%);bottom:var(--swiper-scrollbar-bottom,4px);top:var(--swiper-scrollbar-top,auto);z-index:50;height:var(--swiper-scrollbar-size,4px);width:calc(100% - 2 * var(--swiper-scrollbar-sides-offset,1%))}.swiper-scrollbar.swiper-scrollbar-vertical,.swiper-vertical>.swiper-scrollbar{position:absolute;left:var(--swiper-scrollbar-left,auto);right:var(--swiper-scrollbar-right,4px);top:var(--swiper-scrollbar-sides-offset,1%);z-index:50;width:var(--swiper-scrollbar-size,4px);height:calc(100% - 2 * var(--swiper-scrollbar-sides-offset,1%))}.swiper-scrollbar-drag{height:100%;width:100%;position:relative;background:var(--swiper-scrollbar-drag-bg-color,rgba(0,0,0,.5));border-radius:var(--swiper-scrollbar-border-radius,10px);left:0;top:0}.swiper-scrollbar-cursor-drag{cursor:move}.swiper-scrollbar-lock{display:none}::slotted(.swiper-slide-zoomed){cursor:move;touch-action:none}.swiper .swiper-notification{position:absolute;left:0;top:0;pointer-events:none;opacity:0;z-index:-1000}.swiper-free-mode>.swiper-wrapper{transition-timing-function:ease-out;margin:0 auto}.swiper-grid>.swiper-wrapper{flex-wrap:wrap}.swiper-grid-column>.swiper-wrapper{flex-wrap:wrap;flex-direction:column}.swiper-fade.swiper-free-mode ::slotted(swiper-slide){transition-timing-function:ease-out}.swiper-fade ::slotted(swiper-slide){pointer-events:none;transition-property:opacity}.swiper-fade ::slotted(swiper-slide) ::slotted(swiper-slide){pointer-events:none}.swiper-fade ::slotted(.swiper-slide-active){pointer-events:auto}.swiper-fade ::slotted(.swiper-slide-active) ::slotted(.swiper-slide-active){pointer-events:auto}.swiper-cube{overflow:visible}.swiper-cube ::slotted(swiper-slide){pointer-events:none;-webkit-backface-visibility:hidden;backface-visibility:hidden;z-index:1;visibility:hidden;transform-origin:0 0;width:100%;height:100%}.swiper-cube ::slotted(swiper-slide) ::slotted(swiper-slide){pointer-events:none}.swiper-cube.swiper-rtl ::slotted(swiper-slide){transform-origin:100% 0}.swiper-cube ::slotted(.swiper-slide-active),.swiper-cube ::slotted(.swiper-slide-active) ::slotted(.swiper-slide-active){pointer-events:auto}.swiper-cube ::slotted(.swiper-slide-active),.swiper-cube ::slotted(.swiper-slide-next),.swiper-cube ::slotted(.swiper-slide-prev){pointer-events:auto;visibility:visible}.swiper-cube .swiper-cube-shadow{position:absolute;left:0;bottom:0px;width:100%;height:100%;opacity:.6;z-index:0}.swiper-cube .swiper-cube-shadow:before{content:'';background:#000;position:absolute;left:0;top:0;bottom:0;right:0;filter:blur(50px)}.swiper-cube ::slotted(.swiper-slide-next)+::slotted(swiper-slide){pointer-events:auto;visibility:visible}.swiper-flip{overflow:visible}.swiper-flip ::slotted(swiper-slide){pointer-events:none;-webkit-backface-visibility:hidden;backface-visibility:hidden;z-index:1}.swiper-flip ::slotted(swiper-slide) ::slotted(swiper-slide){pointer-events:none}.swiper-flip ::slotted(.swiper-slide-active),.swiper-flip ::slotted(.swiper-slide-active) ::slotted(.swiper-slide-active){pointer-events:auto}.swiper-creative ::slotted(swiper-slide){-webkit-backface-visibility:hidden;backface-visibility:hidden;overflow:hidden;transition-property:transform,opacity,height}.swiper-cards{overflow:visible}.swiper-cards ::slotted(swiper-slide){transform-origin:center bottom;-webkit-backface-visibility:hidden;backface-visibility:hidden;overflow:hidden}";
const c2 = "::slotted(.swiper-slide-shadow),::slotted(.swiper-slide-shadow-bottom),::slotted(.swiper-slide-shadow-left),::slotted(.swiper-slide-shadow-right),::slotted(.swiper-slide-shadow-top){position:absolute;left:0;top:0;width:100%;height:100%;pointer-events:none;z-index:10}::slotted(.swiper-slide-shadow){background:rgba(0,0,0,.15)}::slotted(.swiper-slide-shadow-left){background-image:linear-gradient(to left,rgba(0,0,0,.5),rgba(0,0,0,0))}::slotted(.swiper-slide-shadow-right){background-image:linear-gradient(to right,rgba(0,0,0,.5),rgba(0,0,0,0))}::slotted(.swiper-slide-shadow-top){background-image:linear-gradient(to top,rgba(0,0,0,.5),rgba(0,0,0,0))}::slotted(.swiper-slide-shadow-bottom){background-image:linear-gradient(to bottom,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-lazy-preloader{animation:swiper-preloader-spin 1s infinite linear;width:42px;height:42px;position:absolute;left:50%;top:50%;margin-left:-21px;margin-top:-21px;z-index:10;transform-origin:50%;box-sizing:border-box;border:4px solid var(--swiper-preloader-color,var(--swiper-theme-color));border-radius:50%;border-top-color:transparent}@keyframes swiper-preloader-spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}::slotted(.swiper-slide-shadow-cube.swiper-slide-shadow-bottom),::slotted(.swiper-slide-shadow-cube.swiper-slide-shadow-left),::slotted(.swiper-slide-shadow-cube.swiper-slide-shadow-right),::slotted(.swiper-slide-shadow-cube.swiper-slide-shadow-top){z-index:0;-webkit-backface-visibility:hidden;backface-visibility:hidden}::slotted(.swiper-slide-shadow-flip.swiper-slide-shadow-bottom),::slotted(.swiper-slide-shadow-flip.swiper-slide-shadow-left),::slotted(.swiper-slide-shadow-flip.swiper-slide-shadow-right),::slotted(.swiper-slide-shadow-flip.swiper-slide-shadow-top){z-index:0;-webkit-backface-visibility:hidden;backface-visibility:hidden}::slotted(.swiper-zoom-container){width:100%;height:100%;display:flex;justify-content:center;align-items:center;text-align:center}::slotted(.swiper-zoom-container)>canvas,::slotted(.swiper-zoom-container)>img,::slotted(.swiper-zoom-container)>svg{max-width:100%;max-height:100%;object-fit:contain}";
class p2 {}
const XS = typeof window === "undefined" || typeof HTMLElement === "undefined" ? p2 : HTMLElement;
const wv = `<svg width="11" height="20" viewBox="0 0 11 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M0.38296 20.0762C0.111788 19.805 0.111788 19.3654 0.38296 19.0942L9.19758 10.2796L0.38296 1.46497C0.111788 1.19379 0.111788 0.754138 0.38296 0.482966C0.654131 0.211794 1.09379 0.211794 1.36496 0.482966L10.4341 9.55214C10.8359 9.9539 10.8359 10.6053 10.4341 11.007L1.36496 20.0762C1.09379 20.3474 0.654131 20.3474 0.38296 20.0762Z" fill="currentColor"/></svg>
    `;
const jS = (t, e) => {
  if (typeof CSSStyleSheet !== "undefined" && t.adoptedStyleSheets) {
    const r = new CSSStyleSheet();
    r.replaceSync(e);
    t.adoptedStyleSheets = [r];
  } else {
    const r = document.createElement("style");
    r.rel = "stylesheet";
    r.textContent = e;
    t.appendChild(r);
  }
};
class zS extends XS {
  constructor() {
    super();
    this.attachShadow({
      mode: "open"
    });
  }
  static get nextButtonSvg() {
    return wv;
  }
  static get prevButtonSvg() {
    return wv.replace("/></svg>", " transform-origin=\"center\" transform=\"rotate(180)\"/></svg>");
  }
  cssStyles() {
    return [f2, ...(this.injectStyles && Array.isArray(this.injectStyles) ? this.injectStyles : [])].join(`
`);
  }
  cssLinks() {
    return this.injectStylesUrls || [];
  }
  calcSlideSlots() {
    const e = this.slideSlots || 0;
    const r = [...this.querySelectorAll("[slot^=slide-]")].map(n => parseInt(n.getAttribute("slot").split("slide-")[1], 10));
    this.slideSlots = r.length ? Math.max(...r) + 1 : 0;
    if (!!this.rendered) {
      if (this.slideSlots > e) {
        for (let n = e; n < this.slideSlots; n += 1) {
          const i = document.createElement("swiper-slide");
          i.setAttribute("part", `slide slide-${n + 1}`);
          const s = document.createElement("slot");
          s.setAttribute("name", `slide-${n + 1}`);
          i.appendChild(s);
          this.shadowRoot.querySelector(".swiper-wrapper").appendChild(i);
        }
      } else if (this.slideSlots < e) {
        const n = this.swiper.slides;
        for (let i = n.length - 1; i >= 0; i -= 1) {
          if (i > this.slideSlots) {
            n[i].remove();
          }
        }
      }
    }
  }
  render() {
    if (this.rendered) {
      return;
    }
    this.calcSlideSlots();
    let e = this.cssStyles();
    if (this.slideSlots > 0) {
      e = e.replace(/::slotted\(([a-z-0-9.]*)\)/g, "$1");
    }
    if (e.length) {
      jS(this.shadowRoot, e);
    }
    this.cssLinks().forEach(n => {
      if (this.shadowRoot.querySelector(`link[href="${n}"]`)) {
        return;
      }
      const s = document.createElement("link");
      s.rel = "stylesheet";
      s.href = n;
      this.shadowRoot.appendChild(s);
    });
    const r = document.createElement("div");
    r.classList.add("swiper");
    r.part = "container";
    r.innerHTML = `
      <slot name="container-start"></slot>
      <div class="swiper-wrapper" part="wrapper">
        <slot></slot>
        ${Array.from({
      length: this.slideSlots
    }).map((n, i) => `
        <swiper-slide part="slide slide-${i}">
          <slot name="slide-${i}"></slot>
        </swiper-slide>
        `).join("")}
      </div>
      <slot name="container-end"></slot>
      ${a2(this.passedParams) ? `
        <div part="button-prev" class="swiper-button-prev">${this.constructor.prevButtonSvg}</div>
        <div part="button-next" class="swiper-button-next">${this.constructor.nextButtonSvg}</div>
      ` : ""}
      ${o2(this.passedParams) ? `
        <div part="pagination" class="swiper-pagination"></div>
      ` : ""}
      ${l2(this.passedParams) ? `
        <div part="scrollbar" class="swiper-scrollbar"></div>
      ` : ""}
    `;
    this.shadowRoot.appendChild(r);
    this.rendered = true;
  }
  initialize() {
    var e = this;
    if (this.initialized) {
      return;
    }
    this.initialized = true;
    const {
      params: r,
      passedParams: n
    } = Cv(this);
    this.swiperParams = r;
    this.passedParams = n;
    delete this.swiperParams.init;
    this.render();
    this.swiper = new rn(this.shadowRoot.querySelector(".swiper"), {
      ...(r.virtual ? {} : {
        observer: true,
        observeSlideChildren: this.slideSlots > 0
      }),
      ...r,
      touchEventsTarget: "container",
      onAny: function (i) {
        if (i === "observerUpdate") {
          e.calcSlideSlots();
        }
        const s = r.eventsPrefix ? `${r.eventsPrefix}${i.toLowerCase()}` : i.toLowerCase();
        for (var o = arguments.length, f = new Array(o > 1 ? o - 1 : 0), c = 1; c < o; c++) {
          f[c - 1] = arguments[c];
        }
        const p = new CustomEvent(s, {
          detail: f,
          bubbles: i !== "hashChange",
          cancelable: true
        });
        e.dispatchEvent(p);
      }
    });
  }
  connectedCallback() {
    if ((!this.initialized || !this.nested || !this.closest("swiper-slide") || !this.closest("swiper-slide").swiperLoopMoveDOM) && this.init !== false && this.getAttribute("init") !== "false") {
      this.initialize();
    }
  }
  disconnectedCallback() {
    if (!this.nested || !this.closest("swiper-slide") || !this.closest("swiper-slide").swiperLoopMoveDOM) {
      if (this.swiper && this.swiper.destroy) {
        this.swiper.destroy();
      }
      this.initialized = false;
    }
  }
  updateSwiperOnPropChange(e, r) {
    const {
      params: n,
      passedParams: i
    } = Cv(this, e, r);
    this.passedParams = i;
    this.swiperParams = n;
    u2({
      swiper: this.swiper,
      passedParams: this.passedParams,
      changedParams: [uf(e)],
      ...(e === "navigation" && i[e] ? {
        prevEl: ".swiper-button-prev",
        nextEl: ".swiper-button-next"
      } : {}),
      ...(e === "pagination" && i[e] ? {
        paginationEl: ".swiper-pagination"
      } : {}),
      ...(e === "scrollbar" && i[e] ? {
        scrollbarEl: ".swiper-scrollbar"
      } : {})
    });
  }
  attributeChangedCallback(e, r, n) {
    if (this.initialized) {
      if (r === "true" && n === null) {
        n = false;
      }
      this.updateSwiperOnPropChange(e, n);
    }
  }
  static get observedAttributes() {
    return Tc.filter(r => r.includes("_")).map(r => r.replace(/[A-Z]/g, n => `-${n}`).replace("_", "").toLowerCase());
  }
}
Tc.forEach(t => {
  if (t !== "init") {
    t = t.replace("_", "");
    Object.defineProperty(zS.prototype, t, {
      configurable: true,
      get() {
        return (this.passedParams || {})[t];
      },
      set(e) {
        this.passedParams ||= {};
        this.passedParams[t] = e;
        if (this.initialized) {
          this.updateSwiperOnPropChange(t, e);
        }
      }
    });
  }
});
class d2 extends XS {
  constructor() {
    super();
    this.attachShadow({
      mode: "open"
    });
  }
  render() {
    const e = this.lazy || this.getAttribute("lazy") === "" || this.getAttribute("lazy") === "true";
    jS(this.shadowRoot, c2);
    this.shadowRoot.appendChild(document.createElement("slot"));
    if (e) {
      const r = document.createElement("div");
      r.classList.add("swiper-lazy-preloader");
      r.part.add("preloader");
      this.shadowRoot.appendChild(r);
    }
  }
  initialize() {
    this.render();
  }
  connectedCallback() {
    this.initialize();
  }
}
const h2 = () => {
  if (typeof window !== "undefined") {
    if (!window.customElements.get("swiper-container")) {
      window.customElements.define("swiper-container", zS);
    }
    if (!window.customElements.get("swiper-slide")) {
      window.customElements.define("swiper-slide", d2);
    }
  }
};
if (typeof window !== "undefined") {
  window.SwiperElementRegisterParams = t => {
    Tc.push(...t);
  };
}
var Nt = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function vc(t) {
  if (t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default")) {
    return t.default;
  } else {
    return t;
  }
}
function E2(t) {
  if (t.__esModule) {
    return t;
  }
  var e = t.default;
  if (typeof e == "function") {
    var r = function n() {
      if (this instanceof n) {
        return Reflect.construct(e, arguments, this.constructor);
      } else {
        return e.apply(this, arguments);
      }
    };
    r.prototype = e.prototype;
  } else {
    r = {};
  }
  Object.defineProperty(r, "__esModule", {
    value: true
  });
  Object.keys(t).forEach(function (n) {
    var i = Object.getOwnPropertyDescriptor(t, n);
    Object.defineProperty(r, n, i.get ? i : {
      enumerable: true,
      get: function () {
        return t[n];
      }
    });
  });
  return r;
}
var yi = {
  DEBUG: false,
  LIB_VERSION: "2.53.0"
};
var at;
if (typeof window === "undefined") {
  var Ov = {
    hostname: ""
  };
  at = {
    navigator: {
      userAgent: ""
    },
    document: {
      location: Ov,
      referrer: ""
    },
    screen: {
      width: 0,
      height: 0
    },
    location: Ov
  };
} else {
  at = window;
}
var m2 = 86400000;
var bc = Array.prototype;
var g2 = Function.prototype;
var qS = Object.prototype;
var Qi = bc.slice;
var Pl = qS.toString;
var xc = qS.hasOwnProperty;
var ir = at.console;
var es = at.navigator;
var It = at.document;
var Ku = at.opera;
var If = at.screen;
var Xn = es.userAgent;
var Td = g2.bind;
var Iv = bc.forEach;
var Nv = bc.indexOf;
var Pv = bc.map;
var _2 = Array.isArray;
var Mh = {};
var L = {
  trim: function (t) {
    return t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
  }
};
var yt = {
  log: function () {
    if (yi.DEBUG && !L.isUndefined(ir) && ir) {
      try {
        ir.log.apply(ir, arguments);
      } catch {
        L.each(arguments, function (e) {
          ir.log(e);
        });
      }
    }
  },
  warn: function () {
    if (yi.DEBUG && !L.isUndefined(ir) && ir) {
      var t = ["Mixpanel warning:"].concat(L.toArray(arguments));
      try {
        ir.warn.apply(ir, t);
      } catch {
        L.each(t, function (r) {
          ir.warn(r);
        });
      }
    }
  },
  error: function () {
    if (yi.DEBUG && !L.isUndefined(ir) && ir) {
      var t = ["Mixpanel error:"].concat(L.toArray(arguments));
      try {
        ir.error.apply(ir, t);
      } catch {
        L.each(t, function (r) {
          ir.error(r);
        });
      }
    }
  },
  critical: function () {
    if (!L.isUndefined(ir) && ir) {
      var t = ["Mixpanel error:"].concat(L.toArray(arguments));
      try {
        ir.error.apply(ir, t);
      } catch {
        L.each(t, function (r) {
          ir.error(r);
        });
      }
    }
  }
};
function vd(t, e) {
  return function () {
    arguments[0] = "[" + e + "] " + arguments[0];
    return t.apply(yt, arguments);
  };
}
function qE(t) {
  return {
    log: vd(yt.log, t),
    error: vd(yt.error, t),
    critical: vd(yt.critical, t)
  };
}
L.bind = function (t, e) {
  var r;
  var n;
  if (Td && t.bind === Td) {
    return Td.apply(t, Qi.call(arguments, 1));
  }
  if (!L.isFunction(t)) {
    throw new TypeError();
  }
  r = Qi.call(arguments, 2);
  n = function () {
    if (!(this instanceof n)) {
      return t.apply(e, r.concat(Qi.call(arguments)));
    }
    var i = {
      prototype: t.prototype
    };
    var s = new i();
    i.prototype = null;
    var o = t.apply(s, r.concat(Qi.call(arguments)));
    if (Object(o) === o) {
      return o;
    } else {
      return s;
    }
  };
  return n;
};
L.each = function (t, e, r) {
  if (t != null) {
    if (Iv && t.forEach === Iv) {
      t.forEach(e, r);
    } else if (t.length === +t.length) {
      for (var n = 0, i = t.length; n < i; n++) {
        if (n in t && e.call(r, t[n], n, t) === Mh) {
          return;
        }
      }
    } else {
      for (var s in t) {
        if (xc.call(t, s) && e.call(r, t[s], s, t) === Mh) {
          return;
        }
      }
    }
  }
};
L.extend = function (t) {
  L.each(Qi.call(arguments, 1), function (e) {
    for (var r in e) {
      if (e[r] !== undefined) {
        t[r] = e[r];
      }
    }
  });
  return t;
};
L.isArray = _2 || function (t) {
  return Pl.call(t) === "[object Array]";
};
L.isFunction = function (t) {
  try {
    return /^\s*\bfunction\b/.test(t);
  } catch {
    return false;
  }
};
L.isArguments = function (t) {
  return !!t && !!xc.call(t, "callee");
};
L.toArray = function (t) {
  if (t) {
    if (t.toArray) {
      return t.toArray();
    } else if (L.isArray(t) || L.isArguments(t)) {
      return Qi.call(t);
    } else {
      return L.values(t);
    }
  } else {
    return [];
  }
};
L.map = function (t, e, r) {
  if (Pv && t.map === Pv) {
    return t.map(e, r);
  }
  var n = [];
  L.each(t, function (i) {
    n.push(e.call(r, i));
  });
  return n;
};
L.keys = function (t) {
  var e = [];
  if (t !== null) {
    L.each(t, function (r, n) {
      e[e.length] = n;
    });
  }
  return e;
};
L.values = function (t) {
  var e = [];
  if (t !== null) {
    L.each(t, function (r) {
      e[e.length] = r;
    });
  }
  return e;
};
L.include = function (t, e) {
  var r = false;
  if (t === null) {
    return r;
  } else if (Nv && t.indexOf === Nv) {
    return t.indexOf(e) != -1;
  } else {
    L.each(t, function (n) {
      if (r ||= n === e) {
        return Mh;
      }
    });
    return r;
  }
};
L.includes = function (t, e) {
  return t.indexOf(e) !== -1;
};
L.inherit = function (t, e) {
  t.prototype = new e();
  t.prototype.constructor = t;
  t.superclass = e.prototype;
  return t;
};
L.isObject = function (t) {
  return t === Object(t) && !L.isArray(t);
};
L.isEmptyObject = function (t) {
  if (L.isObject(t)) {
    for (var e in t) {
      if (xc.call(t, e)) {
        return false;
      }
    }
    return true;
  }
  return false;
};
L.isUndefined = function (t) {
  return t === undefined;
};
L.isString = function (t) {
  return Pl.call(t) == "[object String]";
};
L.isDate = function (t) {
  return Pl.call(t) == "[object Date]";
};
L.isNumber = function (t) {
  return Pl.call(t) == "[object Number]";
};
L.isElement = function (t) {
  return !!t && t.nodeType === 1;
};
L.encodeDates = function (t) {
  L.each(t, function (e, r) {
    if (L.isDate(e)) {
      t[r] = L.formatDate(e);
    } else if (L.isObject(e)) {
      t[r] = L.encodeDates(e);
    }
  });
  return t;
};
L.timestamp = function () {
  Date.now = Date.now || function () {
    return +new Date();
  };
  return Date.now();
};
L.formatDate = function (t) {
  function e(r) {
    if (r < 10) {
      return "0" + r;
    } else {
      return r;
    }
  }
  return t.getUTCFullYear() + "-" + e(t.getUTCMonth() + 1) + "-" + e(t.getUTCDate()) + "T" + e(t.getUTCHours()) + ":" + e(t.getUTCMinutes()) + ":" + e(t.getUTCSeconds());
};
L.strip_empty_properties = function (t) {
  var e = {};
  L.each(t, function (r, n) {
    if (L.isString(r) && r.length > 0) {
      e[n] = r;
    }
  });
  return e;
};
L.truncate = function (t, e) {
  var r;
  if (typeof t == "string") {
    r = t.slice(0, e);
  } else if (L.isArray(t)) {
    r = [];
    L.each(t, function (n) {
      r.push(L.truncate(n, e));
    });
  } else if (L.isObject(t)) {
    r = {};
    L.each(t, function (n, i) {
      r[i] = L.truncate(n, e);
    });
  } else {
    r = t;
  }
  return r;
};
L.JSONEncode = function () {
  return function (t) {
    var e = t;
    function r(i) {
      var s = /[\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
      var o = {
        "\b": "\\b",
        "\t": "\\t",
        "\n": "\\n",
        "\f": "\\f",
        "\r": "\\r",
        "\"": "\\\"",
        "\\": "\\\\"
      };
      s.lastIndex = 0;
      if (s.test(i)) {
        return "\"" + i.replace(s, function (f) {
          var c = o[f];
          if (typeof c == "string") {
            return c;
          } else {
            return "\\u" + ("0000" + f.charCodeAt(0).toString(16)).slice(-4);
          }
        }) + "\"";
      } else {
        return "\"" + i + "\"";
      }
    }
    function n(i, s) {
      var o = "";
      var f = "    ";
      var c = 0;
      var p = "";
      var d = "";
      var E = 0;
      var m = o;
      var g = [];
      var T = s[i];
      if (T && typeof T == "object" && typeof T.toJSON == "function") {
        T = T.toJSON(i);
      }
      switch (typeof T) {
        case "string":
          return r(T);
        case "number":
          if (isFinite(T)) {
            return String(T);
          } else {
            return "null";
          }
        case "boolean":
        case "null":
          return String(T);
        case "object":
          if (!T) {
            return "null";
          }
          o += f;
          g = [];
          if (Pl.apply(T) === "[object Array]") {
            E = T.length;
            c = 0;
            for (; c < E; c += 1) {
              g[c] = n(c, T) || "null";
            }
            d = g.length === 0 ? "[]" : o ? `[
${o}${g.join(`,
${o}`)}
${m}]` : "[" + g.join(",") + "]";
            o = m;
            return d;
          }
          for (p in T) {
            if (xc.call(T, p)) {
              d = n(p, T);
              if (d) {
                g.push(r(p) + (o ? ": " : ":") + d);
              }
            }
          }
          d = g.length === 0 ? "{}" : o ? "{" + g.join(",") + m + "}" : "{" + g.join(",") + "}";
          o = m;
          return d;
      }
    }
    return n("", {
      "": e
    });
  };
}();
L.JSONDecode = function () {
  var t;
  var e;
  var r = {
    "\"": "\"",
    "\\": "\\",
    "/": "/",
    b: "\b",
    f: "\f",
    n: `
`,
    r: "\r",
    t: "\t"
  };
  var n;
  function i(g) {
    var T = new SyntaxError(g);
    T.at = t;
    T.text = n;
    throw T;
  }
  function s(g) {
    if (g && g !== e) {
      i("Expected '" + g + "' instead of '" + e + "'");
    }
    e = n.charAt(t);
    t += 1;
    return e;
  }
  function o() {
    var g;
    var T = "";
    for (e === "-" && (T = "-", s("-")); e >= "0" && e <= "9";) {
      T += e;
      s();
    }
    if (e === ".") {
      for (T += "."; s() && e >= "0" && e <= "9";) {
        T += e;
      }
    }
    if (e === "e" || e === "E") {
      T += e;
      s();
      if (e === "-" || e === "+") {
        T += e;
        s();
      }
      while (e >= "0" && e <= "9") {
        T += e;
        s();
      }
    }
    g = +T;
    if (!isFinite(g)) {
      i("Bad number");
    } else {
      return g;
    }
  }
  function f() {
    var g;
    var T;
    var b = "";
    var x;
    if (e === "\"") {
      while (s()) {
        if (e === "\"") {
          s();
          return b;
        }
        if (e === "\\") {
          s();
          if (e === "u") {
            x = 0;
            T = 0;
            for (; T < 4 && (g = parseInt(s(), 16), !!isFinite(g)); T += 1) {
              x = x * 16 + g;
            }
            b += String.fromCharCode(x);
          } else if (typeof r[e] == "string") {
            b += r[e];
          } else {
            break;
          }
        } else {
          b += e;
        }
      }
    }
    i("Bad string");
  }
  function c() {
    while (e && e <= " ") {
      s();
    }
  }
  function p() {
    switch (e) {
      case "t":
        s("t");
        s("r");
        s("u");
        s("e");
        return true;
      case "f":
        s("f");
        s("a");
        s("l");
        s("s");
        s("e");
        return false;
      case "n":
        s("n");
        s("u");
        s("l");
        s("l");
        return null;
    }
    i("Unexpected \"" + e + "\"");
  }
  var d;
  function E() {
    var g = [];
    if (e === "[") {
      s("[");
      c();
      if (e === "]") {
        s("]");
        return g;
      }
      while (e) {
        g.push(d());
        c();
        if (e === "]") {
          s("]");
          return g;
        }
        s(",");
        c();
      }
    }
    i("Bad array");
  }
  function m() {
    var g;
    var T = {};
    if (e === "{") {
      s("{");
      c();
      if (e === "}") {
        s("}");
        return T;
      }
      while (e) {
        g = f();
        c();
        s(":");
        if (Object.hasOwnProperty.call(T, g)) {
          i("Duplicate key \"" + g + "\"");
        }
        T[g] = d();
        c();
        if (e === "}") {
          s("}");
          return T;
        }
        s(",");
        c();
      }
    }
    i("Bad object");
  }
  d = function () {
    c();
    switch (e) {
      case "{":
        return m();
      case "[":
        return E();
      case "\"":
        return f();
      case "-":
        return o();
      default:
        if (e >= "0" && e <= "9") {
          return o();
        } else {
          return p();
        }
    }
  };
  return function (g) {
    var T;
    n = g;
    t = 0;
    e = " ";
    T = d();
    c();
    if (e) {
      i("Syntax error");
    }
    return T;
  };
}();
L.base64Encode = function (t) {
  var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
  var r;
  var n;
  var i;
  var s;
  var o;
  var f;
  var c;
  var p;
  var d = 0;
  var E = 0;
  var m = "";
  var g = [];
  if (!t) {
    return t;
  }
  t = L.utf8Encode(t);
  do {
    r = t.charCodeAt(d++);
    n = t.charCodeAt(d++);
    i = t.charCodeAt(d++);
    p = r << 16 | n << 8 | i;
    s = p >> 18 & 63;
    o = p >> 12 & 63;
    f = p >> 6 & 63;
    c = p & 63;
    g[E++] = e.charAt(s) + e.charAt(o) + e.charAt(f) + e.charAt(c);
  } while (d < t.length);
  m = g.join("");
  switch (t.length % 3) {
    case 1:
      m = m.slice(0, -2) + "==";
      break;
    case 2:
      m = m.slice(0, -1) + "=";
      break;
  }
  return m;
};
L.utf8Encode = function (t) {
  t = (t + "").replace(/\r\n/g, `
`).replace(/\r/g, `
`);
  var e = "";
  var r;
  var n;
  var i = 0;
  var s;
  r = n = 0;
  i = t.length;
  s = 0;
  for (; s < i; s++) {
    var o = t.charCodeAt(s);
    var f = null;
    if (o < 128) {
      n++;
    } else if (o > 127 && o < 2048) {
      f = String.fromCharCode(o >> 6 | 192, o & 63 | 128);
    } else {
      f = String.fromCharCode(o >> 12 | 224, o >> 6 & 63 | 128, o & 63 | 128);
    }
    if (f !== null) {
      if (n > r) {
        e += t.substring(r, n);
      }
      e += f;
      r = n = s + 1;
    }
  }
  if (n > r) {
    e += t.substring(r, t.length);
  }
  return e;
};
L.UUID = function () {
  function t() {
    var n = new Date() * 1;
    var i;
    if (at.performance && at.performance.now) {
      i = at.performance.now();
    } else {
      for (i = 0; n == new Date() * 1;) {
        i++;
      }
    }
    return n.toString(16) + Math.floor(i).toString(16);
  }
  function e() {
    return Math.random().toString(16).replace(".", "");
  }
  function r() {
    var n = Xn;
    var i;
    var s;
    var o = [];
    var f = 0;
    function c(p, d) {
      var E;
      var m = 0;
      for (E = 0; E < d.length; E++) {
        m |= o[E] << E * 8;
      }
      return p ^ m;
    }
    for (i = 0; i < n.length; i++) {
      s = n.charCodeAt(i);
      o.unshift(s & 255);
      if (o.length >= 4) {
        f = c(f, o);
        o = [];
      }
    }
    if (o.length > 0) {
      f = c(f, o);
    }
    return f.toString(16);
  }
  return function () {
    var n = (If.height * If.width).toString(16);
    return t() + "-" + e() + "-" + r() + "-" + n + "-" + t();
  };
}();
var Uv = ["ahrefsbot", "ahrefssiteaudit", "baiduspider", "bingbot", "bingpreview", "chrome-lighthouse", "facebookexternal", "petalbot", "pinterest", "screaming frog", "yahoo! slurp", "yandexbot", "adsbot-google", "apis-google", "duplexweb-google", "feedfetcher-google", "google favicon", "google web preview", "google-read-aloud", "googlebot", "googleweblight", "mediapartners-google", "storebot-google"];
L.isBlockedUA = function (t) {
  var e;
  t = t.toLowerCase();
  e = 0;
  for (; e < Uv.length; e++) {
    if (t.indexOf(Uv[e]) !== -1) {
      return true;
    }
  }
  return false;
};
L.HTTPBuildQuery = function (t, e) {
  var r;
  var n;
  var i = [];
  if (L.isUndefined(e)) {
    e = "&";
  }
  L.each(t, function (s, o) {
    r = encodeURIComponent(s.toString());
    n = encodeURIComponent(o);
    i[i.length] = n + "=" + r;
  });
  return i.join(e);
};
L.getQueryParam = function (t, e) {
  e = e.replace(/[[]/, "\\[").replace(/[\]]/, "\\]");
  var r = "[\\?&]" + e + "=([^&#]*)";
  var n = new RegExp(r);
  var i = n.exec(t);
  if (i === null || i && typeof i[1] != "string" && i[1].length) {
    return "";
  }
  var s = i[1];
  try {
    s = decodeURIComponent(s);
  } catch {
    yt.error("Skipping decoding for malformed query param: " + s);
  }
  return s.replace(/\+/g, " ");
};
L.cookie = {
  get: function (t) {
    var e = t + "=";
    for (var r = It.cookie.split(";"), n = 0; n < r.length; n++) {
      for (var i = r[n]; i.charAt(0) == " ";) {
        i = i.substring(1, i.length);
      }
      if (i.indexOf(e) === 0) {
        return decodeURIComponent(i.substring(e.length, i.length));
      }
    }
    return null;
  },
  parse: function (t) {
    var e;
    try {
      e = L.JSONDecode(L.cookie.get(t)) || {};
    } catch {}
    return e;
  },
  set_seconds: function (t, e, r, n, i, s, o) {
    var f = "";
    var c = "";
    var p = "";
    if (o) {
      f = "; domain=" + o;
    } else if (n) {
      var d = Dv(It.location.hostname);
      f = d ? "; domain=." + d : "";
    }
    if (r) {
      var E = new Date();
      E.setTime(E.getTime() + r * 1000);
      c = "; expires=" + E.toGMTString();
    }
    if (s) {
      i = true;
      p = "; SameSite=None";
    }
    if (i) {
      p += "; secure";
    }
    It.cookie = t + "=" + encodeURIComponent(e) + c + "; path=/" + f + p;
  },
  set: function (t, e, r, n, i, s, o) {
    var f = "";
    var c = "";
    var p = "";
    if (o) {
      f = "; domain=" + o;
    } else if (n) {
      var d = Dv(It.location.hostname);
      f = d ? "; domain=." + d : "";
    }
    if (r) {
      var E = new Date();
      E.setTime(E.getTime() + r * 24 * 60 * 60 * 1000);
      c = "; expires=" + E.toGMTString();
    }
    if (s) {
      i = true;
      p = "; SameSite=None";
    }
    if (i) {
      p += "; secure";
    }
    var m = t + "=" + encodeURIComponent(e) + c + "; path=/" + f + p;
    It.cookie = m;
    return m;
  },
  remove: function (t, e, r) {
    L.cookie.set(t, "", -1, e, false, false, r);
  }
};
var bd = null;
function Nf(t, e) {
  if (bd !== null && !e) {
    return bd;
  }
  var r = true;
  try {
    t = t || window.localStorage;
    var n = "__mplss_" + YE(8);
    var i = "xyz";
    t.setItem(n, i);
    if (t.getItem(n) !== i) {
      r = false;
    }
    t.removeItem(n);
  } catch {
    r = false;
  }
  bd = r;
  return r;
}
L.localStorage = {
  is_supported: function (t) {
    var e = Nf(null, t);
    if (!e) {
      yt.error("localStorage unsupported; falling back to cookie store");
    }
    return e;
  },
  error: function (t) {
    yt.error("localStorage error: " + t);
  },
  get: function (t) {
    try {
      return window.localStorage.getItem(t);
    } catch (e) {
      L.localStorage.error(e);
    }
    return null;
  },
  parse: function (t) {
    try {
      return L.JSONDecode(L.localStorage.get(t)) || {};
    } catch {}
    return null;
  },
  set: function (t, e) {
    try {
      window.localStorage.setItem(t, e);
    } catch (r) {
      L.localStorage.error(r);
    }
  },
  remove: function (t) {
    try {
      window.localStorage.removeItem(t);
    } catch (e) {
      L.localStorage.error(e);
    }
  }
};
L.register_event = function () {
  function t(n, i, s, o, f) {
    if (!n) {
      yt.error("No valid element provided to register_event");
      return;
    }
    if (n.addEventListener && !o) {
      n.addEventListener(i, s, !!f);
    } else {
      var c = "on" + i;
      var p = n[c];
      n[c] = e(n, s, p);
    }
  }
  function e(n, i, s) {
    function o(f) {
      f = f || r(window.event);
      if (!!f) {
        var c = true;
        var p;
        var d;
        if (L.isFunction(s)) {
          p = s(f);
        }
        d = i.call(n, f);
        if (p === false || d === false) {
          c = false;
        }
        return c;
      }
    }
    return o;
  }
  function r(n) {
    if (n) {
      n.preventDefault = r.preventDefault;
      n.stopPropagation = r.stopPropagation;
    }
    return n;
  }
  r.preventDefault = function () {
    this.returnValue = false;
  };
  r.stopPropagation = function () {
    this.cancelBubble = true;
  };
  return t;
}();
var T2 = new RegExp("^(\\w*)\\[(\\w+)([=~\\|\\^\\$\\*]?)=?\"?([^\\]\"]*)\"?\\]$");
L.dom_query = function () {
  function t(i) {
    if (i.all) {
      return i.all;
    } else {
      return i.getElementsByTagName("*");
    }
  }
  var e = /[\t\r\n]/g;
  function r(i, s) {
    var o = " " + s + " ";
    return (" " + i.className + " ").replace(e, " ").indexOf(o) >= 0;
  }
  function n(i) {
    if (!It.getElementsByTagName) {
      return [];
    }
    var s = i.split(" ");
    var o;
    var f;
    var c;
    var p;
    var d;
    var E;
    var m;
    var g;
    var T;
    var b;
    var x = [It];
    for (E = 0; E < s.length; E++) {
      o = s[E].replace(/^\s+/, "").replace(/\s+$/, "");
      if (o.indexOf("#") > -1) {
        f = o.split("#");
        c = f[0];
        var A = f[1];
        var R = It.getElementById(A);
        if (!R || c && R.nodeName.toLowerCase() != c) {
          return [];
        }
        x = [R];
        continue;
      }
      if (o.indexOf(".") > -1) {
        f = o.split(".");
        c = f[0];
        var v = f[1];
        c ||= "*";
        p = [];
        d = 0;
        m = 0;
        for (; m < x.length; m++) {
          if (c == "*") {
            T = t(x[m]);
          } else {
            T = x[m].getElementsByTagName(c);
          }
          g = 0;
          for (; g < T.length; g++) {
            p[d++] = T[g];
          }
        }
        x = [];
        b = 0;
        m = 0;
        for (; m < p.length; m++) {
          if (p[m].className && L.isString(p[m].className) && r(p[m], v)) {
            x[b++] = p[m];
          }
        }
        continue;
      }
      var y = o.match(T2);
      if (y) {
        c = y[1];
        var U = y[2];
        var P = y[3];
        var M = y[4];
        c ||= "*";
        p = [];
        d = 0;
        m = 0;
        for (; m < x.length; m++) {
          if (c == "*") {
            T = t(x[m]);
          } else {
            T = x[m].getElementsByTagName(c);
          }
          g = 0;
          for (; g < T.length; g++) {
            p[d++] = T[g];
          }
        }
        x = [];
        b = 0;
        var X;
        switch (P) {
          case "=":
            X = function (N) {
              return N.getAttribute(U) == M;
            };
            break;
          case "~":
            X = function (N) {
              return N.getAttribute(U).match(new RegExp("\\b" + M + "\\b"));
            };
            break;
          case "|":
            X = function (N) {
              return N.getAttribute(U).match(new RegExp("^" + M + "-?"));
            };
            break;
          case "^":
            X = function (N) {
              return N.getAttribute(U).indexOf(M) === 0;
            };
            break;
          case "$":
            X = function (N) {
              return N.getAttribute(U).lastIndexOf(M) == N.getAttribute(U).length - M.length;
            };
            break;
          case "*":
            X = function (N) {
              return N.getAttribute(U).indexOf(M) > -1;
            };
            break;
          default:
            X = function (N) {
              return N.getAttribute(U);
            };
        }
        x = [];
        b = 0;
        m = 0;
        for (; m < p.length; m++) {
          if (X(p[m])) {
            x[b++] = p[m];
          }
        }
        continue;
      }
      c = o;
      p = [];
      d = 0;
      m = 0;
      for (; m < x.length; m++) {
        T = x[m].getElementsByTagName(c);
        g = 0;
        for (; g < T.length; g++) {
          p[d++] = T[g];
        }
      }
      x = p;
    }
    return x;
  }
  return function (i) {
    if (L.isElement(i)) {
      return [i];
    } else if (L.isObject(i) && !L.isUndefined(i.length)) {
      return i;
    } else {
      return n.call(this, i);
    }
  };
}();
var v2 = ["utm_source", "utm_medium", "utm_campaign", "utm_content", "utm_term"];
var b2 = ["dclid", "fbclid", "gclid", "ko_click_id", "li_fat_id", "msclkid", "ttclid", "twclid", "wbraid"];
L.info = {
  campaignParams: function (t) {
    var e = "";
    var r = {};
    L.each(v2, function (n) {
      e = L.getQueryParam(It.URL, n);
      if (e.length) {
        r[n] = e;
      } else if (t !== undefined) {
        r[n] = t;
      }
    });
    return r;
  },
  clickParams: function () {
    var t = "";
    var e = {};
    L.each(b2, function (r) {
      t = L.getQueryParam(It.URL, r);
      if (t.length) {
        e[r] = t;
      }
    });
    return e;
  },
  marketingParams: function () {
    return L.extend(L.info.campaignParams(), L.info.clickParams());
  },
  searchEngine: function (t) {
    if (t.search("https?://(.*)google.([^/?]*)") === 0) {
      return "google";
    } else if (t.search("https?://(.*)bing.com") === 0) {
      return "bing";
    } else if (t.search("https?://(.*)yahoo.com") === 0) {
      return "yahoo";
    } else if (t.search("https?://(.*)duckduckgo.com") === 0) {
      return "duckduckgo";
    } else {
      return null;
    }
  },
  searchInfo: function (t) {
    var e = L.info.searchEngine(t);
    var r = e != "yahoo" ? "q" : "p";
    var n = {};
    if (e !== null) {
      n.$search_engine = e;
      var i = L.getQueryParam(t, r);
      if (i.length) {
        n.mp_keyword = i;
      }
    }
    return n;
  },
  browser: function (t, e, r) {
    e = e || "";
    if (r || L.includes(t, " OPR/")) {
      if (L.includes(t, "Mini")) {
        return "Opera Mini";
      } else {
        return "Opera";
      }
    } else if (/(BlackBerry|PlayBook|BB10)/i.test(t)) {
      return "BlackBerry";
    } else if (L.includes(t, "IEMobile") || L.includes(t, "WPDesktop")) {
      return "Internet Explorer Mobile";
    } else if (L.includes(t, "SamsungBrowser/")) {
      return "Samsung Internet";
    } else if (L.includes(t, "Edge") || L.includes(t, "Edg/")) {
      return "Microsoft Edge";
    } else if (L.includes(t, "FBIOS")) {
      return "Facebook Mobile";
    } else if (L.includes(t, "Chrome")) {
      return "Chrome";
    } else if (L.includes(t, "CriOS")) {
      return "Chrome iOS";
    } else if (L.includes(t, "UCWEB") || L.includes(t, "UCBrowser")) {
      return "UC Browser";
    } else if (L.includes(t, "FxiOS")) {
      return "Firefox iOS";
    } else if (L.includes(e, "Apple")) {
      if (L.includes(t, "Mobile")) {
        return "Mobile Safari";
      } else {
        return "Safari";
      }
    } else if (L.includes(t, "Android")) {
      return "Android Mobile";
    } else if (L.includes(t, "Konqueror")) {
      return "Konqueror";
    } else if (L.includes(t, "Firefox")) {
      return "Firefox";
    } else if (L.includes(t, "MSIE") || L.includes(t, "Trident/")) {
      return "Internet Explorer";
    } else if (L.includes(t, "Gecko")) {
      return "Mozilla";
    } else {
      return "";
    }
  },
  browserVersion: function (t, e, r) {
    var n = L.info.browser(t, e, r);
    var i = {
      "Internet Explorer Mobile": /rv:(\d+(\.\d+)?)/,
      "Microsoft Edge": /Edge?\/(\d+(\.\d+)?)/,
      Chrome: /Chrome\/(\d+(\.\d+)?)/,
      "Chrome iOS": /CriOS\/(\d+(\.\d+)?)/,
      "UC Browser": /(UCBrowser|UCWEB)\/(\d+(\.\d+)?)/,
      Safari: /Version\/(\d+(\.\d+)?)/,
      "Mobile Safari": /Version\/(\d+(\.\d+)?)/,
      Opera: /(Opera|OPR)\/(\d+(\.\d+)?)/,
      Firefox: /Firefox\/(\d+(\.\d+)?)/,
      "Firefox iOS": /FxiOS\/(\d+(\.\d+)?)/,
      Konqueror: /Konqueror:(\d+(\.\d+)?)/,
      BlackBerry: /BlackBerry (\d+(\.\d+)?)/,
      "Android Mobile": /android\s(\d+(\.\d+)?)/,
      "Samsung Internet": /SamsungBrowser\/(\d+(\.\d+)?)/,
      "Internet Explorer": /(rv:|MSIE )(\d+(\.\d+)?)/,
      Mozilla: /rv:(\d+(\.\d+)?)/
    };
    var s = i[n];
    if (s === undefined) {
      return null;
    }
    var o = t.match(s);
    if (o) {
      return parseFloat(o[o.length - 2]);
    } else {
      return null;
    }
  },
  os: function () {
    var t = Xn;
    if (/Windows/i.test(t)) {
      if (/Phone/.test(t) || /WPDesktop/.test(t)) {
        return "Windows Phone";
      } else {
        return "Windows";
      }
    } else if (/(iPhone|iPad|iPod)/.test(t)) {
      return "iOS";
    } else if (/Android/.test(t)) {
      return "Android";
    } else if (/(BlackBerry|PlayBook|BB10)/i.test(t)) {
      return "BlackBerry";
    } else if (/Mac/i.test(t)) {
      return "Mac OS X";
    } else if (/Linux/.test(t)) {
      return "Linux";
    } else if (/CrOS/.test(t)) {
      return "Chrome OS";
    } else {
      return "";
    }
  },
  device: function (t) {
    if (/Windows Phone/i.test(t) || /WPDesktop/.test(t)) {
      return "Windows Phone";
    } else if (/iPad/.test(t)) {
      return "iPad";
    } else if (/iPod/.test(t)) {
      return "iPod Touch";
    } else if (/iPhone/.test(t)) {
      return "iPhone";
    } else if (/(BlackBerry|PlayBook|BB10)/i.test(t)) {
      return "BlackBerry";
    } else if (/Android/.test(t)) {
      return "Android";
    } else {
      return "";
    }
  },
  referringDomain: function (t) {
    var e = t.split("/");
    if (e.length >= 3) {
      return e[2];
    } else {
      return "";
    }
  },
  currentUrl: function () {
    return at.location.href;
  },
  properties: function (t) {
    if (typeof t != "object") {
      t = {};
    }
    return L.extend(L.strip_empty_properties({
      $os: L.info.os(),
      $browser: L.info.browser(Xn, es.vendor, Ku),
      $referrer: It.referrer,
      $referring_domain: L.info.referringDomain(It.referrer),
      $device: L.info.device(Xn)
    }), {
      $current_url: L.info.currentUrl(),
      $browser_version: L.info.browserVersion(Xn, es.vendor, Ku),
      $screen_height: If.height,
      $screen_width: If.width,
      mp_lib: "web",
      $lib_version: yi.LIB_VERSION,
      $insert_id: YE(),
      time: L.timestamp() / 1000
    }, L.strip_empty_properties(t));
  },
  people_properties: function () {
    return L.extend(L.strip_empty_properties({
      $os: L.info.os(),
      $browser: L.info.browser(Xn, es.vendor, Ku)
    }), {
      $browser_version: L.info.browserVersion(Xn, es.vendor, Ku)
    });
  },
  mpPageViewProperties: function () {
    return L.strip_empty_properties({
      current_page_title: It.title,
      current_domain: at.location.hostname,
      current_url_path: at.location.pathname,
      current_url_protocol: at.location.protocol,
      current_url_search: at.location.search
    });
  }
};
function YE(t) {
  var e = Math.random().toString(36).substring(2, 10) + Math.random().toString(36).substring(2, 10);
  if (t) {
    return e.substring(0, t);
  } else {
    return e;
  }
}
var x2 = /[a-z0-9][a-z0-9-]*\.[a-z]+$/i;
var R2 = /[a-z0-9][a-z0-9-]+\.[a-z.]{2,6}$/i;
function Dv(t) {
  var e = R2;
  var r = t.split(".");
  var n = r[r.length - 1];
  if (n.length > 4 || n === "com" || n === "org") {
    e = x2;
  }
  var i = t.match(e);
  if (i) {
    return i[0];
  } else {
    return "";
  }
}
var Pf = null;
var Uf = null;
if (typeof JSON !== "undefined") {
  Pf = JSON.stringify;
  Uf = JSON.parse;
}
Pf = Pf || L.JSONEncode;
Uf = Uf || L.JSONDecode;
L.toArray = L.toArray;
L.isObject = L.isObject;
L.JSONEncode = L.JSONEncode;
L.JSONDecode = L.JSONDecode;
L.isBlockedUA = L.isBlockedUA;
L.isEmptyObject = L.isEmptyObject;
L.info = L.info;
L.info.device = L.info.device;
L.info.browser = L.info.browser;
L.info.browserVersion = L.info.browserVersion;
L.info.properties = L.info.properties;
function Oi() {}
Oi.prototype.create_properties = function () {};
Oi.prototype.event_handler = function () {};
Oi.prototype.after_track_handler = function () {};
Oi.prototype.init = function (t) {
  this.mp = t;
  return this;
};
Oi.prototype.track = function (t, e, r, n) {
  var i = this;
  var s = L.dom_query(t);
  if (s.length === 0) {
    yt.error("The DOM query (" + t + ") returned 0 elements");
    return;
  }
  L.each(s, function (o) {
    L.register_event(o, this.override_event, function (f) {
      var c = {};
      var p = i.create_properties(r, this);
      var d = i.mp.get_config("track_links_timeout");
      i.event_handler(f, this, c);
      window.setTimeout(i.track_callback(n, p, c, true), d);
      i.mp.track(e, p, i.track_callback(n, p, c));
    });
  }, this);
  return true;
};
Oi.prototype.track_callback = function (t, e, r, n) {
  n = n || false;
  var i = this;
  return function () {
    if (!r.callback_fired) {
      r.callback_fired = true;
      if (!t || t(n, e) !== false) {
        i.after_track_handler(e, r, n);
      }
    }
  };
};
Oi.prototype.create_properties = function (t, e) {
  var r;
  if (typeof t == "function") {
    r = t(e);
  } else {
    r = L.extend({}, t);
  }
  return r;
};
function no() {
  this.override_event = "click";
}
L.inherit(no, Oi);
no.prototype.create_properties = function (t, e) {
  var r = no.superclass.create_properties.apply(this, arguments);
  if (e.href) {
    r.url = e.href;
  }
  return r;
};
no.prototype.event_handler = function (t, e, r) {
  r.new_tab = t.which === 2 || t.metaKey || t.ctrlKey || e.target === "_blank";
  r.href = e.href;
  if (!r.new_tab) {
    t.preventDefault();
  }
};
no.prototype.after_track_handler = function (t, e) {
  if (!e.new_tab) {
    setTimeout(function () {
      window.location = e.href;
    }, 0);
  }
};
function Rc() {
  this.override_event = "submit";
}
L.inherit(Rc, Oi);
Rc.prototype.event_handler = function (t, e, r) {
  r.element = e;
  t.preventDefault();
};
Rc.prototype.after_track_handler = function (t, e) {
  setTimeout(function () {
    e.element.submit();
  }, 0);
};
var S2 = qE("lock");
function YS(t, e) {
  e = e || {};
  this.storageKey = t;
  this.storage = e.storage || window.localStorage;
  this.pollIntervalMS = e.pollIntervalMS || 100;
  this.timeoutMS = e.timeoutMS || 2000;
}
YS.prototype.withLock = function (t, e, r) {
  if (!r && typeof e != "function") {
    r = e;
    e = null;
  }
  var n = r || new Date().getTime() + "|" + Math.random();
  var i = new Date().getTime();
  var s = this.storageKey;
  var o = this.pollIntervalMS;
  var f = this.timeoutMS;
  var c = this.storage;
  var p = s + ":X";
  var d = s + ":Y";
  var E = s + ":Z";
  function m(R) {
    if (e) {
      e(R);
    }
  }
  function g(R) {
    if (new Date().getTime() - i > f) {
      S2.error("Timeout waiting for mutex on " + s + "; clearing lock. [" + n + "]");
      c.removeItem(E);
      c.removeItem(d);
      x();
      return;
    }
    setTimeout(function () {
      try {
        R();
      } catch (v) {
        m(v);
      }
    }, o * (Math.random() + 0.1));
  }
  function T(R, v) {
    if (R()) {
      v();
    } else {
      g(function () {
        T(R, v);
      });
    }
  }
  function b() {
    var R = c.getItem(d);
    if (R && R !== n) {
      return false;
    }
    c.setItem(d, n);
    if (c.getItem(d) === n) {
      return true;
    }
    if (!Nf(c, true)) {
      throw new Error("localStorage support dropped while acquiring lock");
    }
    return false;
  }
  function x() {
    c.setItem(p, n);
    T(b, function () {
      if (c.getItem(p) === n) {
        A();
        return;
      }
      g(function () {
        if (c.getItem(d) !== n) {
          x();
          return;
        }
        T(function () {
          return !c.getItem(E);
        }, A);
      });
    });
  }
  function A() {
    c.setItem(E, "1");
    try {
      t();
    } finally {
      c.removeItem(E);
      if (c.getItem(d) === n) {
        c.removeItem(d);
      }
      if (c.getItem(p) === n) {
        c.removeItem(p);
      }
    }
  }
  try {
    if (Nf(c, true)) {
      x();
    } else {
      throw new Error("localStorage support check failed");
    }
  } catch (R) {
    m(R);
  }
};
var Bv = qE("batch");
function ms(t, e) {
  e = e || {};
  this.storageKey = t;
  this.storage = e.storage || window.localStorage;
  this.reportError = e.errorReporter || L.bind(Bv.error, Bv);
  this.lock = new YS(t, {
    storage: this.storage
  });
  this.pid = e.pid || null;
  this.memQueue = [];
}
ms.prototype.enqueue = function (t, e, r) {
  var n = {
    id: YE(),
    flushAfter: new Date().getTime() + e * 2,
    payload: t
  };
  this.lock.withLock(L.bind(function () {
    var s;
    try {
      var o = this.readFromStorage();
      o.push(n);
      s = this.saveToStorage(o);
      if (s) {
        this.memQueue.push(n);
      }
    } catch {
      this.reportError("Error enqueueing item", t);
      s = false;
    }
    if (r) {
      r(s);
    }
  }, this), L.bind(function (s) {
    this.reportError("Error acquiring storage lock", s);
    if (r) {
      r(false);
    }
  }, this), this.pid);
};
ms.prototype.fillBatch = function (t) {
  var e = this.memQueue.slice(0, t);
  if (e.length < t) {
    var r = this.readFromStorage();
    if (r.length) {
      var n = {};
      L.each(e, function (o) {
        n[o.id] = true;
      });
      for (var i = 0; i < r.length; i++) {
        var s = r[i];
        if (new Date().getTime() > s.flushAfter && !n[s.id] && (s.orphaned = true, e.push(s), e.length >= t)) {
          break;
        }
      }
    }
  }
  return e;
};
function Mv(t, e) {
  var r = [];
  L.each(t, function (n) {
    if (n.id && !e[n.id]) {
      r.push(n);
    }
  });
  return r;
}
ms.prototype.removeItemsByID = function (t, e) {
  var r = {};
  L.each(t, function (i) {
    r[i] = true;
  });
  this.memQueue = Mv(this.memQueue, r);
  var n = L.bind(function () {
    var i;
    try {
      var s = this.readFromStorage();
      s = Mv(s, r);
      i = this.saveToStorage(s);
      if (i) {
        s = this.readFromStorage();
        for (var o = 0; o < s.length; o++) {
          var f = s[o];
          if (f.id && r[f.id]) {
            this.reportError("Item not removed from storage");
            return false;
          }
        }
      }
    } catch {
      this.reportError("Error removing items", t);
      i = false;
    }
    return i;
  }, this);
  this.lock.withLock(function () {
    var s = n();
    if (e) {
      e(s);
    }
  }, L.bind(function (s) {
    var o = false;
    this.reportError("Error acquiring storage lock", s);
    if (!Nf(this.storage, true) && (o = n(), !o)) {
      try {
        this.storage.removeItem(this.storageKey);
      } catch (f) {
        this.reportError("Error clearing queue", f);
      }
    }
    if (e) {
      e(o);
    }
  }, this), this.pid);
};
function $v(t, e) {
  var r = [];
  L.each(t, function (n) {
    var i = n.id;
    if (i in e) {
      var s = e[i];
      if (s !== null) {
        n.payload = s;
        r.push(n);
      }
    } else {
      r.push(n);
    }
  });
  return r;
}
ms.prototype.updatePayloads = function (t, e) {
  this.memQueue = $v(this.memQueue, t);
  this.lock.withLock(L.bind(function () {
    var n;
    try {
      var i = this.readFromStorage();
      i = $v(i, t);
      n = this.saveToStorage(i);
    } catch {
      this.reportError("Error updating items", t);
      n = false;
    }
    if (e) {
      e(n);
    }
  }, this), L.bind(function (n) {
    this.reportError("Error acquiring storage lock", n);
    if (e) {
      e(false);
    }
  }, this), this.pid);
};
ms.prototype.readFromStorage = function () {
  var t;
  try {
    t = this.storage.getItem(this.storageKey);
    if (t) {
      t = Uf(t);
      if (!L.isArray(t)) {
        this.reportError("Invalid storage entry:", t);
        t = null;
      }
    }
  } catch (e) {
    this.reportError("Error retrieving queue", e);
    t = null;
  }
  return t || [];
};
ms.prototype.saveToStorage = function (t) {
  try {
    this.storage.setItem(this.storageKey, Pf(t));
    return true;
  } catch (e) {
    this.reportError("Error saving queue", e);
    return false;
  }
};
ms.prototype.clear = function () {
  this.memQueue = [];
  this.storage.removeItem(this.storageKey);
};
var y2 = 600000;
var nl = qE("batch");
function ii(t, e) {
  this.errorReporter = e.errorReporter;
  this.queue = new ms(t, {
    errorReporter: L.bind(this.reportError, this),
    storage: e.storage
  });
  this.libConfig = e.libConfig;
  this.sendRequest = e.sendRequestFunc;
  this.beforeSendHook = e.beforeSendHook;
  this.stopAllBatching = e.stopAllBatchingFunc;
  this.batchSize = this.libConfig.batch_size;
  this.flushInterval = this.libConfig.batch_flush_interval_ms;
  this.stopped = !this.libConfig.batch_autostart;
  this.consecutiveRemovalFailures = 0;
  this.itemIdsSentSuccessfully = {};
}
ii.prototype.enqueue = function (t, e) {
  this.queue.enqueue(t, this.flushInterval, e);
};
ii.prototype.start = function () {
  this.stopped = false;
  this.consecutiveRemovalFailures = 0;
  this.flush();
};
ii.prototype.stop = function () {
  this.stopped = true;
  if (this.timeoutID) {
    clearTimeout(this.timeoutID);
    this.timeoutID = null;
  }
};
ii.prototype.clear = function () {
  this.queue.clear();
};
ii.prototype.resetBatchSize = function () {
  this.batchSize = this.libConfig.batch_size;
};
ii.prototype.resetFlush = function () {
  this.scheduleFlush(this.libConfig.batch_flush_interval_ms);
};
ii.prototype.scheduleFlush = function (t) {
  this.flushInterval = t;
  if (!this.stopped) {
    this.timeoutID = setTimeout(L.bind(this.flush, this), this.flushInterval);
  }
};
ii.prototype.flush = function (t) {
  try {
    if (this.requestInProgress) {
      nl.log("Flush: Request already in progress");
      return;
    }
    t = t || {};
    var e = this.libConfig.batch_request_timeout_ms;
    var r = new Date().getTime();
    var n = this.batchSize;
    var i = this.queue.fillBatch(n);
    var s = [];
    var o = {};
    L.each(i, function (p) {
      var d = p.payload;
      if (this.beforeSendHook && !p.orphaned) {
        d = this.beforeSendHook(d);
      }
      if (d) {
        if (d.event && d.properties) {
          d.properties = L.extend({}, d.properties, {
            mp_sent_by_lib_version: yi.LIB_VERSION
          });
        }
        var E = true;
        var m = p.id;
        if (m) {
          if ((this.itemIdsSentSuccessfully[m] || 0) > 5) {
            this.reportError("[dupe] item ID sent too many times, not sending", {
              item: p,
              batchSize: i.length,
              timesSent: this.itemIdsSentSuccessfully[m]
            });
            E = false;
          }
        } else {
          this.reportError("[dupe] found item with no ID", {
            item: p
          });
        }
        if (E) {
          s.push(d);
        }
      }
      o[p.id] = d;
    }, this);
    if (s.length < 1) {
      this.resetFlush();
      return;
    }
    this.requestInProgress = true;
    var f = L.bind(function (p) {
      this.requestInProgress = false;
      try {
        var d = false;
        if (t.unloading) {
          this.queue.updatePayloads(o);
        } else if (L.isObject(p) && p.error === "timeout" && new Date().getTime() - r >= e) {
          this.reportError("Network timeout; retrying");
          this.flush();
        } else if (L.isObject(p) && p.xhr_req && (p.xhr_req.status >= 500 || p.xhr_req.status === 429 || p.error === "timeout")) {
          var E = this.flushInterval * 2;
          var m = p.xhr_req.responseHeaders;
          if (m) {
            var g = m["Retry-After"];
            if (g) {
              E = parseInt(g, 10) * 1000 || E;
            }
          }
          E = Math.min(y2, E);
          this.reportError("Error; retry in " + E + " ms");
          this.scheduleFlush(E);
        } else if (L.isObject(p) && p.xhr_req && p.xhr_req.status === 413) {
          if (i.length > 1) {
            var T = Math.max(1, Math.floor(n / 2));
            this.batchSize = Math.min(this.batchSize, T, i.length - 1);
            this.reportError("413 response; reducing batch size to " + this.batchSize);
            this.resetFlush();
          } else {
            this.reportError("Single-event request too large; dropping", i);
            this.resetBatchSize();
            d = true;
          }
        } else {
          d = true;
        }
        if (d) {
          this.queue.removeItemsByID(L.map(i, function (b) {
            return b.id;
          }), L.bind(function (b) {
            if (b) {
              this.consecutiveRemovalFailures = 0;
              this.flush();
            } else {
              this.reportError("Failed to remove items from queue");
              if (++this.consecutiveRemovalFailures > 5) {
                this.reportError("Too many queue failures; disabling batching system.");
                this.stopAllBatching();
              } else {
                this.resetFlush();
              }
            }
          }, this));
          L.each(i, L.bind(function (b) {
            var x = b.id;
            if (x) {
              this.itemIdsSentSuccessfully[x] = this.itemIdsSentSuccessfully[x] || 0;
              this.itemIdsSentSuccessfully[x]++;
              if (this.itemIdsSentSuccessfully[x] > 5) {
                this.reportError("[dupe] item ID sent too many times", {
                  item: b,
                  batchSize: i.length,
                  timesSent: this.itemIdsSentSuccessfully[x]
                });
              }
            } else {
              this.reportError("[dupe] found item with no ID while removing", {
                item: b
              });
            }
          }, this));
        }
      } catch (b) {
        this.reportError("Error handling API response", b);
        this.resetFlush();
      }
    }, this);
    var c = {
      method: "POST",
      verbose: true,
      ignore_json_errors: true,
      timeout_ms: e
    };
    if (t.unloading) {
      c.transport = "sendBeacon";
    }
    nl.log("MIXPANEL REQUEST:", s);
    this.sendRequest(s, c, f);
  } catch (p) {
    this.reportError("Error flushing request queue", p);
    this.resetFlush();
  }
};
ii.prototype.reportError = function (t, e) {
  nl.error.apply(nl.error, arguments);
  if (this.errorReporter) {
    try {
      if (!(e instanceof Error)) {
        e = new Error(t);
      }
      this.errorReporter(t, e);
    } catch (r) {
      nl.error(r);
    }
  }
};
var A2 = "__mp_opt_in_out_";
function L2(t, e) {
  QS(true, t, e);
}
function C2(t, e) {
  QS(false, t, e);
}
function w2(t, e) {
  return ZS(t, e) === "1";
}
function JS(t, e) {
  if (I2(e)) {
    yt.warn("This browser has \"Do Not Track\" enabled. This will prevent the Mixpanel SDK from sending any data. To ignore the \"Do Not Track\" browser setting, initialize the Mixpanel instance with the config \"ignore_dnt: true\"");
    return true;
  }
  var r = ZS(t, e) === "0";
  if (r) {
    yt.warn("You are opted out of Mixpanel tracking. This will prevent the Mixpanel SDK from sending any data.");
  }
  return r;
}
function Qs(t) {
  return QE(t, function (e) {
    return this.get_config(e);
  });
}
function gs(t) {
  return QE(t, function (e) {
    return this._get_config(e);
  });
}
function po(t) {
  return QE(t, function (e) {
    return this._get_config(e);
  });
}
function O2(t, e) {
  e = e || {};
  JE(e).remove(ZE(t, e), !!e.crossSubdomainCookie, e.cookieDomain);
}
function JE(t) {
  t = t || {};
  if (t.persistenceType === "localStorage") {
    return L.localStorage;
  } else {
    return L.cookie;
  }
}
function ZE(t, e) {
  e = e || {};
  return (e.persistencePrefix || A2) + t;
}
function ZS(t, e) {
  return JE(e).get(ZE(t, e));
}
function I2(t) {
  if (t && t.ignoreDnt) {
    return false;
  }
  var e = t && t.window || at;
  var r = e.navigator || {};
  var n = false;
  L.each([r.doNotTrack, r.msDoNotTrack, e.doNotTrack], function (i) {
    if (L.includes([true, 1, "1", "yes"], i)) {
      n = true;
    }
  });
  return n;
}
function QS(t, e, r) {
  if (!L.isString(e) || !e.length) {
    yt.error("gdpr." + (t ? "optIn" : "optOut") + " called with an invalid token");
    return;
  }
  r = r || {};
  JE(r).set(ZE(e, r), t ? 1 : 0, L.isNumber(r.cookieExpiration) ? r.cookieExpiration : null, !!r.crossSubdomainCookie, !!r.secureCookie, !!r.crossSiteCookie, r.cookieDomain);
  if (r.track && t) {
    r.track(r.trackEventName || "$opt_in", r.trackProperties, {
      send_immediately: true
    });
  }
}
function QE(t, e) {
  return function () {
    var r = false;
    try {
      var n = e.call(this, "token");
      var i = e.call(this, "ignore_dnt");
      var s = e.call(this, "opt_out_tracking_persistence_type");
      var o = e.call(this, "opt_out_tracking_cookie_prefix");
      var f = e.call(this, "window");
      if (n) {
        r = JS(n, {
          ignoreDnt: i,
          persistenceType: s,
          persistencePrefix: o,
          window: f
        });
      }
    } catch (p) {
      yt.error("Unexpected error when checking tracking opt-out status: " + p);
    }
    if (!r) {
      return t.apply(this, arguments);
    }
    var c = arguments[arguments.length - 1];
    if (typeof c == "function") {
      c(0);
    }
  };
}
var cs = "$set";
var io = "$set_once";
var wn = "$unset";
var zs = "$add";
var Jn = "$append";
var qs = "$union";
var Ai = "$remove";
var N2 = "$delete";
var ey = {
  set_action: function (t, e) {
    var r = {};
    var n = {};
    if (L.isObject(t)) {
      L.each(t, function (i, s) {
        if (!this._is_reserved_property(s)) {
          n[s] = i;
        }
      }, this);
    } else {
      n[t] = e;
    }
    r[cs] = n;
    return r;
  },
  unset_action: function (t) {
    var e = {};
    var r = [];
    if (!L.isArray(t)) {
      t = [t];
    }
    L.each(t, function (n) {
      if (!this._is_reserved_property(n)) {
        r.push(n);
      }
    }, this);
    e[wn] = r;
    return e;
  },
  set_once_action: function (t, e) {
    var r = {};
    var n = {};
    if (L.isObject(t)) {
      L.each(t, function (i, s) {
        if (!this._is_reserved_property(s)) {
          n[s] = i;
        }
      }, this);
    } else {
      n[t] = e;
    }
    r[io] = n;
    return r;
  },
  union_action: function (t, e) {
    var r = {};
    var n = {};
    if (L.isObject(t)) {
      L.each(t, function (i, s) {
        if (!this._is_reserved_property(s)) {
          n[s] = L.isArray(i) ? i : [i];
        }
      }, this);
    } else {
      n[t] = L.isArray(e) ? e : [e];
    }
    r[qs] = n;
    return r;
  },
  append_action: function (t, e) {
    var r = {};
    var n = {};
    if (L.isObject(t)) {
      L.each(t, function (i, s) {
        if (!this._is_reserved_property(s)) {
          n[s] = i;
        }
      }, this);
    } else {
      n[t] = e;
    }
    r[Jn] = n;
    return r;
  },
  remove_action: function (t, e) {
    var r = {};
    var n = {};
    if (L.isObject(t)) {
      L.each(t, function (i, s) {
        if (!this._is_reserved_property(s)) {
          n[s] = i;
        }
      }, this);
    } else {
      n[t] = e;
    }
    r[Ai] = n;
    return r;
  },
  delete_action: function () {
    var t = {
      [N2]: ""
    };
    return t;
  }
};
function Xt() {}
L.extend(Xt.prototype, ey);
Xt.prototype._init = function (t, e, r) {
  this._mixpanel = t;
  this._group_key = e;
  this._group_id = r;
};
Xt.prototype.set = po(function (t, e, r) {
  var n = this.set_action(t, e);
  if (L.isObject(t)) {
    r = e;
  }
  return this._send_request(n, r);
});
Xt.prototype.set_once = po(function (t, e, r) {
  var n = this.set_once_action(t, e);
  if (L.isObject(t)) {
    r = e;
  }
  return this._send_request(n, r);
});
Xt.prototype.unset = po(function (t, e) {
  var r = this.unset_action(t);
  return this._send_request(r, e);
});
Xt.prototype.union = po(function (t, e, r) {
  if (L.isObject(t)) {
    r = e;
  }
  var n = this.union_action(t, e);
  return this._send_request(n, r);
});
Xt.prototype.delete = po(function (t) {
  var e = this.delete_action();
  return this._send_request(e, t);
});
Xt.prototype.remove = po(function (t, e, r) {
  var n = this.remove_action(t, e);
  return this._send_request(n, r);
});
Xt.prototype._send_request = function (t, e) {
  t.$group_key = this._group_key;
  t.$group_id = this._group_id;
  t.$token = this._get_config("token");
  var r = L.encodeDates(t);
  return this._mixpanel._track_or_batch({
    type: "groups",
    data: r,
    endpoint: this._get_config("api_host") + "/" + this._get_config("api_routes").groups,
    batcher: this._mixpanel.request_batchers.groups
  }, e);
};
Xt.prototype._is_reserved_property = function (t) {
  return t === "$group_key" || t === "$group_id";
};
Xt.prototype._get_config = function (t) {
  return this._mixpanel.get_config(t);
};
Xt.prototype.toString = function () {
  return this._mixpanel.toString() + ".group." + this._group_key + "." + this._group_id;
};
Xt.prototype.remove = Xt.prototype.remove;
Xt.prototype.set = Xt.prototype.set;
Xt.prototype.set_once = Xt.prototype.set_once;
Xt.prototype.union = Xt.prototype.union;
Xt.prototype.unset = Xt.prototype.unset;
Xt.prototype.toString = Xt.prototype.toString;
function rt() {}
L.extend(rt.prototype, ey);
rt.prototype._init = function (t) {
  this._mixpanel = t;
};
rt.prototype.set = gs(function (t, e, r) {
  var n = this.set_action(t, e);
  if (L.isObject(t)) {
    r = e;
  }
  if (this._get_config("save_referrer")) {
    this._mixpanel.persistence.update_referrer_info(document.referrer);
  }
  n[cs] = L.extend({}, L.info.people_properties(), n[cs]);
  return this._send_request(n, r);
});
rt.prototype.set_once = gs(function (t, e, r) {
  var n = this.set_once_action(t, e);
  if (L.isObject(t)) {
    r = e;
  }
  return this._send_request(n, r);
});
rt.prototype.unset = gs(function (t, e) {
  var r = this.unset_action(t);
  return this._send_request(r, e);
});
rt.prototype.increment = gs(function (t, e, r) {
  var n = {};
  var i = {};
  if (L.isObject(t)) {
    L.each(t, function (s, o) {
      if (!this._is_reserved_property(o)) {
        if (isNaN(parseFloat(s))) {
          yt.error("Invalid increment value passed to mixpanel.people.increment - must be a number");
          return;
        } else {
          i[o] = s;
        }
      }
    }, this);
    r = e;
  } else {
    if (L.isUndefined(e)) {
      e = 1;
    }
    i[t] = e;
  }
  n[zs] = i;
  return this._send_request(n, r);
});
rt.prototype.append = gs(function (t, e, r) {
  if (L.isObject(t)) {
    r = e;
  }
  var n = this.append_action(t, e);
  return this._send_request(n, r);
});
rt.prototype.remove = gs(function (t, e, r) {
  if (L.isObject(t)) {
    r = e;
  }
  var n = this.remove_action(t, e);
  return this._send_request(n, r);
});
rt.prototype.union = gs(function (t, e, r) {
  if (L.isObject(t)) {
    r = e;
  }
  var n = this.union_action(t, e);
  return this._send_request(n, r);
});
rt.prototype.track_charge = gs(function (t, e, r) {
  if (!L.isNumber(t) && (t = parseFloat(t), isNaN(t))) {
    yt.error("Invalid value passed to mixpanel.people.track_charge - must be a number");
    return;
  }
  return this.append("$transactions", L.extend({
    $amount: t
  }, e), r);
});
rt.prototype.clear_charges = function (t) {
  return this.set("$transactions", [], t);
};
rt.prototype.delete_user = function () {
  if (!this._identify_called()) {
    yt.error("mixpanel.people.delete_user() requires you to call identify() first");
    return;
  }
  var t = {
    $delete: this._mixpanel.get_distinct_id()
  };
  return this._send_request(t);
};
rt.prototype.toString = function () {
  return this._mixpanel.toString() + ".people";
};
rt.prototype._send_request = function (t, e) {
  t.$token = this._get_config("token");
  t.$distinct_id = this._mixpanel.get_distinct_id();
  var r = this._mixpanel.get_property("$device_id");
  var n = this._mixpanel.get_property("$user_id");
  var i = this._mixpanel.get_property("$had_persisted_distinct_id");
  if (r) {
    t.$device_id = r;
  }
  if (n) {
    t.$user_id = n;
  }
  if (i) {
    t.$had_persisted_distinct_id = i;
  }
  var s = L.encodeDates(t);
  if (this._identify_called()) {
    return this._mixpanel._track_or_batch({
      type: "people",
      data: s,
      endpoint: this._get_config("api_host") + "/" + this._get_config("api_routes").engage,
      batcher: this._mixpanel.request_batchers.people
    }, e);
  } else {
    this._enqueue(t);
    if (!L.isUndefined(e)) {
      if (this._get_config("verbose")) {
        e({
          status: -1,
          error: null
        });
      } else {
        e(-1);
      }
    }
    return L.truncate(s, 255);
  }
};
rt.prototype._get_config = function (t) {
  return this._mixpanel.get_config(t);
};
rt.prototype._identify_called = function () {
  return this._mixpanel._flags.identify_called === true;
};
rt.prototype._enqueue = function (t) {
  if (cs in t) {
    this._mixpanel.persistence._add_to_people_queue(cs, t);
  } else if (io in t) {
    this._mixpanel.persistence._add_to_people_queue(io, t);
  } else if (wn in t) {
    this._mixpanel.persistence._add_to_people_queue(wn, t);
  } else if (zs in t) {
    this._mixpanel.persistence._add_to_people_queue(zs, t);
  } else if (Jn in t) {
    this._mixpanel.persistence._add_to_people_queue(Jn, t);
  } else if (Ai in t) {
    this._mixpanel.persistence._add_to_people_queue(Ai, t);
  } else if (qs in t) {
    this._mixpanel.persistence._add_to_people_queue(qs, t);
  } else {
    yt.error("Invalid call to _enqueue():", t);
  }
};
rt.prototype._flush_one_queue = function (t, e, r, n) {
  var i = this;
  var s = L.extend({}, this._mixpanel.persistence.load_queue(t));
  var o = s;
  if (!L.isUndefined(s) && L.isObject(s) && !L.isEmptyObject(s)) {
    i._mixpanel.persistence._pop_from_people_queue(t, s);
    i._mixpanel.persistence.save();
    if (n) {
      o = n(s);
    }
    e.call(i, o, function (f, c) {
      if (f === 0) {
        i._mixpanel.persistence._add_to_people_queue(t, s);
      }
      if (!L.isUndefined(r)) {
        r(f, c);
      }
    });
  }
};
rt.prototype._flush = function (t, e, r, n, i, s, o) {
  var f = this;
  this._flush_one_queue(cs, this.set, t);
  this._flush_one_queue(io, this.set_once, n);
  this._flush_one_queue(wn, this.unset, s, function (x) {
    return L.keys(x);
  });
  this._flush_one_queue(zs, this.increment, e);
  this._flush_one_queue(qs, this.union, i);
  var c = this._mixpanel.persistence.load_queue(Jn);
  if (!L.isUndefined(c) && L.isArray(c) && c.length) {
    var p;
    var d = function (x, A) {
      if (x === 0) {
        f._mixpanel.persistence._add_to_people_queue(Jn, p);
      }
      if (!L.isUndefined(r)) {
        r(x, A);
      }
    };
    for (var E = c.length - 1; E >= 0; E--) {
      c = this._mixpanel.persistence.load_queue(Jn);
      p = c.pop();
      f._mixpanel.persistence.save();
      if (!L.isEmptyObject(p)) {
        f.append(p, d);
      }
    }
  }
  var m = this._mixpanel.persistence.load_queue(Ai);
  if (!L.isUndefined(m) && L.isArray(m) && m.length) {
    var g;
    var T = function (x, A) {
      if (x === 0) {
        f._mixpanel.persistence._add_to_people_queue(Ai, g);
      }
      if (!L.isUndefined(o)) {
        o(x, A);
      }
    };
    for (var b = m.length - 1; b >= 0; b--) {
      m = this._mixpanel.persistence.load_queue(Ai);
      g = m.pop();
      f._mixpanel.persistence.save();
      if (!L.isEmptyObject(g)) {
        f.remove(g, T);
      }
    }
  }
};
rt.prototype._is_reserved_property = function (t) {
  return t === "$distinct_id" || t === "$token" || t === "$device_id" || t === "$user_id" || t === "$had_persisted_distinct_id";
};
rt.prototype.set = rt.prototype.set;
rt.prototype.set_once = rt.prototype.set_once;
rt.prototype.unset = rt.prototype.unset;
rt.prototype.increment = rt.prototype.increment;
rt.prototype.append = rt.prototype.append;
rt.prototype.remove = rt.prototype.remove;
rt.prototype.union = rt.prototype.union;
rt.prototype.track_charge = rt.prototype.track_charge;
rt.prototype.clear_charges = rt.prototype.clear_charges;
rt.prototype.delete_user = rt.prototype.delete_user;
rt.prototype.toString = rt.prototype.toString;
var e0 = "__mps";
var t0 = "__mpso";
var r0 = "__mpus";
var n0 = "__mpa";
var i0 = "__mpap";
var s0 = "__mpr";
var a0 = "__mpu";
var ty = "$people_distinct_id";
var Df = "__alias";
var vl = "__timers";
var P2 = [e0, t0, r0, n0, i0, s0, a0, ty, Df, vl];
function ut(t) {
  this.props = {};
  this.campaign_params_saved = false;
  if (t.persistence_name) {
    this.name = "mp_" + t.persistence_name;
  } else {
    this.name = "mp_" + t.token + "_mixpanel";
  }
  var e = t.persistence;
  if (e !== "cookie" && e !== "localStorage") {
    yt.critical("Unknown persistence type " + e + "; falling back to cookie");
    e = t.persistence = "cookie";
  }
  if (e === "localStorage" && L.localStorage.is_supported()) {
    this.storage = L.localStorage;
  } else {
    this.storage = L.cookie;
  }
  this.load();
  this.update_config(t);
  this.upgrade();
  this.save();
}
ut.prototype.properties = function () {
  var t = {};
  this.load();
  L.each(this.props, function (e, r) {
    if (!L.include(P2, r)) {
      t[r] = e;
    }
  });
  return t;
};
ut.prototype.load = function () {
  if (!this.disabled) {
    var t = this.storage.parse(this.name);
    if (t) {
      this.props = L.extend({}, t);
    }
  }
};
ut.prototype.upgrade = function () {
  var t;
  var e;
  if (this.storage === L.localStorage) {
    t = L.cookie.parse(this.name);
    L.cookie.remove(this.name);
    L.cookie.remove(this.name, true);
    if (t) {
      this.register_once(t);
    }
  } else if (this.storage === L.cookie) {
    e = L.localStorage.parse(this.name);
    L.localStorage.remove(this.name);
    if (e) {
      this.register_once(e);
    }
  }
};
ut.prototype.save = function () {
  if (!this.disabled) {
    this.storage.set(this.name, L.JSONEncode(this.props), this.expire_days, this.cross_subdomain, this.secure, this.cross_site, this.cookie_domain);
  }
};
ut.prototype.load_prop = function (t) {
  this.load();
  return this.props[t];
};
ut.prototype.remove = function () {
  this.storage.remove(this.name, false, this.cookie_domain);
  this.storage.remove(this.name, true, this.cookie_domain);
};
ut.prototype.clear = function () {
  this.remove();
  this.props = {};
};
ut.prototype.register_once = function (t, e, r) {
  if (L.isObject(t)) {
    if (typeof e === "undefined") {
      e = "None";
    }
    this.expire_days = typeof r === "undefined" ? this.default_expiry : r;
    this.load();
    L.each(t, function (n, i) {
      if (!this.props.hasOwnProperty(i) || this.props[i] === e) {
        this.props[i] = n;
      }
    }, this);
    this.save();
    return true;
  } else {
    return false;
  }
};
ut.prototype.register = function (t, e) {
  if (L.isObject(t)) {
    this.expire_days = typeof e === "undefined" ? this.default_expiry : e;
    this.load();
    L.extend(this.props, t);
    this.save();
    return true;
  } else {
    return false;
  }
};
ut.prototype.unregister = function (t) {
  this.load();
  if (t in this.props) {
    delete this.props[t];
    this.save();
  }
};
ut.prototype.update_search_keyword = function (t) {
  this.register(L.info.searchInfo(t));
};
ut.prototype.update_referrer_info = function (t) {
  this.register_once({
    $initial_referrer: t || "$direct",
    $initial_referring_domain: L.info.referringDomain(t) || "$direct"
  }, "");
};
ut.prototype.get_referrer_info = function () {
  return L.strip_empty_properties({
    $initial_referrer: this.props.$initial_referrer,
    $initial_referring_domain: this.props.$initial_referring_domain
  });
};
ut.prototype.update_config = function (t) {
  this.default_expiry = this.expire_days = t.cookie_expiration;
  this.set_disabled(t.disable_persistence);
  this.set_cookie_domain(t.cookie_domain);
  this.set_cross_site(t.cross_site_cookie);
  this.set_cross_subdomain(t.cross_subdomain_cookie);
  this.set_secure(t.secure_cookie);
};
ut.prototype.set_disabled = function (t) {
  this.disabled = t;
  if (this.disabled) {
    this.remove();
  } else {
    this.save();
  }
};
ut.prototype.set_cookie_domain = function (t) {
  if (t !== this.cookie_domain) {
    this.remove();
    this.cookie_domain = t;
    this.save();
  }
};
ut.prototype.set_cross_site = function (t) {
  if (t !== this.cross_site) {
    this.cross_site = t;
    this.remove();
    this.save();
  }
};
ut.prototype.set_cross_subdomain = function (t) {
  if (t !== this.cross_subdomain) {
    this.cross_subdomain = t;
    this.remove();
    this.save();
  }
};
ut.prototype.get_cross_subdomain = function () {
  return this.cross_subdomain;
};
ut.prototype.set_secure = function (t) {
  if (t !== this.secure) {
    this.secure = !!t;
    this.remove();
    this.save();
  }
};
ut.prototype._add_to_people_queue = function (t, e) {
  var r = this._get_queue_key(t);
  var n = e[t];
  var i = this._get_or_create_queue(cs);
  var s = this._get_or_create_queue(io);
  var o = this._get_or_create_queue(wn);
  var f = this._get_or_create_queue(zs);
  var c = this._get_or_create_queue(qs);
  var p = this._get_or_create_queue(Ai, []);
  var d = this._get_or_create_queue(Jn, []);
  if (r === e0) {
    L.extend(i, n);
    this._pop_from_people_queue(zs, n);
    this._pop_from_people_queue(qs, n);
    this._pop_from_people_queue(wn, n);
  } else if (r === t0) {
    L.each(n, function (E, m) {
      if (!(m in s)) {
        s[m] = E;
      }
    });
    this._pop_from_people_queue(wn, n);
  } else if (r === r0) {
    L.each(n, function (E) {
      L.each([i, s, f, c], function (m) {
        if (E in m) {
          delete m[E];
        }
      });
      L.each(d, function (m) {
        if (E in m) {
          delete m[E];
        }
      });
      o[E] = true;
    });
  } else if (r === n0) {
    L.each(n, function (E, m) {
      if (m in i) {
        i[m] += E;
      } else {
        if (!(m in f)) {
          f[m] = 0;
        }
        f[m] += E;
      }
    }, this);
    this._pop_from_people_queue(wn, n);
  } else if (r === a0) {
    L.each(n, function (E, m) {
      if (L.isArray(E)) {
        if (!(m in c)) {
          c[m] = [];
        }
        c[m] = c[m].concat(E);
      }
    });
    this._pop_from_people_queue(wn, n);
  } else if (r === s0) {
    p.push(n);
    this._pop_from_people_queue(Jn, n);
  } else if (r === i0) {
    d.push(n);
    this._pop_from_people_queue(wn, n);
  }
  yt.log("MIXPANEL PEOPLE REQUEST (QUEUED, PENDING IDENTIFY):");
  yt.log(e);
  this.save();
};
ut.prototype._pop_from_people_queue = function (t, e) {
  var r = this.props[this._get_queue_key(t)];
  if (!L.isUndefined(r)) {
    L.each(e, function (n, i) {
      if (t === Jn || t === Ai) {
        L.each(r, function (s) {
          if (s[i] === n) {
            delete s[i];
          }
        });
      } else {
        delete r[i];
      }
    }, this);
  }
};
ut.prototype.load_queue = function (t) {
  return this.load_prop(this._get_queue_key(t));
};
ut.prototype._get_queue_key = function (t) {
  if (t === cs) {
    return e0;
  }
  if (t === io) {
    return t0;
  }
  if (t === wn) {
    return r0;
  }
  if (t === zs) {
    return n0;
  }
  if (t === Jn) {
    return i0;
  }
  if (t === Ai) {
    return s0;
  }
  if (t === qs) {
    return a0;
  }
  yt.error("Invalid queue:", t);
};
ut.prototype._get_or_create_queue = function (t, e) {
  var r = this._get_queue_key(t);
  e = L.isUndefined(e) ? {} : e;
  return this.props[r] ||= e;
};
ut.prototype.set_event_timer = function (t, e) {
  var r = this.load_prop(vl) || {};
  r[t] = e;
  this.props[vl] = r;
  this.save();
};
ut.prototype.remove_event_timer = function (t) {
  var e = this.load_prop(vl) || {};
  var r = e[t];
  if (!L.isUndefined(r)) {
    delete this.props[vl][t];
    this.save();
  }
  return r;
};
var o0;
var Sr;
var ry = 0;
var U2 = 1;
function D2(t) {
  return t;
}
function bl() {}
var Tn = "mixpanel";
var ny = "base64";
var B2 = "json";
var l0 = "$device:";
var Ga = at.XMLHttpRequest && "withCredentials" in new XMLHttpRequest();
var iy = !Ga && Xn.indexOf("MSIE") === -1 && Xn.indexOf("Mozilla") === -1;
var Bf = null;
if (es.sendBeacon) {
  Bf = function () {
    return es.sendBeacon.apply(es, arguments);
  };
}
var sy = {
  track: "track/",
  engage: "engage/",
  groups: "groups/",
  record: "record/"
};
var Kv = {
  api_host: "https://api-js.mixpanel.com",
  api_routes: sy,
  api_method: "POST",
  api_transport: "XHR",
  api_payload_format: ny,
  app_host: "https://mixpanel.com",
  cdn: "https://cdn.mxpnl.com",
  cross_site_cookie: false,
  cross_subdomain_cookie: true,
  error_reporter: bl,
  persistence: "cookie",
  persistence_name: "",
  cookie_domain: "",
  cookie_name: "",
  loaded: bl,
  mp_loader: null,
  track_marketing: true,
  track_pageview: false,
  skip_first_touch_marketing: false,
  store_google: true,
  stop_utm_persistence: false,
  save_referrer: true,
  test: false,
  verbose: false,
  img: false,
  debug: false,
  track_links_timeout: 300,
  cookie_expiration: 365,
  upgrade: false,
  disable_persistence: false,
  disable_cookie: false,
  secure_cookie: false,
  ip: true,
  opt_out_tracking_by_default: false,
  opt_out_persistence_by_default: false,
  opt_out_tracking_persistence_type: "localStorage",
  opt_out_tracking_cookie_prefix: null,
  property_blacklist: [],
  xhr_headers: {},
  ignore_dnt: false,
  batch_requests: true,
  batch_size: 50,
  batch_flush_interval_ms: 5000,
  batch_request_timeout_ms: 90000,
  batch_autostart: true,
  hooks: {},
  record_block_class: new RegExp("^(mp-block|fs-exclude|amp-block|rr-block|ph-no-capture)$"),
  record_block_selector: "img, video",
  record_idle_timeout_ms: 1800000,
  record_mask_text_class: new RegExp("^(mp-mask|fs-mask|amp-mask|rr-mask|ph-mask)$"),
  record_mask_text_selector: "*",
  record_max_ms: m2,
  record_sessions_percent: 0,
  recorder_src: "https://cdn.mxpnl.com/libs/mixpanel-recorder.min.js"
};
var ay = false;
function ce() {}
function $h(t, e, r) {
  var n;
  var i = r === Tn ? Sr : Sr[r];
  if (i && o0 === ry) {
    n = i;
  } else {
    if (i && !L.isArray(i)) {
      yt.error("You have already initialized " + r);
      return;
    }
    n = new ce();
  }
  n._cached_groups = {};
  n._init(t, e, r);
  n.people = new rt();
  n.people._init(n);
  if (!n.get_config("skip_first_touch_marketing")) {
    var s = L.info.campaignParams(null);
    var o = {};
    var f = false;
    L.each(s, function (c, p) {
      o["initial_" + p] = c;
      if (c) {
        f = true;
      }
    });
    if (f) {
      n.people.set_once(o);
    }
  }
  yi.DEBUG = yi.DEBUG || n.get_config("debug");
  if (!L.isUndefined(i) && L.isArray(i)) {
    n._execute_array.call(n.people, i.people);
    n._execute_array(i);
  }
  return n;
}
ce.prototype.init = function (t, e, r) {
  if (L.isUndefined(r)) {
    this.report_error("You must name your new library: init(token, config, name)");
    return;
  }
  if (r === Tn) {
    this.report_error("You must initialize the main mixpanel object right after you include the Mixpanel js snippet");
    return;
  }
  var n = $h(t, e, r);
  Sr[r] = n;
  n._loaded();
  return n;
};
ce.prototype._init = function (t, e, r) {
  e = e || {};
  this.__loaded = true;
  this.config = {};
  var n = {};
  if (!("api_payload_format" in e)) {
    var i = e.api_host || Kv.api_host;
    if (i.match(/\.mixpanel\.com/)) {
      n.api_payload_format = B2;
    }
  }
  this.set_config(L.extend({}, Kv, n, e, {
    name: r,
    token: t,
    callback_fn: (r === Tn ? r : Tn + "." + r) + "._jsc"
  }));
  this._jsc = bl;
  this.__dom_loaded_queue = [];
  this.__request_queue = [];
  this.__disabled_events = [];
  this._flags = {
    disable_all_events: false,
    identify_called: false
  };
  this.request_batchers = {};
  this._batch_requests = this.get_config("batch_requests");
  if (this._batch_requests) {
    if (!L.localStorage.is_supported(true) || !Ga) {
      this._batch_requests = false;
      yt.log("Turning off Mixpanel request-queueing; needs XHR and localStorage support");
      L.each(this.get_batcher_configs(), function (c) {
        yt.log("Clearing batch queue " + c.queue_key);
        L.localStorage.remove(c.queue_key);
      });
    } else {
      this.init_batchers();
      if (Bf && at.addEventListener) {
        var s = L.bind(function () {
          if (!this.request_batchers.events.stopped) {
            this.request_batchers.events.flush({
              unloading: true
            });
          }
        }, this);
        at.addEventListener("pagehide", function (c) {
          if (c.persisted) {
            s();
          }
        });
        at.addEventListener("visibilitychange", function () {
          if (It.visibilityState === "hidden") {
            s();
          }
        });
      }
    }
  }
  this.persistence = this.cookie = new ut(this.config);
  this.unpersisted_superprops = {};
  this._gdpr_init();
  var o = L.UUID();
  if (!this.get_distinct_id()) {
    this.register_once({
      distinct_id: l0 + o,
      $device_id: o
    }, "");
  }
  var f = this.get_config("track_pageview");
  if (f) {
    this._init_url_change_tracking(f);
  }
  if (this.get_config("record_sessions_percent") > 0 && Math.random() * 100 <= this.get_config("record_sessions_percent")) {
    this.start_session_recording();
  }
};
ce.prototype.start_session_recording = Qs(function () {
  if (!at.MutationObserver) {
    yt.critical("Browser does not support MutationObserver; skipping session recording");
    return;
  }
  var t = L.bind(function () {
    this._recorder = this._recorder || new at.__mp_recorder(this);
    this._recorder.startRecording();
  }, this);
  if (L.isUndefined(at.__mp_recorder)) {
    var e = It.createElement("script");
    e.type = "text/javascript";
    e.async = true;
    e.onload = t;
    e.src = this.get_config("recorder_src");
    It.head.appendChild(e);
  } else {
    t();
  }
});
ce.prototype.stop_session_recording = function () {
  if (this._recorder) {
    this._recorder.stopRecording();
  } else {
    yt.critical("Session recorder module not loaded");
  }
};
ce.prototype.get_session_recording_properties = function () {
  var t = {};
  if (this._recorder) {
    var e = this._recorder.replayId;
    if (e) {
      t.$mp_replay_id = e;
    }
  }
  return t;
};
ce.prototype._loaded = function () {
  this.get_config("loaded")(this);
  this._set_default_superprops();
  this.people.set_once(this.persistence.get_referrer_info());
  if (this.get_config("store_google") && this.get_config("stop_utm_persistence")) {
    var t = L.info.campaignParams(null);
    L.each(t, function (e, r) {
      this.unregister(r);
    }.bind(this));
  }
};
ce.prototype._set_default_superprops = function () {
  this.persistence.update_search_keyword(It.referrer);
  if (this.get_config("store_google") && !this.get_config("stop_utm_persistence")) {
    this.register(L.info.campaignParams());
  }
  if (this.get_config("save_referrer")) {
    this.persistence.update_referrer_info(It.referrer);
  }
};
ce.prototype._dom_loaded = function () {
  L.each(this.__dom_loaded_queue, function (t) {
    this._track_dom.apply(this, t);
  }, this);
  if (!this.has_opted_out_tracking()) {
    L.each(this.__request_queue, function (t) {
      this._send_request.apply(this, t);
    }, this);
  }
  delete this.__dom_loaded_queue;
  delete this.__request_queue;
};
ce.prototype._track_dom = function (t, e) {
  if (this.get_config("img")) {
    this.report_error("You can't use DOM tracking functions with img = true.");
    return false;
  }
  if (!ay) {
    this.__dom_loaded_queue.push([t, e]);
    return false;
  }
  var r = new t().init(this);
  return r.track.apply(r, e);
};
ce.prototype._init_url_change_tracking = function (t) {
  var e = "";
  var r = this.track_pageview();
  if (r) {
    e = L.info.currentUrl();
  }
  if (L.include(["full-url", "url-with-path-and-query-string", "url-with-path"], t)) {
    at.addEventListener("popstate", function () {
      at.dispatchEvent(new Event("mp_locationchange"));
    });
    at.addEventListener("hashchange", function () {
      at.dispatchEvent(new Event("mp_locationchange"));
    });
    var n = at.history.pushState;
    if (typeof n == "function") {
      at.history.pushState = function (s, o, f) {
        n.call(at.history, s, o, f);
        at.dispatchEvent(new Event("mp_locationchange"));
      };
    }
    var i = at.history.replaceState;
    if (typeof i == "function") {
      at.history.replaceState = function (s, o, f) {
        i.call(at.history, s, o, f);
        at.dispatchEvent(new Event("mp_locationchange"));
      };
    }
    at.addEventListener("mp_locationchange", function () {
      var s = L.info.currentUrl();
      var o = false;
      if (t === "full-url") {
        o = s !== e;
      } else if (t === "url-with-path-and-query-string") {
        o = s.split("#")[0] !== e.split("#")[0];
      } else if (t === "url-with-path") {
        o = s.split("#")[0].split("?")[0] !== e.split("#")[0].split("?")[0];
      }
      if (o) {
        var f = this.track_pageview();
        if (f) {
          e = s;
        }
      }
    }.bind(this));
  }
};
ce.prototype._prepare_callback = function (t, e) {
  if (L.isUndefined(t)) {
    return null;
  }
  if (Ga) {
    function r(o) {
      t(o, e);
    }
    return r;
  } else {
    var n = this._jsc;
    var i = "" + Math.floor(Math.random() * 100000000);
    var s = this.get_config("callback_fn") + "[" + i + "]";
    n[i] = function (o) {
      delete n[i];
      t(o, e);
    };
    return s;
  }
};
ce.prototype._send_request = function (t, e, r, n) {
  var i = true;
  if (iy) {
    this.__request_queue.push(arguments);
    return i;
  }
  var s = {
    method: this.get_config("api_method"),
    transport: this.get_config("api_transport"),
    verbose: this.get_config("verbose")
  };
  var o = null;
  if (!n && (L.isFunction(r) || typeof r == "string")) {
    n = r;
    r = null;
  }
  r = L.extend(s, r || {});
  if (!Ga) {
    r.method = "GET";
  }
  var f = r.method === "POST";
  var c = Bf && f && r.transport.toLowerCase() === "sendbeacon";
  var p = r.verbose;
  if (e.verbose) {
    p = true;
  }
  if (this.get_config("test")) {
    e.test = 1;
  }
  if (p) {
    e.verbose = 1;
  }
  if (this.get_config("img")) {
    e.img = 1;
  }
  if (!Ga) {
    if (n) {
      e.callback = n;
    } else if (p || this.get_config("test")) {
      e.callback = "(function(){})";
    }
  }
  e.ip = this.get_config("ip") ? 1 : 0;
  e._ = new Date().getTime().toString();
  if (f) {
    o = "data=" + encodeURIComponent(e.data);
    delete e.data;
  }
  t += "?" + L.HTTPBuildQuery(e);
  var d = this;
  if ("img" in e) {
    var E = It.createElement("img");
    E.src = t;
    It.body.appendChild(E);
  } else if (c) {
    try {
      i = Bf(t, o);
    } catch (A) {
      d.report_error(A);
      i = false;
    }
    try {
      if (n) {
        n(i ? 1 : 0);
      }
    } catch (A) {
      d.report_error(A);
    }
  } else if (Ga) {
    try {
      var m = new XMLHttpRequest();
      m.open(r.method, t, true);
      var g = this.get_config("xhr_headers");
      if (f) {
        g["Content-Type"] = "application/x-www-form-urlencoded";
      }
      L.each(g, function (A, R) {
        m.setRequestHeader(R, A);
      });
      if (r.timeout_ms && typeof m.timeout !== "undefined") {
        m.timeout = r.timeout_ms;
        var T = new Date().getTime();
      }
      m.withCredentials = true;
      m.onreadystatechange = function () {
        if (m.readyState === 4) {
          if (m.status === 200) {
            if (n) {
              if (p) {
                var A;
                try {
                  A = L.JSONDecode(m.responseText);
                } catch (v) {
                  d.report_error(v);
                  if (r.ignore_json_errors) {
                    A = m.responseText;
                  } else {
                    return;
                  }
                }
                n(A);
              } else {
                n(Number(m.responseText));
              }
            }
          } else {
            var R;
            if (m.timeout && !m.status && new Date().getTime() - T >= m.timeout) {
              R = "timeout";
            } else {
              R = "Bad HTTP status: " + m.status + " " + m.statusText;
            }
            d.report_error(R);
            if (n) {
              n(p ? {
                status: 0,
                error: R,
                xhr_req: m
              } : 0);
            }
          }
        }
      };
      m.send(o);
    } catch (A) {
      d.report_error(A);
      i = false;
    }
  } else {
    var b = It.createElement("script");
    b.type = "text/javascript";
    b.async = true;
    b.defer = true;
    b.src = t;
    var x = It.getElementsByTagName("script")[0];
    x.parentNode.insertBefore(b, x);
  }
  return i;
};
ce.prototype._execute_array = function (t) {
  var e;
  var r = [];
  var n = [];
  var i = [];
  L.each(t, function (o) {
    if (o) {
      e = o[0];
      if (L.isArray(e)) {
        i.push(o);
      } else if (typeof o == "function") {
        o.call(this);
      } else if (L.isArray(o) && e === "alias") {
        r.push(o);
      } else if (L.isArray(o) && e.indexOf("track") !== -1 && typeof this[e] == "function") {
        i.push(o);
      } else {
        n.push(o);
      }
    }
  }, this);
  function s(o, f) {
    L.each(o, function (c) {
      if (L.isArray(c[0])) {
        var p = f;
        L.each(c, function (d) {
          p = p[d[0]].apply(p, d.slice(1));
        });
      } else {
        this[c[0]].apply(this, c.slice(1));
      }
    }, f);
  }
  s(r, this);
  s(n, this);
  s(i, this);
};
ce.prototype.are_batchers_initialized = function () {
  return !!this.request_batchers.events;
};
ce.prototype.get_batcher_configs = function () {
  var t = "__mpq_" + this.get_config("token");
  var e = this.get_config("api_routes");
  this._batcher_configs = this._batcher_configs || {
    events: {
      type: "events",
      endpoint: "/" + e.track,
      queue_key: t + "_ev"
    },
    people: {
      type: "people",
      endpoint: "/" + e.engage,
      queue_key: t + "_pp"
    },
    groups: {
      type: "groups",
      endpoint: "/" + e.groups,
      queue_key: t + "_gr"
    }
  };
  return this._batcher_configs;
};
ce.prototype.init_batchers = function () {
  if (!this.are_batchers_initialized()) {
    var t = L.bind(function (r) {
      return new ii(r.queue_key, {
        libConfig: this.config,
        sendRequestFunc: L.bind(function (n, i, s) {
          this._send_request(this.get_config("api_host") + r.endpoint, this._encode_data_for_request(n), i, this._prepare_callback(s, n));
        }, this),
        beforeSendHook: L.bind(function (n) {
          return this._run_hook("before_send_" + r.type, n);
        }, this),
        errorReporter: this.get_config("error_reporter"),
        stopAllBatchingFunc: L.bind(this.stop_batch_senders, this)
      });
    }, this);
    var e = this.get_batcher_configs();
    this.request_batchers = {
      events: t(e.events),
      people: t(e.people),
      groups: t(e.groups)
    };
  }
  if (this.get_config("batch_autostart")) {
    this.start_batch_senders();
  }
};
ce.prototype.start_batch_senders = function () {
  this._batchers_were_started = true;
  if (this.are_batchers_initialized()) {
    this._batch_requests = true;
    L.each(this.request_batchers, function (t) {
      t.start();
    });
  }
};
ce.prototype.stop_batch_senders = function () {
  this._batch_requests = false;
  L.each(this.request_batchers, function (t) {
    t.stop();
    t.clear();
  });
};
ce.prototype.push = function (t) {
  this._execute_array([t]);
};
ce.prototype.disable = function (t) {
  if (typeof t === "undefined") {
    this._flags.disable_all_events = true;
  } else {
    this.__disabled_events = this.__disabled_events.concat(t);
  }
};
ce.prototype._encode_data_for_request = function (t) {
  var e = L.JSONEncode(t);
  if (this.get_config("api_payload_format") === ny) {
    e = L.base64Encode(e);
  }
  return {
    data: e
  };
};
ce.prototype._track_or_batch = function (t, e) {
  var r = L.truncate(t.data, 255);
  var n = t.endpoint;
  var i = t.batcher;
  var s = t.should_send_immediately;
  var o = t.send_request_options || {};
  e = e || bl;
  var f = true;
  var c = L.bind(function () {
    if (!o.skip_hooks) {
      r = this._run_hook("before_send_" + t.type, r);
    }
    if (r) {
      yt.log("MIXPANEL REQUEST:");
      yt.log(r);
      return this._send_request(n, this._encode_data_for_request(r), o, this._prepare_callback(e, r));
    } else {
      return null;
    }
  }, this);
  if (this._batch_requests && !s) {
    i.enqueue(r, function (p) {
      if (p) {
        e(1, r);
      } else {
        c();
      }
    });
  } else {
    f = c();
  }
  return f && r;
};
ce.prototype.track = Qs(function (t, e, r, n) {
  if (!n && typeof r == "function") {
    n = r;
    r = null;
  }
  r = r || {};
  var i = r.transport;
  if (i) {
    r.transport = i;
  }
  var s = r.send_immediately;
  if (typeof n != "function") {
    n = bl;
  }
  if (L.isUndefined(t)) {
    this.report_error("No event name provided to mixpanel.track");
    return;
  }
  if (this._event_is_disabled(t)) {
    n(0);
    return;
  }
  e = L.extend({}, e);
  e.token = this.get_config("token");
  var o = this.persistence.remove_event_timer(t);
  if (!L.isUndefined(o)) {
    var f = new Date().getTime() - o;
    e.$duration = parseFloat((f / 1000).toFixed(3));
  }
  this._set_default_superprops();
  var c = this.get_config("track_marketing") ? L.info.marketingParams() : {};
  e = L.extend({}, L.info.properties({
    mp_loader: this.get_config("mp_loader")
  }), c, this.persistence.properties(), this.unpersisted_superprops, this.get_session_recording_properties(), e);
  var p = this.get_config("property_blacklist");
  if (L.isArray(p)) {
    L.each(p, function (m) {
      delete e[m];
    });
  } else {
    this.report_error("Invalid value for property_blacklist config: " + p);
  }
  var d = {
    event: t,
    properties: e
  };
  var E = this._track_or_batch({
    type: "events",
    data: d,
    endpoint: this.get_config("api_host") + "/" + this.get_config("api_routes").track,
    batcher: this.request_batchers.events,
    should_send_immediately: s,
    send_request_options: r
  }, n);
  return E;
});
ce.prototype.set_group = Qs(function (t, e, r) {
  if (!L.isArray(e)) {
    e = [e];
  }
  var n = {
    [t]: e
  };
  this.register(n);
  return this.people.set(t, e, r);
});
ce.prototype.add_group = Qs(function (t, e, r) {
  var n = this.get_property(t);
  var i = {};
  if (n === undefined) {
    i[t] = [e];
    this.register(i);
  } else if (n.indexOf(e) === -1) {
    n.push(e);
    i[t] = n;
    this.register(i);
  }
  return this.people.union(t, e, r);
});
ce.prototype.remove_group = Qs(function (t, e, r) {
  var n = this.get_property(t);
  if (n !== undefined) {
    var i = n.indexOf(e);
    if (i > -1) {
      n.splice(i, 1);
      this.register({
        group_key: n
      });
    }
    if (n.length === 0) {
      this.unregister(t);
    }
  }
  return this.people.remove(t, e, r);
});
ce.prototype.track_with_groups = Qs(function (t, e, r, n) {
  var i = L.extend({}, e || {});
  L.each(r, function (s, o) {
    if (s != null) {
      i[o] = s;
    }
  });
  return this.track(t, i, n);
});
ce.prototype._create_map_key = function (t, e) {
  return t + "_" + JSON.stringify(e);
};
ce.prototype._remove_group_from_cache = function (t, e) {
  delete this._cached_groups[this._create_map_key(t, e)];
};
ce.prototype.get_group = function (t, e) {
  var r = this._create_map_key(t, e);
  var n = this._cached_groups[r];
  if (n === undefined || n._group_key !== t || n._group_id !== e) {
    n = new Xt();
    n._init(this, t, e);
    this._cached_groups[r] = n;
  }
  return n;
};
ce.prototype.track_pageview = Qs(function (t, e) {
  if (typeof t != "object") {
    t = {};
  }
  e = e || {};
  var r = e.event_name || "$mp_web_page_view";
  var n = L.extend(L.info.mpPageViewProperties(), L.info.campaignParams(), L.info.clickParams());
  var i = L.extend({}, n, t);
  return this.track(r, i);
});
ce.prototype.track_links = function () {
  return this._track_dom.call(this, no, arguments);
};
ce.prototype.track_forms = function () {
  return this._track_dom.call(this, Rc, arguments);
};
ce.prototype.time_event = function (t) {
  if (L.isUndefined(t)) {
    this.report_error("No event name provided to mixpanel.time_event");
    return;
  }
  if (!this._event_is_disabled(t)) {
    this.persistence.set_event_timer(t, new Date().getTime());
  }
};
var M2 = {
  persistent: true
};
function u0(t) {
  var e;
  if (L.isObject(t)) {
    e = t;
  } else if (L.isUndefined(t)) {
    e = {};
  } else {
    e = {
      days: t
    };
  }
  return L.extend({}, M2, e);
}
ce.prototype.register = function (t, e) {
  var r = u0(e);
  if (r.persistent) {
    this.persistence.register(t, r.days);
  } else {
    L.extend(this.unpersisted_superprops, t);
  }
};
ce.prototype.register_once = function (t, e, r) {
  var n = u0(r);
  if (n.persistent) {
    this.persistence.register_once(t, e, n.days);
  } else {
    if (typeof e === "undefined") {
      e = "None";
    }
    L.each(t, function (i, s) {
      if (!this.unpersisted_superprops.hasOwnProperty(s) || this.unpersisted_superprops[s] === e) {
        this.unpersisted_superprops[s] = i;
      }
    }, this);
  }
};
ce.prototype.unregister = function (t, e) {
  e = u0(e);
  if (e.persistent) {
    this.persistence.unregister(t);
  } else {
    delete this.unpersisted_superprops[t];
  }
};
ce.prototype._register_single = function (t, e) {
  var r = {
    [t]: e
  };
  this.register(r);
};
ce.prototype.identify = function (t, e, r, n, i, s, o, f) {
  var c = this.get_distinct_id();
  if (t && c !== t) {
    if (typeof t == "string" && t.indexOf(l0) === 0) {
      this.report_error("distinct_id cannot have $device: prefix");
      return -1;
    }
    this.register({
      $user_id: t
    });
  }
  if (!this.get_property("$device_id")) {
    var p = c;
    this.register_once({
      $had_persisted_distinct_id: true,
      $device_id: p
    }, "");
  }
  if (t !== c && t !== this.get_property(Df)) {
    this.unregister(Df);
    this.register({
      distinct_id: t
    });
  }
  this._flags.identify_called = true;
  this.people._flush(e, r, n, i, s, o, f);
  if (t !== c) {
    this.track("$identify", {
      distinct_id: t,
      $anon_distinct_id: c
    }, {
      skip_hooks: true
    });
  }
};
ce.prototype.reset = function () {
  this.persistence.clear();
  this._flags.identify_called = false;
  var t = L.UUID();
  this.register_once({
    distinct_id: l0 + t,
    $device_id: t
  }, "");
};
ce.prototype.get_distinct_id = function () {
  return this.get_property("distinct_id");
};
ce.prototype.alias = function (t, e) {
  if (t === this.get_property(ty)) {
    this.report_error("Attempting to create alias for existing People user - aborting.");
    return -2;
  }
  var r = this;
  if (L.isUndefined(e)) {
    e = this.get_distinct_id();
  }
  if (t !== e) {
    this._register_single(Df, t);
    return this.track("$create_alias", {
      alias: t,
      distinct_id: e
    }, {
      skip_hooks: true
    }, function () {
      r.identify(t);
    });
  } else {
    this.report_error("alias matches current distinct_id - skipping api call.");
    this.identify(t);
    return -1;
  }
};
ce.prototype.name_tag = function (t) {
  this._register_single("mp_name_tag", t);
};
ce.prototype.set_config = function (t) {
  if (L.isObject(t)) {
    L.extend(this.config, t);
    var e = t.batch_size;
    if (e) {
      L.each(this.request_batchers, function (r) {
        r.resetBatchSize();
      });
    }
    if (!this.get_config("persistence_name")) {
      this.config.persistence_name = this.config.cookie_name;
    }
    if (!this.get_config("disable_persistence")) {
      this.config.disable_persistence = this.config.disable_cookie;
    }
    if (this.persistence) {
      this.persistence.update_config(this.config);
    }
    yi.DEBUG = yi.DEBUG || this.get_config("debug");
  }
};
ce.prototype.get_config = function (t) {
  return this.config[t];
};
ce.prototype._run_hook = function (t) {
  var e = (this.config.hooks[t] || D2).apply(this, Qi.call(arguments, 1));
  if (typeof e === "undefined") {
    this.report_error(t + " hook did not return a value");
    e = null;
  }
  return e;
};
ce.prototype.get_property = function (t) {
  return this.persistence.load_prop([t]);
};
ce.prototype.toString = function () {
  var t = this.get_config("name");
  if (t !== Tn) {
    t = Tn + "." + t;
  }
  return t;
};
ce.prototype._event_is_disabled = function (t) {
  return L.isBlockedUA(Xn) || this._flags.disable_all_events || L.include(this.__disabled_events, t);
};
ce.prototype._gdpr_init = function () {
  var t = this.get_config("opt_out_tracking_persistence_type") === "localStorage";
  if (t && L.localStorage.is_supported()) {
    if (!this.has_opted_in_tracking() && this.has_opted_in_tracking({
      persistence_type: "cookie"
    })) {
      this.opt_in_tracking({
        enable_persistence: false
      });
    }
    if (!this.has_opted_out_tracking() && this.has_opted_out_tracking({
      persistence_type: "cookie"
    })) {
      this.opt_out_tracking({
        clear_persistence: false
      });
    }
    this.clear_opt_in_out_tracking({
      persistence_type: "cookie",
      enable_persistence: false
    });
  }
  if (this.has_opted_out_tracking()) {
    this._gdpr_update_persistence({
      clear_persistence: true
    });
  } else if (!this.has_opted_in_tracking() && (this.get_config("opt_out_tracking_by_default") || L.cookie.get("mp_optout"))) {
    L.cookie.remove("mp_optout");
    this.opt_out_tracking({
      clear_persistence: this.get_config("opt_out_persistence_by_default")
    });
  }
};
ce.prototype._gdpr_update_persistence = function (t) {
  var e;
  if (t && t.clear_persistence) {
    e = true;
  } else if (t && t.enable_persistence) {
    e = false;
  } else {
    return;
  }
  if (!this.get_config("disable_persistence") && this.persistence.disabled !== e) {
    this.persistence.set_disabled(e);
  }
  if (e) {
    this.stop_batch_senders();
  } else if (this._batchers_were_started) {
    this.start_batch_senders();
  }
};
ce.prototype._gdpr_call_func = function (t, e) {
  e = L.extend({
    track: L.bind(this.track, this),
    persistence_type: this.get_config("opt_out_tracking_persistence_type"),
    cookie_prefix: this.get_config("opt_out_tracking_cookie_prefix"),
    cookie_expiration: this.get_config("cookie_expiration"),
    cross_site_cookie: this.get_config("cross_site_cookie"),
    cross_subdomain_cookie: this.get_config("cross_subdomain_cookie"),
    cookie_domain: this.get_config("cookie_domain"),
    secure_cookie: this.get_config("secure_cookie"),
    ignore_dnt: this.get_config("ignore_dnt")
  }, e);
  if (!L.localStorage.is_supported()) {
    e.persistence_type = "cookie";
  }
  return t(this.get_config("token"), {
    track: e.track,
    trackEventName: e.track_event_name,
    trackProperties: e.track_properties,
    persistenceType: e.persistence_type,
    persistencePrefix: e.cookie_prefix,
    cookieDomain: e.cookie_domain,
    cookieExpiration: e.cookie_expiration,
    crossSiteCookie: e.cross_site_cookie,
    crossSubdomainCookie: e.cross_subdomain_cookie,
    secureCookie: e.secure_cookie,
    ignoreDnt: e.ignore_dnt
  });
};
ce.prototype.opt_in_tracking = function (t) {
  t = L.extend({
    enable_persistence: true
  }, t);
  this._gdpr_call_func(L2, t);
  this._gdpr_update_persistence(t);
};
ce.prototype.opt_out_tracking = function (t) {
  t = L.extend({
    clear_persistence: true,
    delete_user: true
  }, t);
  if (t.delete_user && this.people && this.people._identify_called()) {
    this.people.delete_user();
    this.people.clear_charges();
  }
  this._gdpr_call_func(C2, t);
  this._gdpr_update_persistence(t);
};
ce.prototype.has_opted_in_tracking = function (t) {
  return this._gdpr_call_func(w2, t);
};
ce.prototype.has_opted_out_tracking = function (t) {
  return this._gdpr_call_func(JS, t);
};
ce.prototype.clear_opt_in_out_tracking = function (t) {
  t = L.extend({
    enable_persistence: true
  }, t);
  this._gdpr_call_func(O2, t);
  this._gdpr_update_persistence(t);
};
ce.prototype.report_error = function (t, e) {
  yt.error.apply(yt.error, arguments);
  try {
    if (!e && !(t instanceof Error)) {
      t = new Error(t);
    }
    this.get_config("error_reporter")(t, e);
  } catch (r) {
    yt.error(r);
  }
};
ce.prototype.init = ce.prototype.init;
ce.prototype.reset = ce.prototype.reset;
ce.prototype.disable = ce.prototype.disable;
ce.prototype.time_event = ce.prototype.time_event;
ce.prototype.track = ce.prototype.track;
ce.prototype.track_links = ce.prototype.track_links;
ce.prototype.track_forms = ce.prototype.track_forms;
ce.prototype.track_pageview = ce.prototype.track_pageview;
ce.prototype.register = ce.prototype.register;
ce.prototype.register_once = ce.prototype.register_once;
ce.prototype.unregister = ce.prototype.unregister;
ce.prototype.identify = ce.prototype.identify;
ce.prototype.alias = ce.prototype.alias;
ce.prototype.name_tag = ce.prototype.name_tag;
ce.prototype.set_config = ce.prototype.set_config;
ce.prototype.get_config = ce.prototype.get_config;
ce.prototype.get_property = ce.prototype.get_property;
ce.prototype.get_distinct_id = ce.prototype.get_distinct_id;
ce.prototype.toString = ce.prototype.toString;
ce.prototype.opt_out_tracking = ce.prototype.opt_out_tracking;
ce.prototype.opt_in_tracking = ce.prototype.opt_in_tracking;
ce.prototype.has_opted_out_tracking = ce.prototype.has_opted_out_tracking;
ce.prototype.has_opted_in_tracking = ce.prototype.has_opted_in_tracking;
ce.prototype.clear_opt_in_out_tracking = ce.prototype.clear_opt_in_out_tracking;
ce.prototype.get_group = ce.prototype.get_group;
ce.prototype.set_group = ce.prototype.set_group;
ce.prototype.add_group = ce.prototype.add_group;
ce.prototype.remove_group = ce.prototype.remove_group;
ce.prototype.track_with_groups = ce.prototype.track_with_groups;
ce.prototype.start_batch_senders = ce.prototype.start_batch_senders;
ce.prototype.stop_batch_senders = ce.prototype.stop_batch_senders;
ce.prototype.start_session_recording = ce.prototype.start_session_recording;
ce.prototype.stop_session_recording = ce.prototype.stop_session_recording;
ce.prototype.get_session_recording_properties = ce.prototype.get_session_recording_properties;
ce.prototype.DEFAULT_API_ROUTES = sy;
ut.prototype.properties = ut.prototype.properties;
ut.prototype.update_search_keyword = ut.prototype.update_search_keyword;
ut.prototype.update_referrer_info = ut.prototype.update_referrer_info;
ut.prototype.get_cross_subdomain = ut.prototype.get_cross_subdomain;
ut.prototype.clear = ut.prototype.clear;
var Oa = {};
function $2() {
  L.each(Oa, function (t, e) {
    if (e !== Tn) {
      Sr[e] = t;
    }
  });
  Sr._ = L;
}
function K2() {
  Sr.init = function (t, e, r) {
    if (r) {
      if (!Sr[r]) {
        Sr[r] = Oa[r] = $h(t, e, r);
        Sr[r]._loaded();
      }
      return Sr[r];
    }
    var n = Sr;
    if (Oa[Tn]) {
      n = Oa[Tn];
    } else if (t) {
      n = $h(t, e, Tn);
      n._loaded();
      Oa[Tn] = n;
    }
    Sr = n;
    if (o0 === U2) {
      at[Tn] = Sr;
    }
    $2();
  };
}
function k2() {
  function t() {
    if (!t.done) {
      t.done = true;
      ay = true;
      iy = false;
      L.each(Oa, function (n) {
        n._dom_loaded();
      });
    }
  }
  function e() {
    try {
      It.documentElement.doScroll("left");
    } catch {
      setTimeout(e, 1);
      return;
    }
    t();
  }
  if (It.addEventListener) {
    if (It.readyState === "complete") {
      t();
    } else {
      It.addEventListener("DOMContentLoaded", t, false);
    }
  } else if (It.attachEvent) {
    It.attachEvent("onreadystatechange", t);
    var r = false;
    try {
      r = at.frameElement === null;
    } catch {}
    if (It.documentElement.doScroll && r) {
      e();
    }
  }
  L.register_event(at, "load", t, true);
}
function G2() {
  o0 = ry;
  Sr = new ce();
  K2();
  Sr.init();
  k2();
  return Sr;
}
var V2 = G2();
var F2 = V2;
const kv = vc(F2);
class Ys {
  static setup() {
    this.isSetup = true;
    gtag("config", "G-V1QJVQMYF1", {
      send_page_view: false
    });
    kv.init("2e284873b7269f13b850ac994abfd848", {
      debug: "false"
    });
  }
  static ga(e, r) {
    if (!this.isSetup) {
      this.setup();
    }
    gtag("event", e, r);
  }
  static mp(e, r) {
    if (!this.isSetup) {
      this.setup();
    }
    kv.track(e, r);
  }
  static pageView(e) {
    this.ga("page_view", {
      page_title: e,
      page_location: `https://jackbox.tv/${e}`
    });
  }
  static gameStarted(e, r) {
    const n = {
      tag: e
    };
    if (r.isUGC !== undefined) {
      n.is_ugc = r.isUGC;
    }
    if (r.isSequel !== undefined) {
      n.is_sequel = r.isSequel;
    }
    if (r.locale !== undefined) {
      n.locale = r.locale;
    }
    if (r.mode !== undefined) {
      n.mode = r.mode;
    }
    if (r.numberOfPlayer !== undefined) {
      n.number_of_players = r.numberOfPlayer;
    }
    this.ga("game_start", n);
  }
  static gameJoined(e, r) {
    this.mp("Game Joined", {
      tag: e,
      ...r
    });
  }
  static bannerClick(e, r) {
    this.ga("banner_click", {
      url: e,
      location: r
    });
  }
  static externalLinkClick(e, r) {
    this.ga("external_link_click", {
      url: e,
      location: r
    });
  }
  static moderatorConnected(e) {
    this.ga("moderator_connected", {
      tag: e
    });
    this.mp("Moderator Connected", {
      tag: e
    });
  }
  static itemModerated(e, r) {
    this.ga("item_moderated", {
      tag: e,
      was_rejected: r
    });
    this.mp("Moderator Item", {
      tag: e,
      wasRejected: r
    });
  }
  static playerKicked(e, r) {
    this.ga("player_kicked", {
      tag: e,
      is_lobby: r
    });
    this.mp("Moderator Kick", {
      tag: e,
      isLobby: r
    });
  }
  static galleryImpression(e, r) {
    this.ga("gallery_impression", {
      category_id: e,
      location: r
    });
  }
  static galleryClick(e, r) {
    this.ga("gallery_click", {
      category_id: e,
      location: r
    });
    this.mp("Gallery Click", {
      categoryId: e,
      location: r
    });
  }
  static galleryAddToCart(e, r) {
    this.mp("Gallery Add To Cart", {
      categoryId: e,
      ...r
    });
  }
  static galleryCheckout(e, r) {
    this.mp("Gallery Checkout", {
      categoryId: e,
      ...r
    });
  }
  static galleryShare(e, r) {
    this.mp("Gallery Share", {
      categoryId: e,
      ...r
    });
  }
  static galleryWatch(e, r) {
    this.mp("Gallery Watch", {
      categoryId: e,
      ...r
    });
  }
  static galleryDownload(e, r) {
    this.mp("Gallery Download", {
      categoryId: e,
      ...r
    });
  }
}
kn(Ys, "isSetup", false);
const H2 = [{
  name: "Prototype",
  tag: "prototype",
  wrapper: "vue",
  isPublic: true,
  directory: "internal/prototype"
}, {
  name: "EcastTestClient",
  tag: "ecast-test-client",
  wrapper: "marionette",
  isPublic: true,
  directory: "internal/ecast-test-client"
}, {
  name: "Quiplash 2 InterLASHional",
  tag: "quiplash2-international",
  wrapper: "marionette",
  isPublic: true,
  directory: "standalone/quiplash2-international",
  categoryId: "quiplash2-internationalGame"
}, {
  name: "Guesspionage Crowdplay",
  tag: "guesspionage-crowdplay",
  wrapper: "marionette",
  isPublic: true,
  directory: "standalone/guesspionage-crowdplay"
}, {
  name: "Drawful 2",
  tag: "drawful2",
  wrapper: "marionette",
  isPublic: true,
  directory: "standalone/drawful2",
  categoryId: "DrawfulGame",
  shopItems: ["shirts"]
}, {
  name: "Drawful 2",
  tag: "drawful2international",
  wrapper: "marionette",
  isPublic: true,
  directory: "standalone/drawful2-international",
  features: ["moderation"]
}, {
  name: "Acquisitions, Inc.",
  tag: "acquisitions-inc",
  wrapper: "marionette",
  isPublic: true,
  directory: "standalone/acquisitions-inc"
}, {
  name: "You Don't Know Jack 2015",
  tag: "ydkj2015",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp1/ydkj2015"
}, {
  name: "Drawful",
  tag: "drawful",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp1/drawful"
}, {
  name: "Word Spud",
  tag: "wordspud",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp1/wordspud"
}, {
  name: "Lie Swatter",
  tag: "lieswatter",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp1/lieswatter"
}, {
  name: "Fibbage",
  tag: "fibbage",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp1/fibbage"
}, {
  name: "Fibbage 2",
  tag: "fibbage2",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp2/fibbage2"
}, {
  name: "MP3-БРЕД",
  tag: "earwax",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp2/earwax"
}, {
  name: "Bidiots",
  tag: "auction",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp2/auction"
}, {
  name: "Bomb Corp",
  tag: "bombintern",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp2/bombintern"
}, {
  name: "Quiplash",
  tag: "quiplash",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp2/quiplash"
}, {
  name: "Обмани меня",
  tag: "fakinit",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp3/fakinit"
}, {
  name: "Tee K.O.",
  tag: "awshirt",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp3/awshirt",
  categoryId: "TeeKOGame",
  shopItems: ["shirts"]
}, {
  name: "Quiplash 2",
  tag: "quiplash2",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp3/quiplash2",
  categoryId: "Quiplash2Game"
}, {
  name: "Trivia Murder Party",
  tag: "triviadeath",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp3/triviadeath",
  categoryId: "TriviaDeathResults"
}, {
  name: "Guesspionage",
  tag: "pollposition",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp3/pollposition"
}, {
  name: "Fibbage 3",
  tag: "fibbage3",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp4/fibbage3"
}, {
  name: "Survive the Internet",
  tag: "survivetheinternet",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp4/survivetheinternet",
  categoryId: "STIGame"
}, {
  name: "Monster Seeking Monster",
  tag: "monstermingle",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp4/monstermingle",
  categoryId: "MonsterMingleGame"
}, {
  name: "Bracketeering",
  tag: "bracketeering",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp4/bracketeering",
  categoryId: "BRKGame"
}, {
  name: "Civic Doodle",
  tag: "overdrawn",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp4/overdrawn",
  categoryId: "OverdrawnGame",
  shopItems: ["shirts"]
}, {
  name: "You Don't Know Jack: Full Stream",
  tag: "ydkj2018",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp5/ydkj2018",
  categoryId: "YDKJ2018Game"
}, {
  name: "Split the Room",
  tag: "splittheroom",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp5/splittheroom",
  categoryId: "SplitTheRoomGame"
}, {
  name: "Mad Verse City",
  tag: "rapbattle",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp5/rapbattle",
  categoryId: "RapBattleGame"
}, {
  name: "Zeeple Dome",
  tag: "slingshoot",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp5/slingshoot",
  categoryId: "SlingShootGame"
}, {
  name: "Patently Stupid",
  tag: "patentlystupid",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp5/patentlystupid",
  categoryId: "PatentlyStupidGame",
  shopItems: ["mugs"]
}, {
  name: "Trivia Murder Party 2",
  tag: "triviadeath2",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp6/triviadeath2",
  categoryId: "TriviaDeath2Game"
}, {
  name: "Не свой облик",
  tag: "rolemodels",
  wrapper: "marionette",
  isPublic: true,
  features: ["camera"],
  directory: "pp6/rolemodels",
  categoryId: "RoleModelsGame",
  shopItems: ["shirts"]
}, {
  name: "Joke Boat",
  tag: "jokeboat",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp6/jokeboat",
  categoryId: "JokeboatGame"
}, {
  name: "Dictionarium",
  tag: "ridictionary",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp6/ridictionary",
  categoryId: "RidictionaryGame"
}, {
  name: "Push the Button",
  tag: "pushthebutton",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp6/pushthebutton",
  categoryId: "PushTheButtonGame"
}, {
  name: "Опорные точки",
  tag: "jackbox-talks",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp7/jackboxtalks",
  features: ["camera", "moderation"],
  categoryId: "JackboxTalksGame"
}, {
  name: "Quiplash 3",
  tag: "quiplash3",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp7/quiplash3",
  features: ["moderation"],
  categoryId: "quiplash3Game"
}, {
  name: "The Devils and the Details",
  tag: "everyday",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp7/everyday",
  categoryId: "EverydayGame",
  shopItems: ["mugs"]
}, {
  name: "Champ'd Up",
  tag: "worldchamps",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp7/worldchamps",
  features: ["moderation"],
  categoryId: "WorldChampionsGame",
  shopItems: ["cards"]
}, {
  name: "Blather 'Round",
  tag: "blanky-blank",
  wrapper: "marionette",
  isPublic: true,
  directory: "pp7/blanky-blank",
  categoryId: "BlankyBlankGame"
}, {
  name: "Отдел кадров",
  tag: "apply-yourself",
  wrapper: "vue",
  isPublic: true,
  directory: "pp8/apply-yourself",
  categoryId: "JobGameGame",
  features: ["moderation", "previews"]
}, {
  name: "Рисыч: Анимируй",
  tag: "drawful-animate",
  wrapper: "vue",
  isPublic: true,
  directory: "pp8/drawful-animate",
  categoryId: "DrawfulAnimateGame",
  features: ["moderation"]
}, {
  name: "The Wheel of Enormous Proportions",
  tag: "the-wheel",
  wrapper: "vue",
  isPublic: true,
  directory: "pp8/the-wheel",
  categoryId: "TheWheelGame"
}, {
  name: "Шахты мнений",
  tag: "survey-bomb",
  wrapper: "vue",
  isPublic: true,
  directory: "pp8/survey-bomb",
  categoryId: "SurveyBombGame"
}, {
  name: "Weapons Drawn",
  tag: "murder-detectives",
  wrapper: "vue",
  isPublic: true,
  directory: "pp8/murder-detectives",
  categoryId: "MurderDetectivesGame",
  features: ["moderation"]
}, {
  name: "Смехлыст 3",
  tag: "quiplash3-tjsp",
  wrapper: "vue",
  isPublic: true,
  directory: "tjsp/quiplash3",
  features: ["moderation"],
  categoryId: "quiplash3Game"
}, {
  name: "Футбол K.O.",
  tag: "awshirt-tjsp",
  wrapper: "vue",
  isPublic: true,
  directory: "tjsp/awshirt",
  features: ["moderation"],
  shopItems: ["shirts"],
  categoryId: "TeeKOGame"
}, {
  name: "Trivia Murder Party 2",
  tag: "triviadeath2-tjsp",
  wrapper: "vue",
  isPublic: true,
  directory: "tjsp/triviadeath2",
  categoryId: "TriviaMurderParty2Game"
}, {
  name: "Бредовуха 4",
  tag: "fourbage",
  wrapper: "vue",
  isPublic: true,
  directory: "pp9/fourbage",
  features: ["moderation", "kicking"],
  categoryId: "Fibbage4Game"
}, {
  name: "Румеранг",
  tag: "htmf",
  wrapper: "vue",
  isPublic: true,
  directory: "pp9/htmf",
  features: ["moderation", "kicking"],
  categoryId: "MakeFriendsGame"
}, {
  name: "Хламополис",
  tag: "antique-freak",
  wrapper: "vue",
  isPublic: true,
  directory: "pp9/antique-freak",
  features: ["moderation", "kicking"],
  categoryId: "AntiqueGameGame"
}, {
  name: "Безмыслица",
  tag: "range-game",
  wrapper: "vue",
  isPublic: true,
  directory: "pp9/range-game",
  features: ["moderation", "kicking"],
  categoryId: "RangeGameGame"
}, {
  name: "Скортировка",
  tag: "lineup",
  wrapper: "vue",
  isPublic: true,
  directory: "pp9/lineup",
  features: ["kicking", "previews"],
  categoryId: "LineupGame"
}, {
  name: "ФутболK.O. 2",
  tag: "awshirt2",
  wrapper: "vue",
  isPublic: true,
  directory: "pp10/awshirt2",
  features: ["moderation", "kicking"],
  shopItems: ["shirts"],
  categoryId: "TeeKO2Game",
  galleryId: "teeko2"
}, {
  name: "Додо Ре Ми",
  tag: "nopus-opus",
  wrapper: "vue",
  isPublic: true,
  directory: "pp10/nopus-opus",
  features: ["dropInDropOut", "kicking"],
  categoryId: "NopusOpusGame",
  galleryId: "dodo-re-mi"
}, {
  name: "ТекстоПрав",
  tag: "risky-text",
  wrapper: "vue",
  isPublic: true,
  directory: "pp10/risky-text",
  features: ["moderation", "kicking"],
  categoryId: "FixyTextGame",
  galleryId: "fixytext"
}, {
  name: "Часовпал",
  tag: "time-trivia",
  wrapper: "vue",
  isPublic: true,
  directory: "pp10/time-trivia",
  features: ["kicking"],
  categoryId: "TimeTriviaGame",
  galleryId: "timejinx"
}, {
  name: "Гипноториум",
  tag: "us-them",
  wrapper: "vue",
  isPublic: true,
  directory: "pp10/us-them",
  features: ["moderation", "kicking"],
  categoryId: "StrangersGame",
  galleryId: "hypnotorious"
},{
  name: "Обмани меня: Всю ночь напролёт",
  tag: "fakinit2",
  wrapper: "vue",
  isPublic: true,
  directory: "ppad/fakinit2",
  categoryId: "FakinIt2Game",
  features: ["moderation", "kicking"],
  galleryId: "fakin-it-all-night-long"
}, {
  name: "Грязный Рисыч",
  tag: "drawful3",
  wrapper: "vue",
  isPublic: true,
  directory: "ppad/drawful3",
  categoryId: "Drawful3Game",
  features: ["moderation", "kicking"],
  galleryId: "dirty-drawful"
}, {
  name: "Дай мне кончить",
  tag: "captcha",
  wrapper: "vue",
  isPublic: true,
  directory: "ppad/captcha",
  categoryId: "CAPTCHAGame",
  features: ["moderation", "kicking"],
  galleryId: "let-me-finish"
},{
  name: "Jackbox Борба Опросов",
  tag: "bigsurvey",
  wrapper: "vue",
  isPublic: true,
  directory: "standalone/bigsurvey",
  features: ["moderation", "kicking", "dropInDropOut"],
  categoryId: "BigSurveyGame",
  galleryId: "survey-scramble"
}];
let W2 = [];
const X2 = [...H2, ...W2];
const Ul = t => {
  var r;
  return (((r = window == null ? undefined : window.tv) == null ? undefined : r.games) || X2).find(n => n.tag === t || n.galleryId === t || n.categoryId === t);
};
function j2() {
  this.__data__ = [];
  this.size = 0;
}
var z2 = j2;
function q2(t, e) {
  return t === e || t !== t && e !== e;
}
var Sc = q2;
var Y2 = Sc;
function J2(t, e) {
  for (var r = t.length; r--;) {
    if (Y2(t[r][0], e)) {
      return r;
    }
  }
  return -1;
}
var yc = J2;
var Z2 = yc;
var Q2 = Array.prototype;
var e3 = Q2.splice;
function t3(t) {
  var e = this.__data__;
  var r = Z2(e, t);
  if (r < 0) {
    return false;
  }
  var n = e.length - 1;
  if (r == n) {
    e.pop();
  } else {
    e3.call(e, r, 1);
  }
  --this.size;
  return true;
}
var r3 = t3;
var n3 = yc;
function i3(t) {
  var e = this.__data__;
  var r = n3(e, t);
  if (r < 0) {
    return undefined;
  } else {
    return e[r][1];
  }
}
var s3 = i3;
var a3 = yc;
function o3(t) {
  return a3(this.__data__, t) > -1;
}
var l3 = o3;
var u3 = yc;
function f3(t, e) {
  var r = this.__data__;
  var n = u3(r, t);
  if (n < 0) {
    ++this.size;
    r.push([t, e]);
  } else {
    r[n][1] = e;
  }
  return this;
}
var c3 = f3;
var p3 = z2;
var d3 = r3;
var h3 = s3;
var E3 = l3;
var m3 = c3;
function ho(t) {
  var e = -1;
  var r = t == null ? 0 : t.length;
  for (this.clear(); ++e < r;) {
    var n = t[e];
    this.set(n[0], n[1]);
  }
}
ho.prototype.clear = p3;
ho.prototype.delete = d3;
ho.prototype.get = h3;
ho.prototype.has = E3;
ho.prototype.set = m3;
var Ac = ho;
var g3 = Ac;
function _3() {
  this.__data__ = new g3();
  this.size = 0;
}
var T3 = _3;
function v3(t) {
  var e = this.__data__;
  var r = e.delete(t);
  this.size = e.size;
  return r;
}
var b3 = v3;
function x3(t) {
  return this.__data__.get(t);
}
var R3 = x3;
function S3(t) {
  return this.__data__.has(t);
}
var y3 = S3;
var A3 = typeof Nt == "object" && Nt && Nt.Object === Object && Nt;
var oy = A3;
var L3 = oy;
var C3 = typeof self == "object" && self && self.Object === Object && self;
var w3 = L3 || C3 || Function("return this")();
var si = w3;
var O3 = si;
var I3 = O3.Symbol;
var Lc = I3;
var Gv = Lc;
var ly = Object.prototype;
var N3 = ly.hasOwnProperty;
var P3 = ly.toString;
var Fo = Gv ? Gv.toStringTag : undefined;
function U3(t) {
  var e = N3.call(t, Fo);
  var r = t[Fo];
  try {
    t[Fo] = undefined;
    var n = true;
  } catch {}
  var i = P3.call(t);
  if (n) {
    if (e) {
      t[Fo] = r;
    } else {
      delete t[Fo];
    }
  }
  return i;
}
var D3 = U3;
var B3 = Object.prototype;
var M3 = B3.toString;
function $3(t) {
  return M3.call(t);
}
var K3 = $3;
var Vv = Lc;
var k3 = D3;
var G3 = K3;
var V3 = "[object Null]";
var F3 = "[object Undefined]";
var Fv = Vv ? Vv.toStringTag : undefined;
function H3(t) {
  if (t == null) {
    if (t === undefined) {
      return F3;
    } else {
      return V3;
    }
  } else if (Fv && Fv in Object(t)) {
    return k3(t);
  } else {
    return G3(t);
  }
}
var Eo = H3;
function W3(t) {
  var e = typeof t;
  return t != null && (e == "object" || e == "function");
}
var ea = W3;
var X3 = Eo;
var j3 = ea;
var z3 = "[object AsyncFunction]";
var q3 = "[object Function]";
var Y3 = "[object GeneratorFunction]";
var J3 = "[object Proxy]";
function Z3(t) {
  if (!j3(t)) {
    return false;
  }
  var e = X3(t);
  return e == q3 || e == Y3 || e == z3 || e == J3;
}
var f0 = Z3;
var Q3 = si;
var eG = Q3["__core-js_shared__"];
var tG = eG;
var xd = tG;
var Hv = function () {
  var t = /[^.]+$/.exec(xd && xd.keys && xd.keys.IE_PROTO || "");
  if (t) {
    return "Symbol(src)_1." + t;
  } else {
    return "";
  }
}();
function rG(t) {
  return !!Hv && Hv in t;
}
var nG = rG;
var iG = Function.prototype;
var sG = iG.toString;
function aG(t) {
  if (t != null) {
    try {
      return sG.call(t);
    } catch {}
    try {
      return t + "";
    } catch {}
  }
  return "";
}
var uy = aG;
var oG = f0;
var lG = nG;
var uG = ea;
var fG = uy;
var cG = /[\\^$.*+?()[\]{}|]/g;
var pG = /^\[object .+?Constructor\]$/;
var dG = Function.prototype;
var hG = Object.prototype;
var EG = dG.toString;
var mG = hG.hasOwnProperty;
var gG = RegExp("^" + EG.call(mG).replace(cG, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
function _G(t) {
  if (!uG(t) || lG(t)) {
    return false;
  }
  var e = oG(t) ? gG : pG;
  return e.test(fG(t));
}
var TG = _G;
function vG(t, e) {
  if (t == null) {
    return undefined;
  } else {
    return t[e];
  }
}
var bG = vG;
var xG = TG;
var RG = bG;
function SG(t, e) {
  var r = RG(t, e);
  if (xG(r)) {
    return r;
  } else {
    return undefined;
  }
}
var ta = SG;
var yG = ta;
var AG = si;
var LG = yG(AG, "Map");
var c0 = LG;
var CG = ta;
var wG = CG(Object, "create");
var Cc = wG;
var Wv = Cc;
function OG() {
  this.__data__ = Wv ? Wv(null) : {};
  this.size = 0;
}
var IG = OG;
function NG(t) {
  var e = this.has(t) && delete this.__data__[t];
  this.size -= e ? 1 : 0;
  return e;
}
var PG = NG;
var UG = Cc;
var DG = "__lodash_hash_undefined__";
var BG = Object.prototype;
var MG = BG.hasOwnProperty;
function $G(t) {
  var e = this.__data__;
  if (UG) {
    var r = e[t];
    if (r === DG) {
      return undefined;
    } else {
      return r;
    }
  }
  if (MG.call(e, t)) {
    return e[t];
  } else {
    return undefined;
  }
}
var KG = $G;
var kG = Cc;
var GG = Object.prototype;
var VG = GG.hasOwnProperty;
function FG(t) {
  var e = this.__data__;
  if (kG) {
    return e[t] !== undefined;
  } else {
    return VG.call(e, t);
  }
}
var HG = FG;
var WG = Cc;
var XG = "__lodash_hash_undefined__";
function jG(t, e) {
  var r = this.__data__;
  this.size += this.has(t) ? 0 : 1;
  r[t] = WG && e === undefined ? XG : e;
  return this;
}
var zG = jG;
var qG = IG;
var YG = PG;
var JG = KG;
var ZG = HG;
var QG = zG;
function mo(t) {
  var e = -1;
  var r = t == null ? 0 : t.length;
  for (this.clear(); ++e < r;) {
    var n = t[e];
    this.set(n[0], n[1]);
  }
}
mo.prototype.clear = qG;
mo.prototype.delete = YG;
mo.prototype.get = JG;
mo.prototype.has = ZG;
mo.prototype.set = QG;
var eV = mo;
var Xv = eV;
var tV = Ac;
var rV = c0;
function nV() {
  this.size = 0;
  this.__data__ = {
    hash: new Xv(),
    map: new (rV || tV)(),
    string: new Xv()
  };
}
var iV = nV;
function sV(t) {
  var e = typeof t;
  if (e == "string" || e == "number" || e == "symbol" || e == "boolean") {
    return t !== "__proto__";
  } else {
    return t === null;
  }
}
var aV = sV;
var oV = aV;
function lV(t, e) {
  var r = t.__data__;
  if (oV(e)) {
    return r[typeof e == "string" ? "string" : "hash"];
  } else {
    return r.map;
  }
}
var wc = lV;
var uV = wc;
function fV(t) {
  var e = uV(this, t).delete(t);
  this.size -= e ? 1 : 0;
  return e;
}
var cV = fV;
var pV = wc;
function dV(t) {
  return pV(this, t).get(t);
}
var hV = dV;
var EV = wc;
function mV(t) {
  return EV(this, t).has(t);
}
var gV = mV;
var _V = wc;
function TV(t, e) {
  var r = _V(this, t);
  var n = r.size;
  r.set(t, e);
  this.size += r.size == n ? 0 : 1;
  return this;
}
var vV = TV;
var bV = iV;
var xV = cV;
var RV = hV;
var SV = gV;
var yV = vV;
function go(t) {
  var e = -1;
  var r = t == null ? 0 : t.length;
  for (this.clear(); ++e < r;) {
    var n = t[e];
    this.set(n[0], n[1]);
  }
}
go.prototype.clear = bV;
go.prototype.delete = xV;
go.prototype.get = RV;
go.prototype.has = SV;
go.prototype.set = yV;
var fy = go;
var AV = Ac;
var LV = c0;
var CV = fy;
var wV = 200;
function OV(t, e) {
  var r = this.__data__;
  if (r instanceof AV) {
    var n = r.__data__;
    if (!LV || n.length < wV - 1) {
      n.push([t, e]);
      this.size = ++r.size;
      return this;
    }
    r = this.__data__ = new CV(n);
  }
  r.set(t, e);
  this.size = r.size;
  return this;
}
var IV = OV;
var NV = Ac;
var PV = T3;
var UV = b3;
var DV = R3;
var BV = y3;
var MV = IV;
function _o(t) {
  var e = this.__data__ = new NV(t);
  this.size = e.size;
}
_o.prototype.clear = PV;
_o.prototype.delete = UV;
_o.prototype.get = DV;
_o.prototype.has = BV;
_o.prototype.set = MV;
var $V = _o;
var KV = ta;
var kV = function () {
  try {
    var t = KV(Object, "defineProperty");
    t({}, "", {});
    return t;
  } catch {}
}();
var cy = kV;
var jv = cy;
function GV(t, e, r) {
  if (e == "__proto__" && jv) {
    jv(t, e, {
      configurable: true,
      enumerable: true,
      value: r,
      writable: true
    });
  } else {
    t[e] = r;
  }
}
var p0 = GV;
var VV = p0;
var FV = Sc;
function HV(t, e, r) {
  if (r !== undefined && !FV(t[e], r) || r === undefined && !(e in t)) {
    VV(t, e, r);
  }
}
var py = HV;
function WV(t) {
  return function (e, r, n) {
    var i = -1;
    var s = Object(e);
    var o = n(e);
    for (var f = o.length; f--;) {
      var c = o[t ? f : ++i];
      if (r(s[c], c, s) === false) {
        break;
      }
    }
    return e;
  };
}
var XV = WV;
var jV = XV;
var zV = jV();
var qV = zV;
var Mf = {
  exports: {}
};
Mf.exports;
(function (t, e) {
  var r = si;
  var n = e && !e.nodeType && e;
  var i = n && true && t && !t.nodeType && t;
  var s = i && i.exports === n;
  var o = s ? r.Buffer : undefined;
  var f = o ? o.allocUnsafe : undefined;
  function c(p, d) {
    if (d) {
      return p.slice();
    }
    var E = p.length;
    var m = f ? f(E) : new p.constructor(E);
    p.copy(m);
    return m;
  }
  t.exports = c;
})(Mf, Mf.exports);
var YV = Mf.exports;
var JV = si;
var ZV = JV.Uint8Array;
var QV = ZV;
var zv = QV;
function e4(t) {
  var e = new t.constructor(t.byteLength);
  new zv(e).set(new zv(t));
  return e;
}
var t4 = e4;
var r4 = t4;
function n4(t, e) {
  var r = e ? r4(t.buffer) : t.buffer;
  return new t.constructor(r, t.byteOffset, t.length);
}
var i4 = n4;
function s4(t, e) {
  var r = -1;
  var n = t.length;
  for (e ||= Array(n); ++r < n;) {
    e[r] = t[r];
  }
  return e;
}
var a4 = s4;
var o4 = ea;
var qv = Object.create;
var l4 = function () {
  function t() {}
  return function (e) {
    if (!o4(e)) {
      return {};
    }
    if (qv) {
      return qv(e);
    }
    t.prototype = e;
    var r = new t();
    t.prototype = undefined;
    return r;
  };
}();
var u4 = l4;
function f4(t, e) {
  return function (r) {
    return t(e(r));
  };
}
var dy = f4;
var c4 = dy;
var p4 = c4(Object.getPrototypeOf, Object);
var hy = p4;
var d4 = Object.prototype;
function h4(t) {
  var e = t && t.constructor;
  var r = typeof e == "function" && e.prototype || d4;
  return t === r;
}
var d0 = h4;
var E4 = u4;
var m4 = hy;
var g4 = d0;
function _4(t) {
  if (typeof t.constructor == "function" && !g4(t)) {
    return E4(m4(t));
  } else {
    return {};
  }
}
var T4 = _4;
function v4(t) {
  return t != null && typeof t == "object";
}
var To = v4;
var b4 = Eo;
var x4 = To;
var R4 = "[object Arguments]";
function S4(t) {
  return x4(t) && b4(t) == R4;
}
var y4 = S4;
var Yv = y4;
var A4 = To;
var Ey = Object.prototype;
var L4 = Ey.hasOwnProperty;
var C4 = Ey.propertyIsEnumerable;
var w4 = Yv(function () {
  return arguments;
}()) ? Yv : function (t) {
  return A4(t) && L4.call(t, "callee") && !C4.call(t, "callee");
};
var my = w4;
var O4 = Array.isArray;
var vo = O4;
var I4 = 9007199254740991;
function N4(t) {
  return typeof t == "number" && t > -1 && t % 1 == 0 && t <= I4;
}
var gy = N4;
var P4 = f0;
var U4 = gy;
function D4(t) {
  return t != null && U4(t.length) && !P4(t);
}
var Oc = D4;
var B4 = Oc;
var M4 = To;
function $4(t) {
  return M4(t) && B4(t);
}
var K4 = $4;
var $f = {
  exports: {}
};
function k4() {
  return false;
}
var G4 = k4;
$f.exports;
(function (t, e) {
  var r = si;
  var n = G4;
  var i = e && !e.nodeType && e;
  var s = i && true && t && !t.nodeType && t;
  var o = s && s.exports === i;
  var f = o ? r.Buffer : undefined;
  var c = f ? f.isBuffer : undefined;
  var p = c || n;
  t.exports = p;
})($f, $f.exports);
var _y = $f.exports;
var V4 = Eo;
var F4 = hy;
var H4 = To;
var W4 = "[object Object]";
var X4 = Function.prototype;
var j4 = Object.prototype;
var Ty = X4.toString;
var z4 = j4.hasOwnProperty;
var q4 = Ty.call(Object);
function Y4(t) {
  if (!H4(t) || V4(t) != W4) {
    return false;
  }
  var e = F4(t);
  if (e === null) {
    return true;
  }
  var r = z4.call(e, "constructor") && e.constructor;
  return typeof r == "function" && r instanceof r && Ty.call(r) == q4;
}
var J4 = Y4;
var Z4 = Eo;
var Q4 = gy;
var e8 = To;
var t8 = "[object Arguments]";
var r8 = "[object Array]";
var n8 = "[object Boolean]";
var i8 = "[object Date]";
var s8 = "[object Error]";
var a8 = "[object Function]";
var o8 = "[object Map]";
var l8 = "[object Number]";
var u8 = "[object Object]";
var f8 = "[object RegExp]";
var c8 = "[object Set]";
var p8 = "[object String]";
var d8 = "[object WeakMap]";
var h8 = "[object ArrayBuffer]";
var E8 = "[object DataView]";
var m8 = "[object Float32Array]";
var g8 = "[object Float64Array]";
var _8 = "[object Int8Array]";
var T8 = "[object Int16Array]";
var v8 = "[object Int32Array]";
var b8 = "[object Uint8Array]";
var x8 = "[object Uint8ClampedArray]";
var R8 = "[object Uint16Array]";
var S8 = "[object Uint32Array]";
var Ft = {};
Ft[m8] = Ft[g8] = Ft[_8] = Ft[T8] = Ft[v8] = Ft[b8] = Ft[x8] = Ft[R8] = Ft[S8] = true;
Ft[t8] = Ft[r8] = Ft[h8] = Ft[n8] = Ft[E8] = Ft[i8] = Ft[s8] = Ft[a8] = Ft[o8] = Ft[l8] = Ft[u8] = Ft[f8] = Ft[c8] = Ft[p8] = Ft[d8] = false;
function y8(t) {
  return e8(t) && Q4(t.length) && !!Ft[Z4(t)];
}
var A8 = y8;
function L8(t) {
  return function (e) {
    return t(e);
  };
}
var C8 = L8;
var Kf = {
  exports: {}
};
Kf.exports;
(function (t, e) {
  var r = oy;
  var n = e && !e.nodeType && e;
  var i = n && true && t && !t.nodeType && t;
  var s = i && i.exports === n;
  var o = s && r.process;
  var f = function () {
    try {
      var c = i && i.require && i.require("util").types;
      return c || o && o.binding && o.binding("util");
    } catch {}
  }();
  t.exports = f;
})(Kf, Kf.exports);
var h0 = Kf.exports;
var w8 = A8;
var O8 = C8;
var Jv = h0;
var Zv = Jv && Jv.isTypedArray;
var I8 = Zv ? O8(Zv) : w8;
var vy = I8;
function N8(t, e) {
  if ((e !== "constructor" || typeof t[e] != "function") && e != "__proto__") {
    return t[e];
  }
}
var by = N8;
var P8 = p0;
var U8 = Sc;
var D8 = Object.prototype;
var B8 = D8.hasOwnProperty;
function M8(t, e, r) {
  var n = t[e];
  if (!B8.call(t, e) || !U8(n, r) || r === undefined && !(e in t)) {
    P8(t, e, r);
  }
}
var $8 = M8;
var K8 = $8;
var k8 = p0;
function G8(t, e, r, n) {
  var i = !r;
  r ||= {};
  for (var s = -1, o = e.length; ++s < o;) {
    var f = e[s];
    var c = n ? n(r[f], t[f], f, r, t) : undefined;
    if (c === undefined) {
      c = t[f];
    }
    if (i) {
      k8(r, f, c);
    } else {
      K8(r, f, c);
    }
  }
  return r;
}
var V8 = G8;
function F8(t, e) {
  for (var r = -1, n = Array(t); ++r < t;) {
    n[r] = e(r);
  }
  return n;
}
var H8 = F8;
var W8 = 9007199254740991;
var X8 = /^(?:0|[1-9]\d*)$/;
function j8(t, e) {
  var r = typeof t;
  e = e ?? W8;
  return !!e && (r == "number" || r != "symbol" && X8.test(t)) && t > -1 && t % 1 == 0 && t < e;
}
var xy = j8;
var z8 = H8;
var q8 = my;
var Y8 = vo;
var J8 = _y;
var Z8 = xy;
var Q8 = vy;
var eF = Object.prototype;
var tF = eF.hasOwnProperty;
function rF(t, e) {
  var r = Y8(t);
  var n = !r && q8(t);
  var i = !r && !n && J8(t);
  var s = !r && !n && !i && Q8(t);
  var o = r || n || i || s;
  var f = o ? z8(t.length, String) : [];
  var c = f.length;
  for (var p in t) {
    if ((e || tF.call(t, p)) && (!o || p != "length" && (!i || p != "offset" && p != "parent") && (!s || p != "buffer" && p != "byteLength" && p != "byteOffset") && !Z8(p, c))) {
      f.push(p);
    }
  }
  return f;
}
var Ry = rF;
function nF(t) {
  var e = [];
  if (t != null) {
    for (var r in Object(t)) {
      e.push(r);
    }
  }
  return e;
}
var iF = nF;
var sF = ea;
var aF = d0;
var oF = iF;
var lF = Object.prototype;
var uF = lF.hasOwnProperty;
function fF(t) {
  if (!sF(t)) {
    return oF(t);
  }
  var e = aF(t);
  var r = [];
  for (var n in t) {
    if (n != "constructor" || !e && !!uF.call(t, n)) {
      r.push(n);
    }
  }
  return r;
}
var cF = fF;
var pF = Ry;
var dF = cF;
var hF = Oc;
function EF(t) {
  if (hF(t)) {
    return pF(t, true);
  } else {
    return dF(t);
  }
}
var Sy = EF;
var mF = V8;
var gF = Sy;
function _F(t) {
  return mF(t, gF(t));
}
var TF = _F;
var Qv = py;
var vF = YV;
var bF = i4;
var xF = a4;
var RF = T4;
var eb = my;
var tb = vo;
var SF = K4;
var yF = _y;
var AF = f0;
var LF = ea;
var CF = J4;
var wF = vy;
var rb = by;
var OF = TF;
function IF(t, e, r, n, i, s, o) {
  var f = rb(t, r);
  var c = rb(e, r);
  var p = o.get(c);
  if (p) {
    Qv(t, r, p);
    return;
  }
  var d = s ? s(f, c, r + "", t, e, o) : undefined;
  var E = d === undefined;
  if (E) {
    var m = tb(c);
    var g = !m && yF(c);
    var T = !m && !g && wF(c);
    d = c;
    if (m || g || T) {
      if (tb(f)) {
        d = f;
      } else if (SF(f)) {
        d = xF(f);
      } else if (g) {
        E = false;
        d = vF(c, true);
      } else if (T) {
        E = false;
        d = bF(c, true);
      } else {
        d = [];
      }
    } else if (CF(c) || eb(c)) {
      d = f;
      if (eb(f)) {
        d = OF(f);
      } else if (!LF(f) || AF(f)) {
        d = RF(c);
      }
    } else {
      E = false;
    }
  }
  if (E) {
    o.set(c, d);
    i(d, c, n, s, o);
    o.delete(c);
  }
  Qv(t, r, d);
}
var NF = IF;
var PF = $V;
var UF = py;
var DF = qV;
var BF = NF;
var MF = ea;
var $F = Sy;
var KF = by;
function yy(t, e, r, n, i) {
  if (t !== e) {
    DF(e, function (s, o) {
      i ||= new PF();
      if (MF(s)) {
        BF(t, e, o, r, yy, n, i);
      } else {
        var f = n ? n(KF(t, o), s, o + "", t, e, i) : undefined;
        if (f === undefined) {
          f = s;
        }
        UF(t, o, f);
      }
    }, $F);
  }
}
var kF = yy;
function GF(t) {
  return t;
}
var Ay = GF;
function VF(t, e, r) {
  switch (r.length) {
    case 0:
      return t.call(e);
    case 1:
      return t.call(e, r[0]);
    case 2:
      return t.call(e, r[0], r[1]);
    case 3:
      return t.call(e, r[0], r[1], r[2]);
  }
  return t.apply(e, r);
}
var FF = VF;
var HF = FF;
var nb = Math.max;
function WF(t, e, r) {
  e = nb(e === undefined ? t.length - 1 : e, 0);
  return function () {
    var n = arguments;
    for (var i = -1, s = nb(n.length - e, 0), o = Array(s); ++i < s;) {
      o[i] = n[e + i];
    }
    i = -1;
    var f = Array(e + 1);
    for (; ++i < e;) {
      f[i] = n[i];
    }
    f[e] = r(o);
    return HF(t, this, f);
  };
}
var XF = WF;
function jF(t) {
  return function () {
    return t;
  };
}
var zF = jF;
var qF = zF;
var ib = cy;
var YF = Ay;
var JF = ib ? function (t, e) {
  return ib(t, "toString", {
    configurable: true,
    enumerable: false,
    value: qF(e),
    writable: true
  });
} : YF;
var ZF = JF;
var QF = 800;
var e5 = 16;
var t5 = Date.now;
function r5(t) {
  var e = 0;
  var r = 0;
  return function () {
    var n = t5();
    var i = e5 - (n - r);
    r = n;
    if (i > 0) {
      if (++e >= QF) {
        return arguments[0];
      }
    } else {
      e = 0;
    }
    return t.apply(undefined, arguments);
  };
}
var n5 = r5;
var i5 = ZF;
var s5 = n5;
var a5 = s5(i5);
var o5 = a5;
var l5 = Ay;
var u5 = XF;
var f5 = o5;
function c5(t, e) {
  return f5(u5(t, e, l5), t + "");
}
var p5 = c5;
var d5 = Sc;
var h5 = Oc;
var E5 = xy;
var m5 = ea;
function g5(t, e, r) {
  if (!m5(r)) {
    return false;
  }
  var n = typeof e;
  if (n == "number" ? h5(r) && E5(e, r.length) : n == "string" && e in r) {
    return d5(r[e], t);
  } else {
    return false;
  }
}
var _5 = g5;
var T5 = p5;
var v5 = _5;
function b5(t) {
  return T5(function (e, r) {
    var n = -1;
    var i = r.length;
    var s = i > 1 ? r[i - 1] : undefined;
    var o = i > 2 ? r[2] : undefined;
    s = t.length > 3 && typeof s == "function" ? (i--, s) : undefined;
    if (o && v5(r[0], r[1], o)) {
      s = i < 3 ? undefined : s;
      i = 1;
    }
    e = Object(e);
    while (++n < i) {
      var f = r[n];
      if (f) {
        t(e, f, n, s);
      }
    }
    return e;
  });
}
var x5 = b5;
var R5 = kF;
var S5 = x5;
var y5 = S5(function (t, e, r) {
  R5(t, e, r);
});
var A5 = y5;
const L5 = vc(A5);
class Ks {
  static set(e) {
    if (e && this.isSupported(e)) {
      this.locale = e;
      return;
    }
    this.locale = this.getPreferredDeviceLocale();
  }
  static getPreferredDeviceLocale() {
    const e = navigator.languages;
    for (let r = 0; r < e.length; r++) {
      if (this.isSupported(e[r])) {
        return e[r];
      }
    }
    return this.supported[0];
  }
  static isSupported(e) {
    return Object.values(this.supported).includes(e);
  }
  static mergeMessages(...e) {
    return L5(e[0], ...e);
  }
}
kn(Ks, "locale");
kn(Ks, "supported", ["en", "fr", "it", "de", "es", "es-XL", "pt-BR"]);
const Ua = class Ua {
  static get serverUrl() {
    const e = this.getQueryParam("server") ?? this.getQueryParam("s");
    if (!e || e === "live") {
      return "ecast.jackboxgames.com";
    } else if (e === "local") {
      return "https://localhost";
    } else if (e.includes("localhost")) {
      return e;
    } else {
      return `${e}.jackboxgames.com`;
    }
  }
  static isDevelopment() {
    return window.location.hostname === "dev.jackbox.tv" || window.location.hostname === "localhost";
  }
  static isProduction() {
    return window.location.hostname === "jackbox.tv";
  }
  static get isCanvasSupported() {
    const e = document.createElement("canvas");
    return !!e.getContext && !!e.getContext("2d");
  }
  static htmlUnescape(e) {
    return String(e).replace(/&quot;/gi, "\"").replace(/&#39;/gi, "'").replace(/&lt;/gi, "<").replace(/&gt;/gi, ">").replace(/&amp;/gi, "&");
  }
  static htmlEscape(e) {
    return String(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
  }
  static sanitize(e) {
    const r = this.sanitizeInput(e).replace(/'/g, "’");
    return this.htmlEscape(r).trim();
  }
  static sanitizeName(e) {
    return e.replace(/'/g, "’");
  }
  static sanitizeInput(e) {
    e = e.replace("…", "...");
    return e.replace(/[^\u00A1\u0020-\u007E\u00BF-\u00FF’]/gi, "");
  }
  static sanitizeEmoji(e) {
    return e.replace(/(\u00a9|\u00ae|[\u2000-\u2017]|[\u2020-\u3300]|\ud83c[\ud000-\udfff]|\ud83d[\ud000-\udfff]|\ud83e[\ud000-\udfff])/, "");
  }
  static safeText(e) {
    const r = document.createElement("div");
    r.textContent = e;
    return r.innerHTML;
  }
  static htmlTagsToBBCode(e, r) {
    if (!r.length) {
      throw new Error("[Utils.htmlTagsToBBCode] No tag pairs were passed in");
    }
    return r.reduce((n, i) => {
      n.replaceAll(`<${i[0]}>`, `[${i[1]}]`);
      n.replaceAll(`</${i[0]}>`, `</${i[1]}>`);
      return n;
    }, e);
  }
  static hexToRgb(e) {
    const r = new ArrayBuffer(4);
    new DataView(r).setUint32(0, parseInt(e.replace("#", ""), 16), false);
    const i = new Uint8Array(r);
    return `${i[1]},${i[2]},${i[3]}`;
  }
  static adjustColor(e, r) {
    let n = false;
    let i = e;
    if (i[0] === "#") {
      i = i.slice(1);
      n = true;
    }
    const s = parseInt(i, 16);
    const o = Math.min(Math.max(0, (s >> 16) * r), 255);
    const f = Math.min(Math.max(0, (s >> 8 & 255) * r), 255);
    let p = (Math.min(Math.max(0, (s & 255) * r), 255) | f << 8 | o << 16).toString(16);
    while (p.length < i.length) {
      p = `0${p}`;
    }
    return (n ? "#" : "") + p;
  }
  static isInTolerance(e, r, n) {
    return Math.abs(e.x - r.x) >= n && Math.abs(e.y - r.y) <= n;
  }
  static getDistanceBetweenPoints(e, r) {
    const n = [e.x - r.x, e.y - r.y];
    const i = Math.hypot(...n);
    return Math.round(i * 100) / 100;
  }
  static getMidpoint(e, r) {
    return {
      x: (e.x + r.x) / 2,
      y: (e.y + r.y) / 2
    };
  }
  static getAngleBetweenPoints(e, r) {
    let i = Math.atan2(r.y - e.y, r.x - e.x) * (180 / Math.PI);
    if (i < 0) {
      i += 360;
    }
    return 360 - i;
  }
  static getAngularDistance(e, r) {
    let n = (r - e) % 360;
    const i = n < 0 ? 1 : -1;
    n = Math.abs(n);
    if (n > 180) {
      return i * (360 - n);
    } else {
      return i * n;
    }
  }
  static getVelocity(e, r, n, i) {
    return this.getDistanceBetweenPoints(e, n) / (i - r);
  }
  static isInsideElement(e, r) {
    const n = r.getBoundingClientRect();
    return e.x >= n.left && e.x <= n.left + n.width && e.y >= n.top && e.y <= n.top + n.height;
  }
  static cyrb128(e) {
    let r = 1779033703;
    let n = 3144134277;
    let i = 1013904242;
    let s = 2773480762;
    for (let o = 0, f; o < e.length; o++) {
      f = e.charCodeAt(o);
      r = n ^ Math.imul(r ^ f, 597399067);
      n = i ^ Math.imul(n ^ f, 2869860233);
      i = s ^ Math.imul(i ^ f, 951274213);
      s = r ^ Math.imul(s ^ f, 2716044179);
    }
    r = Math.imul(i ^ r >>> 18, 597399067);
    n = Math.imul(s ^ n >>> 22, 2869860233);
    i = Math.imul(r ^ i >>> 17, 951274213);
    s = Math.imul(n ^ s >>> 19, 2716044179);
    return [(r ^ n ^ i ^ s) >>> 0, (n ^ r) >>> 0, (i ^ r) >>> 0, (s ^ r) >>> 0];
  }
  static sfc32(e, r, n, i) {
    return function () {
      e >>>= 0;
      r >>>= 0;
      n >>>= 0;
      i >>>= 0;
      let o = e + r | 0;
      e = r ^ r >>> 9;
      r = n + (n << 3) | 0;
      n = n << 21 | n >>> 11;
      i = i + 1 | 0;
      o = o + i | 0;
      n = n + o | 0;
      return (o >>> 0) / 4294967296;
    };
  }
};
kn(Ua, "queryParams", new URLSearchParams(window.location.search));
kn(Ua, "getQueryParam", e => Ua.queryParams.get(e));
kn(Ua, "sleep", e => new Promise(r => {
  window.setTimeout(r, e);
}));
let ts = Ua;
class qe {
  static get namespace() {
    var e;
    return ((e = window.tv.storage) == null ? undefined : e.namespace) ?? this.defaultNamespace;
  }
  static get isDisabled() {
    var e;
    return ((e = window.tv.storage) == null ? undefined : e.isDisabled) ?? false;
  }
  static get tag() {
    var e;
    if ((e = window.tv.storage) == null) {
      return undefined;
    } else {
      return e.tag;
    }
  }
  static get code() {
    var e;
    if ((e = window.tv.storage) == null) {
      return undefined;
    } else {
      return e.code;
    }
  }
  static get isSupported() {
    if (this.isDisabled) {
      return false;
    }
    try {
      if (window.localStorage) {
        window.localStorage.setItem("support-check", "1");
        window.localStorage.removeItem("support-check");
        return true;
      } else {
        return false;
      }
    } catch {
      return false;
    }
  }
  static setup(e, r) {
    delete window.tv.storage;
    window.tv.storage = {
      namespace: ts.getQueryParam("namespace") ?? ts.getQueryParam("ns") ?? this.defaultNamespace,
      isDisabled: ts.queryParams.has("incognito") || ts.queryParams.has("nc")
    };
    if (e) {
      window.tv.storage.tag = e;
    }
    if (r) {
      window.tv.storage.code = r.toLowerCase();
      this.clearCodeScopedKeys(window.tv.storage.code);
    }
  }
  static get(e, r) {
    if (this.isSupported) {
      return window.localStorage.getItem(this.getScopedKey(e, r));
    } else {
      return null;
    }
  }
  static set(e, r, n = "none") {
    if (this.isSupported) {
      return window.localStorage.setItem(this.getScopedSetKey(e, n), r);
    }
  }
  static remove(e, r) {
    if (this.isSupported) {
      return window.localStorage.removeItem(this.getScopedKey(e, r));
    }
  }
  static setTag(e) {
    const r = e.toLowerCase();
    const n = this.get("tags") ?? "[]";
    const i = r.split("-")[0];
    let s = JSON.parse(n);
    s = s.filter(o => {
      const f = o.split("-")[0];
      return i !== f;
    });
    s.push(r);
    this.set("tags", JSON.stringify(s));
  }
  static getScopedKey(e, r) {
    const n = `${this.namespace}:${e}`;
    const i = this.tag ? `${this.namespace}:${e}:tag:${this.tag}` : null;
    const s = this.code ? `${this.namespace}:${e}:code:${this.code}` : null;
    if (r === "none") {
      return n;
    }
    if (r === "tag") {
      if (!i) {
        throw new Error("[Storage] requested \"tag\" scope but tv.storage.tag is undefined");
      }
      return i;
    }
    if (r === "code") {
      if (!s) {
        throw new Error("[Storage] requested \"code\" scope but tv.storage.code is undefined");
      }
      return s;
    }
    if (s && window.localStorage.getItem(s) !== null) {
      return s;
    } else if (i && window.localStorage.getItem(i) !== null) {
      return i;
    } else {
      return n;
    }
  }
  static getScopedSetKey(e, r = "none") {
    if (r === "tag") {
      if (!this.tag) {
        throw new Error("[Storage] requested \"room\" scope but tv.storage.tag is undefined");
      }
      return `${this.namespace}:${e}:tag:${this.tag}`;
    }
    if (r === "code") {
      if (!this.code) {
        throw new Error("[Storage] requested \"code\" scope but tv.storage.code is undefined");
      }
      return `${this.namespace}:${e}:code:${this.code}`;
    }
    return `${this.namespace}:${e}`;
  }
  static clearCodeScopedKeys(e) {
    if (this.isSupported) {
      Object.keys(window.localStorage).forEach(r => {
        const n = r.split(":code:");
        if (n.length > 1) {
          if (n[1] !== e) {
            window.localStorage.removeItem(r);
          }
        }
      });
    }
  }
}
kn(qe, "defaultNamespace", "tv");
class Va {
  constructor() {
    kn(this, "artifacts");
    this.migrate();
    this.artifacts = this.list();
  }
  get hasUnviewed() {
    return this.artifacts.some(e => !e.isViewed);
  }
  getUrl(e, r) {
    return r.galleryId ? `/gallery/${r.galleryId}/${e.artifactId}` : e.isTest ? `http://games-test.jackbox.tv/artifact/${e.categoryId}/${e.artifactId}/` : `https://games.jackbox.tv/artifact/${e.categoryId}/${e.artifactId}/`
  }
  getLocalArtifact(e) {
    const r = new Intl.DateTimeFormat("ru", {
      year: "2-digit",
      month: "short",
      day: "numeric"
    });
    const n = Ul(e.categoryId);
    if (!n) {
      throw new Error(`[Artifacts] Unknown game with categoryId ${e.categoryId}`);
    }
    const i = new Date(e.time);
    const s = r.format(i);
    const o = this.getUrl(e, n);
    return {
      ...e,
      gameName: n.name ?? "",
      date: s,
      url: o
    };
  }
  list() {
    if (!qe.isSupported) {
      return [];
    }
    const e = Date.now();
    const r = qe.get("artifacts");
    if (!r) {
      return [];
    }
    try {
      return JSON.parse(r).filter(i => e - i.time < 31536000000).map(i => this.getLocalArtifact(i));
    } catch {
      console.warn("[Artifacts] Unable to parse artifacts array");
      return [];
    }
  }
  persist() {
    const e = this.artifacts.map(r => ({
      artifactId: r.artifactId,
      categoryId: r.categoryId,
      isTest: r.isTest,
      isViewed: r.isViewed,
      time: r.time
    }));
    qe.set("artifacts", JSON.stringify(e));
  }
  setAsViewed(e) {
    if (qe.isSupported && this.artifacts[e]) {
      try {
        this.artifacts[e].isViewed = true;
        this.persist();
      } catch {
        console.warn(`[Artifacts] Unable to mark artifact ${e} as viewed`);
      }
    }
  }
  add(e) {
    var n;
    if (!qe.isSupported) {
      return;
    }
    const r = {
      categoryId: e.categoryId,
      artifactId: e.artifactId,
      isTest: ((n = e.rootId) == null ? undefined : n.includes("test")) ?? false,
      time: new Date().getTime(),
      isViewed: false
    };
    this.artifacts.unshift(this.getLocalArtifact(r));
    this.persist();
  }
  remove(e) {
    if (qe.isSupported) {
      try {
        this.artifacts.splice(e, 1);
        this.persist();
      } catch {
        console.warn("[Artifacts] Unable to remove artifact");
      }
    }
  }
  static setAsViewed(e) {
    new Va().setAsViewed(e);
  }
  static add(e) {
    new Va().add(e);
  }
  static remove(e) {
    new Va().remove(e);
  }
  migrate() {
    const e = qe.get("galleries");
    if (!e) {
      return;
    }
    const n = JSON.parse(e).map(s => {
      const o = s.url.split("/");
      const f = o[o.length - 2];
      const c = s.url.includes("games-test");
      return {
        categoryId: s.categoryId,
        artifactId: f,
        isTest: c,
        time: s.time,
        isViewed: s.viewed
      };
    });
    const i = JSON.parse(qe.get("artifacts") ?? "[]");
    qe.set("artifacts", JSON.stringify([...n, ...i]));
    qe.remove("galleries");
  }
}
var Kh = {
  exports: {}
};
(function (t, e) {
  var r = typeof globalThis !== "undefined" && globalThis || typeof self !== "undefined" && self || typeof Nt !== "undefined" && Nt;
  var n = function () {
    function s() {
      this.fetch = false;
      this.DOMException = r.DOMException;
    }
    s.prototype = r;
    return new s();
  }();
  (function (s) {
    (function (o) {
      var f = typeof s !== "undefined" && s || typeof self !== "undefined" && self || typeof f !== "undefined" && f;
      var c = {
        searchParams: "URLSearchParams" in f,
        iterable: "Symbol" in f && "iterator" in Symbol,
        blob: "FileReader" in f && "Blob" in f && function () {
          try {
            new Blob();
            return true;
          } catch {
            return false;
          }
        }(),
        formData: "FormData" in f,
        arrayBuffer: "ArrayBuffer" in f
      };
      function p(w) {
        return w && DataView.prototype.isPrototypeOf(w);
      }
      if (c.arrayBuffer) {
        var d = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"];
        var E = ArrayBuffer.isView || function (w) {
          return w && d.indexOf(Object.prototype.toString.call(w)) > -1;
        };
      }
      function m(w) {
        if (typeof w != "string") {
          w = String(w);
        }
        if (/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(w) || w === "") {
          throw new TypeError("Invalid character in header field name: \"" + w + "\"");
        }
        return w.toLowerCase();
      }
      function g(w) {
        if (typeof w != "string") {
          w = String(w);
        }
        return w;
      }
      function T(w) {
        var j = {
          next: function () {
            var W = w.shift();
            return {
              done: W === undefined,
              value: W
            };
          }
        };
        if (c.iterable) {
          j[Symbol.iterator] = function () {
            return j;
          };
        }
        return j;
      }
      function b(w) {
        this.map = {};
        if (w instanceof b) {
          w.forEach(function (j, W) {
            this.append(W, j);
          }, this);
        } else if (Array.isArray(w)) {
          w.forEach(function (j) {
            this.append(j[0], j[1]);
          }, this);
        } else if (w) {
          Object.getOwnPropertyNames(w).forEach(function (j) {
            this.append(j, w[j]);
          }, this);
        }
      }
      b.prototype.append = function (w, j) {
        w = m(w);
        j = g(j);
        var W = this.map[w];
        this.map[w] = W ? W + ", " + j : j;
      };
      b.prototype.delete = function (w) {
        delete this.map[m(w)];
      };
      b.prototype.get = function (w) {
        w = m(w);
        if (this.has(w)) {
          return this.map[w];
        } else {
          return null;
        }
      };
      b.prototype.has = function (w) {
        return this.map.hasOwnProperty(m(w));
      };
      b.prototype.set = function (w, j) {
        this.map[m(w)] = g(j);
      };
      b.prototype.forEach = function (w, j) {
        for (var W in this.map) {
          if (this.map.hasOwnProperty(W)) {
            w.call(j, this.map[W], W, this);
          }
        }
      };
      b.prototype.keys = function () {
        var w = [];
        this.forEach(function (j, W) {
          w.push(W);
        });
        return T(w);
      };
      b.prototype.values = function () {
        var w = [];
        this.forEach(function (j) {
          w.push(j);
        });
        return T(w);
      };
      b.prototype.entries = function () {
        var w = [];
        this.forEach(function (j, W) {
          w.push([W, j]);
        });
        return T(w);
      };
      if (c.iterable) {
        b.prototype[Symbol.iterator] = b.prototype.entries;
      }
      function x(w) {
        if (w.bodyUsed) {
          return Promise.reject(new TypeError("Already read"));
        }
        w.bodyUsed = true;
      }
      function A(w) {
        return new Promise(function (j, W) {
          w.onload = function () {
            j(w.result);
          };
          w.onerror = function () {
            W(w.error);
          };
        });
      }
      function R(w) {
        var j = new FileReader();
        var W = A(j);
        j.readAsArrayBuffer(w);
        return W;
      }
      function v(w) {
        var j = new FileReader();
        var W = A(j);
        j.readAsText(w);
        return W;
      }
      function y(w) {
        for (var j = new Uint8Array(w), W = new Array(j.length), te = 0; te < j.length; te++) {
          W[te] = String.fromCharCode(j[te]);
        }
        return W.join("");
      }
      function U(w) {
        if (w.slice) {
          return w.slice(0);
        }
        var j = new Uint8Array(w.byteLength);
        j.set(new Uint8Array(w));
        return j.buffer;
      }
      function P() {
        this.bodyUsed = false;
        this._initBody = function (w) {
          this.bodyUsed = this.bodyUsed;
          this._bodyInit = w;
          if (w) {
            if (typeof w == "string") {
              this._bodyText = w;
            } else if (c.blob && Blob.prototype.isPrototypeOf(w)) {
              this._bodyBlob = w;
            } else if (c.formData && FormData.prototype.isPrototypeOf(w)) {
              this._bodyFormData = w;
            } else if (c.searchParams && URLSearchParams.prototype.isPrototypeOf(w)) {
              this._bodyText = w.toString();
            } else if (c.arrayBuffer && c.blob && p(w)) {
              this._bodyArrayBuffer = U(w.buffer);
              this._bodyInit = new Blob([this._bodyArrayBuffer]);
            } else if (c.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(w) || E(w))) {
              this._bodyArrayBuffer = U(w);
            } else {
              this._bodyText = w = Object.prototype.toString.call(w);
            }
          } else {
            this._bodyText = "";
          }
          if (!this.headers.get("content-type")) {
            if (typeof w == "string") {
              this.headers.set("content-type", "text/plain;charset=UTF-8");
            } else if (this._bodyBlob && this._bodyBlob.type) {
              this.headers.set("content-type", this._bodyBlob.type);
            } else if (c.searchParams && URLSearchParams.prototype.isPrototypeOf(w)) {
              this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8");
            }
          }
        };
        if (c.blob) {
          this.blob = function () {
            var w = x(this);
            if (w) {
              return w;
            }
            if (this._bodyBlob) {
              return Promise.resolve(this._bodyBlob);
            }
            if (this._bodyArrayBuffer) {
              return Promise.resolve(new Blob([this._bodyArrayBuffer]));
            }
            if (this._bodyFormData) {
              throw new Error("could not read FormData body as blob");
            }
            return Promise.resolve(new Blob([this._bodyText]));
          };
          this.arrayBuffer = function () {
            if (this._bodyArrayBuffer) {
              var w = x(this);
              return w || (ArrayBuffer.isView(this._bodyArrayBuffer) ? Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset, this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength)) : Promise.resolve(this._bodyArrayBuffer));
            } else {
              return this.blob().then(R);
            }
          };
        }
        this.text = function () {
          var w = x(this);
          if (w) {
            return w;
          }
          if (this._bodyBlob) {
            return v(this._bodyBlob);
          }
          if (this._bodyArrayBuffer) {
            return Promise.resolve(y(this._bodyArrayBuffer));
          }
          if (this._bodyFormData) {
            throw new Error("could not read FormData body as text");
          }
          return Promise.resolve(this._bodyText);
        };
        if (c.formData) {
          this.formData = function () {
            return this.text().then(ae);
          };
        }
        this.json = function () {
          return this.text().then(JSON.parse);
        };
        return this;
      }
      var M = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
      function X(w) {
        var j = w.toUpperCase();
        if (M.indexOf(j) > -1) {
          return j;
        } else {
          return w;
        }
      }
      function N(w, j) {
        if (!(this instanceof N)) {
          throw new TypeError("Please use the \"new\" operator, this DOM object constructor cannot be called as a function.");
        }
        j = j || {};
        var W = j.body;
        if (w instanceof N) {
          if (w.bodyUsed) {
            throw new TypeError("Already read");
          }
          this.url = w.url;
          this.credentials = w.credentials;
          if (!j.headers) {
            this.headers = new b(w.headers);
          }
          this.method = w.method;
          this.mode = w.mode;
          this.signal = w.signal;
          if (!W && w._bodyInit != null) {
            W = w._bodyInit;
            w.bodyUsed = true;
          }
        } else {
          this.url = String(w);
        }
        this.credentials = j.credentials || this.credentials || "same-origin";
        if (j.headers || !this.headers) {
          this.headers = new b(j.headers);
        }
        this.method = X(j.method || this.method || "GET");
        this.mode = j.mode || this.mode || null;
        this.signal = j.signal || this.signal;
        this.referrer = null;
        if ((this.method === "GET" || this.method === "HEAD") && W) {
          throw new TypeError("Body not allowed for GET or HEAD requests");
        }
        this._initBody(W);
        if ((this.method === "GET" || this.method === "HEAD") && (j.cache === "no-store" || j.cache === "no-cache")) {
          var te = /([?&])_=[^&]*/;
          if (te.test(this.url)) {
            this.url = this.url.replace(te, "$1_=" + new Date().getTime());
          } else {
            var ie = /\?/;
            this.url += (ie.test(this.url) ? "&" : "?") + "_=" + new Date().getTime();
          }
        }
      }
      N.prototype.clone = function () {
        return new N(this, {
          body: this._bodyInit
        });
      };
      function ae(w) {
        var j = new FormData();
        w.trim().split("&").forEach(function (W) {
          if (W) {
            var te = W.split("=");
            var ie = te.shift().replace(/\+/g, " ");
            var _e = te.join("=").replace(/\+/g, " ");
            j.append(decodeURIComponent(ie), decodeURIComponent(_e));
          }
        });
        return j;
      }
      function Q(w) {
        var j = new b();
        var W = w.replace(/\r?\n[\t ]+/g, " ");
        W.split("\r").map(function (te) {
          if (te.indexOf(`
`) === 0) {
            return te.substr(1, te.length);
          } else {
            return te;
          }
        }).forEach(function (te) {
          var ie = te.split(":");
          var _e = ie.shift().trim();
          if (_e) {
            var ye = ie.join(":").trim();
            j.append(_e, ye);
          }
        });
        return j;
      }
      P.call(N.prototype);
      function V(w, j) {
        if (!(this instanceof V)) {
          throw new TypeError("Please use the \"new\" operator, this DOM object constructor cannot be called as a function.");
        }
        j ||= {};
        this.type = "default";
        this.status = j.status === undefined ? 200 : j.status;
        this.ok = this.status >= 200 && this.status < 300;
        this.statusText = j.statusText === undefined ? "" : "" + j.statusText;
        this.headers = new b(j.headers);
        this.url = j.url || "";
        this._initBody(w);
      }
      P.call(V.prototype);
      V.prototype.clone = function () {
        return new V(this._bodyInit, {
          status: this.status,
          statusText: this.statusText,
          headers: new b(this.headers),
          url: this.url
        });
      };
      V.error = function () {
        var w = new V(null, {
          status: 0,
          statusText: ""
        });
        w.type = "error";
        return w;
      };
      var Y = [301, 302, 303, 307, 308];
      V.redirect = function (w, j) {
        if (Y.indexOf(j) === -1) {
          throw new RangeError("Invalid status code");
        }
        return new V(null, {
          status: j,
          headers: {
            location: w
          }
        });
      };
      o.DOMException = f.DOMException;
      try {
        new o.DOMException();
      } catch {
        o.DOMException = function (j, W) {
          this.message = j;
          this.name = W;
          var te = Error(j);
          this.stack = te.stack;
        };
        o.DOMException.prototype = Object.create(Error.prototype);
        o.DOMException.prototype.constructor = o.DOMException;
      }
      function k(w, j) {
        return new Promise(function (W, te) {
          var ie = new N(w, j);
          if (ie.signal && ie.signal.aborted) {
            return te(new o.DOMException("Aborted", "AbortError"));
          }
          var _e = new XMLHttpRequest();
          function ye() {
            _e.abort();
          }
          _e.onload = function () {
            var Le = {
              status: _e.status,
              statusText: _e.statusText,
              headers: Q(_e.getAllResponseHeaders() || "")
            };
            Le.url = "responseURL" in _e ? _e.responseURL : Le.headers.get("X-Request-URL");
            var Ge = "response" in _e ? _e.response : _e.responseText;
            setTimeout(function () {
              W(new V(Ge, Le));
            }, 0);
          };
          _e.onerror = function () {
            setTimeout(function () {
              te(new TypeError("Network request failed"));
            }, 0);
          };
          _e.ontimeout = function () {
            setTimeout(function () {
              te(new TypeError("Network request failed"));
            }, 0);
          };
          _e.onabort = function () {
            setTimeout(function () {
              te(new o.DOMException("Aborted", "AbortError"));
            }, 0);
          };
          function Be(Le) {
            try {
              if (Le === "" && f.location.href) {
                return f.location.href;
              } else {
                return Le;
              }
            } catch {
              return Le;
            }
          }
          _e.open(ie.method, Be(ie.url), true);
          if (ie.credentials === "include") {
            _e.withCredentials = true;
          } else if (ie.credentials === "omit") {
            _e.withCredentials = false;
          }
          if ("responseType" in _e) {
            if (c.blob) {
              _e.responseType = "blob";
            } else if (c.arrayBuffer && ie.headers.get("Content-Type") && ie.headers.get("Content-Type").indexOf("application/octet-stream") !== -1) {
              _e.responseType = "arraybuffer";
            }
          }
          if (j && typeof j.headers == "object" && !(j.headers instanceof b)) {
            Object.getOwnPropertyNames(j.headers).forEach(function (Le) {
              _e.setRequestHeader(Le, g(j.headers[Le]));
            });
          } else {
            ie.headers.forEach(function (Le, Ge) {
              _e.setRequestHeader(Ge, Le);
            });
          }
          if (ie.signal) {
            ie.signal.addEventListener("abort", ye);
            _e.onreadystatechange = function () {
              if (_e.readyState === 4) {
                ie.signal.removeEventListener("abort", ye);
              }
            };
          }
          _e.send(typeof ie._bodyInit === "undefined" ? null : ie._bodyInit);
        });
      }
      k.polyfill = true;
      if (!f.fetch) {
        f.fetch = k;
        f.Headers = b;
        f.Request = N;
        f.Response = V;
      }
      o.Headers = b;
      o.Request = N;
      o.Response = V;
      o.fetch = k;
      return o;
    })({});
  })(n);
  n.fetch.ponyfill = true;
  delete n.fetch.polyfill;
  var i = r.fetch ? r : n;
  e = i.fetch;
  e.default = i.fetch;
  e.fetch = i.fetch;
  e.Headers = i.Headers;
  e.Request = i.Request;
  e.Response = i.Response;
  t.exports = e;
})(Kh, Kh.exports);
var C5 = Kh.exports;
var w5 = Error;
var O5 = EvalError;
var I5 = RangeError;
var N5 = ReferenceError;
var Ly = SyntaxError;
var Dl = TypeError;
var P5 = URIError;
function U5() {
  if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function") {
    return false;
  }
  if (typeof Symbol.iterator == "symbol") {
    return true;
  }
  var e = {};
  var r = Symbol("test");
  var n = Object(r);
  if (typeof r == "string" || Object.prototype.toString.call(r) !== "[object Symbol]" || Object.prototype.toString.call(n) !== "[object Symbol]") {
    return false;
  }
  var i = 42;
  e[r] = i;
  for (r in e) {
    return false;
  }
  if (typeof Object.keys == "function" && Object.keys(e).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(e).length !== 0) {
    return false;
  }
  var s = Object.getOwnPropertySymbols(e);
  if (s.length !== 1 || s[0] !== r || !Object.prototype.propertyIsEnumerable.call(e, r)) {
    return false;
  }
  if (typeof Object.getOwnPropertyDescriptor == "function") {
    var o = Object.getOwnPropertyDescriptor(e, r);
    if (o.value !== i || o.enumerable !== true) {
      return false;
    }
  }
  return true;
}
var sb = typeof Symbol !== "undefined" && Symbol;
var D5 = U5;
function B5() {
  if (typeof sb != "function" || typeof Symbol != "function" || typeof sb("foo") != "symbol" || typeof Symbol("bar") != "symbol") {
    return false;
  } else {
    return D5();
  }
}
var Rd = {
  __proto__: null,
  foo: {}
};
var M5 = Object;
function $5() {
  return {
    __proto__: Rd
  }.foo === Rd.foo && !(Rd instanceof M5);
}
var K5 = "Function.prototype.bind called on incompatible ";
var k5 = Object.prototype.toString;
var G5 = Math.max;
var V5 = "[object Function]";
function ab(e, r) {
  var n = [];
  for (var i = 0; i < e.length; i += 1) {
    n[i] = e[i];
  }
  for (var s = 0; s < r.length; s += 1) {
    n[s + e.length] = r[s];
  }
  return n;
}
function F5(e, r) {
  var n = [];
  for (var i = r, s = 0; i < e.length; i += 1, s += 1) {
    n[s] = e[i];
  }
  return n;
}
function H5(t, e) {
  var r = "";
  for (var n = 0; n < t.length; n += 1) {
    r += t[n];
    if (n + 1 < t.length) {
      r += e;
    }
  }
  return r;
}
function W5(e) {
  var r = this;
  if (typeof r != "function" || k5.apply(r) !== V5) {
    throw new TypeError(K5 + r);
  }
  var n = F5(arguments, 1);
  var i;
  var s = function () {
    if (this instanceof i) {
      var d = r.apply(this, ab(n, arguments));
      if (Object(d) === d) {
        return d;
      } else {
        return this;
      }
    }
    return r.apply(e, ab(n, arguments));
  };
  for (var o = G5(0, r.length - n.length), f = [], c = 0; c < o; c++) {
    f[c] = "$" + c;
  }
  i = Function("binder", "return function (" + H5(f, ",") + "){ return binder.apply(this,arguments); }")(s);
  if (r.prototype) {
    function p() {}
    p.prototype = r.prototype;
    i.prototype = new p();
    p.prototype = null;
  }
  return i;
}
var X5 = W5;
var E0 = Function.prototype.bind || X5;
var j5 = Function.prototype.call;
var z5 = Object.prototype.hasOwnProperty;
var q5 = E0;
var Y5 = q5.call(j5, z5);
var ht;
var J5 = w5;
var Z5 = O5;
var Q5 = I5;
var e9 = N5;
var so = Ly;
var Fa = Dl;
var t9 = P5;
var Cy = Function;
function Sd(t) {
  try {
    return Cy("\"use strict\"; return (" + t + ").constructor;")();
  } catch {}
}
var Hs = Object.getOwnPropertyDescriptor;
if (Hs) {
  try {
    Hs({}, "");
  } catch {
    Hs = null;
  }
}
function yd() {
  throw new Fa();
}
var r9 = Hs ? function () {
  try {
    arguments.callee;
    return yd;
  } catch {
    try {
      return Hs(arguments, "callee").get;
    } catch {
      return yd;
    }
  }
}() : yd;
var Ta = B5();
var n9 = $5();
var dr = Object.getPrototypeOf || (n9 ? function (t) {
  return t.__proto__;
} : null);
var La = {};
var i9 = typeof Uint8Array === "undefined" || !dr ? ht : dr(Uint8Array);
var Ws = {
  __proto__: null,
  "%AggregateError%": typeof AggregateError === "undefined" ? ht : AggregateError,
  "%Array%": Array,
  "%ArrayBuffer%": typeof ArrayBuffer === "undefined" ? ht : ArrayBuffer,
  "%ArrayIteratorPrototype%": Ta && dr ? dr([][Symbol.iterator]()) : ht,
  "%AsyncFromSyncIteratorPrototype%": ht,
  "%AsyncFunction%": La,
  "%AsyncGenerator%": La,
  "%AsyncGeneratorFunction%": La,
  "%AsyncIteratorPrototype%": La,
  "%Atomics%": typeof Atomics === "undefined" ? ht : Atomics,
  "%BigInt%": typeof BigInt === "undefined" ? ht : BigInt,
  "%BigInt64Array%": typeof BigInt64Array === "undefined" ? ht : BigInt64Array,
  "%BigUint64Array%": typeof BigUint64Array === "undefined" ? ht : BigUint64Array,
  "%Boolean%": Boolean,
  "%DataView%": typeof DataView === "undefined" ? ht : DataView,
  "%Date%": Date,
  "%decodeURI%": decodeURI,
  "%decodeURIComponent%": decodeURIComponent,
  "%encodeURI%": encodeURI,
  "%encodeURIComponent%": encodeURIComponent,
  "%Error%": J5,
  "%eval%": eval,
  "%EvalError%": Z5,
  "%Float32Array%": typeof Float32Array === "undefined" ? ht : Float32Array,
  "%Float64Array%": typeof Float64Array === "undefined" ? ht : Float64Array,
  "%FinalizationRegistry%": typeof FinalizationRegistry === "undefined" ? ht : FinalizationRegistry,
  "%Function%": Cy,
  "%GeneratorFunction%": La,
  "%Int8Array%": typeof Int8Array === "undefined" ? ht : Int8Array,
  "%Int16Array%": typeof Int16Array === "undefined" ? ht : Int16Array,
  "%Int32Array%": typeof Int32Array === "undefined" ? ht : Int32Array,
  "%isFinite%": isFinite,
  "%isNaN%": isNaN,
  "%IteratorPrototype%": Ta && dr ? dr(dr([][Symbol.iterator]())) : ht,
  "%JSON%": typeof JSON == "object" ? JSON : ht,
  "%Map%": typeof Map === "undefined" ? ht : Map,
  "%MapIteratorPrototype%": typeof Map === "undefined" || !Ta || !dr ? ht : dr(new Map()[Symbol.iterator]()),
  "%Math%": Math,
  "%Number%": Number,
  "%Object%": Object,
  "%parseFloat%": parseFloat,
  "%parseInt%": parseInt,
  "%Promise%": typeof Promise === "undefined" ? ht : Promise,
  "%Proxy%": typeof Proxy === "undefined" ? ht : Proxy,
  "%RangeError%": Q5,
  "%ReferenceError%": e9,
  "%Reflect%": typeof Reflect === "undefined" ? ht : Reflect,
  "%RegExp%": RegExp,
  "%Set%": typeof Set === "undefined" ? ht : Set,
  "%SetIteratorPrototype%": typeof Set === "undefined" || !Ta || !dr ? ht : dr(new Set()[Symbol.iterator]()),
  "%SharedArrayBuffer%": typeof SharedArrayBuffer === "undefined" ? ht : SharedArrayBuffer,
  "%String%": String,
  "%StringIteratorPrototype%": Ta && dr ? dr(""[Symbol.iterator]()) : ht,
  "%Symbol%": Ta ? Symbol : ht,
  "%SyntaxError%": so,
  "%ThrowTypeError%": r9,
  "%TypedArray%": i9,
  "%TypeError%": Fa,
  "%Uint8Array%": typeof Uint8Array === "undefined" ? ht : Uint8Array,
  "%Uint8ClampedArray%": typeof Uint8ClampedArray === "undefined" ? ht : Uint8ClampedArray,
  "%Uint16Array%": typeof Uint16Array === "undefined" ? ht : Uint16Array,
  "%Uint32Array%": typeof Uint32Array === "undefined" ? ht : Uint32Array,
  "%URIError%": t9,
  "%WeakMap%": typeof WeakMap === "undefined" ? ht : WeakMap,
  "%WeakRef%": typeof WeakRef === "undefined" ? ht : WeakRef,
  "%WeakSet%": typeof WeakSet === "undefined" ? ht : WeakSet
};
if (dr) {
  try {
    null.error;
  } catch (t) {
    var s9 = dr(dr(t));
    Ws["%Error.prototype%"] = s9;
  }
}
var a9 = function t(e) {
  var r;
  if (e === "%AsyncFunction%") {
    r = Sd("async function () {}");
  } else if (e === "%GeneratorFunction%") {
    r = Sd("function* () {}");
  } else if (e === "%AsyncGeneratorFunction%") {
    r = Sd("async function* () {}");
  } else if (e === "%AsyncGenerator%") {
    var n = t("%AsyncGeneratorFunction%");
    if (n) {
      r = n.prototype;
    }
  } else if (e === "%AsyncIteratorPrototype%") {
    var i = t("%AsyncGenerator%");
    if (i && dr) {
      r = dr(i.prototype);
    }
  }
  Ws[e] = r;
  return r;
};
var ob = {
  __proto__: null,
  "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
  "%ArrayPrototype%": ["Array", "prototype"],
  "%ArrayProto_entries%": ["Array", "prototype", "entries"],
  "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
  "%ArrayProto_keys%": ["Array", "prototype", "keys"],
  "%ArrayProto_values%": ["Array", "prototype", "values"],
  "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
  "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
  "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
  "%BooleanPrototype%": ["Boolean", "prototype"],
  "%DataViewPrototype%": ["DataView", "prototype"],
  "%DatePrototype%": ["Date", "prototype"],
  "%ErrorPrototype%": ["Error", "prototype"],
  "%EvalErrorPrototype%": ["EvalError", "prototype"],
  "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
  "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
  "%FunctionPrototype%": ["Function", "prototype"],
  "%Generator%": ["GeneratorFunction", "prototype"],
  "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
  "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
  "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
  "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
  "%JSONParse%": ["JSON", "parse"],
  "%JSONStringify%": ["JSON", "stringify"],
  "%MapPrototype%": ["Map", "prototype"],
  "%NumberPrototype%": ["Number", "prototype"],
  "%ObjectPrototype%": ["Object", "prototype"],
  "%ObjProto_toString%": ["Object", "prototype", "toString"],
  "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
  "%PromisePrototype%": ["Promise", "prototype"],
  "%PromiseProto_then%": ["Promise", "prototype", "then"],
  "%Promise_all%": ["Promise", "all"],
  "%Promise_reject%": ["Promise", "reject"],
  "%Promise_resolve%": ["Promise", "resolve"],
  "%RangeErrorPrototype%": ["RangeError", "prototype"],
  "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
  "%RegExpPrototype%": ["RegExp", "prototype"],
  "%SetPrototype%": ["Set", "prototype"],
  "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
  "%StringPrototype%": ["String", "prototype"],
  "%SymbolPrototype%": ["Symbol", "prototype"],
  "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
  "%TypedArrayPrototype%": ["TypedArray", "prototype"],
  "%TypeErrorPrototype%": ["TypeError", "prototype"],
  "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
  "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
  "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
  "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
  "%URIErrorPrototype%": ["URIError", "prototype"],
  "%WeakMapPrototype%": ["WeakMap", "prototype"],
  "%WeakSetPrototype%": ["WeakSet", "prototype"]
};
var Bl = E0;
var kf = Y5;
var o9 = Bl.call(Function.call, Array.prototype.concat);
var l9 = Bl.call(Function.apply, Array.prototype.splice);
var lb = Bl.call(Function.call, String.prototype.replace);
var Gf = Bl.call(Function.call, String.prototype.slice);
var u9 = Bl.call(Function.call, RegExp.prototype.exec);
var f9 = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var c9 = /\\(\\)?/g;
function p9(e) {
  var r = Gf(e, 0, 1);
  var n = Gf(e, -1);
  if (r === "%" && n !== "%") {
    throw new so("invalid intrinsic syntax, expected closing `%`");
  }
  if (n === "%" && r !== "%") {
    throw new so("invalid intrinsic syntax, expected opening `%`");
  }
  var i = [];
  lb(e, f9, function (s, o, f, c) {
    i[i.length] = f ? lb(c, c9, "$1") : o || s;
  });
  return i;
}
function d9(e, r) {
  var n = e;
  var i;
  if (kf(ob, n)) {
    i = ob[n];
    n = "%" + i[0] + "%";
  }
  if (kf(Ws, n)) {
    var s = Ws[n];
    if (s === La) {
      s = a9(n);
    }
    if (typeof s === "undefined" && !r) {
      throw new Fa("intrinsic " + e + " exists, but is not available. Please file an issue!");
    }
    return {
      alias: i,
      name: n,
      value: s
    };
  }
  throw new so("intrinsic " + e + " does not exist!");
}
function bo(e, r) {
  if (typeof e != "string" || e.length === 0) {
    throw new Fa("intrinsic name must be a non-empty string");
  }
  if (arguments.length > 1 && typeof r != "boolean") {
    throw new Fa("\"allowMissing\" argument must be a boolean");
  }
  if (u9(/^%?[^%]*%?$/, e) === null) {
    throw new so("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
  }
  var n = p9(e);
  var i = n.length > 0 ? n[0] : "";
  var s = d9("%" + i + "%", r);
  var o = s.name;
  var f = s.value;
  var c = false;
  var p = s.alias;
  if (p) {
    i = p[0];
    l9(n, o9([0, 1], p));
  }
  for (var d = 1, E = true; d < n.length; d += 1) {
    var m = n[d];
    var g = Gf(m, 0, 1);
    var T = Gf(m, -1);
    if ((g === "\"" || g === "'" || g === "`" || T === "\"" || T === "'" || T === "`") && g !== T) {
      throw new so("property names with quotes must have matching quotes");
    }
    if (m === "constructor" || !E) {
      c = true;
    }
    i += "." + m;
    o = "%" + i + "%";
    if (kf(Ws, o)) {
      f = Ws[o];
    } else if (f != null) {
      if (!(m in f)) {
        if (!r) {
          throw new Fa("base intrinsic for " + e + " exists, but the property is not available.");
        }
        return;
      }
      if (Hs && d + 1 >= n.length) {
        var b = Hs(f, m);
        E = !!b;
        if (E && "get" in b && !("originalValue" in b.get)) {
          f = b.get;
        } else {
          f = f[m];
        }
      } else {
        E = kf(f, m);
        f = f[m];
      }
      if (E && !c) {
        Ws[o] = f;
      }
    }
  }
  return f;
}
var wy = {
  exports: {}
};
var Ad;
var ub;
function m0() {
  if (ub) {
    return Ad;
  }
  ub = 1;
  var t = bo;
  var e = t("%Object.defineProperty%", true) || false;
  if (e) {
    try {
      e({}, "a", {
        value: 1
      });
    } catch {
      e = false;
    }
  }
  Ad = e;
  return Ad;
}
var h9 = bo;
var ff = h9("%Object.getOwnPropertyDescriptor%", true);
if (ff) {
  try {
    ff([], "length");
  } catch {
    ff = null;
  }
}
var Oy = ff;
var fb = m0();
var E9 = Ly;
var va = Dl;
var cb = Oy;
function m9(e, r, n) {
  if (!e || typeof e != "object" && typeof e != "function") {
    throw new va("`obj` must be an object or a function`");
  }
  if (typeof r != "string" && typeof r != "symbol") {
    throw new va("`property` must be a string or a symbol`");
  }
  if (arguments.length > 3 && typeof arguments[3] != "boolean" && arguments[3] !== null) {
    throw new va("`nonEnumerable`, if provided, must be a boolean or null");
  }
  if (arguments.length > 4 && typeof arguments[4] != "boolean" && arguments[4] !== null) {
    throw new va("`nonWritable`, if provided, must be a boolean or null");
  }
  if (arguments.length > 5 && typeof arguments[5] != "boolean" && arguments[5] !== null) {
    throw new va("`nonConfigurable`, if provided, must be a boolean or null");
  }
  if (arguments.length > 6 && typeof arguments[6] != "boolean") {
    throw new va("`loose`, if provided, must be a boolean");
  }
  var i = arguments.length > 3 ? arguments[3] : null;
  var s = arguments.length > 4 ? arguments[4] : null;
  var o = arguments.length > 5 ? arguments[5] : null;
  var f = arguments.length > 6 ? arguments[6] : false;
  var c = !!cb && cb(e, r);
  if (fb) {
    fb(e, r, {
      configurable: o === null && c ? c.configurable : !o,
      enumerable: i === null && c ? c.enumerable : !i,
      value: n,
      writable: s === null && c ? c.writable : !s
    });
  } else if (f || !i && !s && !o) {
    e[r] = n;
  } else {
    throw new E9("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
  }
}
var kh = m0();
function Iy() {
  return !!kh;
}
Iy.hasArrayLengthDefineBug = function () {
  if (!kh) {
    return null;
  }
  try {
    return kh([], "length", {
      value: 1
    }).length !== 1;
  } catch {
    return true;
  }
};
var g9 = Iy;
var _9 = bo;
var pb = m9;
var T9 = g9();
var db = Oy;
var hb = Dl;
var v9 = _9("%Math.floor%");
function b9(e, r) {
  if (typeof e != "function") {
    throw new hb("`fn` is not a function");
  }
  if (typeof r != "number" || r < 0 || r > 4294967295 || v9(r) !== r) {
    throw new hb("`length` must be a positive 32-bit integer");
  }
  var n = arguments.length > 2 && !!arguments[2];
  var i = true;
  var s = true;
  if ("length" in e && db) {
    var o = db(e, "length");
    if (o && !o.configurable) {
      i = false;
    }
    if (o && !o.writable) {
      s = false;
    }
  }
  if (i || s || !n) {
    if (T9) {
      pb(e, "length", r, true, true);
    } else {
      pb(e, "length", r);
    }
  }
  return e;
}
(function (t) {
  var e = E0;
  var r = bo;
  var n = b9;
  var i = Dl;
  var s = r("%Function.prototype.apply%");
  var o = r("%Function.prototype.call%");
  var f = r("%Reflect.apply%", true) || e.call(o, s);
  var c = m0();
  var p = r("%Math.max%");
  t.exports = function (m) {
    if (typeof m != "function") {
      throw new i("a function is required");
    }
    var g = f(e, o, arguments);
    return n(g, 1 + p(0, m.length - (arguments.length - 1)), true);
  };
  function d() {
    return f(e, s, arguments);
  }
  if (c) {
    c(t.exports, "apply", {
      value: d
    });
  } else {
    t.exports.apply = d;
  }
})(wy);
var x9 = wy.exports;
var Ny = bo;
var Py = x9;
var R9 = Py(Ny("String.prototype.indexOf"));
function S9(e, r) {
  var n = Ny(e, !!r);
  if (typeof n == "function" && R9(e, ".prototype.") > -1) {
    return Py(n);
  } else {
    return n;
  }
}
const y9 = {};
const A9 = Object.freeze(Object.defineProperty({
  __proto__: null,
  default: y9
}, Symbol.toStringTag, {
  value: "Module"
}));
const L9 = E2(A9);
var g0 = typeof Map == "function" && Map.prototype;
var Ld = Object.getOwnPropertyDescriptor && g0 ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null;
var Vf = g0 && Ld && typeof Ld.get == "function" ? Ld.get : null;
var Eb = g0 && Map.prototype.forEach;
var _0 = typeof Set == "function" && Set.prototype;
var Cd = Object.getOwnPropertyDescriptor && _0 ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null;
var Ff = _0 && Cd && typeof Cd.get == "function" ? Cd.get : null;
var mb = _0 && Set.prototype.forEach;
var C9 = typeof WeakMap == "function" && WeakMap.prototype;
var il = C9 ? WeakMap.prototype.has : null;
var w9 = typeof WeakSet == "function" && WeakSet.prototype;
var sl = w9 ? WeakSet.prototype.has : null;
var O9 = typeof WeakRef == "function" && WeakRef.prototype;
var gb = O9 ? WeakRef.prototype.deref : null;
var I9 = Boolean.prototype.valueOf;
var N9 = Object.prototype.toString;
var P9 = Function.prototype.toString;
var U9 = String.prototype.match;
var T0 = String.prototype.slice;
var rs = String.prototype.replace;
var D9 = String.prototype.toUpperCase;
var _b = String.prototype.toLowerCase;
var Uy = RegExp.prototype.test;
var Tb = Array.prototype.concat;
var jn = Array.prototype.join;
var B9 = Array.prototype.slice;
var vb = Math.floor;
var Gh = typeof BigInt == "function" ? BigInt.prototype.valueOf : null;
var wd = Object.getOwnPropertySymbols;
var Vh = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? Symbol.prototype.toString : null;
var ao = typeof Symbol == "function" && typeof Symbol.iterator == "object";
var wr = typeof Symbol == "function" && Symbol.toStringTag && (typeof Symbol.toStringTag === ao || true) ? Symbol.toStringTag : null;
var Dy = Object.prototype.propertyIsEnumerable;
var bb = (typeof Reflect == "function" ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function (t) {
  return t.__proto__;
} : null);
function xb(t, e) {
  if (t === Infinity || t === -Infinity || t !== t || t && t > -1000 && t < 1000 || Uy.call(/e/, e)) {
    return e;
  }
  var r = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
  if (typeof t == "number") {
    var n = t < 0 ? -vb(-t) : vb(t);
    if (n !== t) {
      var i = String(n);
      var s = T0.call(e, i.length + 1);
      return rs.call(i, r, "$&_") + "." + rs.call(rs.call(s, /([0-9]{3})/g, "$&_"), /_$/, "");
    }
  }
  return rs.call(e, r, "$&_");
}
var Fh = L9;
var Rb = Fh.custom;
var Sb = My(Rb) ? Rb : null;
var M9 = function t(e, r, n, i) {
  var s = r || {};
  if (qi(s, "quoteStyle") && s.quoteStyle !== "single" && s.quoteStyle !== "double") {
    throw new TypeError("option \"quoteStyle\" must be \"single\" or \"double\"");
  }
  if (qi(s, "maxStringLength") && (typeof s.maxStringLength == "number" ? s.maxStringLength < 0 && s.maxStringLength !== Infinity : s.maxStringLength !== null)) {
    throw new TypeError("option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`");
  }
  var o = qi(s, "customInspect") ? s.customInspect : true;
  if (typeof o != "boolean" && o !== "symbol") {
    throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");
  }
  if (qi(s, "indent") && s.indent !== null && s.indent !== "\t" && (parseInt(s.indent, 10) !== s.indent || s.indent <= 0)) {
    throw new TypeError("option \"indent\" must be \"\\t\", an integer > 0, or `null`");
  }
  if (qi(s, "numericSeparator") && typeof s.numericSeparator != "boolean") {
    throw new TypeError("option \"numericSeparator\", if provided, must be `true` or `false`");
  }
  var f = s.numericSeparator;
  if (typeof e === "undefined") {
    return "undefined";
  }
  if (e === null) {
    return "null";
  }
  if (typeof e == "boolean") {
    if (e) {
      return "true";
    } else {
      return "false";
    }
  }
  if (typeof e == "string") {
    return Ky(e, s);
  }
  if (typeof e == "number") {
    if (e === 0) {
      if (Infinity / e > 0) {
        return "0";
      } else {
        return "-0";
      }
    }
    var c = String(e);
    if (f) {
      return xb(e, c);
    } else {
      return c;
    }
  }
  if (typeof e == "bigint") {
    var p = String(e) + "n";
    if (f) {
      return xb(e, p);
    } else {
      return p;
    }
  }
  var d = typeof s.depth === "undefined" ? 5 : s.depth;
  if (typeof n === "undefined") {
    n = 0;
  }
  if (n >= d && d > 0 && typeof e == "object") {
    if (Hh(e)) {
      return "[Array]";
    } else {
      return "[Object]";
    }
  }
  var E = t6(s, n);
  if (typeof i === "undefined") {
    i = [];
  } else if ($y(i, e) >= 0) {
    return "[Circular]";
  }
  function m(Y, k, w) {
    if (k) {
      i = B9.call(i);
      i.push(k);
    }
    if (w) {
      var j = {
        depth: s.depth
      };
      if (qi(s, "quoteStyle")) {
        j.quoteStyle = s.quoteStyle;
      }
      return t(Y, j, n + 1, i);
    }
    return t(Y, s, n + 1, i);
  }
  if (typeof e == "function" && !yb(e)) {
    var g = X9(e);
    var T = ku(e, m);
    return "[Function" + (g ? ": " + g : " (anonymous)") + "]" + (T.length > 0 ? " { " + jn.call(T, ", ") + " }" : "");
  }
  if (My(e)) {
    var b = ao ? rs.call(String(e), /^(Symbol\(.*\))_[^)]*$/, "$1") : Vh.call(e);
    if (typeof e == "object" && !ao) {
      return Ho(b);
    } else {
      return b;
    }
  }
  if (Z9(e)) {
    var x = "<" + _b.call(String(e.nodeName));
    for (var A = e.attributes || [], R = 0; R < A.length; R++) {
      x += " " + A[R].name + "=" + By($9(A[R].value), "double", s);
    }
    x += ">";
    if (e.childNodes && e.childNodes.length) {
      x += "...";
    }
    x += "</" + _b.call(String(e.nodeName)) + ">";
    return x;
  }
  if (Hh(e)) {
    if (e.length === 0) {
      return "[]";
    }
    var v = ku(e, m);
    if (E && !e6(v)) {
      return "[" + Wh(v, E) + "]";
    } else {
      return "[ " + jn.call(v, ", ") + " ]";
    }
  }
  if (k9(e)) {
    var y = ku(e, m);
    if (!("cause" in Error.prototype) && "cause" in e && !Dy.call(e, "cause")) {
      return "{ [" + String(e) + "] " + jn.call(Tb.call("[cause]: " + m(e.cause), y), ", ") + " }";
    } else if (y.length === 0) {
      return "[" + String(e) + "]";
    } else {
      return "{ [" + String(e) + "] " + jn.call(y, ", ") + " }";
    }
  }
  if (typeof e == "object" && o) {
    if (Sb && typeof e[Sb] == "function" && Fh) {
      return Fh(e, {
        depth: d - n
      });
    }
    if (o !== "symbol" && typeof e.inspect == "function") {
      return e.inspect();
    }
  }
  if (j9(e)) {
    var U = [];
    if (Eb) {
      Eb.call(e, function (Y, k) {
        U.push(m(k, e, true) + " => " + m(Y, e));
      });
    }
    return Ab("Map", Vf.call(e), U, E);
  }
  if (Y9(e)) {
    var P = [];
    if (mb) {
      mb.call(e, function (Y) {
        P.push(m(Y, e));
      });
    }
    return Ab("Set", Ff.call(e), P, E);
  }
  if (z9(e)) {
    return Od("WeakMap");
  }
  if (J9(e)) {
    return Od("WeakSet");
  }
  if (q9(e)) {
    return Od("WeakRef");
  }
  if (V9(e)) {
    return Ho(m(Number(e)));
  }
  if (H9(e)) {
    return Ho(m(Gh.call(e)));
  }
  if (F9(e)) {
    return Ho(I9.call(e));
  }
  if (G9(e)) {
    return Ho(m(String(e)));
  }
  if (typeof window !== "undefined" && e === window) {
    return "{ [object Window] }";
  }
  if (typeof globalThis !== "undefined" && e === globalThis || typeof Nt !== "undefined" && e === Nt) {
    return "{ [object globalThis] }";
  }
  if (!K9(e) && !yb(e)) {
    var M = ku(e, m);
    var X = bb ? bb(e) === Object.prototype : e instanceof Object || e.constructor === Object;
    var N = e instanceof Object ? "" : "null prototype";
    var ae = !X && wr && Object(e) === e && wr in e ? T0.call(_s(e), 8, -1) : N ? "Object" : "";
    var Q = X || typeof e.constructor != "function" ? "" : e.constructor.name ? e.constructor.name + " " : "";
    var V = Q + (ae || N ? "[" + jn.call(Tb.call([], ae || [], N || []), ": ") + "] " : "");
    if (M.length === 0) {
      return V + "{}";
    } else if (E) {
      return V + "{" + Wh(M, E) + "}";
    } else {
      return V + "{ " + jn.call(M, ", ") + " }";
    }
  }
  return String(e);
};
function By(t, e, r) {
  var n = (r.quoteStyle || e) === "double" ? "\"" : "'";
  return n + t + n;
}
function $9(t) {
  return rs.call(String(t), /"/g, "&quot;");
}
function Hh(t) {
  return _s(t) === "[object Array]" && (!wr || typeof t != "object" || !(wr in t));
}
function K9(t) {
  return _s(t) === "[object Date]" && (!wr || typeof t != "object" || !(wr in t));
}
function yb(t) {
  return _s(t) === "[object RegExp]" && (!wr || typeof t != "object" || !(wr in t));
}
function k9(t) {
  return _s(t) === "[object Error]" && (!wr || typeof t != "object" || !(wr in t));
}
function G9(t) {
  return _s(t) === "[object String]" && (!wr || typeof t != "object" || !(wr in t));
}
function V9(t) {
  return _s(t) === "[object Number]" && (!wr || typeof t != "object" || !(wr in t));
}
function F9(t) {
  return _s(t) === "[object Boolean]" && (!wr || typeof t != "object" || !(wr in t));
}
function My(t) {
  if (ao) {
    return t && typeof t == "object" && t instanceof Symbol;
  }
  if (typeof t == "symbol") {
    return true;
  }
  if (!t || typeof t != "object" || !Vh) {
    return false;
  }
  try {
    Vh.call(t);
    return true;
  } catch {}
  return false;
}
function H9(t) {
  if (!t || typeof t != "object" || !Gh) {
    return false;
  }
  try {
    Gh.call(t);
    return true;
  } catch {}
  return false;
}
var W9 = Object.prototype.hasOwnProperty || function (t) {
  return t in this;
};
function qi(t, e) {
  return W9.call(t, e);
}
function _s(t) {
  return N9.call(t);
}
function X9(t) {
  if (t.name) {
    return t.name;
  }
  var e = U9.call(P9.call(t), /^function\s*([\w$]+)/);
  if (e) {
    return e[1];
  } else {
    return null;
  }
}
function $y(t, e) {
  if (t.indexOf) {
    return t.indexOf(e);
  }
  for (var r = 0, n = t.length; r < n; r++) {
    if (t[r] === e) {
      return r;
    }
  }
  return -1;
}
function j9(t) {
  if (!Vf || !t || typeof t != "object") {
    return false;
  }
  try {
    Vf.call(t);
    try {
      Ff.call(t);
    } catch {
      return true;
    }
    return t instanceof Map;
  } catch {}
  return false;
}
function z9(t) {
  if (!il || !t || typeof t != "object") {
    return false;
  }
  try {
    il.call(t, il);
    try {
      sl.call(t, sl);
    } catch {
      return true;
    }
    return t instanceof WeakMap;
  } catch {}
  return false;
}
function q9(t) {
  if (!gb || !t || typeof t != "object") {
    return false;
  }
  try {
    gb.call(t);
    return true;
  } catch {}
  return false;
}
function Y9(t) {
  if (!Ff || !t || typeof t != "object") {
    return false;
  }
  try {
    Ff.call(t);
    try {
      Vf.call(t);
    } catch {
      return true;
    }
    return t instanceof Set;
  } catch {}
  return false;
}
function J9(t) {
  if (!sl || !t || typeof t != "object") {
    return false;
  }
  try {
    sl.call(t, sl);
    try {
      il.call(t, il);
    } catch {
      return true;
    }
    return t instanceof WeakSet;
  } catch {}
  return false;
}
function Z9(t) {
  if (!t || typeof t != "object") {
    return false;
  } else if (typeof HTMLElement !== "undefined" && t instanceof HTMLElement) {
    return true;
  } else {
    return typeof t.nodeName == "string" && typeof t.getAttribute == "function";
  }
}
function Ky(t, e) {
  if (t.length > e.maxStringLength) {
    var r = t.length - e.maxStringLength;
    var n = "... " + r + " more character" + (r > 1 ? "s" : "");
    return Ky(T0.call(t, 0, e.maxStringLength), e) + n;
  }
  var i = rs.call(rs.call(t, /(['\\])/g, "\\$1"), /[\x00-\x1f]/g, Q9);
  return By(i, "single", e);
}
function Q9(t) {
  var e = t.charCodeAt(0);
  var r = {
    8: "b",
    9: "t",
    10: "n",
    12: "f",
    13: "r"
  }[e];
  if (r) {
    return "\\" + r;
  } else {
    return "\\x" + (e < 16 ? "0" : "") + D9.call(e.toString(16));
  }
}
function Ho(t) {
  return "Object(" + t + ")";
}
function Od(t) {
  return t + " { ? }";
}
function Ab(t, e, r, n) {
  var i = n ? Wh(r, n) : jn.call(r, ", ");
  return t + " (" + e + ") {" + i + "}";
}
function e6(t) {
  for (var e = 0; e < t.length; e++) {
    if ($y(t[e], `
`) >= 0) {
      return false;
    }
  }
  return true;
}
function t6(t, e) {
  var r;
  if (t.indent === "\t") {
    r = "\t";
  } else if (typeof t.indent == "number" && t.indent > 0) {
    r = jn.call(Array(t.indent + 1), " ");
  } else {
    return null;
  }
  return {
    base: r,
    prev: jn.call(Array(e + 1), r)
  };
}
function Wh(t, e) {
  if (t.length === 0) {
    return "";
  }
  var r = `
${e.prev}${e.base}`;
  return `${r + jn.call(t, "," + r)}
${e.prev}`;
}
function ku(t, e) {
  var r = Hh(t);
  var n = [];
  if (r) {
    n.length = t.length;
    for (var i = 0; i < t.length; i++) {
      n[i] = qi(t, i) ? e(t[i], t) : "";
    }
  }
  var s = typeof wd == "function" ? wd(t) : [];
  var o;
  if (ao) {
    o = {};
    for (var f = 0; f < s.length; f++) {
      o["$" + s[f]] = s[f];
    }
  }
  for (var c in t) {
    if (qi(t, c)) {
      if ((!r || String(Number(c)) !== c || c >= t.length) && (!ao || !(o["$" + c] instanceof Symbol))) {
        if (Uy.call(/[^\w$]/, c)) {
          n.push(e(c, t) + ": " + e(t[c], t));
        } else {
          n.push(c + ": " + e(t[c], t));
        }
      }
    }
  }
  if (typeof wd == "function") {
    for (var p = 0; p < s.length; p++) {
      if (Dy.call(t, s[p])) {
        n.push("[" + e(s[p]) + "]: " + e(t[s[p]], t));
      }
    }
  }
  return n;
}
var ky = bo;
var xo = S9;
var r6 = M9;
var n6 = Dl;
var Gu = ky("%WeakMap%", true);
var Vu = ky("%Map%", true);
var i6 = xo("WeakMap.prototype.get", true);
var s6 = xo("WeakMap.prototype.set", true);
var a6 = xo("WeakMap.prototype.has", true);
var o6 = xo("Map.prototype.get", true);
var l6 = xo("Map.prototype.set", true);
var u6 = xo("Map.prototype.has", true);
function v0(t, e) {
  for (var r = t, n; (n = r.next) !== null; r = n) {
    if (n.key === e) {
      r.next = n.next;
      n.next = t.next;
      t.next = n;
      return n;
    }
  }
}
function f6(t, e) {
  var r = v0(t, e);
  return r && r.value;
}
function c6(t, e, r) {
  var n = v0(t, e);
  if (n) {
    n.value = r;
  } else {
    t.next = {
      key: e,
      next: t.next,
      value: r
    };
  }
}
function p6(t, e) {
  return !!v0(t, e);
}
function d6() {
  var e;
  var r;
  var n;
  var i = {
    assert: function (s) {
      if (!i.has(s)) {
        throw new n6("Side channel does not contain " + r6(s));
      }
    },
    get: function (s) {
      if (Gu && s && (typeof s == "object" || typeof s == "function")) {
        if (e) {
          return i6(e, s);
        }
      } else if (Vu) {
        if (r) {
          return o6(r, s);
        }
      } else if (n) {
        return f6(n, s);
      }
    },
    has: function (s) {
      if (Gu && s && (typeof s == "object" || typeof s == "function")) {
        if (e) {
          return a6(e, s);
        }
      } else if (Vu) {
        if (r) {
          return u6(r, s);
        }
      } else if (n) {
        return p6(n, s);
      }
      return false;
    },
    set: function (s, o) {
      if (Gu && s && (typeof s == "object" || typeof s == "function")) {
        e ||= new Gu();
        s6(e, s, o);
      } else if (Vu) {
        r ||= new Vu();
        l6(r, s, o);
      } else {
        n ||= {
          key: {},
          next: null
        };
        c6(n, s, o);
      }
    }
  };
  return i;
}
var h6 = String.prototype.replace;
var E6 = /%20/g;
var Id = {
  RFC1738: "RFC1738",
  RFC3986: "RFC3986"
};
var b0 = {
  default: Id.RFC3986,
  formatters: {
    RFC1738: function (t) {
      return h6.call(t, E6, "+");
    },
    RFC3986: function (t) {
      return String(t);
    }
  },
  RFC1738: Id.RFC1738,
  RFC3986: Id.RFC3986
};
var m6 = b0;
var Nd = Object.prototype.hasOwnProperty;
var $s = Array.isArray;
var Vn = function () {
  var t = [];
  for (var e = 0; e < 256; ++e) {
    t.push("%" + ((e < 16 ? "0" : "") + e.toString(16)).toUpperCase());
  }
  return t;
}();
function g6(e) {
  while (e.length > 1) {
    var r = e.pop();
    var n = r.obj[r.prop];
    if ($s(n)) {
      var i = [];
      for (var s = 0; s < n.length; ++s) {
        if (typeof n[s] !== "undefined") {
          i.push(n[s]);
        }
      }
      r.obj[r.prop] = i;
    }
  }
}
function Gy(e, r) {
  var n = r && r.plainObjects ? Object.create(null) : {};
  for (var i = 0; i < e.length; ++i) {
    if (typeof e[i] !== "undefined") {
      n[i] = e[i];
    }
  }
  return n;
}
var _6 = function t(e, r, n) {
  if (!r) {
    return e;
  }
  if (typeof r != "object") {
    if ($s(e)) {
      e.push(r);
    } else if (e && typeof e == "object") {
      if (n && (n.plainObjects || n.allowPrototypes) || !Nd.call(Object.prototype, r)) {
        e[r] = true;
      }
    } else {
      return [e, r];
    }
    return e;
  }
  if (!e || typeof e != "object") {
    return [e].concat(r);
  }
  var i = e;
  if ($s(e) && !$s(r)) {
    i = Gy(e, n);
  }
  if ($s(e) && $s(r)) {
    r.forEach(function (s, o) {
      if (Nd.call(e, o)) {
        var f = e[o];
        if (f && typeof f == "object" && s && typeof s == "object") {
          e[o] = t(f, s, n);
        } else {
          e.push(s);
        }
      } else {
        e[o] = s;
      }
    });
    return e;
  } else {
    return Object.keys(r).reduce(function (s, o) {
      var f = r[o];
      if (Nd.call(s, o)) {
        s[o] = t(s[o], f, n);
      } else {
        s[o] = f;
      }
      return s;
    }, i);
  }
};
function T6(e, r) {
  return Object.keys(r).reduce(function (n, i) {
    n[i] = r[i];
    return n;
  }, e);
}
function v6(t, e, r) {
  var n = t.replace(/\+/g, " ");
  if (r === "iso-8859-1") {
    return n.replace(/%[0-9a-f]{2}/gi, unescape);
  }
  try {
    return decodeURIComponent(n);
  } catch {
    return n;
  }
}
var Pd = 1024;
function b6(e, r, n, i, s) {
  if (e.length === 0) {
    return e;
  }
  var o = e;
  if (typeof e == "symbol") {
    o = Symbol.prototype.toString.call(e);
  } else if (typeof e != "string") {
    o = String(e);
  }
  if (n === "iso-8859-1") {
    return escape(o).replace(/%u[0-9a-f]{4}/gi, function (g) {
      return "%26%23" + parseInt(g.slice(2), 16) + "%3B";
    });
  }
  var f = "";
  for (var c = 0; c < o.length; c += Pd) {
    for (var p = o.length >= Pd ? o.slice(c, c + Pd) : o, d = [], E = 0; E < p.length; ++E) {
      var m = p.charCodeAt(E);
      if (m === 45 || m === 46 || m === 95 || m === 126 || m >= 48 && m <= 57 || m >= 65 && m <= 90 || m >= 97 && m <= 122 || s === m6.RFC1738 && (m === 40 || m === 41)) {
        d[d.length] = p.charAt(E);
        continue;
      }
      if (m < 128) {
        d[d.length] = Vn[m];
        continue;
      }
      if (m < 2048) {
        d[d.length] = Vn[m >> 6 | 192] + Vn[m & 63 | 128];
        continue;
      }
      if (m < 55296 || m >= 57344) {
        d[d.length] = Vn[m >> 12 | 224] + Vn[m >> 6 & 63 | 128] + Vn[m & 63 | 128];
        continue;
      }
      E += 1;
      m = 65536 + ((m & 1023) << 10 | p.charCodeAt(E) & 1023);
      d[d.length] = Vn[m >> 18 | 240] + Vn[m >> 12 & 63 | 128] + Vn[m >> 6 & 63 | 128] + Vn[m & 63 | 128];
    }
    f += d.join("");
  }
  return f;
}
function x6(e) {
  for (var r = [{
      obj: {
        o: e
      },
      prop: "o"
    }], n = [], i = 0; i < r.length; ++i) {
    var s = r[i];
    var o = s.obj[s.prop];
    for (var f = Object.keys(o), c = 0; c < f.length; ++c) {
      var p = f[c];
      var d = o[p];
      if (typeof d == "object" && d !== null && n.indexOf(d) === -1) {
        r.push({
          obj: o,
          prop: p
        });
        n.push(d);
      }
    }
  }
  g6(r);
  return e;
}
function R6(e) {
  return Object.prototype.toString.call(e) === "[object RegExp]";
}
function S6(e) {
  if (!e || typeof e != "object") {
    return false;
  } else {
    return !!e.constructor && !!e.constructor.isBuffer && !!e.constructor.isBuffer(e);
  }
}
function y6(e, r) {
  return [].concat(e, r);
}
function A6(e, r) {
  if ($s(e)) {
    var n = [];
    for (var i = 0; i < e.length; i += 1) {
      n.push(r(e[i]));
    }
    return n;
  }
  return r(e);
}
var Vy = {
  arrayToObject: Gy,
  assign: T6,
  combine: y6,
  compact: x6,
  decode: v6,
  encode: b6,
  isBuffer: S6,
  isRegExp: R6,
  maybeMap: A6,
  merge: _6
};
var Fy = d6;
var cf = Vy;
var al = b0;
var L6 = Object.prototype.hasOwnProperty;
var Hy = {
  brackets: function (e) {
    return e + "[]";
  },
  comma: "comma",
  indices: function (e, r) {
    return e + "[" + r + "]";
  },
  repeat: function (e) {
    return e;
  }
};
var Hn = Array.isArray;
var C6 = Array.prototype.push;
function Wy(t, e) {
  C6.apply(t, Hn(e) ? e : [e]);
}
var w6 = Date.prototype.toISOString;
var Lb = al.default;
var or = {
  addQueryPrefix: false,
  allowDots: false,
  allowEmptyArrays: false,
  arrayFormat: "indices",
  charset: "utf-8",
  charsetSentinel: false,
  delimiter: "&",
  encode: true,
  encodeDotInKeys: false,
  encoder: cf.encode,
  encodeValuesOnly: false,
  format: Lb,
  formatter: al.formatters[Lb],
  indices: false,
  serializeDate: function (e) {
    return w6.call(e);
  },
  skipNulls: false,
  strictNullHandling: false
};
function O6(e) {
  return typeof e == "string" || typeof e == "number" || typeof e == "boolean" || typeof e == "symbol" || typeof e == "bigint";
}
var Ud = {};
var I6 = function t(e, r, n, i, s, o, f, c, p, d, E, m, g, T, b, x, A, R) {
  var v = e;
  for (var y = R, U = 0, P = false; (y = y.get(Ud)) !== undefined && !P;) {
    var M = y.get(e);
    U += 1;
    if (typeof M !== "undefined") {
      if (M === U) {
        throw new RangeError("Cyclic object value");
      }
      P = true;
    }
    if (typeof y.get(Ud) === "undefined") {
      U = 0;
    }
  }
  if (typeof d == "function") {
    v = d(r, v);
  } else if (v instanceof Date) {
    v = g(v);
  } else if (n === "comma" && Hn(v)) {
    v = cf.maybeMap(v, function (_e) {
      if (_e instanceof Date) {
        return g(_e);
      } else {
        return _e;
      }
    });
  }
  if (v === null) {
    if (o) {
      if (p && !x) {
        return p(r, or.encoder, A, "key", T);
      } else {
        return r;
      }
    }
    v = "";
  }
  if (O6(v) || cf.isBuffer(v)) {
    if (p) {
      var X = x ? r : p(r, or.encoder, A, "key", T);
      return [b(X) + "=" + b(p(v, or.encoder, A, "value", T))];
    }
    return [b(r) + "=" + b(String(v))];
  }
  var N = [];
  if (typeof v === "undefined") {
    return N;
  }
  var ae;
  if (n === "comma" && Hn(v)) {
    if (x && p) {
      v = cf.maybeMap(v, p);
    }
    ae = [{
      value: v.length > 0 ? v.join(",") || null : undefined
    }];
  } else if (Hn(d)) {
    ae = d;
  } else {
    var Q = Object.keys(v);
    ae = E ? Q.sort(E) : Q;
  }
  var V = c ? r.replace(/\./g, "%2E") : r;
  var Y = i && Hn(v) && v.length === 1 ? V + "[]" : V;
  if (s && Hn(v) && v.length === 0) {
    return Y + "[]";
  }
  for (var k = 0; k < ae.length; ++k) {
    var w = ae[k];
    var j = typeof w == "object" && typeof w.value !== "undefined" ? w.value : v[w];
    if (!f || j !== null) {
      var W = m && c ? w.replace(/\./g, "%2E") : w;
      var te = Hn(v) ? typeof n == "function" ? n(Y, W) : Y : Y + (m ? "." + W : "[" + W + "]");
      R.set(e, U);
      var ie = Fy();
      ie.set(Ud, R);
      Wy(N, t(j, te, n, i, s, o, f, c, n === "comma" && x && Hn(v) ? null : p, d, E, m, g, T, b, x, A, ie));
    }
  }
  return N;
};
function N6(e) {
  if (!e) {
    return or;
  }
  if (typeof e.allowEmptyArrays !== "undefined" && typeof e.allowEmptyArrays != "boolean") {
    throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");
  }
  if (typeof e.encodeDotInKeys !== "undefined" && typeof e.encodeDotInKeys != "boolean") {
    throw new TypeError("`encodeDotInKeys` option can only be `true` or `false`, when provided");
  }
  if (e.encoder !== null && typeof e.encoder !== "undefined" && typeof e.encoder != "function") {
    throw new TypeError("Encoder has to be a function.");
  }
  var r = e.charset || or.charset;
  if (typeof e.charset !== "undefined" && e.charset !== "utf-8" && e.charset !== "iso-8859-1") {
    throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
  }
  var n = al.default;
  if (typeof e.format !== "undefined") {
    if (!L6.call(al.formatters, e.format)) {
      throw new TypeError("Unknown format option provided.");
    }
    n = e.format;
  }
  var i = al.formatters[n];
  var s = or.filter;
  if (typeof e.filter == "function" || Hn(e.filter)) {
    s = e.filter;
  }
  var o;
  if (e.arrayFormat in Hy) {
    o = e.arrayFormat;
  } else if ("indices" in e) {
    o = e.indices ? "indices" : "repeat";
  } else {
    o = or.arrayFormat;
  }
  if ("commaRoundTrip" in e && typeof e.commaRoundTrip != "boolean") {
    throw new TypeError("`commaRoundTrip` must be a boolean, or absent");
  }
  var f = typeof e.allowDots === "undefined" ? e.encodeDotInKeys === true ? true : or.allowDots : !!e.allowDots;
  return {
    addQueryPrefix: typeof e.addQueryPrefix == "boolean" ? e.addQueryPrefix : or.addQueryPrefix,
    allowDots: f,
    allowEmptyArrays: typeof e.allowEmptyArrays == "boolean" ? !!e.allowEmptyArrays : or.allowEmptyArrays,
    arrayFormat: o,
    charset: r,
    charsetSentinel: typeof e.charsetSentinel == "boolean" ? e.charsetSentinel : or.charsetSentinel,
    commaRoundTrip: e.commaRoundTrip,
    delimiter: typeof e.delimiter === "undefined" ? or.delimiter : e.delimiter,
    encode: typeof e.encode == "boolean" ? e.encode : or.encode,
    encodeDotInKeys: typeof e.encodeDotInKeys == "boolean" ? e.encodeDotInKeys : or.encodeDotInKeys,
    encoder: typeof e.encoder == "function" ? e.encoder : or.encoder,
    encodeValuesOnly: typeof e.encodeValuesOnly == "boolean" ? e.encodeValuesOnly : or.encodeValuesOnly,
    filter: s,
    format: n,
    formatter: i,
    serializeDate: typeof e.serializeDate == "function" ? e.serializeDate : or.serializeDate,
    skipNulls: typeof e.skipNulls == "boolean" ? e.skipNulls : or.skipNulls,
    sort: typeof e.sort == "function" ? e.sort : null,
    strictNullHandling: typeof e.strictNullHandling == "boolean" ? e.strictNullHandling : or.strictNullHandling
  };
}
function P6(t, e) {
  var r = t;
  var n = N6(e);
  var i;
  var s;
  if (typeof n.filter == "function") {
    s = n.filter;
    r = s("", r);
  } else if (Hn(n.filter)) {
    s = n.filter;
    i = s;
  }
  var o = [];
  if (typeof r != "object" || r === null) {
    return "";
  }
  var f = Hy[n.arrayFormat];
  var c = f === "comma" && n.commaRoundTrip;
  i ||= Object.keys(r);
  if (n.sort) {
    i.sort(n.sort);
  }
  var p = Fy();
  for (var d = 0; d < i.length; ++d) {
    var E = i[d];
    if (!n.skipNulls || r[E] !== null) {
      Wy(o, I6(r[E], E, f, c, n.allowEmptyArrays, n.strictNullHandling, n.skipNulls, n.encodeDotInKeys, n.encode ? n.encoder : null, n.filter, n.sort, n.allowDots, n.serializeDate, n.format, n.formatter, n.encodeValuesOnly, n.charset, p));
    }
  }
  var m = o.join(n.delimiter);
  var g = n.addQueryPrefix === true ? "?" : "";
  if (n.charsetSentinel) {
    if (n.charset === "iso-8859-1") {
      g += "utf8=%26%2310003%3B&";
    } else {
      g += "utf8=%E2%9C%93&";
    }
  }
  if (m.length > 0) {
    return g + m;
  } else {
    return "";
  }
}
var oo = Vy;
var Xh = Object.prototype.hasOwnProperty;
var U6 = Array.isArray;
var tr = {
  allowDots: false,
  allowEmptyArrays: false,
  allowPrototypes: false,
  allowSparse: false,
  arrayLimit: 20,
  charset: "utf-8",
  charsetSentinel: false,
  comma: false,
  decodeDotInKeys: false,
  decoder: oo.decode,
  delimiter: "&",
  depth: 5,
  duplicates: "combine",
  ignoreQueryPrefix: false,
  interpretNumericEntities: false,
  parameterLimit: 1000,
  parseArrays: true,
  plainObjects: false,
  strictNullHandling: false
};
function D6(t) {
  return t.replace(/&#(\d+);/g, function (e, r) {
    return String.fromCharCode(parseInt(r, 10));
  });
}
function Xy(t, e) {
  if (t && typeof t == "string" && e.comma && t.indexOf(",") > -1) {
    return t.split(",");
  } else {
    return t;
  }
}
var B6 = "utf8=%26%2310003%3B";
var M6 = "utf8=%E2%9C%93";
function $6(e, r) {
  var n = {
    __proto__: null
  };
  var i = r.ignoreQueryPrefix ? e.replace(/^\?/, "") : e;
  i = i.replace(/%5B/gi, "[").replace(/%5D/gi, "]");
  var s = r.parameterLimit === Infinity ? undefined : r.parameterLimit;
  var o = i.split(r.delimiter, s);
  var f = -1;
  var c;
  var p = r.charset;
  if (r.charsetSentinel) {
    for (c = 0; c < o.length; ++c) {
      if (o[c].indexOf("utf8=") === 0) {
        if (o[c] === M6) {
          p = "utf-8";
        } else if (o[c] === B6) {
          p = "iso-8859-1";
        }
        f = c;
        c = o.length;
      }
    }
  }
  for (c = 0; c < o.length; ++c) {
    if (c !== f) {
      var d = o[c];
      var E = d.indexOf("]=");
      var m = E === -1 ? d.indexOf("=") : E + 1;
      var g;
      var T;
      if (m === -1) {
        g = r.decoder(d, tr.decoder, p, "key");
        T = r.strictNullHandling ? null : "";
      } else {
        g = r.decoder(d.slice(0, m), tr.decoder, p, "key");
        T = oo.maybeMap(Xy(d.slice(m + 1), r), function (x) {
          return r.decoder(x, tr.decoder, p, "value");
        });
      }
      if (T && r.interpretNumericEntities && p === "iso-8859-1") {
        T = D6(T);
      }
      if (d.indexOf("[]=") > -1) {
        T = U6(T) ? [T] : T;
      }
      var b = Xh.call(n, g);
      if (b && r.duplicates === "combine") {
        n[g] = oo.combine(n[g], T);
      } else if (!b || r.duplicates === "last") {
        n[g] = T;
      }
    }
  }
  return n;
}
function K6(t, e, r, n) {
  var i = n ? e : Xy(e, r);
  for (var s = t.length - 1; s >= 0; --s) {
    var o;
    var f = t[s];
    if (f === "[]" && r.parseArrays) {
      o = r.allowEmptyArrays && i === "" ? [] : [].concat(i);
    } else {
      o = r.plainObjects ? Object.create(null) : {};
      var c = f.charAt(0) === "[" && f.charAt(f.length - 1) === "]" ? f.slice(1, -1) : f;
      var p = r.decodeDotInKeys ? c.replace(/%2E/g, ".") : c;
      var d = parseInt(p, 10);
      if (!r.parseArrays && p === "") {
        o = {
          0: i
        };
      } else if (!isNaN(d) && f !== p && String(d) === p && d >= 0 && r.parseArrays && d <= r.arrayLimit) {
        o = [];
        o[d] = i;
      } else if (p !== "__proto__") {
        o[p] = i;
      }
    }
    i = o;
  }
  return i;
}
function k6(e, r, n, i) {
  if (e) {
    var s = n.allowDots ? e.replace(/\.([^.[]+)/g, "[$1]") : e;
    var o = /(\[[^[\]]*])/;
    var f = /(\[[^[\]]*])/g;
    var c = n.depth > 0 && o.exec(s);
    var p = c ? s.slice(0, c.index) : s;
    var d = [];
    if (p) {
      if (!n.plainObjects && Xh.call(Object.prototype, p) && !n.allowPrototypes) {
        return;
      }
      d.push(p);
    }
    for (var E = 0; n.depth > 0 && (c = f.exec(s)) !== null && E < n.depth;) {
      E += 1;
      if (!n.plainObjects && Xh.call(Object.prototype, c[1].slice(1, -1)) && !n.allowPrototypes) {
        return;
      }
      d.push(c[1]);
    }
    if (c) {
      d.push("[" + s.slice(c.index) + "]");
    }
    return K6(d, r, n, i);
  }
}
function G6(e) {
  if (!e) {
    return tr;
  }
  if (typeof e.allowEmptyArrays !== "undefined" && typeof e.allowEmptyArrays != "boolean") {
    throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");
  }
  if (typeof e.decodeDotInKeys !== "undefined" && typeof e.decodeDotInKeys != "boolean") {
    throw new TypeError("`decodeDotInKeys` option can only be `true` or `false`, when provided");
  }
  if (e.decoder !== null && typeof e.decoder !== "undefined" && typeof e.decoder != "function") {
    throw new TypeError("Decoder has to be a function.");
  }
  if (typeof e.charset !== "undefined" && e.charset !== "utf-8" && e.charset !== "iso-8859-1") {
    throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
  }
  var r = typeof e.charset === "undefined" ? tr.charset : e.charset;
  var n = typeof e.duplicates === "undefined" ? tr.duplicates : e.duplicates;
  if (n !== "combine" && n !== "first" && n !== "last") {
    throw new TypeError("The duplicates option must be either combine, first, or last");
  }
  var i = typeof e.allowDots === "undefined" ? e.decodeDotInKeys === true ? true : tr.allowDots : !!e.allowDots;
  return {
    allowDots: i,
    allowEmptyArrays: typeof e.allowEmptyArrays == "boolean" ? !!e.allowEmptyArrays : tr.allowEmptyArrays,
    allowPrototypes: typeof e.allowPrototypes == "boolean" ? e.allowPrototypes : tr.allowPrototypes,
    allowSparse: typeof e.allowSparse == "boolean" ? e.allowSparse : tr.allowSparse,
    arrayLimit: typeof e.arrayLimit == "number" ? e.arrayLimit : tr.arrayLimit,
    charset: r,
    charsetSentinel: typeof e.charsetSentinel == "boolean" ? e.charsetSentinel : tr.charsetSentinel,
    comma: typeof e.comma == "boolean" ? e.comma : tr.comma,
    decodeDotInKeys: typeof e.decodeDotInKeys == "boolean" ? e.decodeDotInKeys : tr.decodeDotInKeys,
    decoder: typeof e.decoder == "function" ? e.decoder : tr.decoder,
    delimiter: typeof e.delimiter == "string" || oo.isRegExp(e.delimiter) ? e.delimiter : tr.delimiter,
    depth: typeof e.depth == "number" || e.depth === false ? +e.depth : tr.depth,
    duplicates: n,
    ignoreQueryPrefix: e.ignoreQueryPrefix === true,
    interpretNumericEntities: typeof e.interpretNumericEntities == "boolean" ? e.interpretNumericEntities : tr.interpretNumericEntities,
    parameterLimit: typeof e.parameterLimit == "number" ? e.parameterLimit : tr.parameterLimit,
    parseArrays: e.parseArrays !== false,
    plainObjects: typeof e.plainObjects == "boolean" ? e.plainObjects : tr.plainObjects,
    strictNullHandling: typeof e.strictNullHandling == "boolean" ? e.strictNullHandling : tr.strictNullHandling
  };
}
function V6(t, e) {
  var r = G6(e);
  if (t === "" || t === null || typeof t === "undefined") {
    if (r.plainObjects) {
      return Object.create(null);
    } else {
      return {};
    }
  }
  var n = typeof t == "string" ? $6(t, r) : t;
  var i = r.plainObjects ? Object.create(null) : {};
  for (var s = Object.keys(n), o = 0; o < s.length; ++o) {
    var f = s[o];
    var c = k6(f, n[f], r, typeof t == "string");
    i = oo.merge(i, c, r);
  }
  if (r.allowSparse === true) {
    return i;
  } else {
    return oo.compact(i);
  }
}
var F6 = P6;
var H6 = V6;
var W6 = b0;
var jy = {
  formats: W6,
  parse: H6,
  stringify: F6
};
let X6 = class {
  constructor(e) {
    this.code = e.code;
    this.token = e.token;
    this.host = e.host;
  }
};
let j6 = class {
  constructor(e) {
    this.appId = e.appId;
    this.appTag = e.appTag;
    this.audienceEnabled = e.audienceEnabled;
    this.code = e.code;
    this.host = e.host;
    this.audienceHost = e.audienceHost;
    this.locked = e.locked;
    this.full = e.full;
    this.maxPlayers = e.maxPlayers;
    this.minPlayers = e.minPlayers;
    this.moderationEnabled = e.moderationEnabled;
    this.passwordRequired = e.passwordRequired;
    this.twitchLocked = e.twitchLocked;
    this.locale = e.locale;
    this.keepalive = e.keepalive;
    this.controllerBranch = e.controllerBranch;
  }
};
let z6 = class {
  constructor(e) {
    this.connections = e.connections;
  }
};
let q6 = class {
  constructor(e) {
    this.cause = e.cause;
  }
  whenReceived(e) {
    e.disconnect();
  }
};
let Y6 = class {};
var Ic = {
  CreateRoomReply: X6,
  GetRoomReply: j6,
  GetAudienceReply: z6,
  RoomExit: q6,
  RoomLock: Y6
};
const Cb = C5;
const J6 = jy;
const {
  CreateRoomReply: Z6,
  GetRoomReply: Q6
} = Ic;
let e7 = class {
  constructor(e) {
    if (!e.host) {
      throw new Error("unable to create ecast APIClient: no host provided");
    }
    this.host = e.host;
    if (!e.scheme) {
      throw new Error("unable to create ecast APIClient: no scheme provided");
    }
    this.scheme = e.scheme;
  }
  url(e, r) {
    if (r) {
      let n = J6.stringify(r);
      return `${this.scheme}://${this.host}/api/v2${e}?${n}`;
    }
    return `${this.scheme}://${this.host}/api/v2${e}`;
  }
  async createRoom(e) {
    let r = {
      appTag: "test",
      userId: "fart",
      ...e
    };
    let n = this.url("/rooms", r);
    let s = await Cb(n, {
      method: "POST"
    });
    const {
      body: o,
      error: f,
      ok: c
    } = await s.json();
    if (!c) {
      throw new Error(`failed to create room: ${f}`);
    }
    return new Z6({
      code: o.code,
      token: o.token,
      host: o.host
    });
  }
  async getRoom(e) {
    let r = this.url(`/rooms/${e.code}`);
    let i = await (await Cb(r)).json();
    if (!i.ok) {
      throw new Error(`unable to get room with options ${JSON.stringify(e)}: ${i.error}`);
    }
    let s = i.body;
    return new Q6({
      appId: s.appId,
      appTag: s.appTag,
      audienceEnabled: s.audienceEnabled,
      code: s.code,
      host: s.host,
      audienceHost: s.audienceHost,
      locked: s.locked,
      full: s.full,
      maxPlayers: s.maxPlayers,
      minPlayers: s.minPlayers,
      moderationEnabled: s.moderationEnabled,
      passwordRequired: s.passwordRequired,
      twitchLocked: s.twitchLocked,
      locale: s.locale,
      keepalive: s.keepalive,
      controllerBranch: s.controllerBranch
    });
  }
};
var t7 = {
  APIClient: e7
};
var Ca = null;
if (typeof WebSocket !== "undefined") {
  Ca = WebSocket;
} else if (typeof MozWebSocket !== "undefined") {
  Ca = MozWebSocket;
} else if (typeof Nt !== "undefined") {
  Ca = Nt.WebSocket || Nt.MozWebSocket;
} else if (typeof window !== "undefined") {
  Ca = window.WebSocket || window.MozWebSocket;
} else if (typeof self !== "undefined") {
  Ca = self.WebSocket || self.MozWebSocket;
}
var r7 = Ca;
var x0 = {
  exports: {}
};
var Ha = typeof Reflect == "object" ? Reflect : null;
var wb = Ha && typeof Ha.apply == "function" ? Ha.apply : function (e, r, n) {
  return Function.prototype.apply.call(e, r, n);
};
var pf;
if (Ha && typeof Ha.ownKeys == "function") {
  pf = Ha.ownKeys;
} else if (Object.getOwnPropertySymbols) {
  pf = function (e) {
    return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e));
  };
} else {
  pf = function (e) {
    return Object.getOwnPropertyNames(e);
  };
}
function n7(t) {
  if (console && console.warn) {
    console.warn(t);
  }
}
var zy = Number.isNaN || function (e) {
  return e !== e;
};
function Pt() {
  Pt.init.call(this);
}
x0.exports = Pt;
x0.exports.once = o7;
Pt.EventEmitter = Pt;
Pt.prototype._events = undefined;
Pt.prototype._eventsCount = 0;
Pt.prototype._maxListeners = undefined;
var Ob = 10;
function Nc(t) {
  if (typeof t != "function") {
    throw new TypeError("The \"listener\" argument must be of type Function. Received type " + typeof t);
  }
}
Object.defineProperty(Pt, "defaultMaxListeners", {
  enumerable: true,
  get: function () {
    return Ob;
  },
  set: function (t) {
    if (typeof t != "number" || t < 0 || zy(t)) {
      throw new RangeError("The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received " + t + ".");
    }
    Ob = t;
  }
});
Pt.init = function () {
  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }
  this._maxListeners = this._maxListeners || undefined;
};
Pt.prototype.setMaxListeners = function (e) {
  if (typeof e != "number" || e < 0 || zy(e)) {
    throw new RangeError("The value of \"n\" is out of range. It must be a non-negative number. Received " + e + ".");
  }
  this._maxListeners = e;
  return this;
};
function qy(t) {
  if (t._maxListeners === undefined) {
    return Pt.defaultMaxListeners;
  } else {
    return t._maxListeners;
  }
}
Pt.prototype.getMaxListeners = function () {
  return qy(this);
};
Pt.prototype.emit = function (e) {
  var r = [];
  for (var n = 1; n < arguments.length; n++) {
    r.push(arguments[n]);
  }
  var i = e === "error";
  var s = this._events;
  if (s !== undefined) {
    i = i && s.error === undefined;
  } else if (!i) {
    return false;
  }
  if (i) {
    var o;
    if (r.length > 0) {
      o = r[0];
    }
    if (o instanceof Error) {
      throw o;
    }
    var f = new Error("Unhandled error." + (o ? " (" + o.message + ")" : ""));
    f.context = o;
    throw f;
  }
  var c = s[e];
  if (c === undefined) {
    return false;
  }
  if (typeof c == "function") {
    wb(c, this, r);
  } else {
    for (var p = c.length, d = eA(c, p), n = 0; n < p; ++n) {
      wb(d[n], this, r);
    }
  }
  return true;
};
function Yy(t, e, r, n) {
  var i;
  var s;
  var o;
  Nc(r);
  s = t._events;
  if (s === undefined) {
    s = t._events = Object.create(null);
    t._eventsCount = 0;
  } else {
    if (s.newListener !== undefined) {
      t.emit("newListener", e, r.listener ? r.listener : r);
      s = t._events;
    }
    o = s[e];
  }
  if (o === undefined) {
    o = s[e] = r;
    ++t._eventsCount;
  } else {
    if (typeof o == "function") {
      o = s[e] = n ? [r, o] : [o, r];
    } else if (n) {
      o.unshift(r);
    } else {
      o.push(r);
    }
    i = qy(t);
    if (i > 0 && o.length > i && !o.warned) {
      o.warned = true;
      var f = new Error("Possible EventEmitter memory leak detected. " + o.length + " " + String(e) + " listeners added. Use emitter.setMaxListeners() to increase limit");
      f.name = "MaxListenersExceededWarning";
      f.emitter = t;
      f.type = e;
      f.count = o.length;
      n7(f);
    }
  }
  return t;
}
Pt.prototype.addListener = function (e, r) {
  return Yy(this, e, r, false);
};
Pt.prototype.on = Pt.prototype.addListener;
Pt.prototype.prependListener = function (e, r) {
  return Yy(this, e, r, true);
};
function i7() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0) {
      return this.listener.call(this.target);
    } else {
      return this.listener.apply(this.target, arguments);
    }
  }
}
function Jy(t, e, r) {
  var n = {
    fired: false,
    wrapFn: undefined,
    target: t,
    type: e,
    listener: r
  };
  var i = i7.bind(n);
  i.listener = r;
  n.wrapFn = i;
  return i;
}
Pt.prototype.once = function (e, r) {
  Nc(r);
  this.on(e, Jy(this, e, r));
  return this;
};
Pt.prototype.prependOnceListener = function (e, r) {
  Nc(r);
  this.prependListener(e, Jy(this, e, r));
  return this;
};
Pt.prototype.removeListener = function (e, r) {
  var n;
  var i;
  var s;
  var o;
  var f;
  Nc(r);
  i = this._events;
  if (i === undefined) {
    return this;
  }
  n = i[e];
  if (n === undefined) {
    return this;
  }
  if (n === r || n.listener === r) {
    if (--this._eventsCount === 0) {
      this._events = Object.create(null);
    } else {
      delete i[e];
      if (i.removeListener) {
        this.emit("removeListener", e, n.listener || r);
      }
    }
  } else if (typeof n != "function") {
    s = -1;
    o = n.length - 1;
    for (; o >= 0; o--) {
      if (n[o] === r || n[o].listener === r) {
        f = n[o].listener;
        s = o;
        break;
      }
    }
    if (s < 0) {
      return this;
    }
    if (s === 0) {
      n.shift();
    } else {
      s7(n, s);
    }
    if (n.length === 1) {
      i[e] = n[0];
    }
    if (i.removeListener !== undefined) {
      this.emit("removeListener", e, f || r);
    }
  }
  return this;
};
Pt.prototype.off = Pt.prototype.removeListener;
Pt.prototype.removeAllListeners = function (e) {
  var r;
  var n;
  var i;
  n = this._events;
  if (n === undefined) {
    return this;
  }
  if (n.removeListener === undefined) {
    if (arguments.length === 0) {
      this._events = Object.create(null);
      this._eventsCount = 0;
    } else if (n[e] !== undefined) {
      if (--this._eventsCount === 0) {
        this._events = Object.create(null);
      } else {
        delete n[e];
      }
    }
    return this;
  }
  if (arguments.length === 0) {
    var s = Object.keys(n);
    var o;
    for (i = 0; i < s.length; ++i) {
      o = s[i];
      if (o !== "removeListener") {
        this.removeAllListeners(o);
      }
    }
    this.removeAllListeners("removeListener");
    this._events = Object.create(null);
    this._eventsCount = 0;
    return this;
  }
  r = n[e];
  if (typeof r == "function") {
    this.removeListener(e, r);
  } else if (r !== undefined) {
    for (i = r.length - 1; i >= 0; i--) {
      this.removeListener(e, r[i]);
    }
  }
  return this;
};
function Zy(t, e, r) {
  var n = t._events;
  if (n === undefined) {
    return [];
  }
  var i = n[e];
  if (i === undefined) {
    return [];
  } else if (typeof i == "function") {
    if (r) {
      return [i.listener || i];
    } else {
      return [i];
    }
  } else if (r) {
    return a7(i);
  } else {
    return eA(i, i.length);
  }
}
Pt.prototype.listeners = function (e) {
  return Zy(this, e, true);
};
Pt.prototype.rawListeners = function (e) {
  return Zy(this, e, false);
};
Pt.listenerCount = function (t, e) {
  if (typeof t.listenerCount == "function") {
    return t.listenerCount(e);
  } else {
    return Qy.call(t, e);
  }
};
Pt.prototype.listenerCount = Qy;
function Qy(t) {
  var e = this._events;
  if (e !== undefined) {
    var r = e[t];
    if (typeof r == "function") {
      return 1;
    }
    if (r !== undefined) {
      return r.length;
    }
  }
  return 0;
}
Pt.prototype.eventNames = function () {
  if (this._eventsCount > 0) {
    return pf(this._events);
  } else {
    return [];
  }
};
function eA(t, e) {
  var r = new Array(e);
  for (var n = 0; n < e; ++n) {
    r[n] = t[n];
  }
  return r;
}
function s7(t, e) {
  for (; e + 1 < t.length; e++) {
    t[e] = t[e + 1];
  }
  t.pop();
}
function a7(t) {
  for (var e = new Array(t.length), r = 0; r < e.length; ++r) {
    e[r] = t[r].listener || t[r];
  }
  return e;
}
function o7(t, e) {
  return new Promise(function (r, n) {
    function i(o) {
      t.removeListener(e, s);
      n(o);
    }
    function s() {
      if (typeof t.removeListener == "function") {
        t.removeListener("error", i);
      }
      r([].slice.call(arguments));
    }
    tA(t, e, s, {
      once: true
    });
    if (e !== "error") {
      l7(t, i, {
        once: true
      });
    }
  });
}
function l7(t, e, r) {
  if (typeof t.on == "function") {
    tA(t, "error", e, r);
  }
}
function tA(t, e, r, n) {
  if (typeof t.on == "function") {
    if (n.once) {
      t.once(e, r);
    } else {
      t.on(e, r);
    }
  } else if (typeof t.addEventListener == "function") {
    t.addEventListener(e, function i(s) {
      if (n.once) {
        t.removeEventListener(e, i);
      }
      r(s);
    });
  } else {
    throw new TypeError("The \"emitter\" argument must be of type EventEmitter. Received type " + typeof t);
  }
}
var u7 = x0.exports;
let f7 = class {
  constructor(e) {
    if (e) {
      this.error = e.error;
      this.to = e.to;
      this.opcode = e.opcode;
    }
  }
  toString() {
    return `ObservedError{
	to:${this.to}
	error:${this.error}
	opcode:${this.opcode}
}`;
  }
};
let Pc = class extends Error {
  constructor(e) {
    super(e);
    if (e) {
      this.code = e.code;
      this.message = e.message;
    }
  }
};
class Ml extends Pc {
  constructor(e) {
    super(e);
    this.code = 1000;
    this.message = e && e.message ? e.message : "ecast server error";
  }
}
class rA extends Ml {
  constructor(e) {
    super(e);
    this.code = 1001;
    this.message = e && e.message ? e.message : "create room failed";
  }
}
class nA extends Ml {
  constructor(e) {
    super(e);
    this.code = 1002;
    this.message = e && e.message ? e.message : "unable to connect to room";
  }
}
class iA extends Ml {
  constructor(e) {
    super(e);
    this.code = 1003;
    this.message = e && e.message ? e.message : "server is shutting down";
  }
}
class wt extends Pc {
  constructor(e) {
    super(e);
    this.code = 2000;
    this.message = e && e.message ? e.message : "ecast client error";
  }
}
class sA extends wt {
  constructor(e) {
    super(e);
    this.code = 2001;
    this.message = e && e.message ? e.message : "parse error in ecast protocol";
  }
}
class aA extends wt {
  constructor(e) {
    super(e);
    this.code = 2002;
    this.message = e && e.message ? e.message : "missing opcode";
  }
}
class oA extends wt {
  constructor(e) {
    super(e);
    this.code = 2003;
    this.message = e && e.message ? e.message : "invalid opcode";
  }
}
class lA extends wt {
  constructor(e) {
    super(e);
    this.code = 2004;
    this.message = e && e.message ? e.message : "invalid arguments";
  }
}
class uA extends wt {
  constructor(e) {
    super(e);
    this.code = 2005;
    this.message = e && e.message ? e.message : "entity not found";
  }
}
class fA extends wt {
  constructor(e) {
    super(e);
    this.code = 2006;
    this.message = e && e.message ? e.message : "an entity already exists with that key";
  }
}
class cA extends wt {
  constructor(e) {
    super(e);
    this.code = 2007;
    this.message = e && e.message ? e.message : "the entity is not of the expected type";
  }
}
class pA extends wt {
  constructor(e) {
    super(e);
    this.code = 2008;
    this.message = e && e.message ? e.message : "no such client";
  }
}
class dA extends wt {
  constructor(e) {
    super(e);
    this.code = 2009;
    this.message = e && e.message ? e.message : "room is locked";
  }
}
class hA extends wt {
  constructor(e) {
    super(e);
    this.code = 2010;
    this.message = e && e.message ? e.message : "room is full";
  }
}
class EA extends wt {
  constructor(e) {
    super(e);
    this.code = 2011;
    this.message = e && e.message ? e.message : "no such license";
  }
}
class mA extends wt {
  constructor(e) {
    super(e);
    this.code = 2012;
    this.message = e && e.message ? e.message : "invalid license";
  }
}
class gA extends wt {
  constructor(e) {
    super(e);
    this.code = 2013;
    this.message = e && e.message ? e.message : "room not found";
  }
}
class _A extends wt {
  constructor(e) {
    super(e);
    this.code = 2014;
    this.message = e && e.message ? e.message : "requested role does not exist";
  }
}
class TA extends wt {
  constructor(e) {
    super(e);
    this.code = 2015;
    this.message = e && e.message ? e.message : "twitch login required";
  }
}
class vA extends wt {
  constructor(e) {
    super(e);
    this.code = 2016;
    this.message = e && e.message ? e.message : "no such option";
  }
}
class bA extends wt {
  constructor(e) {
    super(e);
    this.code = 2017;
    this.message = e && e.message ? e.message : "password required";
  }
}
class xA extends wt {
  constructor(e) {
    super(e);
    this.code = 2018;
    this.message = e && e.message ? e.message : "invalid room password";
  }
}
class RA extends wt {
  constructor(e) {
    super(e);
    this.code = 2019;
    this.message = e && e.message ? e.message : "missing name";
  }
}
class SA extends wt {
  constructor(e) {
    super(e);
    this.code = 2021;
    this.message = e && e.message ? e.message : "text did not pass text filters";
  }
}
class yA extends wt {
  constructor(e) {
    super(e);
    this.code = 2022;
    this.message = e && e.message ? e.message : "no such filter";
  }
}
class AA extends wt {
  constructor(e) {
    super(e);
    this.code = 2023;
    this.message = e && e.message ? e.message : "permission denied";
  }
}
class LA extends wt {
  constructor(e) {
    super(e);
    this.code = 2024;
    this.message = e && e.message ? e.message : "not connected to a room";
  }
}
class CA extends wt {
  constructor(e) {
    super(e);
    this.code = 2025;
    this.message = e && e.message ? e.message : "illegal operation";
  }
}
class wA extends wt {
  constructor(e) {
    super(e);
    this.code = 2026;
    this.message = e && e.message ? e.message : "invalid ACL change";
  }
}
class OA extends wt {
  constructor(e) {
    super(e);
    this.code = 2027;
    this.message = e && e.message ? e.message : "room has already ended";
  }
}
class IA extends wt {
  constructor(e) {
    super(e);
    this.code = 2028;
    this.message = e && e.message ? e.message : "the entity is locked";
  }
}
class NA extends wt {
  constructor(e) {
    super(e);
    this.code = 2420;
    this.message = e && e.message ? e.message : "rate limit exceeded";
  }
}
function c7({
  code: t,
  message: e
}) {
  const r = p7[t];
  if (r) {
    return new r({
      message: e
    });
  } else {
    return new Pc({
      message: e
    });
  }
}
var ol = {
  createError: c7,
  CallError: Pc,
  EcastServerError: Ml,
  EcastCreateRoomFailed: rA,
  EcastDialRoomFailed: nA,
  EcastServerIsShuttingDown: iA,
  EcastClientError: wt,
  EcastParseError: sA,
  EcastRequestIsMissingOpcode: aA,
  EcastRequestHasInvalidOpcode: oA,
  EcastRequestHasInvalidArguments: lA,
  EcastEntityNotFound: uA,
  EcastEntityAlreadyExists: fA,
  EcastEntityTypeError: cA,
  EcastNoSuchClient: pA,
  EcastRoomIsLocked: dA,
  EcastRoomIsFull: hA,
  EcastLicenseNotFound: EA,
  EcastLicenseCheckFailed: mA,
  EcastRoomNotFound: gA,
  EcastInvalidRole: _A,
  EcastTwitchLoginRequired: TA,
  EcastInvalidOption: vA,
  EcastPasswordRequired: bA,
  EcastInvalidPassword: xA,
  EcastNameRequired: RA,
  EcastFilterError: SA,
  EcastNoSuchFilter: yA,
  EcastPermissionDenied: AA,
  EcastNotConnected: LA,
  EcastIllegalOperation: CA,
  EcastACLChangeDenied: wA,
  EcastRoomHasEnded: OA,
  EcastEntityLocked: IA,
  EcastRateLimitExceeded: NA,
  ObservedError: f7
};
const p7 = {
  1000: Ml,
  1001: rA,
  1002: nA,
  1003: iA,
  2000: wt,
  2001: sA,
  2002: aA,
  2003: oA,
  2004: lA,
  2005: uA,
  2006: fA,
  2007: cA,
  2008: pA,
  2009: dA,
  2010: hA,
  2011: EA,
  2012: mA,
  2013: gA,
  2014: _A,
  2015: TA,
  2016: vA,
  2017: bA,
  2018: xA,
  2019: RA,
  2021: SA,
  2022: yA,
  2023: AA,
  2024: LA,
  2025: CA,
  2026: wA,
  2027: OA,
  2028: IA,
  2420: NA
};
let d7 = class {
  constructor(e) {
    this.id = e.id;
    this.deviceId = e.deviceId;
    this.name = e.name;
    this.secret = e.secret;
    this.reconnect = e.reconnect;
    this.entities = e.entities;
    this.here = e.here;
    this.profile = e.profile;
    this.replayEnd = e.replayEnd;
  }
};
let h7 = class {
  constructor(e) {
    this.id = e.id;
    this.userId = e.userId;
    this.name = e.name;
    this.role = e.role;
    this.reconnect = e.reconnect;
  }
};
let E7 = class {
  constructor(e) {
    this.id = e.id;
    this.role = e.role;
  }
};
let m7 = class {
  constructor(e) {
    this.to = e.to;
    this.from = e.from;
    this.body = e.body;
    this.userId = e.userId;
  }
};
let g7 = class {
  constructor(e) {
    this.id = e.id;
    this.banned = e.banned;
    this.reason = e.reason;
  }
};
var R0 = {
  ClientConnected: h7,
  ClientDisconnected: E7,
  ClientKicked: g7,
  ClientSend: m7,
  ClientWelcome: d7
};
let _7 = class {
  constructor(e) {
    this.choices = e.choices;
    this.key = e.key;
    this.meta = e.meta || {};
  }
  whenReceived(e) {
    e.entities[this.key] = this;
  }
  toString() {
    return `CountGroup{
	choices: ${this.choices}
	meta:${JSON.stringify(this.meta)}
}`;
  }
};
var S0 = {
  CountGroup: _7
};
let T7 = class {
  constructor(e) {
    this.key = e.key;
    this.from = e.from;
    this.colors = e.colors;
    this.lines = e.lines;
    this.live = e.live;
    this.maxLayer = e.maxLayer;
    this.maxPoints = e.maxPoints;
    this.size = e.size;
    this.weights = e.weights;
    this.meta = e.meta || {};
    if (e.acl) {
      this.acl = e.acl;
    }
  }
  whenReceived(e) {
    e.entities[this.key] = this;
  }
  toString() {
    return `Doodle{
	key:${this.key}
	colors:${this.colors}
	lines:${this.lines}
	live:${this.live}
	maxLayer:${this.maxLayer}
	maxPoints:${this.maxPoints}
	size:${this.size}
	weights:${this.weights}
	meta:${JSON.stringify(this.meta)}
}`;
  }
};
let v7 = class {
  constructor(e) {
    this.key = e.key;
    this.from = e.from;
    this.line = e.line;
  }
  whenReceived(e) {
    e.entities[this.key].lines.push(this.line);
  }
  toString() {
    return `DoodleLine{
	val:${this.line}
}`;
  }
};
let b7 = class {
  constructor(e) {
    this.key = e.key;
    this.from = e.from;
    this.index = e.index;
  }
  whenReceived(e) {
    e.entities[this.key].lines.splice(this.index, 1);
  }
  toString() {
    return `DoodleLineRemoved{
	index:${this.index}
}`;
  }
};
var y0 = {
  DoodleEntity: T7,
  DoodleLine: v7,
  DoodleLineRemoved: b7
};
let x7 = class {
  constructor(e) {
    this.key = e.key;
    this.count = e.count;
    this.meta = e.meta || {};
  }
  whenReceived(e) {
    e.entities[this.key] = this;
  }
  toString() {
    return `GCounter{
	count:${this.count}
	meta:${this.meta}
}`;
  }
};
var A0 = {
  GCounter: x7
};
let R7 = class {
  constructor(e) {
    this.pc = e.pc;
    this.opcode = e.opcode;
    this.result = e.result;
  }
};
var PA = {
  Notification: R7
};
let S7 = class UA {
  constructor(e) {
    this.from = e.from;
    this.key = e.key;
    this.val = e.val;
    this.restrictions = e.restrictions;
    this.version = e.version;
    this.meta = e.meta || {};
    if (e.acl) {
      this.acl = e.acl;
    }
  }
  whenReceived(e) {
    if (e.entities[this.key] && e.entities[this.key] instanceof UA && !this.restrictions) {
      e.entities[this.key].val = this.val;
      e.entities[this.key].meta = this.meta;
      e.entities[this.key].version = this.version;
      e.entities[this.key].from = this.from;
      return;
    }
    e.entities[this.key] = this;
  }
  toString() {
    return `NumberEntity{
	key:${this.key}
	val: ${this.val}
	restrictions: ${JSON.stringify(this.restrictions)}
	meta: ${JSON.stringify(this.meta)}
}`;
  }
};
var L0 = {
  NumberEntity: S7
};
let y7 = class {
  constructor(e) {
    this.from = e.from;
    this.key = e.key;
    this.val = e.val;
    this.version = e.version;
    this.meta = e.meta || {};
    if (e.acl) {
      this.acl = e.acl;
    }
  }
  whenReceived(e) {
    e.entities[this.key] = this;
  }
  toString() {
    return `ObjectEntity{
	key:${this.key}
	value: ${JSON.stringify(this.val)}
	meta:${JSON.stringify(this.meta)}
}`;
  }
  toBlob() {
    return this.val;
  }
};
let A7 = class {
  constructor(e) {
    this.message = e.message;
  }
  toString() {
    return `ObjectEcho{message: ${this.message}}`;
  }
};
var C0 = {
  ObjectEntity: y7,
  ObjectEcho: A7
};
let L7 = class {
  constructor(e) {
    this.key = e.key;
    this.count = e.count;
    this.meta = e.meta || {};
  }
  whenReceived(e) {
    e.entities[this.key] = this;
  }
  toString() {
    return `PNCounter{
	count:${this.count}
	meta:${JSON.stringify(this.meta)}
}`;
  }
};
var w0 = {
  PNCounter: L7
};
let C7 = class {
  constructor(e) {
    this.pc = e.pc;
    this.re = e.re;
    this.opcode = e.opcode;
    this.result = e.result;
  }
};
var DA = {
  Reply: C7
};
let w7 = class {
  constructor(e) {
    this.seq = e.seq;
    this.opcode = e.opcode;
    this.params = e.params;
  }
};
var O7 = {
  Request: w7
};
let I7 = class {
  constructor(e) {
    this.key = e.key;
    this.size = e.size;
    this.version = e.version;
    this.from = e.from;
    this.meta = e.meta || {};
    if (e.acl) {
      this.acl = e.acl;
    }
  }
  whenRecived(e) {
    e.entities[this.key] = this;
  }
  toString() {
    return `Stack{
	key:${this.key}
	size:${this.size}
	version:${this.version}
	from:${this.from}
	meta:${this.meta}
}`;
  }
};
let N7 = class {
  constructor(e) {
    this.key = e.key;
    this.val = e.val;
  }
  toString() {
    return `StackElement{
	key:${this.key}
	value: ${JSON.stringify(this.val)}
}`;
  }
};
let P7 = class {
  constructor(e) {
    this.key = e.key;
    this.vals = e.vals;
  }
  toString() {
    return `StackElements{
	key:${this.key}
	values: ${JSON.stringify(this.vals)}
}`;
  }
};
var BA = {
  StackEntity: I7,
  StackElement: N7,
  StackElements: P7
};
let U7 = class {
  constructor(e) {
    this.from = e.from;
    this.key = e.key;
    this.text = e.text;
    this.version = e.version;
    this.meta = e.meta || {};
    if (e.acl) {
      this.acl = e.acl;
    }
  }
  whenReceived(e) {
    e.entities[this.key] = this;
    e.emit("text " + this.key, this);
  }
  toString() {
    return `TextEntity{
	key: ${this.key}
	text: ${this.text}
	meta:${JSON.stringify(this.meta)}
}`;
  }
  toBlob() {
    return JSON.parse(this.text);
  }
};
let D7 = class {
  constructor(e) {
    this.message = e.message;
  }
  toString() {
    return `TextEcho{
	key: ${this.key}
	message: ${this.message}
}`;
  }
};
var O0 = {
  TextEntity: U7,
  TextEcho: D7
};
let B7 = class {
  constructor(e) {
    this.from = e.from;
    this.key = e.key;
    this.meta = e.meta || {};
    this.root = e.root;
    if (e.acl) {
      this.acl = e.acl;
    }
  }
  whenReceived(e) {
    e.entities[this.key] = this;
  }
  toString() {
    return `TextMap{
	key:${this.key}
	meta:${JSON.stringify(this.meta)}
}`;
  }
};
let M7 = class {
  constructor(e) {
    this.from = e.from;
    this.key = e.key;
    this.msg = e.msg;
  }
  toString() {
    const e = this.msg ? this.msg.join(", ") : this.msg;
    return `TextMapSynced{
	key:${this.key}
	from:${this.from}
	msg:${e}
}`;
  }
};
let $7 = class {
  constructor(e) {
    this.from = e.from;
    this.key = e.key;
    this.text = e.text;
    this.attributions = e.attributions;
  }
  toString() {
    return `TextMapState{
	key: ${this.key}
	from:${this.from}
	text:${this.text}
	attributions:${this.attributions}
}`;
  }
};
var I0 = {
  TextMapEntity: B7,
  TextMapSynced: M7,
  TextMapState: $7
};
let K7 = class {
  constructor(e) {
    this.key = e.key;
    this.elements = e.elements;
    this.limit = e.limit;
    this.meta = e.meta || {};
  }
  whenReceived(e) {
    e.entities[this.key] = this;
  }
  toString() {
    return `TextRing{
	elements: ${this.elements}
	meta:${JSON.stringify(this.meta)}
}`;
  }
};
var N0 = {
  TextRing: K7
};
let k7 = class {
  constructor(e) {
    this.key = e.key;
    this.artifactId = e.artifactId;
    this.categoryId = e.categoryId;
    this.rootId = e.rootId;
    this.meta = e.meta || {};
  }
  whenReceived(e) {
    e.entities[this.key] = this;
  }
  toString() {
    return `ArtifactEntity${JSON.stringify(this)}
`;
  }
};
var MA = {
  ArtifactEntity: k7
};
let G7 = class {
  constructor(e) {
    this.key = e.key;
  }
  whenReceived(e) {
    delete e.entities[this.key];
  }
  toString() {
    return `DropEntity{
	key:${this.key}
}`;
  }
};
var $A = {
  DropEntity: G7
};
let V7 = class {
  constructor(e) {
    this.message = e.message;
  }
  toString() {
    return `Echo{message: ${this.message}
}`;
  }
};
var F7 = {
  Echo: V7
};
let H7 = class {
  constructor(e) {
    this.key = e.key;
    this.from = e.from;
  }
  whenReceived(e) {
    if (e.entities[this.key]) {
      e.entities[this.key].meta.locked = true;
    }
  }
  toString() {
    return `LockEntity{
	key:${this.key}
}`;
  }
};
var W7 = {
  LockEntity: H7
};
let X7 = class {
  constructor() {}
  toString() {
    return "OK";
  }
};
var KA = {
  OK: X7
};
const {
  ArtifactEntity: j7
} = MA;
const {
  ClientWelcome: z7,
  ClientConnected: q7,
  ClientDisconnected: Y7,
  ClientKicked: J7,
  ClientSend: Z7
} = R0;
const {
  CountGroup: Q7
} = S0;
const {
  DoodleEntity: eH,
  DoodleLine: tH,
  DoodleLineRemoved: rH
} = y0;
const {
  StackEntity: nH,
  StackElement: iH,
  StackElements: sH
} = BA;
const {
  DropEntity: aH
} = $A;
const {
  Echo: oH
} = F7;
const {
  LockEntity: lH
} = W7;
const {
  GCounter: uH
} = A0;
const {
  GetAudienceReply: fH,
  RoomExit: cH,
  RoomLock: pH
} = Ic;
const {
  Notification: dH
} = PA;
const {
  OK: hH
} = KA;
const {
  NumberEntity: EH
} = L0;
const {
  ObjectEcho: mH,
  ObjectEntity: gH
} = C0;
const {
  PNCounter: Ib
} = w0;
const {
  Reply: _H
} = DA;
const {
  TextEcho: TH,
  TextEntity: vH
} = O0;
const {
  TextRing: bH
} = N0;
const {
  createError: Nb,
  ObservedError: xH
} = ol;
const {
  TextMapEntity: RH,
  TextMapSynced: SH,
  TextMapState: yH
} = I0;
function jh(t, e, r) {
  switch (t) {
    case "ok":
      return new hH();
    case "echo":
      return new oH({
        message: e.message
      });
    case "lock":
      return new lH({
        key: e.key,
        from: e.from
      });
    case "error":
      return Nb({
        code: e.code,
        message: e.msg
      });
    case "error/observed":
      return new xH({
        to: e.to,
        opcode: e.opcode,
        error: Nb({
          code: e.error.code,
          message: e.error.msg
        })
      });
    case "string":
      return e;
    case "text":
      return new vH({
        from: e.from,
        key: e.key,
        text: e.val,
        version: e.version,
        meta: r,
        acl: e.acl
      });
    case "text/echo":
      return new TH({
        message: e.message
      });
    case "object":
      return new gH({
        from: e.from,
        key: e.key,
        val: e.val,
        meta: r,
        acl: e.acl
      });
    case "object/echo":
      return new mH({
        message: e.message
      });
    case "drop":
      return new aH({
        key: e.key
      });
    case "artifact":
      return new j7({
        key: e.key,
        artifactId: e.artifactId,
        categoryId: e.categoryId,
        rootId: e.rootId,
        meta: r
      });
    case "client/connected":
      return new q7({
        id: e.id,
        userId: e.userId,
        name: e.name,
        role: e.role,
        reconnect: e.reconnect
      });
    case "client/disconnected":
      return new Y7({
        id: e.id,
        role: e.role
      });
    case "client/kicked":
      return new J7({
        id: e.id,
        banned: e.banned,
        reason: e.reason
      });
    case "client/send":
      return new Z7({
        to: e.to,
        from: e.from,
        body: e.body,
        userId: e.userID
      });
    case "client/welcome":
      {
        let n = new z7({
          id: e.id,
          name: e.name,
          secret: e.secret,
          reconnect: e.reconnect,
          here: e.here,
          profile: e.profile,
          replayEnd: e.replayEnd
        });
        if (e.entities) {
          let i = {};
          Object.entries(e.entities).forEach(([s, o]) => {
            i[s] = jh(o[0], o[1], o[2]);
          });
          n.entities = i;
        }
        return n;
      }
    case "doodle":
      return new eH({
        key: e.key,
        from: e.from,
        colors: e.val.colors,
        lines: e.val.lines,
        live: e.val.live,
        maxLayer: e.val.maxLayer,
        maxPoints: e.val.maxPoints,
        size: e.val.size,
        weights: e.val.weights,
        meta: r,
        acl: e.acl
      });
    case "doodle/line":
      return new tH({
        key: e.key,
        from: e.from,
        line: e.val
      });
    case "doodle/line/removed":
      return new rH({
        key: e.key,
        from: e.from,
        index: e.index
      });
    case "stack":
      return new nH({
        key: e.key,
        size: e.size,
        from: e.from,
        version: e.version,
        meta: e.meta,
        acl: e.acl
      });
    case "stack/element":
      return new iH({
        key: e.key,
        val: e.val
      });
    case "stack/elements":
      return new sH({
        key: e.key,
        vals: e.vals
      });
    case "number":
      return new EH({
        key: e.key,
        val: e.val,
        restrictions: e.restrictions,
        from: e.from,
        version: e.version,
        meta: r,
        acl: e.acl
      });
    case "text-map":
      return new RH({
        key: e.key,
        from: e.from,
        root: e.root,
        meta: r,
        acl: e.acl
      });
    case "text-map/state":
      return new yH({
        key: e.key,
        from: e.from,
        attributions: e.attributions,
        text: e.text
      });
    case "text-map/synced":
      return new SH({
        key: e.key,
        from: e.from,
        msg: e.msg
      });
    case "room/exit":
      return new cH({
        cause: e.cause
      });
    case "room/lock":
      return new pH();
    case "room/get-audience":
      return new fH({
        connections: e.connections
      });
    case "audience":
      return new Ib({
        key: t,
        count: e[1]
      });
    case "audience/count-group":
      return new Q7({
        key: e.key,
        choices: e.choices,
        meta: r
      });
    case "audience/text-ring":
      return new bH({
        key: e.key,
        elements: e.elements,
        meta: r
      });
    case "audience/g-counter":
      return new uH({
        key: e.key,
        count: e.count,
        meta: r
      });
    case "audience/pn-counter":
      return new Ib({
        key: e.key,
        count: e.count,
        meta: r
      });
    default:
      console.error(`failed to parse result of type ${t}: ${JSON.stringify(e, null, 2)}`);
      return e;
  }
}
function AH(t) {
  let e = JSON.parse(t.data);
  let r = e.opcode || e.type;
  if (e.re) {
    return new _H({
      pc: e.pc,
      re: e.re,
      opcode: r,
      result: jh(r, e.result)
    });
  } else {
    return new dH({
      pc: e.pc,
      opcode: r,
      result: jh(r, e.result)
    });
  }
}
var LH = {
  parseResponseMessage: AH
};
const Pb = r7;
const CH = jy;
const wH = u7;
const {
  CallError: OH
} = ol;
const {
  ClientWelcome: IH
} = R0;
const {
  CountGroup: NH
} = S0;
const {
  DoodleEntity: PH
} = y0;
const {
  GCounter: UH
} = A0;
const {
  Notification: Ub
} = PA;
const {
  NumberEntity: DH
} = L0;
const {
  ObjectEntity: Dd
} = C0;
const {
  PNCounter: BH
} = w0;
const {
  Reply: MH
} = DA;
const {
  Request: $H
} = O7;
const {
  StackEntity: KH
} = BA;
const {
  TextEntity: Bd
} = O0;
const {
  TextMapEntity: kH
} = I0;
const {
  TextRing: GH
} = N0;
const {
  parseResponseMessage: VH
} = LH;
const FH = 1000 + Math.floor(Math.random() * 500);
const Db = 13000;
let HH = class extends wH {
  constructor(e) {
    super();
    this.debug = e.debug || false;
    if (!e.host) {
      throw new Error("unable to create ecast WSClient: no host provided");
    }
    this.host = e.host;
    if (!e.code) {
      throw new Error("unable to create ecast WSClient: no room code provided");
    }
    this.code = e.code;
    if (e.scheme) {
      this.scheme = e.scheme;
    } else {
      this.scheme = "wss";
    }
    if (e.secret && e.id) {
      this.id = e.id;
      this.secret = e.secret;
    } else {
      switch (e.role) {
        case "player":
          if (!e.name) {
            throw new Error("unable to create ecast WSClient: no name provided");
          }
          break;
        case "host":
          if (!e.token) {
            throw new Error("unable to create ecast WSClient: tried to connect with host role but without host token");
          }
          this.token = e.token;
          break;
        case "moderator":
          if (!e.password) {
            throw new Error("unable to create ecast WSClient: tried to connect with moderator role but without password");
          }
          break;
      }
      if (e.password) {
        this.password = e.password;
      }
      if (e.twitchToken) {
        this.twitchToken = e.twitchToken;
      }
    }
    this.name = e.name;
    this.role = e.role;
    this.deviceId = e.deviceId;
    this.userId = e.userId;
    this.conn = null;
    this.seq = 0;
    this.pending = {};
    this.entities = {};
    if (e.role == "host") {
      this.replaySince = e.replaySince || 0;
      this.syncEntities = e.syncEntities || false;
    }
  }
  connect() {
    const e = {
      id: this.id,
      role: this.role,
      name: this.name,
      format: "json",
      "user-id": this.userId,
      password: this.password
    };
    if (this.deviceId) {
      e["device-id"] = this.deviceId;
    }
    if (this.twitchToken) {
      e["twitch-token"] = this.twitchToken;
    }
    if (this.secret) {
      e.secret = this.secret;
    }
    if (this.role === "host") {
      e["host-token"] = this.token;
      if (this.replaySince > 0) {
        e["replay-since"] = this.replaySince;
      }
      if (this.syncEntities) {
        e["sync-entities"] = this.syncEntities;
      }
    }
    const r = CH.stringify(e);
    const n = this.role === "audience" || this.id > 10000000 ? `${this.scheme}://${this.host}/api/v2/audience/${this.code}/play?${r}` : `${this.scheme}://${this.host}/api/v2/rooms/${this.code}/play?${r}`;
    return new Promise((i, s) => {
      let o = false;
      let f = false;
      let c = d => {
        i(d);
        o = true;
      };
      let p = d => {
        s(d);
        o = true;
      };
      this.conn = new Pb(n, "ecast-v0");
      this.conn.onmessage = d => {
        this.debugLog(`recv <- ${JSON.stringify(JSON.parse(d.data), null, 2)}`);
        const E = VH(d);
        if (E instanceof MH) {
          this.onReply(E);
        } else if (E instanceof Ub) {
          if (E.result instanceof IH) {
            f = true;
            this.id = E.result.id;
            this.deviceId = E.result.deviceId;
            this.entities = E.result.entities;
            this.secret = E.result.secret;
            if (E.result.name) {
              this.name = E.result.name;
            }
            c(E.result);
          } else if (!o) {
            p(E.result);
            return;
          }
          this.onNotification(E);
        } else {
          console.error(`failed to parse response messsage: ${E}`);
        }
      };
      this.conn.onerror = d => {
        if (o) {
          this.emit("socketError", d);
        } else {
          p(d);
        }
      };
      this.conn.onclose = d => {
        this.debugLog("onclose", d.code);
        if (f && d.code === 1006) {
          this.reconnect();
        } else {
          this.emit("socketClose", d);
        }
      };
      this.conn.onopen = d => {
        this.emit("socketOpen", d);
      };
    });
  }
  sleep(e) {
    return new Promise(r => setTimeout(r, e));
  }
  debugLog(...e) {
    if (this.debug) {
      console.log(`%c[WSClient:${this.name}]`, "background-color:blue;color:white;", ...e);
    }
  }
  async reconnect() {
    this.disconnect();
    this.debugLog("Attempting to reconnect");
    let e = 1;
    let r = FH;
    while (true) {
      try {
        this.emit("connection", {
          status: "connecting",
          attempt: e
        });
        await this.connect();
        this.debugLog("reconnected");
        this.emit("connection", {
          status: "connected"
        });
        return;
      } catch (n) {
        this.debugLog("reconnect error", n);
        if (n.code === 1005 || n.code === 1000) {
          this.debugLog("unable to reconnect!", n);
          this.emit("socketClose", n);
          return;
        }
        if (r >= Db) {
          this.debugLog("reconnect failed!", n);
          this.emit("socketClose", n);
          return;
        }
        e += 1;
        this.debugLog("waiting", r);
        this.emit("connection", {
          status: "waiting",
          attempt: e
        });
        await this.sleep(r);
        r = Math.min(Db, r * 2);
      }
    }
  }
  disconnect() {
    if (this.conn) {
      this.conn.close();
      this.conn.onmessage = null;
      this.conn.onerror = null;
      this.conn.onopen = null;
      this.conn.onclose = null;
      this.conn = null;
    }
  }
  onReply(e) {
    const r = e.re;
    const n = this.pending[r];
    if (!n) {
      const i = new Ub(e);
      i.re = r;
      this.emit("notification", i);
      return;
    }
    delete this.pending[r];
    if (e.result instanceof OH) {
      n.reject(e.result);
    } else {
      n.resolve(e.result);
    }
  }
  onNotification(e) {
    if (typeof e.result.whenReceived == "function") {
      e.result.whenReceived(this);
    }
    this.emit("notification", e);
    this.emit(e.opcode, e.result);
  }
  send(e, r = {}) {
    if (!this.conn) {
      throw new Error("No connection available");
    }
    if (this.conn.readyState !== Pb.OPEN) {
      throw new Error(`Socket not ready to send, readyState is ${this.conn.readyState}`);
    }
    const n = ++this.seq;
    const i = new $H({
      seq: n,
      opcode: e,
      params: r
    });
    const s = new Promise((f, c) => {
      this.pending[n] = {
        resolve: f,
        reject: c,
        request: i
      };
    });
    const o = JSON.stringify(i);
    this.debugLog(`send -> ${o}`);
    this.conn.send(o);
    return s;
  }
  lockRoom() {
    return this.send("room/lock");
  }
  startAudience() {
    return this.send("room/start-audience");
  }
  getAudience() {
    return this.send("room/get-audience");
  }
  mail(e, r) {
    return this.send("client/send", {
      from: this.id,
      to: e,
      body: r
    });
  }
  kick(e, r = false, n) {
    return this.send("client/kick", {
      id: e,
      ban: r,
      reason: n
    });
  }
  async drop(e) {
    const r = await this.send("drop", {
      key: e
    });
    delete this.entities[e];
    return r;
  }
  echo(e) {
    return this.send("echo", {
      message: e
    });
  }
  async lock(e) {
    const r = await this.send("lock", {
      key: e
    });
    this.entities[e].meta.locked = true;
    return r;
  }
  async createNumber(e, r = {}) {
    let n = {
      key: e
    };
    const {
      val: i = 0,
      acl: s,
      min: o,
      max: f,
      increment: c,
      type: p
    } = r;
    n.val = i;
    if (s) {
      n.acl = s;
    }
    if (o != null) {
      n.min = o;
    }
    if (f != null) {
      n.max = f;
    }
    if (c) {
      n.increment = c;
    }
    if (p) {
      n.type = p;
    }
    const d = await this.send("number/create", n);
    this.entities[e] = new DH({
      key: e,
      val: i,
      restrictions: {
        min: o,
        max: f,
        increment: c,
        type: p
      },
      meta: {
        locked: false
      }
    });
    return d;
  }
  async decrementNumber(e) {
    const r = await this.send("number/decrement", {
      key: e
    });
    this.entities[e].val = r.val;
    return r;
  }
  async getNumber(e) {
    const r = await this.send("number/get", {
      key: e
    });
    if (this.entities[e]) {
      this.entities[e].val = r.val;
      this.entities[e].restrictions = r.restrictions;
    } else {
      this.entities[e] = r;
    }
    return r;
  }
  async incrementNumber(e) {
    const r = await this.send("number/increment", {
      key: e
    });
    this.entities[e].val = r.val;
    return r;
  }
  async updateNumber(e, r) {
    const n = await this.send("number/update", {
      key: e,
      val: r
    });
    this.entities[e].val = r;
    return n;
  }
  async createObject(e, r, n) {
    const i = {
      key: e,
      val: r
    };
    if (n) {
      i.acl = n;
    }
    const s = await this.send("object/create", i);
    this.entities[e] = new Dd({
      key: e,
      val: r,
      meta: {
        locked: false
      }
    });
    return s;
  }
  echoObject(e) {
    return this.send("object/echo", {
      message: e
    });
  }
  async getObject(e) {
    const r = await this.send("object/get", {
      key: e
    });
    if (this.entities[e]) {
      this.entities[e].val = r.val;
      this.entities[e].version = r.version;
      this.entities[e].from = r.from;
    } else {
      this.entities[e] = r;
    }
    return r;
  }
  async setObject(e, r, n) {
    const i = {
      key: e,
      val: r
    };
    if (n) {
      i.acl = n;
    }
    const s = await this.send("object/set", i);
    this.entities[e] = new Dd({
      key: e,
      val: r,
      meta: {
        locked: false
      }
    });
    return s;
  }
  async updateObject(e, r) {
    const n = await this.send("object/update", {
      key: e,
      val: r
    });
    this.entities[e] = new Dd({
      key: e,
      val: r,
      meta: {
        locked: false
      }
    });
    return n;
  }
  echoText(e) {
    return this.send("text/echo", {
      message: e
    });
  }
  getText(e) {
    return this.send("text/get", {
      key: e
    });
  }
  async createText(e, r, n) {
    const i = {
      key: e,
      val: r
    };
    const {
      acl: s,
      accept: o,
      reject: f
    } = n;
    if (s) {
      i.acl = s;
    }
    if (o) {
      i.accept = o;
    }
    if (f) {
      i.reject = f;
    }
    const c = await this.send("text/create", i);
    this.entities[e] = new Bd({
      key: e,
      text: r,
      meta: {
        locked: false
      }
    });
    return c;
  }
  async setText(e, r, n) {
    const i = {
      key: e,
      val: r
    };
    if (n) {
      i.acl = n;
    }
    const s = await this.send("text/set", i);
    this.entities[e] = new Bd({
      key: e,
      text: r,
      meta: {
        locked: false
      }
    });
    return s;
  }
  async updateText(e, r) {
    const n = await this.send("text/update", {
      key: e,
      val: r
    });
    this.entities[e] = new Bd({
      key: e,
      text: r,
      meta: {
        locked: false
      }
    });
    return n;
  }
  async createTextMap(e, r = {}) {
    const {
      val: n,
      notifyHost: i,
      acl: s,
      accept: o,
      reject: f
    } = r;
    let c = {
      key: e
    };
    if (n) {
      c.val = r.val;
    }
    if (i) {
      c.notifyHost = r.notifyHost;
    }
    if (s) {
      c.acl = s;
    }
    if (o) {
      c.accept = o;
    }
    if (f) {
      c.reject = f;
    }
    const p = await this.send("text-map/create", c);
    this.entities[e] = new kH({
      key: e,
      acl: s,
      meta: {
        locked: false
      }
    });
    return p;
  }
  async syncTextMap(e, r) {
    return await this.send("text-map/sync", {
      key: e,
      msg: r
    });
  }
  async getTextMap(e, r) {
    const {
      includeNodes: n
    } = r;
    return await this.send("text-map/get", {
      key: e,
      includeNodes: n
    });
  }
  async createDoodle(e, r) {
    let n = {
      key: e
    };
    const {
      acl: i,
      colors: s,
      live: o,
      maxLayer: f,
      maxPoints: c,
      size: p,
      weights: d
    } = r;
    if (i) {
      n.acl = i;
    }
    if (s) {
      n.colors = s;
    }
    n.live = o;
    if (f != null) {
      n.maxLayer = f;
    }
    if (c != null) {
      n.maxPoints = c;
    }
    if (p) {
      n.size = p;
    }
    if (d) {
      n.weights = d;
    }
    const E = await this.send("doodle/create", n);
    this.entities[e] = new PH({
      key: e,
      colors: s,
      lines: [],
      live: o,
      maxLayer: n.maxLayer || 0,
      maxPoints: n.maxPoints || 0,
      size: p,
      weights: d,
      meta: {
        locked: false
      }
    });
    return E;
  }
  async getDoodle(e) {
    const r = await this.send("doodle/get", {
      key: e
    });
    if (this.entities[e]) {
      this.entities[e].lines = r.lines;
    } else {
      this.entities[e] = r;
    }
    return r;
  }
  async strokeDoodle(e, r) {
    const {
      color: n,
      weight: i,
      layer: s,
      points: o,
      brush: f
    } = r;
    const c = {
      color: n,
      weight: i,
      layer: s,
      points: o
    };
    if (f) {
      c.brush = f;
    }
    const p = await this.send("doodle/stroke", {
      key: e,
      ...c
    });
    this.entities[e].lines.push(c);
    return p;
  }
  async undoDoodle(e) {
    const r = await this.send("doodle/undo", {
      key: e
    });
    this.entities[e].lines.pop();
    return r;
  }
  async createStack(e, r) {
    const n = {
      key: e
    };
    if (r) {
      n.acl = r;
    }
    const i = await this.send("stack/create", n);
    this.entities[e] = new KH({
      key: e,
      size: 0,
      meta: {
        locked: false
      }
    });
    return i;
  }
  pushStack(e, r) {
    return this.send("stack/push", {
      key: e,
      val: r
    });
  }
  bulkPushStack(e, r) {
    return this.send("stack/bulkpush", {
      key: e,
      vals: r
    });
  }
  peekStack(e, r) {
    return this.send("stack/peek", {
      key: e,
      size: r
    });
  }
  popStack(e) {
    return this.send("stack/pop", {
      key: e
    });
  }
  async createCountGroup(e, r) {
    const n = await this.send("audience/count-group/create", {
      name: e,
      options: r
    });
    this.entities[e] = new NH({
      key: e,
      choices: r,
      meta: {
        locked: false
      }
    });
    return n;
  }
  incrementCountGroupCounter(e, r, n = 1) {
    return this.send("audience/count-group/increment", {
      name: e,
      vote: r,
      times: n
    });
  }
  getCountGroup(e) {
    return this.send("audience/count-group/get", {
      name: e
    });
  }
  async createGCounter(e, r) {
    const n = await this.send("audience/g-counter/create", {
      key: e,
      count: r
    });
    this.entities[e] = new UH({
      key: e,
      count: r,
      meta: {
        locked: false
      }
    });
    return n;
  }
  incrementGCounter(e, r) {
    return this.send("audience/g-counter/increment", {
      key: e,
      times: r
    });
  }
  getGCounter(e) {
    return this.send("audience/g-counter/get", {
      key: e
    });
  }
  async createPNCounter(e, r) {
    const n = await this.send("audience/pn-counter/create", {
      key: e,
      count: r
    });
    this.entities[e] = new BH({
      key: e,
      count: r,
      meta: {
        locked: false
      }
    });
    return n;
  }
  incrementPNCounter(e, r) {
    return this.send("audience/pn-counter/increment", {
      key: e,
      times: r
    });
  }
  decrementPNCounter(e, r) {
    return this.send("audience/pn-counter/decrement", {
      key: e,
      times: r
    });
  }
  getPNCounter(e) {
    return this.send("audience/pn-counter/get", {
      key: e
    });
  }
  async createTextRing(e, r) {
    const n = {
      key: e
    };
    const {
      limit: i,
      accept: s,
      reject: o
    } = r;
    if (i) {
      n.limit = i;
    }
    if (s) {
      n.accept = s;
    }
    if (o) {
      n.reject = o;
    }
    const f = await this.send("audience/text-ring/create", n);
    this.entities[e] = new GH({
      key: e,
      elements: [],
      limit: i,
      meta: {
        locked: false
      }
    });
    return f;
  }
  getTextRing(e) {
    return this.send("audience/text-ring/get", {
      name: e
    });
  }
  pushTextRing(e, r) {
    return this.send("audience/text-ring/push", {
      name: e,
      text: r
    });
  }
};
var WH = {
  WSClient: HH
};
const {
  APIClient: XH
} = t7;
const {
  WSClient: jH
} = WH;
const {
  CreateRoomReply: zH,
  GetRoomReply: qH
} = Ic;
const {
  ClientWelcome: YH,
  ClientDisconnected: JH
} = R0;
const {
  ArtifactEntity: ZH
} = MA;
const {
  GCounter: QH
} = A0;
const {
  NumberEntity: eW
} = L0;
const {
  TextEntity: tW
} = O0;
const {
  DoodleEntity: rW
} = y0;
const {
  ObjectEntity: nW
} = C0;
const {
  CountGroup: iW
} = S0;
const {
  DropEntity: sW
} = $A;
const {
  OK: aW
} = KA;
const {
  RoomExit: oW
} = Ic;
const {
  TextRing: lW
} = N0;
const {
  TextMapEntity: uW
} = I0;
const {
  PNCounter: fW
} = w0;
var cW = {
  APIClient: XH,
  WSClient: jH,
  ClientWelcome: YH,
  CreateRoomReply: zH,
  DropEntity: sW,
  GetRoomReply: qH,
  ClientDisconnected: JH,
  RoomExit: oW,
  OK: aW,
  ArtifactEntity: ZH,
  DoodleEntity: rW,
  NumberEntity: eW,
  CountGroup: iW,
  GCounter: QH,
  ObjectEntity: nW,
  PNCounter: fW,
  TextEntity: tW,
  TextRing: lW,
  TextMapEntity: uW
};
function pW(t) {
  throw new Error("Could not dynamically require \"" + t + "\". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.");
}
var Bb = {
  exports: {}
};
(function (t, e) {
  (function (r, n) {
    n(e);
  })(Nt, function (r) {
    var n = typeof window !== "undefined" ? window : typeof Nt !== "undefined" ? Nt : typeof self !== "undefined" ? self : {};
    function i($, J) {
      J = J.split(":")[0];
      $ = +$;
      if (!$) {
        return false;
      }
      switch (J) {
        case "http":
        case "ws":
          return $ !== 80;
        case "https":
        case "wss":
          return $ !== 443;
        case "ftp":
          return $ !== 21;
        case "gopher":
          return $ !== 70;
        case "file":
          return false;
      }
      return $ !== 0;
    }
    var s = Object.prototype.hasOwnProperty;
    var o;
    function f(G) {
      try {
        return decodeURIComponent(G.replace(/\+/g, " "));
      } catch {
        return null;
      }
    }
    function c(G) {
      try {
        return encodeURIComponent(G);
      } catch {
        return null;
      }
    }
    function p(G) {
      for (var $ = /([^=?#&]+)=?([^&]*)/g, J = {}, K; K = $.exec(G);) {
        var Z = f(K[1]);
        var ue = f(K[2]);
        if (Z !== null && ue !== null && !(Z in J)) {
          J[Z] = ue;
        }
      }
      return J;
    }
    function d(G, $) {
      $ = $ || "";
      var J = [];
      var K;
      var Z;
      if (typeof $ != "string") {
        $ = "?";
      }
      for (Z in G) {
        if (s.call(G, Z)) {
          K = G[Z];
          if (!K && (K === null || K === o || isNaN(K))) {
            K = "";
          }
          Z = c(Z);
          K = c(K);
          if (Z === null || K === null) {
            continue;
          }
          J.push(Z + "=" + K);
        }
      }
      if (J.length) {
        return $ + J.join("&");
      } else {
        return "";
      }
    }
    var E = d;
    var m = p;
    var g = {
      stringify: E,
      parse: m
    };
    var T = /[\n\r\t]/g;
    var b = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//;
    var x = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\\/]+)?([\S\s]*)/i;
    var A = /^[a-zA-Z]:/;
    var R = /^[\x00-\x20\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/;
    function v(G) {
      return (G || "").toString().replace(R, "");
    }
    var y = [["#", "hash"], ["?", "query"], function ($, J) {
      if (M(J.protocol)) {
        return $.replace(/\\/g, "/");
      } else {
        return $;
      }
    }, ["/", "pathname"], ["@", "auth", 1], [NaN, "host", undefined, 1, 1], [/:(\d*)$/, "port", undefined, 1], [NaN, "hostname", undefined, 1, 1]];
    var U = {
      hash: 1,
      query: 1
    };
    function P(G) {
      var $;
      if (typeof window !== "undefined") {
        $ = window;
      } else if (typeof n !== "undefined") {
        $ = n;
      } else if (typeof self !== "undefined") {
        $ = self;
      } else {
        $ = {};
      }
      var J = $.location || {};
      G = G || J;
      var K = {};
      var Z = typeof G;
      var ue;
      if (G.protocol === "blob:") {
        K = new ae(unescape(G.pathname), {});
      } else if (Z === "string") {
        K = new ae(G, {});
        for (ue in U) {
          delete K[ue];
        }
      } else if (Z === "object") {
        for (ue in G) {
          if (!(ue in U)) {
            K[ue] = G[ue];
          }
        }
        if (K.slashes === undefined) {
          K.slashes = b.test(G.href);
        }
      }
      return K;
    }
    function M(G) {
      return G === "file:" || G === "ftp:" || G === "http:" || G === "https:" || G === "ws:" || G === "wss:";
    }
    function X(G, $) {
      G = v(G);
      G = G.replace(T, "");
      $ = $ || {};
      var J = x.exec(G);
      var K = J[1] ? J[1].toLowerCase() : "";
      var Z = !!J[2];
      var ue = !!J[3];
      var Ae = 0;
      var Se;
      if (Z) {
        if (ue) {
          Se = J[2] + J[3] + J[4];
          Ae = J[2].length + J[3].length;
        } else {
          Se = J[2] + J[4];
          Ae = J[2].length;
        }
      } else if (ue) {
        Se = J[3] + J[4];
        Ae = J[3].length;
      } else {
        Se = J[4];
      }
      if (K === "file:") {
        if (Ae >= 2) {
          Se = Se.slice(2);
        }
      } else if (M(K)) {
        Se = J[4];
      } else if (K) {
        if (Z) {
          Se = Se.slice(2);
        }
      } else if (Ae >= 2 && M($.protocol)) {
        Se = J[4];
      }
      return {
        protocol: K,
        slashes: Z || M(K),
        slashesCount: Ae,
        rest: Se
      };
    }
    function N(G, $) {
      if (G === "") {
        return $;
      }
      var J = ($ || "/").split("/").slice(0, -1).concat(G.split("/"));
      for (var K = J.length, Z = J[K - 1], ue = false, Ae = 0; K--;) {
        if (J[K] === ".") {
          J.splice(K, 1);
        } else if (J[K] === "..") {
          J.splice(K, 1);
          Ae++;
        } else if (Ae) {
          if (K === 0) {
            ue = true;
          }
          J.splice(K, 1);
          Ae--;
        }
      }
      if (ue) {
        J.unshift("");
      }
      if (Z === "." || Z === "..") {
        J.push("");
      }
      return J.join("/");
    }
    function ae(G, $, J) {
      G = v(G);
      G = G.replace(T, "");
      if (!(this instanceof ae)) {
        return new ae(G, $, J);
      }
      var K;
      var Z;
      var ue;
      var Ae;
      var Se;
      var Me;
      var At = y.slice();
      var cr = typeof $;
      var ke = this;
      var ia = 0;
      if (cr !== "object" && cr !== "string") {
        J = $;
        $ = null;
      }
      if (J && typeof J != "function") {
        J = g.parse;
      }
      $ = P($);
      Z = X(G || "", $);
      K = !Z.protocol && !Z.slashes;
      ke.slashes = Z.slashes || K && $.slashes;
      ke.protocol = Z.protocol || $.protocol || "";
      G = Z.rest;
      if (Z.protocol === "file:" && (Z.slashesCount !== 2 || A.test(G)) || !Z.slashes && (Z.protocol || Z.slashesCount < 2 || !M(ke.protocol))) {
        At[3] = [/(.*)/, "pathname"];
      }
      for (; ia < At.length; ia++) {
        Ae = At[ia];
        if (typeof Ae == "function") {
          G = Ae(G, ke);
          continue;
        }
        ue = Ae[0];
        Me = Ae[1];
        if (ue !== ue) {
          ke[Me] = G;
        } else if (typeof ue == "string") {
          Se = ue === "@" ? G.lastIndexOf(ue) : G.indexOf(ue);
          if (~Se) {
            if (typeof Ae[2] == "number") {
              ke[Me] = G.slice(0, Se);
              G = G.slice(Se + Ae[2]);
            } else {
              ke[Me] = G.slice(Se);
              G = G.slice(0, Se);
            }
          }
        } else if (Se = ue.exec(G)) {
          ke[Me] = Se[1];
          G = G.slice(0, Se.index);
        }
        ke[Me] = ke[Me] || K && Ae[3] && $[Me] || "";
        if (Ae[4]) {
          ke[Me] = ke[Me].toLowerCase();
        }
      }
      if (J) {
        ke.query = J(ke.query);
      }
      if (K && $.slashes && ke.pathname.charAt(0) !== "/" && (ke.pathname !== "" || $.pathname !== "")) {
        ke.pathname = N(ke.pathname, $.pathname);
      }
      if (ke.pathname.charAt(0) !== "/" && M(ke.protocol)) {
        ke.pathname = "/" + ke.pathname;
      }
      if (!i(ke.port, ke.protocol)) {
        ke.host = ke.hostname;
        ke.port = "";
      }
      ke.username = ke.password = "";
      if (ke.auth) {
        Se = ke.auth.indexOf(":");
        if (~Se) {
          ke.username = ke.auth.slice(0, Se);
          ke.username = encodeURIComponent(decodeURIComponent(ke.username));
          ke.password = ke.auth.slice(Se + 1);
          ke.password = encodeURIComponent(decodeURIComponent(ke.password));
        } else {
          ke.username = encodeURIComponent(decodeURIComponent(ke.auth));
        }
        ke.auth = ke.password ? ke.username + ":" + ke.password : ke.username;
      }
      ke.origin = ke.protocol !== "file:" && M(ke.protocol) && ke.host ? ke.protocol + "//" + ke.host : "null";
      ke.href = ke.toString();
    }
    function Q(G, $, J) {
      var K = this;
      switch (G) {
        case "query":
          if (typeof $ == "string" && $.length) {
            $ = (J || g.parse)($);
          }
          K[G] = $;
          break;
        case "port":
          K[G] = $;
          if (i($, K.protocol)) {
            if ($) {
              K.host = K.hostname + ":" + $;
            }
          } else {
            K.host = K.hostname;
            K[G] = "";
          }
          break;
        case "hostname":
          K[G] = $;
          if (K.port) {
            $ += ":" + K.port;
          }
          K.host = $;
          break;
        case "host":
          K[G] = $;
          if (/:\d+$/.test($)) {
            $ = $.split(":");
            K.port = $.pop();
            K.hostname = $.join(":");
          } else {
            K.hostname = $;
            K.port = "";
          }
          break;
        case "protocol":
          K.protocol = $.toLowerCase();
          K.slashes = !J;
          break;
        case "pathname":
        case "hash":
          if ($) {
            var Z = G === "pathname" ? "/" : "#";
            K[G] = $.charAt(0) !== Z ? Z + $ : $;
          } else {
            K[G] = $;
          }
          break;
        case "username":
        case "password":
          K[G] = encodeURIComponent($);
          break;
        case "auth":
          var ue = $.indexOf(":");
          if (~ue) {
            K.username = $.slice(0, ue);
            K.username = encodeURIComponent(decodeURIComponent(K.username));
            K.password = $.slice(ue + 1);
            K.password = encodeURIComponent(decodeURIComponent(K.password));
          } else {
            K.username = encodeURIComponent(decodeURIComponent($));
          }
      }
      for (var Ae = 0; Ae < y.length; Ae++) {
        var Se = y[Ae];
        if (Se[4]) {
          K[Se[1]] = K[Se[1]].toLowerCase();
        }
      }
      K.auth = K.password ? K.username + ":" + K.password : K.username;
      K.origin = K.protocol !== "file:" && M(K.protocol) && K.host ? K.protocol + "//" + K.host : "null";
      K.href = K.toString();
      return K;
    }
    function V(G) {
      if (!G || typeof G != "function") {
        G = g.stringify;
      }
      var $;
      var J = this;
      var K = J.host;
      var Z = J.protocol;
      if (Z && Z.charAt(Z.length - 1) !== ":") {
        Z += ":";
      }
      var ue = Z + (J.protocol && J.slashes || M(J.protocol) ? "//" : "");
      if (J.username) {
        ue += J.username;
        if (J.password) {
          ue += ":" + J.password;
        }
        ue += "@";
      } else if (J.password) {
        ue += ":" + J.password;
        ue += "@";
      } else if (J.protocol !== "file:" && M(J.protocol) && !K && J.pathname !== "/") {
        ue += "@";
      }
      if (K[K.length - 1] === ":") {
        K += ":";
      }
      ue += K + J.pathname;
      $ = typeof J.query == "object" ? G(J.query) : J.query;
      if ($) {
        ue += $.charAt(0) !== "?" ? "?" + $ : $;
      }
      if (J.hash) {
        ue += J.hash;
      }
      return ue;
    }
    ae.prototype = {
      set: Q,
      toString: V
    };
    ae.extractProtocol = X;
    ae.location = P;
    ae.trimLeft = v;
    ae.qs = g;
    var Y = ae;
    function k(G, $) {
      setTimeout(function (J) {
        return G.call(J);
      }, 4, $);
    }
    function w(G, $) {
      if (typeof process !== "undefined") {
        console[G].call(null, $);
      }
    }
    function j(G = [], $) {
      var J = [];
      G.forEach(function (K) {
        if (!$(K)) {
          J.push(K);
        }
      });
      return J;
    }
    function W(G = [], $) {
      var J = [];
      G.forEach(function (K) {
        if ($(K)) {
          J.push(K);
        }
      });
      return J;
    }
    function te() {
      this.listeners = {};
    }
    te.prototype.addEventListener = function ($, J) {
      if (typeof J == "function") {
        if (!Array.isArray(this.listeners[$])) {
          this.listeners[$] = [];
        }
        if (W(this.listeners[$], function (K) {
          return K === J;
        }).length === 0) {
          this.listeners[$].push(J);
        }
      }
    };
    te.prototype.removeEventListener = function ($, J) {
      var K = this.listeners[$];
      this.listeners[$] = j(K, function (Z) {
        return Z === J;
      });
    };
    te.prototype.dispatchEvent = function ($) {
      var J = this;
      var K = [];
      for (var Z = arguments.length - 1; Z-- > 0;) {
        K[Z] = arguments[Z + 1];
      }
      var ue = $.type;
      var Ae = this.listeners[ue];
      if (Array.isArray(Ae)) {
        Ae.forEach(function (Se) {
          if (K.length > 0) {
            Se.apply(J, K);
          } else {
            Se.call(J, $);
          }
        });
        return true;
      } else {
        return false;
      }
    };
    function ie(G) {
      var $ = G.indexOf("?");
      if ($ >= 0) {
        return G.slice(0, $);
      } else {
        return G;
      }
    }
    function _e() {
      this.urlMap = {};
    }
    _e.prototype.attachWebSocket = function ($, J) {
      var K = ie(J);
      var Z = this.urlMap[K];
      if (Z && Z.server && Z.websockets.indexOf($) === -1) {
        Z.websockets.push($);
        return Z.server;
      }
    };
    _e.prototype.addMembershipToRoom = function ($, J) {
      var K = this.urlMap[ie($.url)];
      if (K && K.server && K.websockets.indexOf($) !== -1) {
        K.roomMemberships[J] ||= [];
        K.roomMemberships[J].push($);
      }
    };
    _e.prototype.attachServer = function ($, J) {
      var K = ie(J);
      var Z = this.urlMap[K];
      if (!Z) {
        this.urlMap[K] = {
          server: $,
          websockets: [],
          roomMemberships: {}
        };
        return $;
      }
    };
    _e.prototype.serverLookup = function ($) {
      var J = ie($);
      var K = this.urlMap[J];
      if (K) {
        return K.server;
      }
    };
    _e.prototype.websocketsLookup = function ($, J, K) {
      var Z = ie($);
      var ue;
      var Ae = this.urlMap[Z];
      ue = Ae ? Ae.websockets : [];
      if (J) {
        var Se = Ae.roomMemberships[J];
        ue = Se || [];
      }
      if (K) {
        return ue.filter(function (Me) {
          return Me !== K;
        });
      } else {
        return ue;
      }
    };
    _e.prototype.removeServer = function ($) {
      delete this.urlMap[ie($)];
    };
    _e.prototype.removeWebSocket = function ($, J) {
      var K = ie(J);
      var Z = this.urlMap[K];
      if (Z) {
        Z.websockets = j(Z.websockets, function (ue) {
          return ue === $;
        });
      }
    };
    _e.prototype.removeMembershipFromRoom = function ($, J) {
      var K = this.urlMap[ie($.url)];
      var Z = K.roomMemberships[J];
      if (K && Z !== null) {
        K.roomMemberships[J] = j(Z, function (ue) {
          return ue === $;
        });
      }
    };
    var ye = new _e();
    var Be = {
      CLOSE_NORMAL: 1000,
      CLOSE_GOING_AWAY: 1001,
      CLOSE_PROTOCOL_ERROR: 1002,
      CLOSE_UNSUPPORTED: 1003,
      CLOSE_NO_STATUS: 1005,
      CLOSE_ABNORMAL: 1006,
      UNSUPPORTED_DATA: 1007,
      POLICY_VIOLATION: 1008,
      CLOSE_TOO_LARGE: 1009,
      MISSING_EXTENSION: 1010,
      INTERNAL_ERROR: 1011,
      SERVICE_RESTART: 1012,
      TRY_AGAIN_LATER: 1013,
      TLS_HANDSHAKE: 1015
    };
    var Le = {
      CONSTRUCTOR_ERROR: "Failed to construct 'WebSocket':",
      CLOSE_ERROR: "Failed to execute 'close' on 'WebSocket':",
      EVENT: {
        CONSTRUCT: "Failed to construct 'Event':",
        MESSAGE: "Failed to construct 'MessageEvent':",
        CLOSE: "Failed to construct 'CloseEvent':"
      }
    };
    function Ge() {}
    Ge.prototype.stopPropagation = function () {};
    Ge.prototype.stopImmediatePropagation = function () {};
    Ge.prototype.initEvent = function ($ = "undefined", J = false, K = false) {
      this.type = "" + $;
      this.bubbles = !!J;
      this.cancelable = !!K;
    };
    var Rt = function (G) {
      function $(J, K = {}) {
        G.call(this);
        if (!J) {
          throw new TypeError(Le.EVENT_ERROR + " 1 argument required, but only 0 present.");
        }
        if (typeof K != "object") {
          throw new TypeError(Le.EVENT_ERROR + " parameter 2 ('eventInitDict') is not an object.");
        }
        var Z = K.bubbles;
        var ue = K.cancelable;
        this.type = "" + J;
        this.timeStamp = Date.now();
        this.target = null;
        this.srcElement = null;
        this.returnValue = true;
        this.isTrusted = false;
        this.eventPhase = 0;
        this.defaultPrevented = false;
        this.currentTarget = null;
        this.cancelable = ue ? !!ue : false;
        this.cancelBubble = false;
        this.bubbles = Z ? !!Z : false;
      }
      if (G) {
        $.__proto__ = G;
      }
      $.prototype = Object.create(G && G.prototype);
      $.prototype.constructor = $;
      return $;
    }(Ge);
    var je = function (G) {
      function $(J, K = {}) {
        G.call(this);
        if (!J) {
          throw new TypeError(Le.EVENT.MESSAGE + " 1 argument required, but only 0 present.");
        }
        if (typeof K != "object") {
          throw new TypeError(Le.EVENT.MESSAGE + " parameter 2 ('eventInitDict') is not an object");
        }
        var Z = K.bubbles;
        var ue = K.cancelable;
        var Ae = K.data;
        var Se = K.origin;
        var Me = K.lastEventId;
        var At = K.ports;
        this.type = "" + J;
        this.timeStamp = Date.now();
        this.target = null;
        this.srcElement = null;
        this.returnValue = true;
        this.isTrusted = false;
        this.eventPhase = 0;
        this.defaultPrevented = false;
        this.currentTarget = null;
        this.cancelable = ue ? !!ue : false;
        this.canncelBubble = false;
        this.bubbles = Z ? !!Z : false;
        this.origin = "" + Se;
        this.ports = typeof At === "undefined" ? null : At;
        this.data = typeof Ae === "undefined" ? null : Ae;
        this.lastEventId = "" + (Me || "");
      }
      if (G) {
        $.__proto__ = G;
      }
      $.prototype = Object.create(G && G.prototype);
      $.prototype.constructor = $;
      return $;
    }(Ge);
    var Et = function (G) {
      function $(J, K = {}) {
        G.call(this);
        if (!J) {
          throw new TypeError(Le.EVENT.CLOSE + " 1 argument required, but only 0 present.");
        }
        if (typeof K != "object") {
          throw new TypeError(Le.EVENT.CLOSE + " parameter 2 ('eventInitDict') is not an object");
        }
        var Z = K.bubbles;
        var ue = K.cancelable;
        var Ae = K.code;
        var Se = K.reason;
        var Me = K.wasClean;
        this.type = "" + J;
        this.timeStamp = Date.now();
        this.target = null;
        this.srcElement = null;
        this.returnValue = true;
        this.isTrusted = false;
        this.eventPhase = 0;
        this.defaultPrevented = false;
        this.currentTarget = null;
        this.cancelable = ue ? !!ue : false;
        this.cancelBubble = false;
        this.bubbles = Z ? !!Z : false;
        this.code = typeof Ae == "number" ? parseInt(Ae, 10) : 0;
        this.reason = "" + (Se || "");
        this.wasClean = Me ? !!Me : false;
      }
      if (G) {
        $.__proto__ = G;
      }
      $.prototype = Object.create(G && G.prototype);
      $.prototype.constructor = $;
      return $;
    }(Ge);
    function Ve(G) {
      var $ = G.type;
      var J = G.target;
      var K = new Rt($);
      if (J) {
        K.target = J;
        K.srcElement = J;
        K.currentTarget = J;
      }
      return K;
    }
    function ot(G) {
      var $ = G.type;
      var J = G.origin;
      var K = G.data;
      var Z = G.target;
      var ue = new je($, {
        data: K,
        origin: J
      });
      if (Z) {
        ue.target = Z;
        ue.srcElement = Z;
        ue.currentTarget = Z;
      }
      return ue;
    }
    function ft(G) {
      var $ = G.code;
      var J = G.reason;
      var K = G.type;
      var Z = G.target;
      var ue = G.wasClean;
      ue ||= $ === Be.CLOSE_NORMAL || $ === Be.CLOSE_NO_STATUS;
      var Ae = new Et(K, {
        code: $,
        reason: J,
        wasClean: ue
      });
      if (Z) {
        Ae.target = Z;
        Ae.srcElement = Z;
        Ae.currentTarget = Z;
      }
      return Ae;
    }
    function Ut(G, $, J) {
      G.readyState = Te.CLOSING;
      var K = ye.serverLookup(G.url);
      var Z = ft({
        type: "close",
        target: G.target,
        code: $,
        reason: J
      });
      k(function () {
        ye.removeWebSocket(G, G.url);
        G.readyState = Te.CLOSED;
        G.dispatchEvent(Z);
        if (K) {
          K.dispatchEvent(Z, K);
        }
      }, G);
    }
    function $t(G, $, J) {
      G.readyState = Te.CLOSING;
      var K = ye.serverLookup(G.url);
      var Z = ft({
        type: "close",
        target: G.target,
        code: $,
        reason: J,
        wasClean: false
      });
      var ue = Ve({
        type: "error",
        target: G.target
      });
      k(function () {
        ye.removeWebSocket(G, G.url);
        G.readyState = Te.CLOSED;
        G.dispatchEvent(ue);
        G.dispatchEvent(Z);
        if (K) {
          K.dispatchEvent(Z, K);
        }
      }, G);
    }
    function F(G) {
      if (Object.prototype.toString.call(G) !== "[object Blob]" && !(G instanceof ArrayBuffer)) {
        G = String(G);
      }
      return G;
    }
    var D = new WeakMap();
    function ne(G) {
      if (D.has(G)) {
        return D.get(G);
      }
      var $ = new Proxy(G, {
        get: function (K, Z) {
          if (Z === "close") {
            return function (Se = {}) {
              var Me = Se.code || Be.CLOSE_NORMAL;
              var At = Se.reason || "";
              Ut($, Me, At);
            };
          }
          if (Z === "send") {
            return function (Se) {
              Se = F(Se);
              G.dispatchEvent(ot({
                type: "message",
                data: Se,
                origin: this.url,
                target: G
              }));
            };
          }
          function ue(Ae) {
            if (Ae === "message") {
              return "server::" + Ae;
            } else {
              return Ae;
            }
          }
          if (Z === "on") {
            return function (Se, Me) {
              G.addEventListener(ue(Se), Me);
            };
          } else if (Z === "off") {
            return function (Se, Me) {
              G.removeEventListener(ue(Se), Me);
            };
          } else if (Z === "target") {
            return G;
          } else {
            return K[Z];
          }
        }
      });
      D.set(G, $);
      return $;
    }
    function he(G) {
      var $ = encodeURIComponent(G).match(/%[89ABab]/g);
      return G.length + ($ ? $.length : 0);
    }
    function pe(G) {
      var $ = new Y(G);
      var J = $.pathname;
      var K = $.protocol;
      var Z = $.hash;
      if (!G) {
        throw new TypeError(Le.CONSTRUCTOR_ERROR + " 1 argument required, but only 0 present.");
      }
      if (!J) {
        $.pathname = "/";
      }
      if (K === "") {
        throw new SyntaxError(Le.CONSTRUCTOR_ERROR + " The URL '" + $.toString() + "' is invalid.");
      }
      if (K !== "ws:" && K !== "wss:") {
        throw new SyntaxError(Le.CONSTRUCTOR_ERROR + " The URL's scheme must be either 'ws' or 'wss'. '" + K + "' is not allowed.");
      }
      if (Z !== "") {
        throw new SyntaxError(Le.CONSTRUCTOR_ERROR + " The URL contains a fragment identifier ('" + Z + "'). Fragment identifiers are not allowed in WebSocket URLs.");
      }
      return $.toString();
    }
    function xe(G = []) {
      if (!Array.isArray(G) && typeof G != "string") {
        throw new SyntaxError(Le.CONSTRUCTOR_ERROR + " The subprotocol '" + G.toString() + "' is invalid.");
      }
      if (typeof G == "string") {
        G = [G];
      }
      var $ = G.map(function (K) {
        return {
          count: 1,
          protocol: K
        };
      }).reduce(function (K, Z) {
        K[Z.protocol] = (K[Z.protocol] || 0) + Z.count;
        return K;
      }, {});
      var J = Object.keys($).filter(function (K) {
        return $[K] > 1;
      });
      if (J.length > 0) {
        throw new SyntaxError(Le.CONSTRUCTOR_ERROR + " The subprotocol '" + J[0] + "' is duplicated.");
      }
      return G;
    }
    var Te = function (G) {
      function $(K, Z) {
        G.call(this);
        this._onopen = null;
        this._onmessage = null;
        this._onerror = null;
        this._onclose = null;
        this.url = pe(K);
        Z = xe(Z);
        this.protocol = Z[0] || "";
        this.binaryType = "blob";
        this.readyState = $.CONNECTING;
        var ue = ne(this);
        var Ae = ye.attachWebSocket(ue, this.url);
        k(function () {
          if (this.readyState === $.CONNECTING) {
            if (Ae) {
              if (Ae.options.verifyClient && typeof Ae.options.verifyClient == "function" && !Ae.options.verifyClient()) {
                this.readyState = $.CLOSED;
                w("error", "WebSocket connection to '" + this.url + "' failed: HTTP Authentication failed; no valid credentials available");
                ye.removeWebSocket(ue, this.url);
                this.dispatchEvent(Ve({
                  type: "error",
                  target: this
                }));
                this.dispatchEvent(ft({
                  type: "close",
                  target: this,
                  code: Be.CLOSE_NORMAL
                }));
              } else {
                if (Ae.options.selectProtocol && typeof Ae.options.selectProtocol == "function") {
                  var Me = Ae.options.selectProtocol(Z);
                  var At = Me !== "";
                  var cr = Z.indexOf(Me) !== -1;
                  if (At && !cr) {
                    this.readyState = $.CLOSED;
                    w("error", "WebSocket connection to '" + this.url + "' failed: Invalid Sub-Protocol");
                    ye.removeWebSocket(ue, this.url);
                    this.dispatchEvent(Ve({
                      type: "error",
                      target: this
                    }));
                    this.dispatchEvent(ft({
                      type: "close",
                      target: this,
                      code: Be.CLOSE_NORMAL
                    }));
                    return;
                  }
                  this.protocol = Me;
                }
                this.readyState = $.OPEN;
                this.dispatchEvent(Ve({
                  type: "open",
                  target: this
                }));
                Ae.dispatchEvent(Ve({
                  type: "connection"
                }), ue);
              }
            } else {
              this.readyState = $.CLOSED;
              this.dispatchEvent(Ve({
                type: "error",
                target: this
              }));
              this.dispatchEvent(ft({
                type: "close",
                target: this,
                code: Be.CLOSE_NORMAL
              }));
              w("error", "WebSocket connection to '" + this.url + "' failed");
            }
          }
        }, this);
      }
      if (G) {
        $.__proto__ = G;
      }
      $.prototype = Object.create(G && G.prototype);
      $.prototype.constructor = $;
      var J = {
        onopen: {},
        onmessage: {},
        onclose: {},
        onerror: {}
      };
      J.onopen.get = function () {
        return this._onopen;
      };
      J.onmessage.get = function () {
        return this._onmessage;
      };
      J.onclose.get = function () {
        return this._onclose;
      };
      J.onerror.get = function () {
        return this._onerror;
      };
      J.onopen.set = function (K) {
        this.removeEventListener("open", this._onopen);
        this._onopen = K;
        this.addEventListener("open", K);
      };
      J.onmessage.set = function (K) {
        this.removeEventListener("message", this._onmessage);
        this._onmessage = K;
        this.addEventListener("message", K);
      };
      J.onclose.set = function (K) {
        this.removeEventListener("close", this._onclose);
        this._onclose = K;
        this.addEventListener("close", K);
      };
      J.onerror.set = function (K) {
        this.removeEventListener("error", this._onerror);
        this._onerror = K;
        this.addEventListener("error", K);
      };
      $.prototype.send = function (Z) {
        var ue = this;
        if (this.readyState === $.CONNECTING) {
          throw new Error("Failed to execute 'send' on 'WebSocket': Still in CONNECTING state");
        }
        var Ae = ot({
          type: "server::message",
          origin: this.url,
          data: F(Z)
        });
        var Se = ye.serverLookup(this.url);
        if (Se) {
          k(function () {
            ue.dispatchEvent(Ae, Z);
          }, Se);
        }
      };
      $.prototype.close = function (Z, ue) {
        if (Z !== undefined && (typeof Z != "number" || Z !== 1000 && (Z < 3000 || Z > 4999))) {
          throw new TypeError(Le.CLOSE_ERROR + " The code must be either 1000, or between 3000 and 4999. " + Z + " is neither.");
        }
        if (ue !== undefined) {
          var Ae = he(ue);
          if (Ae > 123) {
            throw new SyntaxError(Le.CLOSE_ERROR + " The message must not be greater than 123 bytes.");
          }
        }
        if (this.readyState !== $.CLOSING && this.readyState !== $.CLOSED) {
          var Se = ne(this);
          if (this.readyState === $.CONNECTING) {
            $t(Se, Z || Be.CLOSE_ABNORMAL, ue);
          } else {
            Ut(Se, Z || Be.CLOSE_NO_STATUS, ue);
          }
        }
      };
      Object.defineProperties($.prototype, J);
      return $;
    }(te);
    Te.CONNECTING = 0;
    Te.prototype.CONNECTING = Te.CONNECTING;
    Te.OPEN = 1;
    Te.prototype.OPEN = Te.OPEN;
    Te.CLOSING = 2;
    Te.prototype.CLOSING = Te.CLOSING;
    Te.CLOSED = 3;
    Te.prototype.CLOSED = Te.CLOSED;
    var O = function (G) {
      function $(K, Z) {
        var ue = this;
        if (K === undefined) {
          K = "socket.io";
        }
        if (Z === undefined) {
          Z = "";
        }
        G.call(this);
        this.binaryType = "blob";
        var Ae = new Y(K);
        Ae.pathname ||= "/";
        this.url = Ae.toString();
        this.readyState = $.CONNECTING;
        this.protocol = "";
        this.target = this;
        if (typeof Z == "string" || typeof Z == "object" && Z !== null) {
          this.protocol = Z;
        } else if (Array.isArray(Z) && Z.length > 0) {
          this.protocol = Z[0];
        }
        var Se = ye.attachWebSocket(this, this.url);
        k(function () {
          if (Se) {
            this.readyState = $.OPEN;
            Se.dispatchEvent(Ve({
              type: "connection"
            }), Se, this);
            Se.dispatchEvent(Ve({
              type: "connect"
            }), Se, this);
            this.dispatchEvent(Ve({
              type: "connect",
              target: this
            }));
          } else {
            this.readyState = $.CLOSED;
            this.dispatchEvent(Ve({
              type: "error",
              target: this
            }));
            this.dispatchEvent(ft({
              type: "close",
              target: this,
              code: Be.CLOSE_NORMAL
            }));
            w("error", "Socket.io connection to '" + this.url + "' failed");
          }
        }, this);
        this.addEventListener("close", function (Me) {
          ue.dispatchEvent(ft({
            type: "disconnect",
            target: Me.target,
            code: Me.code
          }));
        });
      }
      if (G) {
        $.__proto__ = G;
      }
      $.prototype = Object.create(G && G.prototype);
      $.prototype.constructor = $;
      var J = {
        broadcast: {}
      };
      $.prototype.close = function () {
        if (this.readyState === $.OPEN) {
          var Z = ye.serverLookup(this.url);
          ye.removeWebSocket(this, this.url);
          this.readyState = $.CLOSED;
          this.dispatchEvent(ft({
            type: "close",
            target: this,
            code: Be.CLOSE_NORMAL
          }));
          if (Z) {
            Z.dispatchEvent(ft({
              type: "disconnect",
              target: this,
              code: Be.CLOSE_NORMAL
            }), Z);
          }
          return this;
        }
      };
      $.prototype.disconnect = function () {
        return this.close();
      };
      $.prototype.emit = function (Z) {
        var ue = [];
        for (var Ae = arguments.length - 1; Ae-- > 0;) {
          ue[Ae] = arguments[Ae + 1];
        }
        if (this.readyState !== $.OPEN) {
          throw new Error("SocketIO is already in CLOSING or CLOSED state");
        }
        var Se = ot({
          type: Z,
          origin: this.url,
          data: ue
        });
        var Me = ye.serverLookup(this.url);
        if (Me) {
          Me.dispatchEvent.apply(Me, [Se].concat(ue));
        }
        return this;
      };
      $.prototype.send = function (Z) {
        this.emit("message", Z);
        return this;
      };
      J.broadcast.get = function () {
        if (this.readyState !== $.OPEN) {
          throw new Error("SocketIO is already in CLOSING or CLOSED state");
        }
        var K = this;
        var Z = ye.serverLookup(this.url);
        if (!Z) {
          throw new Error("SocketIO can not find a server at the specified URL (" + this.url + ")");
        }
        return {
          emit: function (Ae, Se) {
            Z.emit(Ae, Se, {
              websockets: ye.websocketsLookup(K.url, null, K)
            });
            return K;
          },
          to: function (Ae) {
            return Z.to(Ae, K);
          },
          in: function (Ae) {
            return Z.in(Ae, K);
          }
        };
      };
      $.prototype.on = function (Z, ue) {
        this.addEventListener(Z, ue);
        return this;
      };
      $.prototype.off = function (Z, ue) {
        this.removeEventListener(Z, ue);
      };
      $.prototype.hasListeners = function (Z) {
        var ue = this.listeners[Z];
        if (Array.isArray(ue)) {
          return !!ue.length;
        } else {
          return false;
        }
      };
      $.prototype.join = function (Z) {
        ye.addMembershipToRoom(this, Z);
      };
      $.prototype.leave = function (Z) {
        ye.removeMembershipFromRoom(this, Z);
      };
      $.prototype.to = function (Z) {
        return this.broadcast.to(Z);
      };
      $.prototype.in = function () {
        return this.to.apply(null, arguments);
      };
      $.prototype.dispatchEvent = function (Z) {
        var ue = this;
        var Ae = [];
        for (var Se = arguments.length - 1; Se-- > 0;) {
          Ae[Se] = arguments[Se + 1];
        }
        var Me = Z.type;
        var At = this.listeners[Me];
        if (!Array.isArray(At)) {
          return false;
        }
        At.forEach(function (cr) {
          if (Ae.length > 0) {
            cr.apply(ue, Ae);
          } else {
            cr.call(ue, Z.data ? Z.data : Z);
          }
        });
      };
      Object.defineProperties($.prototype, J);
      return $;
    }(te);
    O.CONNECTING = 0;
    O.OPEN = 1;
    O.CLOSING = 2;
    O.CLOSED = 3;
    function B($, J) {
      return new O($, J);
    }
    B.connect = function ($, J) {
      return B($, J);
    };
    function z(G) {
      return G.reduce(function ($, J) {
        if ($.indexOf(J) > -1) {
          return $;
        } else {
          return $.concat(J);
        }
      }, []);
    }
    function fe() {
      if (typeof window !== "undefined") {
        return window;
      } else if (typeof process == "object" && typeof pW == "function" && typeof Nt == "object") {
        return Nt;
      } else {
        return this;
      }
    }
    var Ce = {
      mock: true,
      verifyClient: null,
      selectProtocol: null
    };
    var ve = function (G) {
      function $(J, K = Ce) {
        G.call(this);
        var Z = new Y(J);
        Z.pathname ||= "/";
        this.url = Z.toString();
        this.originalWebSocket = null;
        var ue = ye.attachServer(this, this.url);
        if (!ue) {
          this.dispatchEvent(Ve({
            type: "error"
          }));
          throw new Error("A mock server is already listening on this url");
        }
        this.options = Object.assign({}, Ce, K);
        if (this.options.mock) {
          this.mockWebsocket();
        }
      }
      if (G) {
        $.__proto__ = G;
      }
      $.prototype = Object.create(G && G.prototype);
      $.prototype.constructor = $;
      $.prototype.mockWebsocket = function () {
        var K = fe();
        this.originalWebSocket = K.WebSocket;
        K.WebSocket = Te;
      };
      $.prototype.restoreWebsocket = function () {
        var K = fe();
        if (this.originalWebSocket !== null) {
          K.WebSocket = this.originalWebSocket;
        }
        this.originalWebSocket = null;
      };
      $.prototype.stop = function (K = function () {}) {
        if (this.options.mock) {
          this.restoreWebsocket();
        }
        ye.removeServer(this.url);
        if (typeof K == "function") {
          K();
        }
      };
      $.prototype.on = function (K, Z) {
        this.addEventListener(K, Z);
      };
      $.prototype.off = function (K, Z) {
        this.removeEventListener(K, Z);
      };
      $.prototype.close = function (K = {}) {
        var Z = K.code;
        var ue = K.reason;
        var Ae = K.wasClean;
        var Se = ye.websocketsLookup(this.url);
        ye.removeServer(this.url);
        Se.forEach(function (Me) {
          Me.readyState = Te.CLOSED;
          Me.dispatchEvent(ft({
            type: "close",
            target: Me.target,
            code: Z || Be.CLOSE_NORMAL,
            reason: ue || "",
            wasClean: Ae
          }));
        });
        this.dispatchEvent(ft({
          type: "close"
        }), this);
      };
      $.prototype.emit = function (K, Z, ue) {
        var Ae = this;
        if (ue === undefined) {
          ue = {};
        }
        var Se = ue.websockets;
        Se ||= ye.websocketsLookup(this.url);
        var Me;
        if (typeof ue != "object" || arguments.length > 3) {
          Z = Array.prototype.slice.call(arguments, 1, arguments.length);
          Me = Z.map(function (At) {
            return F(At);
          });
        } else {
          Me = F(Z);
        }
        Se.forEach(function (At) {
          var cr = At instanceof O ? Z : Me;
          if (Array.isArray(cr)) {
            At.dispatchEvent.apply(At, [ot({
              type: K,
              data: cr,
              origin: Ae.url,
              target: At.target
            })].concat(cr));
          } else {
            At.dispatchEvent(ot({
              type: K,
              data: cr,
              origin: Ae.url,
              target: At.target
            }));
          }
        });
      };
      $.prototype.clients = function () {
        return ye.websocketsLookup(this.url);
      };
      $.prototype.to = function (K, Z, ue) {
        var Ae = this;
        if (ue === undefined) {
          ue = [];
        }
        var Se = this;
        var Me = z(ue.concat(ye.websocketsLookup(this.url, K, Z)));
        return {
          to: function (At, cr) {
            return Ae.to.call(Ae, At, cr, Me);
          },
          emit: function (cr, ke) {
            Se.emit(cr, ke, {
              websockets: Me
            });
          }
        };
      };
      $.prototype.in = function () {
        var K = [];
        for (var Z = arguments.length; Z--;) {
          K[Z] = arguments[Z];
        }
        return this.to.apply(null, K);
      };
      $.prototype.simulate = function (K) {
        var Z = ye.websocketsLookup(this.url);
        if (K === "error") {
          Z.forEach(function (ue) {
            ue.readyState = Te.CLOSED;
            ue.dispatchEvent(Ve({
              type: "error",
              target: ue.target
            }));
          });
        }
      };
      return $;
    }(te);
    ve.of = function ($) {
      return new ve($);
    };
    var se = ve;
    var oe = Te;
    var $e = B;
    r.Server = se;
    r.WebSocket = oe;
    r.SocketIO = $e;
    Object.defineProperty(r, "__esModule", {
      value: true
    });
  });
})(Bb, Bb.exports);
var dW = {
  exports: {}
};
(function (t) {
  (function () {
    function e(f, c) {
      var p = f.x - c.x;
      var d = f.y - c.y;
      return p * p + d * d;
    }
    function r(f, c, p) {
      var d = c.x;
      var E = c.y;
      var m = p.x - d;
      var g = p.y - E;
      if (m !== 0 || g !== 0) {
        var T = ((f.x - d) * m + (f.y - E) * g) / (m * m + g * g);
        if (T > 1) {
          d = p.x;
          E = p.y;
        } else if (T > 0) {
          d += m * T;
          E += g * T;
        }
      }
      m = f.x - d;
      g = f.y - E;
      return m * m + g * g;
    }
    function n(f, c) {
      var p = f[0];
      var d = [p];
      var E;
      for (var m = 1, g = f.length; m < g; m++) {
        E = f[m];
        if (e(E, p) > c) {
          d.push(E);
          p = E;
        }
      }
      if (p !== E) {
        d.push(E);
      }
      return d;
    }
    function i(f, c, p, d, E) {
      var m = d;
      var g;
      for (var T = c + 1; T < p; T++) {
        var b = r(f[T], f[c], f[p]);
        if (b > m) {
          g = T;
          m = b;
        }
      }
      if (m > d) {
        if (g - c > 1) {
          i(f, c, g, d, E);
        }
        E.push(f[g]);
        if (p - g > 1) {
          i(f, g, p, d, E);
        }
      }
    }
    function s(f, c) {
      var p = f.length - 1;
      var d = [f[0]];
      i(f, 0, p, c, d);
      d.push(f[p]);
      return d;
    }
    function o(f, c, p) {
      if (f.length <= 2) {
        return f;
      }
      var d = c !== undefined ? c * c : 1;
      f = p ? f : n(f, d);
      f = s(f, d);
      return f;
    }
    t.exports = o;
    t.exports.default = o;
  })();
})(dW);
var kA = {};
var P0 = {};
var U0 = {};
(function (t) {
  Object.defineProperty(t, "__esModule", {
    value: true
  });
  t.EXTENDED_PICTOGRAPHIC = t.CLUSTER_BREAK = undefined;
  (function (e) {
    e[e.CR = 0] = "CR";
    e[e.LF = 1] = "LF";
    e[e.CONTROL = 2] = "CONTROL";
    e[e.EXTEND = 3] = "EXTEND";
    e[e.REGIONAL_INDICATOR = 4] = "REGIONAL_INDICATOR";
    e[e.SPACINGMARK = 5] = "SPACINGMARK";
    e[e.L = 6] = "L";
    e[e.V = 7] = "V";
    e[e.T = 8] = "T";
    e[e.LV = 9] = "LV";
    e[e.LVT = 10] = "LVT";
    e[e.OTHER = 11] = "OTHER";
    e[e.PREPEND = 12] = "PREPEND";
    e[e.E_BASE = 13] = "E_BASE";
    e[e.E_MODIFIER = 14] = "E_MODIFIER";
    e[e.ZWJ = 15] = "ZWJ";
    e[e.GLUE_AFTER_ZWJ = 16] = "GLUE_AFTER_ZWJ";
    e[e.E_BASE_GAZ = 17] = "E_BASE_GAZ";
  })(t.CLUSTER_BREAK ||= {});
  t.EXTENDED_PICTOGRAPHIC = 101;
})(U0);
var D0 = {};
Object.defineProperty(D0, "__esModule", {
  value: true
});
const pt = U0;
const gi = 0;
const Md = 1;
const hW = 2;
const EW = 3;
const mW = 4;
class gW {
  static isSurrogate(e, r) {
    return e.charCodeAt(r) >= 55296 && e.charCodeAt(r) <= 56319 && e.charCodeAt(r + 1) >= 56320 && e.charCodeAt(r + 1) <= 57343;
  }
  static codePointAt(e, r = 0) {
    const n = e.charCodeAt(r);
    if (n >= 55296 && n <= 56319 && r < e.length - 1) {
      const i = n;
      const s = e.charCodeAt(r + 1);
      if (s >= 56320 && s <= 57343) {
        return (i - 55296) * 1024 + (s - 56320) + 65536;
      } else {
        return i;
      }
    }
    if (n >= 56320 && n <= 57343 && r >= 1) {
      const i = e.charCodeAt(r - 1);
      const s = n;
      if (i >= 55296 && i <= 56319) {
        return (i - 55296) * 1024 + (s - 56320) + 65536;
      } else {
        return s;
      }
    }
    return n;
  }
  static shouldBreak(e, r, n, i, s, o) {
    const f = [e].concat(r).concat([n]);
    const c = [i].concat(s).concat([o]);
    const p = f[f.length - 2];
    const d = n;
    const E = o;
    const m = f.lastIndexOf(pt.CLUSTER_BREAK.REGIONAL_INDICATOR);
    if (m > 0 && f.slice(1, m).every(function (T) {
      return T === pt.CLUSTER_BREAK.REGIONAL_INDICATOR;
    }) && [pt.CLUSTER_BREAK.PREPEND, pt.CLUSTER_BREAK.REGIONAL_INDICATOR].indexOf(p) === -1) {
      if (f.filter(function (T) {
        return T === pt.CLUSTER_BREAK.REGIONAL_INDICATOR;
      }).length % 2 === 1) {
        return EW;
      } else {
        return mW;
      }
    }
    if (p === pt.CLUSTER_BREAK.CR && d === pt.CLUSTER_BREAK.LF) {
      return gi;
    }
    if (p === pt.CLUSTER_BREAK.CONTROL || p === pt.CLUSTER_BREAK.CR || p === pt.CLUSTER_BREAK.LF) {
      return Md;
    }
    if (d === pt.CLUSTER_BREAK.CONTROL || d === pt.CLUSTER_BREAK.CR || d === pt.CLUSTER_BREAK.LF) {
      return Md;
    }
    if (p === pt.CLUSTER_BREAK.L && (d === pt.CLUSTER_BREAK.L || d === pt.CLUSTER_BREAK.V || d === pt.CLUSTER_BREAK.LV || d === pt.CLUSTER_BREAK.LVT)) {
      return gi;
    }
    if ((p === pt.CLUSTER_BREAK.LV || p === pt.CLUSTER_BREAK.V) && (d === pt.CLUSTER_BREAK.V || d === pt.CLUSTER_BREAK.T)) {
      return gi;
    }
    if ((p === pt.CLUSTER_BREAK.LVT || p === pt.CLUSTER_BREAK.T) && d === pt.CLUSTER_BREAK.T) {
      return gi;
    }
    if (d === pt.CLUSTER_BREAK.EXTEND || d === pt.CLUSTER_BREAK.ZWJ) {
      return gi;
    }
    if (d === pt.CLUSTER_BREAK.SPACINGMARK) {
      return gi;
    }
    if (p === pt.CLUSTER_BREAK.PREPEND) {
      return gi;
    }
    const g = c.slice(0, -1).lastIndexOf(pt.EXTENDED_PICTOGRAPHIC);
    if (g !== -1 && c[g] === pt.EXTENDED_PICTOGRAPHIC && f.slice(g + 1, -2).every(function (T) {
      return T === pt.CLUSTER_BREAK.EXTEND;
    }) && p === pt.CLUSTER_BREAK.ZWJ && E === pt.EXTENDED_PICTOGRAPHIC) {
      return gi;
    } else if (r.indexOf(pt.CLUSTER_BREAK.REGIONAL_INDICATOR) !== -1) {
      return hW;
    } else if (p === pt.CLUSTER_BREAK.REGIONAL_INDICATOR && d === pt.CLUSTER_BREAK.REGIONAL_INDICATOR) {
      return gi;
    } else {
      return Md;
    }
  }
}
D0.default = gW;
var B0 = {};
Object.defineProperty(B0, "__esModule", {
  value: true
});
class _W {
  constructor(e, r) {
    this._index = 0;
    this._str = e;
    this._nextBreak = r;
  }
  [Symbol.iterator]() {
    return this;
  }
  next() {
    let e;
    if ((e = this._nextBreak(this._str, this._index)) < this._str.length) {
      const r = this._str.slice(this._index, e);
      this._index = e;
      return {
        value: r,
        done: false
      };
    }
    if (this._index < this._str.length) {
      const r = this._str.slice(this._index);
      this._index = this._str.length;
      return {
        value: r,
        done: false
      };
    }
    return {
      value: undefined,
      done: true
    };
  }
}
B0.default = _W;
var GA = Nt && Nt.__importDefault || function (t) {
  if (t && t.__esModule) {
    return t;
  } else {
    return {
      default: t
    };
  }
};
Object.defineProperty(P0, "__esModule", {
  value: true
});
const u = U0;
const Fu = GA(D0);
const TW = GA(B0);
class bi {
  static nextBreak(e, r = 0) {
    if (r < 0) {
      return 0;
    }
    if (r >= e.length - 1) {
      return e.length;
    }
    const n = Fu.default.codePointAt(e, r);
    const i = bi.getGraphemeBreakProperty(n);
    const s = bi.getEmojiProperty(n);
    const o = [];
    const f = [];
    for (let c = r + 1; c < e.length; c++) {
      if (Fu.default.isSurrogate(e, c - 1)) {
        continue;
      }
      const p = Fu.default.codePointAt(e, c);
      const d = bi.getGraphemeBreakProperty(p);
      const E = bi.getEmojiProperty(p);
      if (Fu.default.shouldBreak(i, o, d, s, f, E)) {
        return c;
      }
      o.push(d);
      f.push(E);
    }
    return e.length;
  }
  splitGraphemes(e) {
    const r = [];
    let n = 0;
    let i;
    while ((i = bi.nextBreak(e, n)) < e.length) {
      r.push(e.slice(n, i));
      n = i;
    }
    if (n < e.length) {
      r.push(e.slice(n));
    }
    return r;
  }
  iterateGraphemes(e) {
    return new TW.default(e, bi.nextBreak);
  }
  countGraphemes(e) {
    let r = 0;
    let n = 0;
    let i;
    while ((i = bi.nextBreak(e, n)) < e.length) {
      n = i;
      r++;
    }
    if (n < e.length) {
      r++;
    }
    return r;
  }
  static getGraphemeBreakProperty(e) {
    if (e < 48905) {
      if (e < 44116) {
        if (e < 4141) {
          if (e < 2818) {
            if (e < 2363) {
              if (e < 1759) {
                if (e < 1471) {
                  if (e < 127) {
                    if (e < 11) {
                      if (e < 10) {
                        if (e >= 0 && e <= 9) {
                          return u.CLUSTER_BREAK.CONTROL;
                        }
                      } else if (e === 10) {
                        return u.CLUSTER_BREAK.LF;
                      }
                    } else if (e < 13) {
                      if (e >= 11 && e <= 12) {
                        return u.CLUSTER_BREAK.CONTROL;
                      }
                    } else if (e < 14) {
                      if (e === 13) {
                        return u.CLUSTER_BREAK.CR;
                      }
                    } else if (e >= 14 && e <= 31) {
                      return u.CLUSTER_BREAK.CONTROL;
                    }
                  } else if (e < 768) {
                    if (e < 173) {
                      if (e >= 127 && e <= 159) {
                        return u.CLUSTER_BREAK.CONTROL;
                      }
                    } else if (e === 173) {
                      return u.CLUSTER_BREAK.CONTROL;
                    }
                  } else if (e < 1155) {
                    if (e >= 768 && e <= 879) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  } else if (e < 1425) {
                    if (e >= 1155 && e <= 1161) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  } else if (e >= 1425 && e <= 1469) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 1552) {
                  if (e < 1476) {
                    if (e < 1473) {
                      if (e === 1471) {
                        return u.CLUSTER_BREAK.EXTEND;
                      }
                    } else if (e >= 1473 && e <= 1474) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  } else if (e < 1479) {
                    if (e >= 1476 && e <= 1477) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  } else if (e < 1536) {
                    if (e === 1479) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  } else if (e >= 1536 && e <= 1541) {
                    return u.CLUSTER_BREAK.PREPEND;
                  }
                } else if (e < 1648) {
                  if (e < 1564) {
                    if (e >= 1552 && e <= 1562) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  } else if (e < 1611) {
                    if (e === 1564) {
                      return u.CLUSTER_BREAK.CONTROL;
                    }
                  } else if (e >= 1611 && e <= 1631) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 1750) {
                  if (e === 1648) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 1757) {
                  if (e >= 1750 && e <= 1756) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e === 1757) {
                  return u.CLUSTER_BREAK.PREPEND;
                }
              } else if (e < 2075) {
                if (e < 1840) {
                  if (e < 1770) {
                    if (e < 1767) {
                      if (e >= 1759 && e <= 1764) {
                        return u.CLUSTER_BREAK.EXTEND;
                      }
                    } else if (e >= 1767 && e <= 1768) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  } else if (e < 1807) {
                    if (e >= 1770 && e <= 1773) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  } else {
                    if (e === 1807) {
                      return u.CLUSTER_BREAK.PREPEND;
                    }
                    if (e === 1809) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  }
                } else if (e < 2027) {
                  if (e < 1958) {
                    if (e >= 1840 && e <= 1866) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  } else if (e >= 1958 && e <= 1968) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 2045) {
                  if (e >= 2027 && e <= 2035) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 2070) {
                  if (e === 2045) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e >= 2070 && e <= 2073) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 2200) {
                if (e < 2089) {
                  if (e < 2085) {
                    if (e >= 2075 && e <= 2083) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  } else if (e >= 2085 && e <= 2087) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 2137) {
                  if (e >= 2089 && e <= 2093) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 2192) {
                  if (e >= 2137 && e <= 2139) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e >= 2192 && e <= 2193) {
                  return u.CLUSTER_BREAK.PREPEND;
                }
              } else if (e < 2275) {
                if (e < 2250) {
                  if (e >= 2200 && e <= 2207) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 2274) {
                  if (e >= 2250 && e <= 2273) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e === 2274) {
                  return u.CLUSTER_BREAK.PREPEND;
                }
              } else if (e < 2307) {
                if (e >= 2275 && e <= 2306) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else {
                if (e === 2307) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
                if (e === 2362) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              }
            } else if (e < 2561) {
              if (e < 2434) {
                if (e < 2381) {
                  if (e < 2366) {
                    if (e === 2363) {
                      return u.CLUSTER_BREAK.SPACINGMARK;
                    }
                    if (e === 2364) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  } else if (e < 2369) {
                    if (e >= 2366 && e <= 2368) {
                      return u.CLUSTER_BREAK.SPACINGMARK;
                    }
                  } else if (e < 2377) {
                    if (e >= 2369 && e <= 2376) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  } else if (e >= 2377 && e <= 2380) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e < 2385) {
                  if (e < 2382) {
                    if (e === 2381) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  } else if (e >= 2382 && e <= 2383) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e < 2402) {
                  if (e >= 2385 && e <= 2391) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 2433) {
                  if (e >= 2402 && e <= 2403) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e === 2433) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 2503) {
                if (e < 2494) {
                  if (e < 2492) {
                    if (e >= 2434 && e <= 2435) {
                      return u.CLUSTER_BREAK.SPACINGMARK;
                    }
                  } else if (e === 2492) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 2495) {
                  if (e === 2494) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 2497) {
                  if (e >= 2495 && e <= 2496) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e >= 2497 && e <= 2500) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 2519) {
                if (e < 2507) {
                  if (e >= 2503 && e <= 2504) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e < 2509) {
                  if (e >= 2507 && e <= 2508) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e === 2509) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 2530) {
                if (e === 2519) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 2558) {
                if (e >= 2530 && e <= 2531) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e === 2558) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 2691) {
              if (e < 2631) {
                if (e < 2620) {
                  if (e < 2563) {
                    if (e >= 2561 && e <= 2562) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  } else if (e === 2563) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e < 2622) {
                  if (e === 2620) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 2625) {
                  if (e >= 2622 && e <= 2624) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e >= 2625 && e <= 2626) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 2672) {
                if (e < 2635) {
                  if (e >= 2631 && e <= 2632) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 2641) {
                  if (e >= 2635 && e <= 2637) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e === 2641) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 2677) {
                if (e >= 2672 && e <= 2673) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 2689) {
                if (e === 2677) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e >= 2689 && e <= 2690) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 2761) {
              if (e < 2750) {
                if (e === 2691) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
                if (e === 2748) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 2753) {
                if (e >= 2750 && e <= 2752) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              } else if (e < 2759) {
                if (e >= 2753 && e <= 2757) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e >= 2759 && e <= 2760) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 2786) {
              if (e < 2763) {
                if (e === 2761) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              } else if (e < 2765) {
                if (e >= 2763 && e <= 2764) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              } else if (e === 2765) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 2810) {
              if (e >= 2786 && e <= 2787) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 2817) {
              if (e >= 2810 && e <= 2815) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e === 2817) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 3315) {
            if (e < 3076) {
              if (e < 2946) {
                if (e < 2887) {
                  if (e < 2878) {
                    if (e < 2876) {
                      if (e >= 2818 && e <= 2819) {
                        return u.CLUSTER_BREAK.SPACINGMARK;
                      }
                    } else if (e === 2876) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  } else if (e < 2880) {
                    if (e >= 2878 && e <= 2879) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  } else if (e < 2881) {
                    if (e === 2880) {
                      return u.CLUSTER_BREAK.SPACINGMARK;
                    }
                  } else if (e >= 2881 && e <= 2884) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 2893) {
                  if (e < 2891) {
                    if (e >= 2887 && e <= 2888) {
                      return u.CLUSTER_BREAK.SPACINGMARK;
                    }
                  } else if (e >= 2891 && e <= 2892) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e < 2901) {
                  if (e === 2893) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 2914) {
                  if (e >= 2901 && e <= 2903) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e >= 2914 && e <= 2915) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 3014) {
                if (e < 3007) {
                  if (e === 2946 || e === 3006) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 3008) {
                  if (e === 3007) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e < 3009) {
                  if (e === 3008) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e >= 3009 && e <= 3010) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              } else if (e < 3031) {
                if (e < 3018) {
                  if (e >= 3014 && e <= 3016) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e < 3021) {
                  if (e >= 3018 && e <= 3020) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e === 3021) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 3072) {
                if (e === 3031) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 3073) {
                if (e === 3072) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e >= 3073 && e <= 3075) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 3262) {
              if (e < 3146) {
                if (e < 3134) {
                  if (e === 3076 || e === 3132) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 3137) {
                  if (e >= 3134 && e <= 3136) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 3142) {
                  if (e >= 3137 && e <= 3140) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e >= 3142 && e <= 3144) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 3201) {
                if (e < 3157) {
                  if (e >= 3146 && e <= 3149) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 3170) {
                  if (e >= 3157 && e <= 3158) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e >= 3170 && e <= 3171) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 3202) {
                if (e === 3201) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 3260) {
                if (e >= 3202 && e <= 3203) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              } else if (e === 3260) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 3270) {
              if (e < 3264) {
                if (e === 3262) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
                if (e === 3263) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 3266) {
                if (e >= 3264 && e <= 3265) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              } else if (e < 3267) {
                if (e === 3266) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e >= 3267 && e <= 3268) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 3276) {
              if (e < 3271) {
                if (e === 3270) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 3274) {
                if (e >= 3271 && e <= 3272) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              } else if (e >= 3274 && e <= 3275) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 3285) {
              if (e >= 3276 && e <= 3277) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 3298) {
              if (e >= 3285 && e <= 3286) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e >= 3298 && e <= 3299) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 3551) {
            if (e < 3406) {
              if (e < 3391) {
                if (e < 3330) {
                  if (e < 3328) {
                    if (e === 3315) {
                      return u.CLUSTER_BREAK.SPACINGMARK;
                    }
                  } else if (e >= 3328 && e <= 3329) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 3387) {
                  if (e >= 3330 && e <= 3331) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e < 3390) {
                  if (e >= 3387 && e <= 3388) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e === 3390) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 3398) {
                if (e < 3393) {
                  if (e >= 3391 && e <= 3392) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e >= 3393 && e <= 3396) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 3402) {
                if (e >= 3398 && e <= 3400) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              } else if (e < 3405) {
                if (e >= 3402 && e <= 3404) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              } else if (e === 3405) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 3530) {
              if (e < 3426) {
                if (e === 3406) {
                  return u.CLUSTER_BREAK.PREPEND;
                }
                if (e === 3415) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 3457) {
                if (e >= 3426 && e <= 3427) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 3458) {
                if (e === 3457) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e >= 3458 && e <= 3459) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 3538) {
              if (e < 3535) {
                if (e === 3530) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 3536) {
                if (e === 3535) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e >= 3536 && e <= 3537) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 3542) {
              if (e >= 3538 && e <= 3540) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 3544) {
              if (e === 3542) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e >= 3544 && e <= 3550) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e < 3893) {
            if (e < 3655) {
              if (e < 3633) {
                if (e < 3570) {
                  if (e === 3551) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e >= 3570 && e <= 3571) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              } else if (e < 3635) {
                if (e === 3633) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 3636) {
                if (e === 3635) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              } else if (e >= 3636 && e <= 3642) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 3764) {
              if (e < 3761) {
                if (e >= 3655 && e <= 3662) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else {
                if (e === 3761) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
                if (e === 3763) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              }
            } else if (e < 3784) {
              if (e >= 3764 && e <= 3772) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 3864) {
              if (e >= 3784 && e <= 3790) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e >= 3864 && e <= 3865) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 3967) {
            if (e < 3897) {
              if (e === 3893 || e === 3895) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 3902) {
              if (e === 3897) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 3953) {
              if (e >= 3902 && e <= 3903) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e >= 3953 && e <= 3966) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 3981) {
            if (e < 3968) {
              if (e === 3967) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 3974) {
              if (e >= 3968 && e <= 3972) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e >= 3974 && e <= 3975) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 3993) {
            if (e >= 3981 && e <= 3991) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 4038) {
            if (e >= 3993 && e <= 4028) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e === 4038) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 7204) {
          if (e < 6448) {
            if (e < 5938) {
              if (e < 4226) {
                if (e < 4157) {
                  if (e < 4146) {
                    if (e < 4145) {
                      if (e >= 4141 && e <= 4144) {
                        return u.CLUSTER_BREAK.EXTEND;
                      }
                    } else if (e === 4145) {
                      return u.CLUSTER_BREAK.SPACINGMARK;
                    }
                  } else if (e < 4153) {
                    if (e >= 4146 && e <= 4151) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  } else if (e < 4155) {
                    if (e >= 4153 && e <= 4154) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  } else if (e >= 4155 && e <= 4156) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e < 4184) {
                  if (e < 4182) {
                    if (e >= 4157 && e <= 4158) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  } else if (e >= 4182 && e <= 4183) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e < 4190) {
                  if (e >= 4184 && e <= 4185) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 4209) {
                  if (e >= 4190 && e <= 4192) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e >= 4209 && e <= 4212) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 4352) {
                if (e < 4229) {
                  if (e === 4226) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                  if (e === 4228) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e < 4237) {
                  if (e >= 4229 && e <= 4230) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e === 4237 || e === 4253) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 4957) {
                if (e < 4448) {
                  if (e >= 4352 && e <= 4447) {
                    return u.CLUSTER_BREAK.L;
                  }
                } else if (e < 4520) {
                  if (e >= 4448 && e <= 4519) {
                    return u.CLUSTER_BREAK.V;
                  }
                } else if (e >= 4520 && e <= 4607) {
                  return u.CLUSTER_BREAK.T;
                }
              } else if (e < 5906) {
                if (e >= 4957 && e <= 4959) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 5909) {
                if (e >= 5906 && e <= 5908) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e === 5909) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 6089) {
              if (e < 6070) {
                if (e < 5970) {
                  if (e < 5940) {
                    if (e >= 5938 && e <= 5939) {
                      return u.CLUSTER_BREAK.EXTEND;
                    }
                  } else if (e === 5940) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e < 6002) {
                  if (e >= 5970 && e <= 5971) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 6068) {
                  if (e >= 6002 && e <= 6003) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e >= 6068 && e <= 6069) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 6078) {
                if (e < 6071) {
                  if (e === 6070) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e >= 6071 && e <= 6077) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 6086) {
                if (e >= 6078 && e <= 6085) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              } else if (e < 6087) {
                if (e === 6086) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e >= 6087 && e <= 6088) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 6277) {
              if (e < 6155) {
                if (e < 6109) {
                  if (e >= 6089 && e <= 6099) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e === 6109) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 6158) {
                if (e >= 6155 && e <= 6157) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else {
                if (e === 6158) {
                  return u.CLUSTER_BREAK.CONTROL;
                }
                if (e === 6159) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              }
            } else if (e < 6435) {
              if (e < 6313) {
                if (e >= 6277 && e <= 6278) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 6432) {
                if (e === 6313) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e >= 6432 && e <= 6434) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 6439) {
              if (e >= 6435 && e <= 6438) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 6441) {
              if (e >= 6439 && e <= 6440) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e >= 6441 && e <= 6443) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e < 6971) {
            if (e < 6744) {
              if (e < 6681) {
                if (e < 6451) {
                  if (e < 6450) {
                    if (e >= 6448 && e <= 6449) {
                      return u.CLUSTER_BREAK.SPACINGMARK;
                    }
                  } else if (e === 6450) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 6457) {
                  if (e >= 6451 && e <= 6456) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e < 6679) {
                  if (e >= 6457 && e <= 6459) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e >= 6679 && e <= 6680) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 6741) {
                if (e < 6683) {
                  if (e >= 6681 && e <= 6682) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e === 6683) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 6742) {
                if (e === 6741) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              } else {
                if (e === 6742) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
                if (e === 6743) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              }
            } else if (e < 6771) {
              if (e < 6754) {
                if (e < 6752) {
                  if (e >= 6744 && e <= 6750) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e === 6752) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 6757) {
                if (e === 6754) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 6765) {
                if (e >= 6757 && e <= 6764) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e >= 6765 && e <= 6770) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 6912) {
              if (e < 6783) {
                if (e >= 6771 && e <= 6780) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 6832) {
                if (e === 6783) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e >= 6832 && e <= 6862) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 6916) {
              if (e >= 6912 && e <= 6915) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 6964) {
              if (e === 6916) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e >= 6964 && e <= 6970) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 7080) {
            if (e < 7019) {
              if (e < 6973) {
                if (e === 6971) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
                if (e === 6972) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 6978) {
                if (e >= 6973 && e <= 6977) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              } else if (e < 6979) {
                if (e === 6978) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e >= 6979 && e <= 6980) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 7073) {
              if (e < 7040) {
                if (e >= 7019 && e <= 7027) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 7042) {
                if (e >= 7040 && e <= 7041) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e === 7042) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 7074) {
              if (e === 7073) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 7078) {
              if (e >= 7074 && e <= 7077) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e >= 7078 && e <= 7079) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e < 7144) {
            if (e < 7083) {
              if (e < 7082) {
                if (e >= 7080 && e <= 7081) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e === 7082) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 7142) {
              if (e >= 7083 && e <= 7085) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else {
              if (e === 7142) {
                return u.CLUSTER_BREAK.EXTEND;
              }
              if (e === 7143) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            }
          } else if (e < 7150) {
            if (e < 7146) {
              if (e >= 7144 && e <= 7145) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 7149) {
              if (e >= 7146 && e <= 7148) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e === 7149) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 7151) {
            if (e === 7150) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e < 7154) {
            if (e >= 7151 && e <= 7153) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e >= 7154 && e <= 7155) {
            return u.CLUSTER_BREAK.SPACINGMARK;
          }
        } else if (e < 43346) {
          if (e < 11647) {
            if (e < 7415) {
              if (e < 7380) {
                if (e < 7220) {
                  if (e < 7212) {
                    if (e >= 7204 && e <= 7211) {
                      return u.CLUSTER_BREAK.SPACINGMARK;
                    }
                  } else if (e >= 7212 && e <= 7219) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e < 7222) {
                  if (e >= 7220 && e <= 7221) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e < 7376) {
                  if (e >= 7222 && e <= 7223) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e >= 7376 && e <= 7378) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 7394) {
                if (e < 7393) {
                  if (e >= 7380 && e <= 7392) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e === 7393) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              } else if (e < 7405) {
                if (e >= 7394 && e <= 7400) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e === 7405 || e === 7412) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 8205) {
              if (e < 7616) {
                if (e < 7416) {
                  if (e === 7415) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e >= 7416 && e <= 7417) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 8203) {
                if (e >= 7616 && e <= 7679) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else {
                if (e === 8203) {
                  return u.CLUSTER_BREAK.CONTROL;
                }
                if (e === 8204) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              }
            } else if (e < 8288) {
              if (e < 8206) {
                if (e === 8205) {
                  return u.CLUSTER_BREAK.ZWJ;
                }
              } else if (e < 8232) {
                if (e >= 8206 && e <= 8207) {
                  return u.CLUSTER_BREAK.CONTROL;
                }
              } else if (e >= 8232 && e <= 8238) {
                return u.CLUSTER_BREAK.CONTROL;
              }
            } else if (e < 8400) {
              if (e >= 8288 && e <= 8303) {
                return u.CLUSTER_BREAK.CONTROL;
              }
            } else if (e < 11503) {
              if (e >= 8400 && e <= 8432) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e >= 11503 && e <= 11505) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 43043) {
            if (e < 42612) {
              if (e < 12330) {
                if (e < 11744) {
                  if (e === 11647) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e >= 11744 && e <= 11775) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 12441) {
                if (e >= 12330 && e <= 12335) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 42607) {
                if (e >= 12441 && e <= 12442) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e >= 42607 && e <= 42610) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 43010) {
              if (e < 42654) {
                if (e >= 42612 && e <= 42621) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 42736) {
                if (e >= 42654 && e <= 42655) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e >= 42736 && e <= 42737) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 43014) {
              if (e === 43010) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e === 43014 || e === 43019) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 43188) {
            if (e < 43047) {
              if (e < 43045) {
                if (e >= 43043 && e <= 43044) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              } else if (e >= 43045 && e <= 43046) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 43052) {
              if (e === 43047) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 43136) {
              if (e === 43052) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e >= 43136 && e <= 43137) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e < 43263) {
            if (e < 43204) {
              if (e >= 43188 && e <= 43203) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 43232) {
              if (e >= 43204 && e <= 43205) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e >= 43232 && e <= 43249) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 43302) {
            if (e === 43263) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 43335) {
            if (e >= 43302 && e <= 43309) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e >= 43335 && e <= 43345) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 43698) {
          if (e < 43493) {
            if (e < 43444) {
              if (e < 43392) {
                if (e < 43360) {
                  if (e >= 43346 && e <= 43347) {
                    return u.CLUSTER_BREAK.SPACINGMARK;
                  }
                } else if (e >= 43360 && e <= 43388) {
                  return u.CLUSTER_BREAK.L;
                }
              } else if (e < 43395) {
                if (e >= 43392 && e <= 43394) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else {
                if (e === 43395) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
                if (e === 43443) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              }
            } else if (e < 43450) {
              if (e < 43446) {
                if (e >= 43444 && e <= 43445) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              } else if (e >= 43446 && e <= 43449) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 43452) {
              if (e >= 43450 && e <= 43451) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 43454) {
              if (e >= 43452 && e <= 43453) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e >= 43454 && e <= 43456) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e < 43573) {
            if (e < 43567) {
              if (e < 43561) {
                if (e === 43493) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e >= 43561 && e <= 43566) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 43569) {
              if (e >= 43567 && e <= 43568) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 43571) {
              if (e >= 43569 && e <= 43570) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e >= 43571 && e <= 43572) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e < 43597) {
            if (e < 43587) {
              if (e >= 43573 && e <= 43574) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e === 43587 || e === 43596) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 43644) {
            if (e === 43597) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e === 43644 || e === 43696) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 44006) {
          if (e < 43756) {
            if (e < 43710) {
              if (e < 43703) {
                if (e >= 43698 && e <= 43700) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e >= 43703 && e <= 43704) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 43713) {
              if (e >= 43710 && e <= 43711) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else {
              if (e === 43713) {
                return u.CLUSTER_BREAK.EXTEND;
              }
              if (e === 43755) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            }
          } else if (e < 43766) {
            if (e < 43758) {
              if (e >= 43756 && e <= 43757) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 43765) {
              if (e >= 43758 && e <= 43759) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e === 43765) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e < 44003) {
            if (e === 43766) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 44005) {
            if (e >= 44003 && e <= 44004) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e === 44005) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 44032) {
          if (e < 44009) {
            if (e < 44008) {
              if (e >= 44006 && e <= 44007) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e === 44008) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 44012) {
            if (e >= 44009 && e <= 44010) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else {
            if (e === 44012) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
            if (e === 44013) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          }
        } else if (e < 44061) {
          if (e < 44033) {
            if (e === 44032) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 44060) {
            if (e >= 44033 && e <= 44059) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 44060) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 44088) {
          if (e >= 44061 && e <= 44087) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 44089) {
          if (e === 44088) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e >= 44089 && e <= 44115) {
          return u.CLUSTER_BREAK.LVT;
        }
      } else if (e < 46497) {
        if (e < 45293) {
          if (e < 44704) {
            if (e < 44397) {
              if (e < 44256) {
                if (e < 44173) {
                  if (e < 44144) {
                    if (e < 44117) {
                      if (e === 44116) {
                        return u.CLUSTER_BREAK.LV;
                      }
                    } else if (e >= 44117 && e <= 44143) {
                      return u.CLUSTER_BREAK.LVT;
                    }
                  } else if (e < 44145) {
                    if (e === 44144) {
                      return u.CLUSTER_BREAK.LV;
                    }
                  } else if (e < 44172) {
                    if (e >= 44145 && e <= 44171) {
                      return u.CLUSTER_BREAK.LVT;
                    }
                  } else if (e === 44172) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e < 44201) {
                  if (e < 44200) {
                    if (e >= 44173 && e <= 44199) {
                      return u.CLUSTER_BREAK.LVT;
                    }
                  } else if (e === 44200) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e < 44228) {
                  if (e >= 44201 && e <= 44227) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e < 44229) {
                  if (e === 44228) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 44229 && e <= 44255) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 44313) {
                if (e < 44284) {
                  if (e < 44257) {
                    if (e === 44256) {
                      return u.CLUSTER_BREAK.LV;
                    }
                  } else if (e >= 44257 && e <= 44283) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e < 44285) {
                  if (e === 44284) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e < 44312) {
                  if (e >= 44285 && e <= 44311) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 44312) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 44368) {
                if (e < 44340) {
                  if (e >= 44313 && e <= 44339) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e < 44341) {
                  if (e === 44340) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 44341 && e <= 44367) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 44369) {
                if (e === 44368) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 44396) {
                if (e >= 44369 && e <= 44395) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 44396) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 44537) {
              if (e < 44480) {
                if (e < 44425) {
                  if (e < 44424) {
                    if (e >= 44397 && e <= 44423) {
                      return u.CLUSTER_BREAK.LVT;
                    }
                  } else if (e === 44424) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e < 44452) {
                  if (e >= 44425 && e <= 44451) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e < 44453) {
                  if (e === 44452) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 44453 && e <= 44479) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 44508) {
                if (e < 44481) {
                  if (e === 44480) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 44481 && e <= 44507) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 44509) {
                if (e === 44508) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 44536) {
                if (e >= 44509 && e <= 44535) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 44536) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 44620) {
              if (e < 44565) {
                if (e < 44564) {
                  if (e >= 44537 && e <= 44563) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 44564) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 44592) {
                if (e >= 44565 && e <= 44591) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 44593) {
                if (e === 44592) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 44593 && e <= 44619) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 44649) {
              if (e < 44621) {
                if (e === 44620) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 44648) {
                if (e >= 44621 && e <= 44647) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 44648) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 44676) {
              if (e >= 44649 && e <= 44675) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 44677) {
              if (e === 44676) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 44677 && e <= 44703) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 44985) {
            if (e < 44844) {
              if (e < 44761) {
                if (e < 44732) {
                  if (e < 44705) {
                    if (e === 44704) {
                      return u.CLUSTER_BREAK.LV;
                    }
                  } else if (e >= 44705 && e <= 44731) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e < 44733) {
                  if (e === 44732) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e < 44760) {
                  if (e >= 44733 && e <= 44759) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 44760) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 44789) {
                if (e < 44788) {
                  if (e >= 44761 && e <= 44787) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 44788) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 44816) {
                if (e >= 44789 && e <= 44815) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 44817) {
                if (e === 44816) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 44817 && e <= 44843) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 44901) {
              if (e < 44872) {
                if (e < 44845) {
                  if (e === 44844) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 44845 && e <= 44871) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 44873) {
                if (e === 44872) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 44900) {
                if (e >= 44873 && e <= 44899) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 44900) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 44956) {
              if (e < 44928) {
                if (e >= 44901 && e <= 44927) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 44929) {
                if (e === 44928) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 44929 && e <= 44955) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 44957) {
              if (e === 44956) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 44984) {
              if (e >= 44957 && e <= 44983) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 44984) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 45152) {
            if (e < 45068) {
              if (e < 45013) {
                if (e < 45012) {
                  if (e >= 44985 && e <= 45011) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 45012) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 45040) {
                if (e >= 45013 && e <= 45039) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 45041) {
                if (e === 45040) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 45041 && e <= 45067) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 45097) {
              if (e < 45069) {
                if (e === 45068) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 45096) {
                if (e >= 45069 && e <= 45095) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 45096) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 45124) {
              if (e >= 45097 && e <= 45123) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 45125) {
              if (e === 45124) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 45125 && e <= 45151) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 45209) {
            if (e < 45180) {
              if (e < 45153) {
                if (e === 45152) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 45153 && e <= 45179) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 45181) {
              if (e === 45180) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 45208) {
              if (e >= 45181 && e <= 45207) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 45208) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 45264) {
            if (e < 45236) {
              if (e >= 45209 && e <= 45235) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 45237) {
              if (e === 45236) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 45237 && e <= 45263) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 45265) {
            if (e === 45264) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 45292) {
            if (e >= 45265 && e <= 45291) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 45292) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 45908) {
          if (e < 45600) {
            if (e < 45433) {
              if (e < 45376) {
                if (e < 45321) {
                  if (e < 45320) {
                    if (e >= 45293 && e <= 45319) {
                      return u.CLUSTER_BREAK.LVT;
                    }
                  } else if (e === 45320) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e < 45348) {
                  if (e >= 45321 && e <= 45347) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e < 45349) {
                  if (e === 45348) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 45349 && e <= 45375) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 45404) {
                if (e < 45377) {
                  if (e === 45376) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 45377 && e <= 45403) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 45405) {
                if (e === 45404) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 45432) {
                if (e >= 45405 && e <= 45431) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 45432) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 45516) {
              if (e < 45461) {
                if (e < 45460) {
                  if (e >= 45433 && e <= 45459) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 45460) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 45488) {
                if (e >= 45461 && e <= 45487) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 45489) {
                if (e === 45488) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 45489 && e <= 45515) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 45545) {
              if (e < 45517) {
                if (e === 45516) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 45544) {
                if (e >= 45517 && e <= 45543) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 45544) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 45572) {
              if (e >= 45545 && e <= 45571) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 45573) {
              if (e === 45572) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 45573 && e <= 45599) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 45741) {
            if (e < 45657) {
              if (e < 45628) {
                if (e < 45601) {
                  if (e === 45600) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 45601 && e <= 45627) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 45629) {
                if (e === 45628) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 45656) {
                if (e >= 45629 && e <= 45655) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 45656) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 45712) {
              if (e < 45684) {
                if (e >= 45657 && e <= 45683) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 45685) {
                if (e === 45684) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 45685 && e <= 45711) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 45713) {
              if (e === 45712) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 45740) {
              if (e >= 45713 && e <= 45739) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 45740) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 45824) {
            if (e < 45769) {
              if (e < 45768) {
                if (e >= 45741 && e <= 45767) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 45768) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 45796) {
              if (e >= 45769 && e <= 45795) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 45797) {
              if (e === 45796) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 45797 && e <= 45823) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 45853) {
            if (e < 45825) {
              if (e === 45824) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 45852) {
              if (e >= 45825 && e <= 45851) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 45852) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 45880) {
            if (e >= 45853 && e <= 45879) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 45881) {
            if (e === 45880) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 45881 && e <= 45907) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 46189) {
          if (e < 46048) {
            if (e < 45965) {
              if (e < 45936) {
                if (e < 45909) {
                  if (e === 45908) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 45909 && e <= 45935) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 45937) {
                if (e === 45936) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 45964) {
                if (e >= 45937 && e <= 45963) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 45964) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 45993) {
              if (e < 45992) {
                if (e >= 45965 && e <= 45991) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 45992) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 46020) {
              if (e >= 45993 && e <= 46019) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 46021) {
              if (e === 46020) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 46021 && e <= 46047) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 46105) {
            if (e < 46076) {
              if (e < 46049) {
                if (e === 46048) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 46049 && e <= 46075) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 46077) {
              if (e === 46076) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 46104) {
              if (e >= 46077 && e <= 46103) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 46104) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 46160) {
            if (e < 46132) {
              if (e >= 46105 && e <= 46131) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 46133) {
              if (e === 46132) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 46133 && e <= 46159) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 46161) {
            if (e === 46160) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 46188) {
            if (e >= 46161 && e <= 46187) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 46188) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 46356) {
          if (e < 46272) {
            if (e < 46217) {
              if (e < 46216) {
                if (e >= 46189 && e <= 46215) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 46216) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 46244) {
              if (e >= 46217 && e <= 46243) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 46245) {
              if (e === 46244) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 46245 && e <= 46271) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 46301) {
            if (e < 46273) {
              if (e === 46272) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 46300) {
              if (e >= 46273 && e <= 46299) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 46300) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 46328) {
            if (e >= 46301 && e <= 46327) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 46329) {
            if (e === 46328) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 46329 && e <= 46355) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 46413) {
          if (e < 46384) {
            if (e < 46357) {
              if (e === 46356) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 46357 && e <= 46383) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 46385) {
            if (e === 46384) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 46412) {
            if (e >= 46385 && e <= 46411) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 46412) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 46468) {
          if (e < 46440) {
            if (e >= 46413 && e <= 46439) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 46441) {
            if (e === 46440) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 46441 && e <= 46467) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 46469) {
          if (e === 46468) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 46496) {
          if (e >= 46469 && e <= 46495) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e === 46496) {
          return u.CLUSTER_BREAK.LV;
        }
      } else if (e < 47701) {
        if (e < 47112) {
          if (e < 46804) {
            if (e < 46637) {
              if (e < 46580) {
                if (e < 46525) {
                  if (e < 46524) {
                    if (e >= 46497 && e <= 46523) {
                      return u.CLUSTER_BREAK.LVT;
                    }
                  } else if (e === 46524) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e < 46552) {
                  if (e >= 46525 && e <= 46551) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e < 46553) {
                  if (e === 46552) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 46553 && e <= 46579) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 46608) {
                if (e < 46581) {
                  if (e === 46580) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 46581 && e <= 46607) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 46609) {
                if (e === 46608) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 46636) {
                if (e >= 46609 && e <= 46635) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 46636) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 46720) {
              if (e < 46665) {
                if (e < 46664) {
                  if (e >= 46637 && e <= 46663) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 46664) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 46692) {
                if (e >= 46665 && e <= 46691) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 46693) {
                if (e === 46692) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 46693 && e <= 46719) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 46749) {
              if (e < 46721) {
                if (e === 46720) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 46748) {
                if (e >= 46721 && e <= 46747) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 46748) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 46776) {
              if (e >= 46749 && e <= 46775) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 46777) {
              if (e === 46776) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 46777 && e <= 46803) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 46945) {
            if (e < 46861) {
              if (e < 46832) {
                if (e < 46805) {
                  if (e === 46804) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 46805 && e <= 46831) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 46833) {
                if (e === 46832) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 46860) {
                if (e >= 46833 && e <= 46859) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 46860) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 46916) {
              if (e < 46888) {
                if (e >= 46861 && e <= 46887) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 46889) {
                if (e === 46888) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 46889 && e <= 46915) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 46917) {
              if (e === 46916) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 46944) {
              if (e >= 46917 && e <= 46943) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 46944) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 47028) {
            if (e < 46973) {
              if (e < 46972) {
                if (e >= 46945 && e <= 46971) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 46972) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 47000) {
              if (e >= 46973 && e <= 46999) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 47001) {
              if (e === 47000) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 47001 && e <= 47027) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 47057) {
            if (e < 47029) {
              if (e === 47028) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 47056) {
              if (e >= 47029 && e <= 47055) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 47056) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 47084) {
            if (e >= 47057 && e <= 47083) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 47085) {
            if (e === 47084) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 47085 && e <= 47111) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 47393) {
          if (e < 47252) {
            if (e < 47169) {
              if (e < 47140) {
                if (e < 47113) {
                  if (e === 47112) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 47113 && e <= 47139) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 47141) {
                if (e === 47140) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 47168) {
                if (e >= 47141 && e <= 47167) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 47168) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 47197) {
              if (e < 47196) {
                if (e >= 47169 && e <= 47195) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 47196) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 47224) {
              if (e >= 47197 && e <= 47223) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 47225) {
              if (e === 47224) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 47225 && e <= 47251) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 47309) {
            if (e < 47280) {
              if (e < 47253) {
                if (e === 47252) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 47253 && e <= 47279) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 47281) {
              if (e === 47280) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 47308) {
              if (e >= 47281 && e <= 47307) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 47308) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 47364) {
            if (e < 47336) {
              if (e >= 47309 && e <= 47335) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 47337) {
              if (e === 47336) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 47337 && e <= 47363) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 47365) {
            if (e === 47364) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 47392) {
            if (e >= 47365 && e <= 47391) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 47392) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 47560) {
          if (e < 47476) {
            if (e < 47421) {
              if (e < 47420) {
                if (e >= 47393 && e <= 47419) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 47420) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 47448) {
              if (e >= 47421 && e <= 47447) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 47449) {
              if (e === 47448) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 47449 && e <= 47475) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 47505) {
            if (e < 47477) {
              if (e === 47476) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 47504) {
              if (e >= 47477 && e <= 47503) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 47504) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 47532) {
            if (e >= 47505 && e <= 47531) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 47533) {
            if (e === 47532) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 47533 && e <= 47559) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 47617) {
          if (e < 47588) {
            if (e < 47561) {
              if (e === 47560) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 47561 && e <= 47587) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 47589) {
            if (e === 47588) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 47616) {
            if (e >= 47589 && e <= 47615) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 47616) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 47672) {
          if (e < 47644) {
            if (e >= 47617 && e <= 47643) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 47645) {
            if (e === 47644) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 47645 && e <= 47671) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 47673) {
          if (e === 47672) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 47700) {
          if (e >= 47673 && e <= 47699) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e === 47700) {
          return u.CLUSTER_BREAK.LV;
        }
      } else if (e < 48316) {
        if (e < 48008) {
          if (e < 47841) {
            if (e < 47784) {
              if (e < 47729) {
                if (e < 47728) {
                  if (e >= 47701 && e <= 47727) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 47728) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 47756) {
                if (e >= 47729 && e <= 47755) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 47757) {
                if (e === 47756) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 47757 && e <= 47783) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 47812) {
              if (e < 47785) {
                if (e === 47784) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 47785 && e <= 47811) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 47813) {
              if (e === 47812) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 47840) {
              if (e >= 47813 && e <= 47839) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 47840) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 47924) {
            if (e < 47869) {
              if (e < 47868) {
                if (e >= 47841 && e <= 47867) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 47868) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 47896) {
              if (e >= 47869 && e <= 47895) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 47897) {
              if (e === 47896) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 47897 && e <= 47923) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 47953) {
            if (e < 47925) {
              if (e === 47924) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 47952) {
              if (e >= 47925 && e <= 47951) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 47952) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 47980) {
            if (e >= 47953 && e <= 47979) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 47981) {
            if (e === 47980) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 47981 && e <= 48007) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 48149) {
          if (e < 48065) {
            if (e < 48036) {
              if (e < 48009) {
                if (e === 48008) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 48009 && e <= 48035) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 48037) {
              if (e === 48036) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 48064) {
              if (e >= 48037 && e <= 48063) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 48064) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 48120) {
            if (e < 48092) {
              if (e >= 48065 && e <= 48091) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 48093) {
              if (e === 48092) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 48093 && e <= 48119) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 48121) {
            if (e === 48120) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 48148) {
            if (e >= 48121 && e <= 48147) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 48148) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 48232) {
          if (e < 48177) {
            if (e < 48176) {
              if (e >= 48149 && e <= 48175) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 48176) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 48204) {
            if (e >= 48177 && e <= 48203) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 48205) {
            if (e === 48204) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 48205 && e <= 48231) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 48261) {
          if (e < 48233) {
            if (e === 48232) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 48260) {
            if (e >= 48233 && e <= 48259) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 48260) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 48288) {
          if (e >= 48261 && e <= 48287) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 48289) {
          if (e === 48288) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e >= 48289 && e <= 48315) {
          return u.CLUSTER_BREAK.LVT;
        }
      } else if (e < 48597) {
        if (e < 48456) {
          if (e < 48373) {
            if (e < 48344) {
              if (e < 48317) {
                if (e === 48316) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 48317 && e <= 48343) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 48345) {
              if (e === 48344) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 48372) {
              if (e >= 48345 && e <= 48371) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 48372) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 48401) {
            if (e < 48400) {
              if (e >= 48373 && e <= 48399) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 48400) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 48428) {
            if (e >= 48401 && e <= 48427) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 48429) {
            if (e === 48428) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 48429 && e <= 48455) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 48513) {
          if (e < 48484) {
            if (e < 48457) {
              if (e === 48456) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 48457 && e <= 48483) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 48485) {
            if (e === 48484) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 48512) {
            if (e >= 48485 && e <= 48511) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 48512) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 48568) {
          if (e < 48540) {
            if (e >= 48513 && e <= 48539) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 48541) {
            if (e === 48540) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 48541 && e <= 48567) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 48569) {
          if (e === 48568) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 48596) {
          if (e >= 48569 && e <= 48595) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e === 48596) {
          return u.CLUSTER_BREAK.LV;
        }
      } else if (e < 48764) {
        if (e < 48680) {
          if (e < 48625) {
            if (e < 48624) {
              if (e >= 48597 && e <= 48623) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 48624) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 48652) {
            if (e >= 48625 && e <= 48651) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 48653) {
            if (e === 48652) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 48653 && e <= 48679) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 48709) {
          if (e < 48681) {
            if (e === 48680) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 48708) {
            if (e >= 48681 && e <= 48707) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 48708) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 48736) {
          if (e >= 48709 && e <= 48735) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 48737) {
          if (e === 48736) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e >= 48737 && e <= 48763) {
          return u.CLUSTER_BREAK.LVT;
        }
      } else if (e < 48821) {
        if (e < 48792) {
          if (e < 48765) {
            if (e === 48764) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 48765 && e <= 48791) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 48793) {
          if (e === 48792) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 48820) {
          if (e >= 48793 && e <= 48819) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e === 48820) {
          return u.CLUSTER_BREAK.LV;
        }
      } else if (e < 48876) {
        if (e < 48848) {
          if (e >= 48821 && e <= 48847) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 48849) {
          if (e === 48848) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e >= 48849 && e <= 48875) {
          return u.CLUSTER_BREAK.LVT;
        }
      } else if (e < 48877) {
        if (e === 48876) {
          return u.CLUSTER_BREAK.LV;
        }
      } else if (e < 48904) {
        if (e >= 48877 && e <= 48903) {
          return u.CLUSTER_BREAK.LVT;
        }
      } else if (e === 48904) {
        return u.CLUSTER_BREAK.LV;
      }
    } else if (e < 53720) {
      if (e < 51312) {
        if (e < 50108) {
          if (e < 49493) {
            if (e < 49212) {
              if (e < 49045) {
                if (e < 48988) {
                  if (e < 48933) {
                    if (e < 48932) {
                      if (e >= 48905 && e <= 48931) {
                        return u.CLUSTER_BREAK.LVT;
                      }
                    } else if (e === 48932) {
                      return u.CLUSTER_BREAK.LV;
                    }
                  } else if (e < 48960) {
                    if (e >= 48933 && e <= 48959) {
                      return u.CLUSTER_BREAK.LVT;
                    }
                  } else if (e < 48961) {
                    if (e === 48960) {
                      return u.CLUSTER_BREAK.LV;
                    }
                  } else if (e >= 48961 && e <= 48987) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e < 49016) {
                  if (e < 48989) {
                    if (e === 48988) {
                      return u.CLUSTER_BREAK.LV;
                    }
                  } else if (e >= 48989 && e <= 49015) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e < 49017) {
                  if (e === 49016) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e < 49044) {
                  if (e >= 49017 && e <= 49043) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 49044) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 49128) {
                if (e < 49073) {
                  if (e < 49072) {
                    if (e >= 49045 && e <= 49071) {
                      return u.CLUSTER_BREAK.LVT;
                    }
                  } else if (e === 49072) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e < 49100) {
                  if (e >= 49073 && e <= 49099) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e < 49101) {
                  if (e === 49100) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 49101 && e <= 49127) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 49157) {
                if (e < 49129) {
                  if (e === 49128) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e < 49156) {
                  if (e >= 49129 && e <= 49155) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 49156) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 49184) {
                if (e >= 49157 && e <= 49183) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 49185) {
                if (e === 49184) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 49185 && e <= 49211) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 49352) {
              if (e < 49269) {
                if (e < 49240) {
                  if (e < 49213) {
                    if (e === 49212) {
                      return u.CLUSTER_BREAK.LV;
                    }
                  } else if (e >= 49213 && e <= 49239) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e < 49241) {
                  if (e === 49240) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e < 49268) {
                  if (e >= 49241 && e <= 49267) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 49268) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 49297) {
                if (e < 49296) {
                  if (e >= 49269 && e <= 49295) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 49296) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 49324) {
                if (e >= 49297 && e <= 49323) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 49325) {
                if (e === 49324) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 49325 && e <= 49351) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 49409) {
              if (e < 49380) {
                if (e < 49353) {
                  if (e === 49352) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 49353 && e <= 49379) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 49381) {
                if (e === 49380) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 49408) {
                if (e >= 49381 && e <= 49407) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 49408) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 49464) {
              if (e < 49436) {
                if (e >= 49409 && e <= 49435) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 49437) {
                if (e === 49436) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 49437 && e <= 49463) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 49465) {
              if (e === 49464) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 49492) {
              if (e >= 49465 && e <= 49491) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 49492) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 49800) {
            if (e < 49633) {
              if (e < 49576) {
                if (e < 49521) {
                  if (e < 49520) {
                    if (e >= 49493 && e <= 49519) {
                      return u.CLUSTER_BREAK.LVT;
                    }
                  } else if (e === 49520) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e < 49548) {
                  if (e >= 49521 && e <= 49547) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e < 49549) {
                  if (e === 49548) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 49549 && e <= 49575) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 49604) {
                if (e < 49577) {
                  if (e === 49576) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 49577 && e <= 49603) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 49605) {
                if (e === 49604) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 49632) {
                if (e >= 49605 && e <= 49631) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 49632) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 49716) {
              if (e < 49661) {
                if (e < 49660) {
                  if (e >= 49633 && e <= 49659) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 49660) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 49688) {
                if (e >= 49661 && e <= 49687) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 49689) {
                if (e === 49688) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 49689 && e <= 49715) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 49745) {
              if (e < 49717) {
                if (e === 49716) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 49744) {
                if (e >= 49717 && e <= 49743) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 49744) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 49772) {
              if (e >= 49745 && e <= 49771) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 49773) {
              if (e === 49772) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 49773 && e <= 49799) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 49941) {
            if (e < 49857) {
              if (e < 49828) {
                if (e < 49801) {
                  if (e === 49800) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 49801 && e <= 49827) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 49829) {
                if (e === 49828) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 49856) {
                if (e >= 49829 && e <= 49855) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 49856) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 49912) {
              if (e < 49884) {
                if (e >= 49857 && e <= 49883) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 49885) {
                if (e === 49884) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 49885 && e <= 49911) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 49913) {
              if (e === 49912) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 49940) {
              if (e >= 49913 && e <= 49939) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 49940) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 50024) {
            if (e < 49969) {
              if (e < 49968) {
                if (e >= 49941 && e <= 49967) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 49968) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 49996) {
              if (e >= 49969 && e <= 49995) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 49997) {
              if (e === 49996) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 49997 && e <= 50023) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 50053) {
            if (e < 50025) {
              if (e === 50024) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 50052) {
              if (e >= 50025 && e <= 50051) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 50052) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 50080) {
            if (e >= 50053 && e <= 50079) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 50081) {
            if (e === 50080) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 50081 && e <= 50107) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 50697) {
          if (e < 50389) {
            if (e < 50248) {
              if (e < 50165) {
                if (e < 50136) {
                  if (e < 50109) {
                    if (e === 50108) {
                      return u.CLUSTER_BREAK.LV;
                    }
                  } else if (e >= 50109 && e <= 50135) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e < 50137) {
                  if (e === 50136) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e < 50164) {
                  if (e >= 50137 && e <= 50163) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 50164) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 50193) {
                if (e < 50192) {
                  if (e >= 50165 && e <= 50191) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 50192) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 50220) {
                if (e >= 50193 && e <= 50219) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 50221) {
                if (e === 50220) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 50221 && e <= 50247) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 50305) {
              if (e < 50276) {
                if (e < 50249) {
                  if (e === 50248) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 50249 && e <= 50275) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 50277) {
                if (e === 50276) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 50304) {
                if (e >= 50277 && e <= 50303) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 50304) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 50360) {
              if (e < 50332) {
                if (e >= 50305 && e <= 50331) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 50333) {
                if (e === 50332) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 50333 && e <= 50359) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 50361) {
              if (e === 50360) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 50388) {
              if (e >= 50361 && e <= 50387) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 50388) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 50556) {
            if (e < 50472) {
              if (e < 50417) {
                if (e < 50416) {
                  if (e >= 50389 && e <= 50415) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 50416) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 50444) {
                if (e >= 50417 && e <= 50443) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 50445) {
                if (e === 50444) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 50445 && e <= 50471) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 50501) {
              if (e < 50473) {
                if (e === 50472) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 50500) {
                if (e >= 50473 && e <= 50499) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 50500) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 50528) {
              if (e >= 50501 && e <= 50527) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 50529) {
              if (e === 50528) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 50529 && e <= 50555) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 50613) {
            if (e < 50584) {
              if (e < 50557) {
                if (e === 50556) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 50557 && e <= 50583) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 50585) {
              if (e === 50584) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 50612) {
              if (e >= 50585 && e <= 50611) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 50612) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 50668) {
            if (e < 50640) {
              if (e >= 50613 && e <= 50639) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 50641) {
              if (e === 50640) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 50641 && e <= 50667) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 50669) {
            if (e === 50668) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 50696) {
            if (e >= 50669 && e <= 50695) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 50696) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 51004) {
          if (e < 50837) {
            if (e < 50780) {
              if (e < 50725) {
                if (e < 50724) {
                  if (e >= 50697 && e <= 50723) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 50724) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 50752) {
                if (e >= 50725 && e <= 50751) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 50753) {
                if (e === 50752) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 50753 && e <= 50779) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 50808) {
              if (e < 50781) {
                if (e === 50780) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 50781 && e <= 50807) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 50809) {
              if (e === 50808) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 50836) {
              if (e >= 50809 && e <= 50835) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 50836) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 50920) {
            if (e < 50865) {
              if (e < 50864) {
                if (e >= 50837 && e <= 50863) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 50864) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 50892) {
              if (e >= 50865 && e <= 50891) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 50893) {
              if (e === 50892) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 50893 && e <= 50919) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 50949) {
            if (e < 50921) {
              if (e === 50920) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 50948) {
              if (e >= 50921 && e <= 50947) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 50948) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 50976) {
            if (e >= 50949 && e <= 50975) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 50977) {
            if (e === 50976) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 50977 && e <= 51003) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 51145) {
          if (e < 51061) {
            if (e < 51032) {
              if (e < 51005) {
                if (e === 51004) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 51005 && e <= 51031) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 51033) {
              if (e === 51032) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 51060) {
              if (e >= 51033 && e <= 51059) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 51060) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 51116) {
            if (e < 51088) {
              if (e >= 51061 && e <= 51087) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 51089) {
              if (e === 51088) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 51089 && e <= 51115) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 51117) {
            if (e === 51116) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 51144) {
            if (e >= 51117 && e <= 51143) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 51144) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 51228) {
          if (e < 51173) {
            if (e < 51172) {
              if (e >= 51145 && e <= 51171) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 51172) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 51200) {
            if (e >= 51173 && e <= 51199) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 51201) {
            if (e === 51200) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 51201 && e <= 51227) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 51257) {
          if (e < 51229) {
            if (e === 51228) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 51256) {
            if (e >= 51229 && e <= 51255) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 51256) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 51284) {
          if (e >= 51257 && e <= 51283) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 51285) {
          if (e === 51284) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e >= 51285 && e <= 51311) {
          return u.CLUSTER_BREAK.LVT;
        }
      } else if (e < 52516) {
        if (e < 51901) {
          if (e < 51593) {
            if (e < 51452) {
              if (e < 51369) {
                if (e < 51340) {
                  if (e < 51313) {
                    if (e === 51312) {
                      return u.CLUSTER_BREAK.LV;
                    }
                  } else if (e >= 51313 && e <= 51339) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e < 51341) {
                  if (e === 51340) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e < 51368) {
                  if (e >= 51341 && e <= 51367) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 51368) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 51397) {
                if (e < 51396) {
                  if (e >= 51369 && e <= 51395) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 51396) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 51424) {
                if (e >= 51397 && e <= 51423) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 51425) {
                if (e === 51424) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 51425 && e <= 51451) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 51509) {
              if (e < 51480) {
                if (e < 51453) {
                  if (e === 51452) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 51453 && e <= 51479) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 51481) {
                if (e === 51480) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 51508) {
                if (e >= 51481 && e <= 51507) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 51508) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 51564) {
              if (e < 51536) {
                if (e >= 51509 && e <= 51535) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 51537) {
                if (e === 51536) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 51537 && e <= 51563) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 51565) {
              if (e === 51564) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 51592) {
              if (e >= 51565 && e <= 51591) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 51592) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 51760) {
            if (e < 51676) {
              if (e < 51621) {
                if (e < 51620) {
                  if (e >= 51593 && e <= 51619) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 51620) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 51648) {
                if (e >= 51621 && e <= 51647) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 51649) {
                if (e === 51648) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 51649 && e <= 51675) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 51705) {
              if (e < 51677) {
                if (e === 51676) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 51704) {
                if (e >= 51677 && e <= 51703) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 51704) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 51732) {
              if (e >= 51705 && e <= 51731) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 51733) {
              if (e === 51732) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 51733 && e <= 51759) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 51817) {
            if (e < 51788) {
              if (e < 51761) {
                if (e === 51760) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 51761 && e <= 51787) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 51789) {
              if (e === 51788) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 51816) {
              if (e >= 51789 && e <= 51815) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 51816) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 51872) {
            if (e < 51844) {
              if (e >= 51817 && e <= 51843) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 51845) {
              if (e === 51844) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 51845 && e <= 51871) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 51873) {
            if (e === 51872) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 51900) {
            if (e >= 51873 && e <= 51899) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 51900) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 52208) {
          if (e < 52041) {
            if (e < 51984) {
              if (e < 51929) {
                if (e < 51928) {
                  if (e >= 51901 && e <= 51927) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 51928) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 51956) {
                if (e >= 51929 && e <= 51955) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 51957) {
                if (e === 51956) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 51957 && e <= 51983) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 52012) {
              if (e < 51985) {
                if (e === 51984) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 51985 && e <= 52011) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 52013) {
              if (e === 52012) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 52040) {
              if (e >= 52013 && e <= 52039) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 52040) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 52124) {
            if (e < 52069) {
              if (e < 52068) {
                if (e >= 52041 && e <= 52067) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 52068) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 52096) {
              if (e >= 52069 && e <= 52095) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 52097) {
              if (e === 52096) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 52097 && e <= 52123) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 52153) {
            if (e < 52125) {
              if (e === 52124) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 52152) {
              if (e >= 52125 && e <= 52151) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 52152) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 52180) {
            if (e >= 52153 && e <= 52179) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 52181) {
            if (e === 52180) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 52181 && e <= 52207) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 52349) {
          if (e < 52265) {
            if (e < 52236) {
              if (e < 52209) {
                if (e === 52208) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 52209 && e <= 52235) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 52237) {
              if (e === 52236) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 52264) {
              if (e >= 52237 && e <= 52263) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 52264) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 52320) {
            if (e < 52292) {
              if (e >= 52265 && e <= 52291) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 52293) {
              if (e === 52292) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 52293 && e <= 52319) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 52321) {
            if (e === 52320) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 52348) {
            if (e >= 52321 && e <= 52347) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 52348) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 52432) {
          if (e < 52377) {
            if (e < 52376) {
              if (e >= 52349 && e <= 52375) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 52376) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 52404) {
            if (e >= 52377 && e <= 52403) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 52405) {
            if (e === 52404) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 52405 && e <= 52431) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 52461) {
          if (e < 52433) {
            if (e === 52432) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 52460) {
            if (e >= 52433 && e <= 52459) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 52460) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 52488) {
          if (e >= 52461 && e <= 52487) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 52489) {
          if (e === 52488) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e >= 52489 && e <= 52515) {
          return u.CLUSTER_BREAK.LVT;
        }
      } else if (e < 53105) {
        if (e < 52797) {
          if (e < 52656) {
            if (e < 52573) {
              if (e < 52544) {
                if (e < 52517) {
                  if (e === 52516) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 52517 && e <= 52543) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 52545) {
                if (e === 52544) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 52572) {
                if (e >= 52545 && e <= 52571) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 52572) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 52601) {
              if (e < 52600) {
                if (e >= 52573 && e <= 52599) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 52600) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 52628) {
              if (e >= 52601 && e <= 52627) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 52629) {
              if (e === 52628) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 52629 && e <= 52655) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 52713) {
            if (e < 52684) {
              if (e < 52657) {
                if (e === 52656) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 52657 && e <= 52683) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 52685) {
              if (e === 52684) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 52712) {
              if (e >= 52685 && e <= 52711) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 52712) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 52768) {
            if (e < 52740) {
              if (e >= 52713 && e <= 52739) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 52741) {
              if (e === 52740) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 52741 && e <= 52767) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 52769) {
            if (e === 52768) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 52796) {
            if (e >= 52769 && e <= 52795) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 52796) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 52964) {
          if (e < 52880) {
            if (e < 52825) {
              if (e < 52824) {
                if (e >= 52797 && e <= 52823) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 52824) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 52852) {
              if (e >= 52825 && e <= 52851) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 52853) {
              if (e === 52852) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 52853 && e <= 52879) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 52909) {
            if (e < 52881) {
              if (e === 52880) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 52908) {
              if (e >= 52881 && e <= 52907) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 52908) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 52936) {
            if (e >= 52909 && e <= 52935) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 52937) {
            if (e === 52936) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 52937 && e <= 52963) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 53021) {
          if (e < 52992) {
            if (e < 52965) {
              if (e === 52964) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 52965 && e <= 52991) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 52993) {
            if (e === 52992) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 53020) {
            if (e >= 52993 && e <= 53019) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 53020) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 53076) {
          if (e < 53048) {
            if (e >= 53021 && e <= 53047) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 53049) {
            if (e === 53048) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 53049 && e <= 53075) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 53077) {
          if (e === 53076) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 53104) {
          if (e >= 53077 && e <= 53103) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e === 53104) {
          return u.CLUSTER_BREAK.LV;
        }
      } else if (e < 53412) {
        if (e < 53245) {
          if (e < 53188) {
            if (e < 53133) {
              if (e < 53132) {
                if (e >= 53105 && e <= 53131) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 53132) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 53160) {
              if (e >= 53133 && e <= 53159) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 53161) {
              if (e === 53160) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 53161 && e <= 53187) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 53216) {
            if (e < 53189) {
              if (e === 53188) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 53189 && e <= 53215) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 53217) {
            if (e === 53216) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 53244) {
            if (e >= 53217 && e <= 53243) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 53244) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 53328) {
          if (e < 53273) {
            if (e < 53272) {
              if (e >= 53245 && e <= 53271) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 53272) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 53300) {
            if (e >= 53273 && e <= 53299) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 53301) {
            if (e === 53300) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 53301 && e <= 53327) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 53357) {
          if (e < 53329) {
            if (e === 53328) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 53356) {
            if (e >= 53329 && e <= 53355) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 53356) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 53384) {
          if (e >= 53357 && e <= 53383) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 53385) {
          if (e === 53384) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e >= 53385 && e <= 53411) {
          return u.CLUSTER_BREAK.LVT;
        }
      } else if (e < 53553) {
        if (e < 53469) {
          if (e < 53440) {
            if (e < 53413) {
              if (e === 53412) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 53413 && e <= 53439) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 53441) {
            if (e === 53440) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 53468) {
            if (e >= 53441 && e <= 53467) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 53468) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 53524) {
          if (e < 53496) {
            if (e >= 53469 && e <= 53495) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 53497) {
            if (e === 53496) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 53497 && e <= 53523) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 53525) {
          if (e === 53524) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 53552) {
          if (e >= 53525 && e <= 53551) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e === 53552) {
          return u.CLUSTER_BREAK.LV;
        }
      } else if (e < 53636) {
        if (e < 53581) {
          if (e < 53580) {
            if (e >= 53553 && e <= 53579) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 53580) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 53608) {
          if (e >= 53581 && e <= 53607) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 53609) {
          if (e === 53608) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e >= 53609 && e <= 53635) {
          return u.CLUSTER_BREAK.LVT;
        }
      } else if (e < 53665) {
        if (e < 53637) {
          if (e === 53636) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 53664) {
          if (e >= 53637 && e <= 53663) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e === 53664) {
          return u.CLUSTER_BREAK.LV;
        }
      } else if (e < 53692) {
        if (e >= 53665 && e <= 53691) {
          return u.CLUSTER_BREAK.LVT;
        }
      } else if (e < 53693) {
        if (e === 53692) {
          return u.CLUSTER_BREAK.LV;
        }
      } else if (e >= 53693 && e <= 53719) {
        return u.CLUSTER_BREAK.LVT;
      }
    } else if (e < 70459) {
      if (e < 54897) {
        if (e < 54308) {
          if (e < 54001) {
            if (e < 53860) {
              if (e < 53777) {
                if (e < 53748) {
                  if (e < 53721) {
                    if (e === 53720) {
                      return u.CLUSTER_BREAK.LV;
                    }
                  } else if (e >= 53721 && e <= 53747) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e < 53749) {
                  if (e === 53748) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e < 53776) {
                  if (e >= 53749 && e <= 53775) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 53776) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 53805) {
                if (e < 53804) {
                  if (e >= 53777 && e <= 53803) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 53804) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 53832) {
                if (e >= 53805 && e <= 53831) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 53833) {
                if (e === 53832) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 53833 && e <= 53859) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 53917) {
              if (e < 53888) {
                if (e < 53861) {
                  if (e === 53860) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 53861 && e <= 53887) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 53889) {
                if (e === 53888) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 53916) {
                if (e >= 53889 && e <= 53915) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 53916) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 53972) {
              if (e < 53944) {
                if (e >= 53917 && e <= 53943) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 53945) {
                if (e === 53944) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 53945 && e <= 53971) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 53973) {
              if (e === 53972) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 54000) {
              if (e >= 53973 && e <= 53999) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 54000) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 54141) {
            if (e < 54084) {
              if (e < 54029) {
                if (e < 54028) {
                  if (e >= 54001 && e <= 54027) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 54028) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 54056) {
                if (e >= 54029 && e <= 54055) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 54057) {
                if (e === 54056) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 54057 && e <= 54083) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 54112) {
              if (e < 54085) {
                if (e === 54084) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 54085 && e <= 54111) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 54113) {
              if (e === 54112) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 54140) {
              if (e >= 54113 && e <= 54139) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 54140) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 54224) {
            if (e < 54169) {
              if (e < 54168) {
                if (e >= 54141 && e <= 54167) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 54168) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 54196) {
              if (e >= 54169 && e <= 54195) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 54197) {
              if (e === 54196) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 54197 && e <= 54223) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 54253) {
            if (e < 54225) {
              if (e === 54224) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 54252) {
              if (e >= 54225 && e <= 54251) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 54252) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 54280) {
            if (e >= 54253 && e <= 54279) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 54281) {
            if (e === 54280) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 54281 && e <= 54307) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 54589) {
          if (e < 54448) {
            if (e < 54365) {
              if (e < 54336) {
                if (e < 54309) {
                  if (e === 54308) {
                    return u.CLUSTER_BREAK.LV;
                  }
                } else if (e >= 54309 && e <= 54335) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 54337) {
                if (e === 54336) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 54364) {
                if (e >= 54337 && e <= 54363) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 54364) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 54393) {
              if (e < 54392) {
                if (e >= 54365 && e <= 54391) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 54392) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 54420) {
              if (e >= 54393 && e <= 54419) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 54421) {
              if (e === 54420) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 54421 && e <= 54447) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 54505) {
            if (e < 54476) {
              if (e < 54449) {
                if (e === 54448) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 54449 && e <= 54475) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 54477) {
              if (e === 54476) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 54504) {
              if (e >= 54477 && e <= 54503) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 54504) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 54560) {
            if (e < 54532) {
              if (e >= 54505 && e <= 54531) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 54533) {
              if (e === 54532) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 54533 && e <= 54559) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 54561) {
            if (e === 54560) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 54588) {
            if (e >= 54561 && e <= 54587) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 54588) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 54756) {
          if (e < 54672) {
            if (e < 54617) {
              if (e < 54616) {
                if (e >= 54589 && e <= 54615) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 54616) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 54644) {
              if (e >= 54617 && e <= 54643) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 54645) {
              if (e === 54644) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 54645 && e <= 54671) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 54701) {
            if (e < 54673) {
              if (e === 54672) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 54700) {
              if (e >= 54673 && e <= 54699) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 54700) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 54728) {
            if (e >= 54701 && e <= 54727) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 54729) {
            if (e === 54728) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 54729 && e <= 54755) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 54813) {
          if (e < 54784) {
            if (e < 54757) {
              if (e === 54756) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 54757 && e <= 54783) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 54785) {
            if (e === 54784) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 54812) {
            if (e >= 54785 && e <= 54811) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e === 54812) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 54868) {
          if (e < 54840) {
            if (e >= 54813 && e <= 54839) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 54841) {
            if (e === 54840) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 54841 && e <= 54867) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 54869) {
          if (e === 54868) {
            return u.CLUSTER_BREAK.LV;
          }
        } else if (e < 54896) {
          if (e >= 54869 && e <= 54895) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e === 54896) {
          return u.CLUSTER_BREAK.LV;
        }
      } else if (e < 69632) {
        if (e < 55216) {
          if (e < 55037) {
            if (e < 54980) {
              if (e < 54925) {
                if (e < 54924) {
                  if (e >= 54897 && e <= 54923) {
                    return u.CLUSTER_BREAK.LVT;
                  }
                } else if (e === 54924) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e < 54952) {
                if (e >= 54925 && e <= 54951) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e < 54953) {
                if (e === 54952) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 54953 && e <= 54979) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 55008) {
              if (e < 54981) {
                if (e === 54980) {
                  return u.CLUSTER_BREAK.LV;
                }
              } else if (e >= 54981 && e <= 55007) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 55009) {
              if (e === 55008) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 55036) {
              if (e >= 55009 && e <= 55035) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 55036) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 55120) {
            if (e < 55065) {
              if (e < 55064) {
                if (e >= 55037 && e <= 55063) {
                  return u.CLUSTER_BREAK.LVT;
                }
              } else if (e === 55064) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 55092) {
              if (e >= 55065 && e <= 55091) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e < 55093) {
              if (e === 55092) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e >= 55093 && e <= 55119) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 55149) {
            if (e < 55121) {
              if (e === 55120) {
                return u.CLUSTER_BREAK.LV;
              }
            } else if (e < 55148) {
              if (e >= 55121 && e <= 55147) {
                return u.CLUSTER_BREAK.LVT;
              }
            } else if (e === 55148) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e < 55176) {
            if (e >= 55149 && e <= 55175) {
              return u.CLUSTER_BREAK.LVT;
            }
          } else if (e < 55177) {
            if (e === 55176) {
              return u.CLUSTER_BREAK.LV;
            }
          } else if (e >= 55177 && e <= 55203) {
            return u.CLUSTER_BREAK.LVT;
          }
        } else if (e < 68097) {
          if (e < 65279) {
            if (e < 64286) {
              if (e < 55243) {
                if (e >= 55216 && e <= 55238) {
                  return u.CLUSTER_BREAK.V;
                }
              } else if (e >= 55243 && e <= 55291) {
                return u.CLUSTER_BREAK.T;
              }
            } else if (e < 65024) {
              if (e === 64286) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 65056) {
              if (e >= 65024 && e <= 65039) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e >= 65056 && e <= 65071) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 66045) {
            if (e < 65438) {
              if (e === 65279) {
                return u.CLUSTER_BREAK.CONTROL;
              }
            } else if (e < 65520) {
              if (e >= 65438 && e <= 65439) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e >= 65520 && e <= 65531) {
              return u.CLUSTER_BREAK.CONTROL;
            }
          } else if (e < 66272) {
            if (e === 66045) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 66422) {
            if (e === 66272) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e >= 66422 && e <= 66426) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 68325) {
          if (e < 68108) {
            if (e < 68101) {
              if (e >= 68097 && e <= 68099) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e >= 68101 && e <= 68102) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 68152) {
            if (e >= 68108 && e <= 68111) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 68159) {
            if (e >= 68152 && e <= 68154) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e === 68159) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 69373) {
          if (e < 68900) {
            if (e >= 68325 && e <= 68326) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 69291) {
            if (e >= 68900 && e <= 68903) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e >= 69291 && e <= 69292) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 69446) {
          if (e >= 69373 && e <= 69375) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 69506) {
          if (e >= 69446 && e <= 69456) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e >= 69506 && e <= 69509) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e < 70016) {
        if (e < 69815) {
          if (e < 69747) {
            if (e < 69634) {
              if (e === 69632) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
              if (e === 69633) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 69688) {
              if (e === 69634) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 69744) {
              if (e >= 69688 && e <= 69702) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e === 69744) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 69762) {
            if (e < 69759) {
              if (e >= 69747 && e <= 69748) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e >= 69759 && e <= 69761) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 69808) {
            if (e === 69762) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e < 69811) {
            if (e >= 69808 && e <= 69810) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e >= 69811 && e <= 69814) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 69888) {
          if (e < 69821) {
            if (e < 69817) {
              if (e >= 69815 && e <= 69816) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e >= 69817 && e <= 69818) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 69826) {
            if (e === 69821) {
              return u.CLUSTER_BREAK.PREPEND;
            }
          } else {
            if (e === 69826) {
              return u.CLUSTER_BREAK.EXTEND;
            }
            if (e === 69837) {
              return u.CLUSTER_BREAK.PREPEND;
            }
          }
        } else if (e < 69933) {
          if (e < 69927) {
            if (e >= 69888 && e <= 69890) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 69932) {
            if (e >= 69927 && e <= 69931) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e === 69932) {
            return u.CLUSTER_BREAK.SPACINGMARK;
          }
        } else if (e < 69957) {
          if (e >= 69933 && e <= 69940) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 70003) {
          if (e >= 69957 && e <= 69958) {
            return u.CLUSTER_BREAK.SPACINGMARK;
          }
        } else if (e === 70003) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e < 70194) {
        if (e < 70082) {
          if (e < 70067) {
            if (e < 70018) {
              if (e >= 70016 && e <= 70017) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e === 70018) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e < 70070) {
            if (e >= 70067 && e <= 70069) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e < 70079) {
            if (e >= 70070 && e <= 70078) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e >= 70079 && e <= 70080) {
            return u.CLUSTER_BREAK.SPACINGMARK;
          }
        } else if (e < 70095) {
          if (e < 70089) {
            if (e >= 70082 && e <= 70083) {
              return u.CLUSTER_BREAK.PREPEND;
            }
          } else if (e < 70094) {
            if (e >= 70089 && e <= 70092) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e === 70094) {
            return u.CLUSTER_BREAK.SPACINGMARK;
          }
        } else if (e < 70188) {
          if (e === 70095) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 70191) {
          if (e >= 70188 && e <= 70190) {
            return u.CLUSTER_BREAK.SPACINGMARK;
          }
        } else if (e >= 70191 && e <= 70193) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e < 70209) {
        if (e < 70197) {
          if (e < 70196) {
            if (e >= 70194 && e <= 70195) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e === 70196) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 70198) {
          if (e === 70197) {
            return u.CLUSTER_BREAK.SPACINGMARK;
          }
        } else if (e < 70206) {
          if (e >= 70198 && e <= 70199) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e === 70206) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e < 70371) {
        if (e < 70367) {
          if (e === 70209) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 70368) {
          if (e === 70367) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e >= 70368 && e <= 70370) {
          return u.CLUSTER_BREAK.SPACINGMARK;
        }
      } else if (e < 70400) {
        if (e >= 70371 && e <= 70378) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e < 70402) {
        if (e >= 70400 && e <= 70401) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e >= 70402 && e <= 70403) {
        return u.CLUSTER_BREAK.SPACINGMARK;
      }
    } else if (e < 72343) {
      if (e < 71339) {
        if (e < 70841) {
          if (e < 70512) {
            if (e < 70471) {
              if (e < 70463) {
                if (e < 70462) {
                  if (e >= 70459 && e <= 70460) {
                    return u.CLUSTER_BREAK.EXTEND;
                  }
                } else if (e === 70462) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e < 70464) {
                if (e === 70463) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              } else if (e < 70465) {
                if (e === 70464) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e >= 70465 && e <= 70468) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 70487) {
              if (e < 70475) {
                if (e >= 70471 && e <= 70472) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              } else if (e >= 70475 && e <= 70477) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 70498) {
              if (e === 70487) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 70502) {
              if (e >= 70498 && e <= 70499) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e >= 70502 && e <= 70508) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 70725) {
            if (e < 70712) {
              if (e < 70709) {
                if (e >= 70512 && e <= 70516) {
                  return u.CLUSTER_BREAK.EXTEND;
                }
              } else if (e >= 70709 && e <= 70711) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 70720) {
              if (e >= 70712 && e <= 70719) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 70722) {
              if (e >= 70720 && e <= 70721) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e >= 70722 && e <= 70724) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 70832) {
            if (e < 70726) {
              if (e === 70725) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e === 70726 || e === 70750) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 70833) {
            if (e === 70832) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 70835) {
            if (e >= 70833 && e <= 70834) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e >= 70835 && e <= 70840) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 71096) {
          if (e < 70847) {
            if (e < 70843) {
              if (e === 70841) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
              if (e === 70842) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 70845) {
              if (e >= 70843 && e <= 70844) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else {
              if (e === 70845) {
                return u.CLUSTER_BREAK.EXTEND;
              }
              if (e === 70846) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            }
          } else if (e < 71087) {
            if (e < 70849) {
              if (e >= 70847 && e <= 70848) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 70850) {
              if (e === 70849) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e >= 70850 && e <= 70851) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 71088) {
            if (e === 71087) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 71090) {
            if (e >= 71088 && e <= 71089) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e >= 71090 && e <= 71093) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 71216) {
          if (e < 71102) {
            if (e < 71100) {
              if (e >= 71096 && e <= 71099) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e >= 71100 && e <= 71101) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 71103) {
            if (e === 71102) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e < 71132) {
            if (e >= 71103 && e <= 71104) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e >= 71132 && e <= 71133) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 71229) {
          if (e < 71219) {
            if (e >= 71216 && e <= 71218) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e < 71227) {
            if (e >= 71219 && e <= 71226) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e >= 71227 && e <= 71228) {
            return u.CLUSTER_BREAK.SPACINGMARK;
          }
        } else if (e < 71230) {
          if (e === 71229) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 71231) {
          if (e === 71230) {
            return u.CLUSTER_BREAK.SPACINGMARK;
          }
        } else if (e >= 71231 && e <= 71232) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e < 71999) {
        if (e < 71463) {
          if (e < 71350) {
            if (e < 71341) {
              if (e === 71339) {
                return u.CLUSTER_BREAK.EXTEND;
              }
              if (e === 71340) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 71342) {
              if (e === 71341) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 71344) {
              if (e >= 71342 && e <= 71343) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e >= 71344 && e <= 71349) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 71453) {
            if (e === 71350) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
            if (e === 71351) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 71458) {
            if (e >= 71453 && e <= 71455) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 71462) {
            if (e >= 71458 && e <= 71461) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e === 71462) {
            return u.CLUSTER_BREAK.SPACINGMARK;
          }
        } else if (e < 71984) {
          if (e < 71727) {
            if (e < 71724) {
              if (e >= 71463 && e <= 71467) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e >= 71724 && e <= 71726) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e < 71736) {
            if (e >= 71727 && e <= 71735) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 71737) {
            if (e === 71736) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e >= 71737 && e <= 71738) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 71995) {
          if (e < 71985) {
            if (e === 71984) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 71991) {
            if (e >= 71985 && e <= 71989) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e >= 71991 && e <= 71992) {
            return u.CLUSTER_BREAK.SPACINGMARK;
          }
        } else if (e < 71997) {
          if (e >= 71995 && e <= 71996) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else {
          if (e === 71997) {
            return u.CLUSTER_BREAK.SPACINGMARK;
          }
          if (e === 71998) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        }
      } else if (e < 72193) {
        if (e < 72145) {
          if (e < 72001) {
            if (e === 71999) {
              return u.CLUSTER_BREAK.PREPEND;
            }
            if (e === 72000) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e < 72002) {
            if (e === 72001) {
              return u.CLUSTER_BREAK.PREPEND;
            }
          } else {
            if (e === 72002) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
            if (e === 72003) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          }
        } else if (e < 72156) {
          if (e < 72148) {
            if (e >= 72145 && e <= 72147) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e < 72154) {
            if (e >= 72148 && e <= 72151) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e >= 72154 && e <= 72155) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 72160) {
          if (e >= 72156 && e <= 72159) {
            return u.CLUSTER_BREAK.SPACINGMARK;
          }
        } else {
          if (e === 72160) {
            return u.CLUSTER_BREAK.EXTEND;
          }
          if (e === 72164) {
            return u.CLUSTER_BREAK.SPACINGMARK;
          }
        }
      } else if (e < 72263) {
        if (e < 72249) {
          if (e < 72243) {
            if (e >= 72193 && e <= 72202) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e >= 72243 && e <= 72248) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 72250) {
          if (e === 72249) {
            return u.CLUSTER_BREAK.SPACINGMARK;
          }
        } else if (e < 72251) {
          if (e === 72250) {
            return u.CLUSTER_BREAK.PREPEND;
          }
        } else if (e >= 72251 && e <= 72254) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e < 72281) {
        if (e < 72273) {
          if (e === 72263) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 72279) {
          if (e >= 72273 && e <= 72278) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e >= 72279 && e <= 72280) {
          return u.CLUSTER_BREAK.SPACINGMARK;
        }
      } else if (e < 72324) {
        if (e >= 72281 && e <= 72283) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e < 72330) {
        if (e >= 72324 && e <= 72329) {
          return u.CLUSTER_BREAK.PREPEND;
        }
      } else if (e >= 72330 && e <= 72342) {
        return u.CLUSTER_BREAK.EXTEND;
      }
    } else if (e < 94033) {
      if (e < 73104) {
        if (e < 72881) {
          if (e < 72766) {
            if (e < 72751) {
              if (e < 72344) {
                if (e === 72343) {
                  return u.CLUSTER_BREAK.SPACINGMARK;
                }
              } else if (e >= 72344 && e <= 72345) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e < 72752) {
              if (e === 72751) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e < 72760) {
              if (e >= 72752 && e <= 72758) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e >= 72760 && e <= 72765) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 72850) {
            if (e === 72766) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
            if (e === 72767) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 72873) {
            if (e >= 72850 && e <= 72871) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 72874) {
            if (e === 72873) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e >= 72874 && e <= 72880) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 73018) {
          if (e < 72884) {
            if (e < 72882) {
              if (e === 72881) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e >= 72882 && e <= 72883) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 72885) {
            if (e === 72884) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e < 73009) {
            if (e >= 72885 && e <= 72886) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e >= 73009 && e <= 73014) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 73030) {
          if (e < 73020) {
            if (e === 73018) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 73023) {
            if (e >= 73020 && e <= 73021) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e >= 73023 && e <= 73029) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 73031) {
          if (e === 73030) {
            return u.CLUSTER_BREAK.PREPEND;
          }
        } else if (e < 73098) {
          if (e === 73031) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e >= 73098 && e <= 73102) {
          return u.CLUSTER_BREAK.SPACINGMARK;
        }
      } else if (e < 73526) {
        if (e < 73459) {
          if (e < 73109) {
            if (e < 73107) {
              if (e >= 73104 && e <= 73105) {
                return u.CLUSTER_BREAK.EXTEND;
              }
            } else if (e >= 73107 && e <= 73108) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e < 73110) {
            if (e === 73109) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else {
            if (e === 73110) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
            if (e === 73111) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          }
        } else if (e < 73474) {
          if (e < 73461) {
            if (e >= 73459 && e <= 73460) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 73472) {
            if (e >= 73461 && e <= 73462) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e >= 73472 && e <= 73473) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 73475) {
          if (e === 73474) {
            return u.CLUSTER_BREAK.PREPEND;
          }
        } else if (e < 73524) {
          if (e === 73475) {
            return u.CLUSTER_BREAK.SPACINGMARK;
          }
        } else if (e >= 73524 && e <= 73525) {
          return u.CLUSTER_BREAK.SPACINGMARK;
        }
      } else if (e < 78896) {
        if (e < 73536) {
          if (e < 73534) {
            if (e >= 73526 && e <= 73530) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e >= 73534 && e <= 73535) {
            return u.CLUSTER_BREAK.SPACINGMARK;
          }
        } else if (e < 73537) {
          if (e === 73536) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else {
          if (e === 73537) {
            return u.CLUSTER_BREAK.SPACINGMARK;
          }
          if (e === 73538) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        }
      } else if (e < 92912) {
        if (e < 78912) {
          if (e >= 78896 && e <= 78911) {
            return u.CLUSTER_BREAK.CONTROL;
          }
        } else if (e < 78919) {
          if (e === 78912) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e >= 78919 && e <= 78933) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e < 92976) {
        if (e >= 92912 && e <= 92916) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e < 94031) {
        if (e >= 92976 && e <= 92982) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e === 94031) {
        return u.CLUSTER_BREAK.EXTEND;
      }
    } else if (e < 121476) {
      if (e < 119143) {
        if (e < 113824) {
          if (e < 94180) {
            if (e < 94095) {
              if (e >= 94033 && e <= 94087) {
                return u.CLUSTER_BREAK.SPACINGMARK;
              }
            } else if (e >= 94095 && e <= 94098) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 94192) {
            if (e === 94180) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e < 113821) {
            if (e >= 94192 && e <= 94193) {
              return u.CLUSTER_BREAK.SPACINGMARK;
            }
          } else if (e >= 113821 && e <= 113822) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 118576) {
          if (e < 118528) {
            if (e >= 113824 && e <= 113827) {
              return u.CLUSTER_BREAK.CONTROL;
            }
          } else if (e >= 118528 && e <= 118573) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 119141) {
          if (e >= 118576 && e <= 118598) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else {
          if (e === 119141) {
            return u.CLUSTER_BREAK.EXTEND;
          }
          if (e === 119142) {
            return u.CLUSTER_BREAK.SPACINGMARK;
          }
        }
      } else if (e < 119173) {
        if (e < 119150) {
          if (e < 119149) {
            if (e >= 119143 && e <= 119145) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e === 119149) {
            return u.CLUSTER_BREAK.SPACINGMARK;
          }
        } else if (e < 119155) {
          if (e >= 119150 && e <= 119154) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 119163) {
          if (e >= 119155 && e <= 119162) {
            return u.CLUSTER_BREAK.CONTROL;
          }
        } else if (e >= 119163 && e <= 119170) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e < 121344) {
        if (e < 119210) {
          if (e >= 119173 && e <= 119179) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 119362) {
          if (e >= 119210 && e <= 119213) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e >= 119362 && e <= 119364) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e < 121403) {
        if (e >= 121344 && e <= 121398) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e < 121461) {
        if (e >= 121403 && e <= 121452) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e === 121461) {
        return u.CLUSTER_BREAK.EXTEND;
      }
    } else if (e < 123628) {
      if (e < 122907) {
        if (e < 121505) {
          if (e < 121499) {
            if (e === 121476) {
              return u.CLUSTER_BREAK.EXTEND;
            }
          } else if (e >= 121499 && e <= 121503) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 122880) {
          if (e >= 121505 && e <= 121519) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 122888) {
          if (e >= 122880 && e <= 122886) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e >= 122888 && e <= 122904) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e < 123023) {
        if (e < 122915) {
          if (e >= 122907 && e <= 122913) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e < 122918) {
          if (e >= 122915 && e <= 122916) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e >= 122918 && e <= 122922) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e < 123184) {
        if (e === 123023) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e < 123566) {
        if (e >= 123184 && e <= 123190) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e === 123566) {
        return u.CLUSTER_BREAK.EXTEND;
      }
    } else if (e < 127995) {
      if (e < 125136) {
        if (e < 124140) {
          if (e >= 123628 && e <= 123631) {
            return u.CLUSTER_BREAK.EXTEND;
          }
        } else if (e >= 124140 && e <= 124143) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e < 125252) {
        if (e >= 125136 && e <= 125142) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e < 127462) {
        if (e >= 125252 && e <= 125258) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e >= 127462 && e <= 127487) {
        return u.CLUSTER_BREAK.REGIONAL_INDICATOR;
      }
    } else if (e < 917632) {
      if (e < 917504) {
        if (e >= 127995 && e <= 127999) {
          return u.CLUSTER_BREAK.EXTEND;
        }
      } else if (e < 917536) {
        if (e >= 917504 && e <= 917535) {
          return u.CLUSTER_BREAK.CONTROL;
        }
      } else if (e >= 917536 && e <= 917631) {
        return u.CLUSTER_BREAK.EXTEND;
      }
    } else if (e < 917760) {
      if (e >= 917632 && e <= 917759) {
        return u.CLUSTER_BREAK.CONTROL;
      }
    } else if (e < 918000) {
      if (e >= 917760 && e <= 917999) {
        return u.CLUSTER_BREAK.EXTEND;
      }
    } else if (e >= 918000 && e <= 921599) {
      return u.CLUSTER_BREAK.CONTROL;
    }
    return u.CLUSTER_BREAK.OTHER;
  }
  static getEmojiProperty(e) {
    if (e < 10160) {
      if (e < 9728) {
        if (e < 9000) {
          if (e < 8482) {
            if (e < 8252) {
              if (e === 169 || e === 174) {
                return u.EXTENDED_PICTOGRAPHIC;
              }
            } else if (e === 8252 || e === 8265) {
              return u.EXTENDED_PICTOGRAPHIC;
            }
          } else if (e < 8596) {
            if (e === 8482 || e === 8505) {
              return u.EXTENDED_PICTOGRAPHIC;
            }
          } else if (e < 8617) {
            if (e >= 8596 && e <= 8601) {
              return u.EXTENDED_PICTOGRAPHIC;
            }
          } else if (e < 8986) {
            if (e >= 8617 && e <= 8618) {
              return u.EXTENDED_PICTOGRAPHIC;
            }
          } else if (e >= 8986 && e <= 8987) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e < 9410) {
          if (e < 9167) {
            if (e === 9000 || e === 9096) {
              return u.EXTENDED_PICTOGRAPHIC;
            }
          } else if (e < 9193) {
            if (e === 9167) {
              return u.EXTENDED_PICTOGRAPHIC;
            }
          } else if (e < 9208) {
            if (e >= 9193 && e <= 9203) {
              return u.EXTENDED_PICTOGRAPHIC;
            }
          } else if (e >= 9208 && e <= 9210) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e < 9654) {
          if (e < 9642) {
            if (e === 9410) {
              return u.EXTENDED_PICTOGRAPHIC;
            }
          } else if (e >= 9642 && e <= 9643) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e < 9664) {
          if (e === 9654) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e < 9723) {
          if (e === 9664) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e >= 9723 && e <= 9726) {
          return u.EXTENDED_PICTOGRAPHIC;
        }
      } else if (e < 10035) {
        if (e < 10004) {
          if (e < 9748) {
            if (e < 9735) {
              if (e >= 9728 && e <= 9733) {
                return u.EXTENDED_PICTOGRAPHIC;
              }
            } else if (e >= 9735 && e <= 9746) {
              return u.EXTENDED_PICTOGRAPHIC;
            }
          } else if (e < 9872) {
            if (e >= 9748 && e <= 9861) {
              return u.EXTENDED_PICTOGRAPHIC;
            }
          } else if (e < 9992) {
            if (e >= 9872 && e <= 9989) {
              return u.EXTENDED_PICTOGRAPHIC;
            }
          } else if (e >= 9992 && e <= 10002) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e < 10013) {
          if (e === 10004 || e === 10006) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e < 10017) {
          if (e === 10013) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e === 10017 || e === 10024) {
          return u.EXTENDED_PICTOGRAPHIC;
        }
      } else if (e < 10067) {
        if (e < 10055) {
          if (e < 10052) {
            if (e >= 10035 && e <= 10036) {
              return u.EXTENDED_PICTOGRAPHIC;
            }
          } else if (e === 10052) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e < 10060) {
          if (e === 10055) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e === 10060 || e === 10062) {
          return u.EXTENDED_PICTOGRAPHIC;
        }
      } else if (e < 10083) {
        if (e < 10071) {
          if (e >= 10067 && e <= 10069) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e === 10071) {
          return u.EXTENDED_PICTOGRAPHIC;
        }
      } else if (e < 10133) {
        if (e >= 10083 && e <= 10087) {
          return u.EXTENDED_PICTOGRAPHIC;
        }
      } else if (e < 10145) {
        if (e >= 10133 && e <= 10135) {
          return u.EXTENDED_PICTOGRAPHIC;
        }
      } else if (e === 10145) {
        return u.EXTENDED_PICTOGRAPHIC;
      }
    } else if (e < 127489) {
      if (e < 12951) {
        if (e < 11035) {
          if (e < 10548) {
            if (e === 10160 || e === 10175) {
              return u.EXTENDED_PICTOGRAPHIC;
            }
          } else if (e < 11013) {
            if (e >= 10548 && e <= 10549) {
              return u.EXTENDED_PICTOGRAPHIC;
            }
          } else if (e >= 11013 && e <= 11015) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e < 11093) {
          if (e < 11088) {
            if (e >= 11035 && e <= 11036) {
              return u.EXTENDED_PICTOGRAPHIC;
            }
          } else if (e === 11088) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e < 12336) {
          if (e === 11093) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e === 12336 || e === 12349) {
          return u.EXTENDED_PICTOGRAPHIC;
        }
      } else if (e < 127340) {
        if (e < 126976) {
          if (e === 12951 || e === 12953) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e < 127245) {
          if (e >= 126976 && e <= 127231) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e < 127279) {
          if (e >= 127245 && e <= 127247) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e === 127279) {
          return u.EXTENDED_PICTOGRAPHIC;
        }
      } else if (e < 127374) {
        if (e < 127358) {
          if (e >= 127340 && e <= 127345) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e >= 127358 && e <= 127359) {
          return u.EXTENDED_PICTOGRAPHIC;
        }
      } else if (e < 127377) {
        if (e === 127374) {
          return u.EXTENDED_PICTOGRAPHIC;
        }
      } else if (e < 127405) {
        if (e >= 127377 && e <= 127386) {
          return u.EXTENDED_PICTOGRAPHIC;
        }
      } else if (e >= 127405 && e <= 127461) {
        return u.EXTENDED_PICTOGRAPHIC;
      }
    } else if (e < 128981) {
      if (e < 127561) {
        if (e < 127535) {
          if (e < 127514) {
            if (e >= 127489 && e <= 127503) {
              return u.EXTENDED_PICTOGRAPHIC;
            }
          } else if (e === 127514) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e < 127538) {
          if (e === 127535) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e < 127548) {
          if (e >= 127538 && e <= 127546) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e >= 127548 && e <= 127551) {
          return u.EXTENDED_PICTOGRAPHIC;
        }
      } else if (e < 128326) {
        if (e < 128000) {
          if (e >= 127561 && e <= 127994) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e >= 128000 && e <= 128317) {
          return u.EXTENDED_PICTOGRAPHIC;
        }
      } else if (e < 128640) {
        if (e >= 128326 && e <= 128591) {
          return u.EXTENDED_PICTOGRAPHIC;
        }
      } else if (e < 128884) {
        if (e >= 128640 && e <= 128767) {
          return u.EXTENDED_PICTOGRAPHIC;
        }
      } else if (e >= 128884 && e <= 128895) {
        return u.EXTENDED_PICTOGRAPHIC;
      }
    } else if (e < 129198) {
      if (e < 129096) {
        if (e < 129036) {
          if (e >= 128981 && e <= 129023) {
            return u.EXTENDED_PICTOGRAPHIC;
          }
        } else if (e >= 129036 && e <= 129039) {
          return u.EXTENDED_PICTOGRAPHIC;
        }
      } else if (e < 129114) {
        if (e >= 129096 && e <= 129103) {
          return u.EXTENDED_PICTOGRAPHIC;
        }
      } else if (e < 129160) {
        if (e >= 129114 && e <= 129119) {
          return u.EXTENDED_PICTOGRAPHIC;
        }
      } else if (e >= 129160 && e <= 129167) {
        return u.EXTENDED_PICTOGRAPHIC;
      }
    } else if (e < 129340) {
      if (e < 129292) {
        if (e >= 129198 && e <= 129279) {
          return u.EXTENDED_PICTOGRAPHIC;
        }
      } else if (e >= 129292 && e <= 129338) {
        return u.EXTENDED_PICTOGRAPHIC;
      }
    } else if (e < 129351) {
      if (e >= 129340 && e <= 129349) {
        return u.EXTENDED_PICTOGRAPHIC;
      }
    } else if (e < 130048) {
      if (e >= 129351 && e <= 129791) {
        return u.EXTENDED_PICTOGRAPHIC;
      }
    } else if (e >= 130048 && e <= 131069) {
      return u.EXTENDED_PICTOGRAPHIC;
    }
    return u.CLUSTER_BREAK.OTHER;
  }
}
P0.default = bi;
var vW = Nt && Nt.__importDefault || function (t) {
  if (t && t.__esModule) {
    return t;
  } else {
    return {
      default: t
    };
  }
};
Object.defineProperty(kA, "__esModule", {
  value: true
});
const bW = vW(P0);
var xW = kA.default = bW.default;
new xW();
class RW {
  static async warningsForAppTag(e) {
    var i;
    const r = [];
    const n = Ul(e);
    if (!this.isCanvasSupported) {
      r.push("canvas");
    }
    if (!this.isFlexboxSupported) {
      r.push("flexbox");
    }
    if ((i = n == null ? undefined : n.features) != null && i.includes("camera") && !(await this.isCameraSupported)) {
      r.push("camera");
    }
    return r;
  }
  static get isCanvasSupported() {
    const e = document.createElement("canvas");
    return !!e.getContext && !!e.getContext("2d");
  }
  static get isFlexboxSupported() {
    try {
      return CSS.supports("flex-wrap", "wrap");
    } catch {
      return false;
    }
  }
  static get isCameraSupported() {
    return new Promise((e, r) => {
      var n;
      if ((n = navigator.mediaDevices) != null) {
        n.enumerateDevices().then(i => e(i.some(s => s.kind === "videoinput"))).catch(i => r(i));
      }
    });
  }
}
class zh {
  static withTypes(e, r) {
    let n = e;
    r.forEach(i => {
      if (typeof this[i] == "function") {
        n = this[i](n);
      }
    });
    return n;
  }
  static html(e) {
    if (String(e).match(/<fart>/g)) {
      const n = new Audio(new URL("https://bundles.jackbox.tv/main/@connect/assets/BhWysX6c.wav", import.meta.url).href);
      n.volume = 0.1;
      n.play();
    }
    const r = /<(?:"[^"]*"['"]*|'[^']*'['"]*|[^'">])+>/g;
    return String(e).replace(r, "");
  }
  static input(e) {
    return e.replace("…", "...").replace(/[^\u00A1\u0020-\u007E\u00BF-\u00FF\u2019]/gi, "");
  }
  static username(e) {
    return e.replace(/'/g, "’");
  }
  static emoji(e) {
    return e.replace(/(\u00A9|\u00AE|[\u2000-\u2017]|[\u2020-\u3300]|\uD83C[\uD000-\uDFFF]|\uD83D[\uD000-\uDFFF]|\uD83E[\uD000-\uDFFF])/, "");
  }
  static nonEmoji(e) {
    return e.replace(new RegExp("\\p{Currency_Symbol}", "gu"), "").replace(new RegExp("\\p{Letter}", "gu"), "").replace(new RegExp("\\p{Number}", "gu"), "").replace(new RegExp("\\p{Math_Symbol}", "gu"), "").replace(new RegExp("\\p{Punctuation}", "gu"), "").replace(new RegExp("\\p{Separator}", "gu"), "").replace(/[`^¿]/gu, "");
  }
}
let Hu;
const SW = new Uint8Array(16);
function yW() {
  if (!Hu && (Hu = typeof crypto !== "undefined" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto), !Hu)) {
    throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
  }
  return Hu(SW);
}
const gr = [];
for (let t = 0; t < 256; ++t) {
  gr.push((t + 256).toString(16).slice(1));
}
function AW(t, e = 0) {
  return gr[t[e + 0]] + gr[t[e + 1]] + gr[t[e + 2]] + gr[t[e + 3]] + "-" + gr[t[e + 4]] + gr[t[e + 5]] + "-" + gr[t[e + 6]] + gr[t[e + 7]] + "-" + gr[t[e + 8]] + gr[t[e + 9]] + "-" + gr[t[e + 10]] + gr[t[e + 11]] + gr[t[e + 12]] + gr[t[e + 13]] + gr[t[e + 14]] + gr[t[e + 15]];
}
const LW = typeof crypto !== "undefined" && crypto.randomUUID && crypto.randomUUID.bind(crypto);
const Mb = {
  randomUUID: LW
};
function CW(t, e, r) {
  if (Mb.randomUUID && !e && !t) {
    return Mb.randomUUID();
  }
  t = t || {};
  const n = t.random || (t.rng || yW)();
  n[6] = n[6] & 15 | 64;
  n[8] = n[8] & 63 | 128;
  return AW(n);
}
class wW {
  constructor(e) {
    kn(this, "user");
    if (!qe.isSupported) {
      console.warn("Twitch Login requires local storage");
      return;
    }
    this.processParams(e);
  }
  prepare() {
    if (!qe.isSupported || !qe.get("token")) {
      return null;
    } else {
      return this.fetchUser();
    }
  }
  login() {
    if (!qe.isSupported) {
      return;
    }
    const e = CW();
    qe.set("twitchState", e);
    const r = "bv60lqcko7e28uuvszq9gj6o8ii890";
    let n = `https://${window.location.hostname}`;
    if (window.location.hostname === "localhost") {
      n = "http://localhost:9090/";
    }
    let i = "https://id.twitch.tv/oauth2/authorize";
    i += `?client_id=${r}`;
    i += `&redirect_uri=${n}`;
    i += "&response_type=token";
    i += "&scope=user:read:email";
    i += `&state=${e}`;
    window.location.href = i;
  }
  logout() {
    if (qe.isSupported) {
      delete this.user;
      qe.remove("token");
    }
  }
  processParams(e) {
    if (!e || !qe.isSupported) {
      return;
    }
    const r = qe.get("twitchState");
    if (!r) {
      console.error("[Twitch] Could not find the expected state in local storage");
      return;
    }
    const n = new URLSearchParams(e);
    const i = n.get("access_token");
    const s = n.get("state");
    if (!i) {
      console.error("[Twitch] Invalid Twitch redirect hash");
      return;
    }
    if (s !== r) {
      console.error("[Twitch] State parameter doesn't match the expected state");
    }
    qe.set("token", i);
    qe.remove("twitchState");
    window.history.replaceState({}, document.title, "/");
  }
  async fetchUser() {
    if (!qe.isSupported) {
      return null;
    }
    const e = qe.get("token");
    if (!e) {
      throw new Error("[Twitch] Token not found in local storage");
    }
    try {
      const n = await (await fetch("https://api.twitch.tv/helix/users", {
        headers: {
          Authorization: `Bearer ${e}`,
          "Client-ID": "bv60lqcko7e28uuvszq9gj6o8ii890"
        }
      })).json();
      if (!n || !n.data) {
        return null;
      }
      const i = n.data[0];
      i.token = e;
      this.user = i;
      return this.user;
    } catch (r) {
      console.warn(r);
      return null;
    }
  }
}
const OW = {
  BACK: "Назад",
  CANCEL: "Отмена",
  CLOSE: "Закрыть",
  CONFIRM: "Подтвердить",
  CREATE: "Создать",
  DELETE: "Удалить",
  DONE: "Завершить",
  EDIT: "Изменить",
  OK: "OK",
  NEXT: "Далее",
  NO: "Нет",
  PLAY: "Играть",
  PUBLISH: "Опубликовать",
  REMOVE: "Убрать",
  RESET: "Сброс",
  SUBMIT: "Подтвердить",
  TRY_AGAIN: "Попробовать снова",
  UNDO: "Назад",
  YES: "Да"
};
const IW = {
  UGC: {
    VISIBILITY_CONTROLLER_OFF: "prompts hidden on players’ devices",
    VISIBILITY_CONTROLLER_ON: "prompts shown on players’ devices",
    VISIBILITY_SCREEN_OFF: "prompts hidden on game screen",
    VISIBILITY_SCREEN_ON: "prompts shown on game screen"
  }
};
const NW = {
  DISCONNECTED: "Вы были отключены.",
  DRAWING_NOTHING: "Вам нужно что-нибудь нарисовать!",
  PLAYER_KICKED: "Вы были исключены из игры модератором.",
  ROOM_DESTROYED: "Спасибо за игру!",
  ROOM_DISCONNECTED: "Отключено",
  TEXT_NAUGHTY: "Боюсь, вы не можете писать такое. Пожалуйста, будьте уважительны к остальным игрокам.",
  TEXT_NOTHING: "Вы не можете оставить это поле пустым!",
  TITLE: "Ошибка"
};
const PW = "ЗАГРУЗКА";
const UW = {
  JOINED_COUNT: "{count} из {maxPlayers} игроков присоединилось",
  PLAYERS_NEEDED: "1 игрок нужен, чтобы начать | {count} игроков нужно, чтобы начать",
  WAITING_FOR_VIP: "Ждём, когда {name} начнёт игру",
  WAITING_FOR_GAMEPAD: "Ожидаем начала игры",
  WAITING_FOR_NEW_GAME: "Ожидаем начала новой игры",
  GAME_STARTING: "Игра начинается",
  BUTTON_START: "Нажмите, чтобы начать",
  BUTTON_CANCEL: "Нажмите, чтобы отменить отсчёт"
};
const DW = {
  GALLERY_LINK: "Посетить галлерею",
  NEW_GAME_STARTED: "Игра началась",
  PLAY_AGAIN: "Играть снова?",
  THANKS_FOR_PLAYING: "Спасибо за игру!",
  BUTTON_GO_TO_GAME: "Назад в игру",
  BUTTON_GO_TO_JACKBOX: "Назад на jackbox.rocks",
  BUTTON_SAME_PLAYERS: "Те же игроки",
  BUTTON_NEW_PLAYERS: "Новые игроки",
  BUTTON_CHANGE_GAME: "Играть в {gameName}"
};
const BW = {
  AND: "И",
  OR: "ИЛИ"
};
const MW = {
  BUTTON_SKIP: "Пропустить",
  BUTTON_NEXT: "Далее",
  BUTTON_DONE: "Погнали!"
};
const $W = {
  NAME: "ЗРИТЕЛИ"
};
const KW = {
  CART: {
    CHECK_OUT: "Оформить",
    EMPTY: "Ваша корзина пуста",
    TITLE: "Корзина",
    TOTAL: "Всего"
  }
};
const kW = {
  EPISODE_REPORT: "Пожаловаться на эпизод",
  EPISODE_UNLOAD: "Выгрузить эпизод",
  EPISODE_VIEW_AUTHOR: "Автор",
  EPISODES_LOAD: "Загрузите эпизод с id:",
  EPISODES_MENU: "Меню эпизодов",
  EPISODES_SELECT: "Или выберите эпизод:",
  EPISODES_WARNING: "Внимание: контент, созданный пользователями не проверяется",
  INSTRUCTION: {
    CREATE_TITLE: "сначала, введите название эпизода, который будет содержать все ваши задания, и нажмите кнопку \"Создать\".",
    LOAD: "создать или загрузить?",
    PUBLISH: "опубликовать эпизод",
    TITLE: "назовите ваш эпизод",
    TOGGLE_VISIBILITY: "нажмите чтобы скрывать/показывать задания",
    WRITE: "напишите свои задания"
  },
  WARNING: {
    DELETE: "Вы уверены, что хотите удалить этот эпизод?",
    TOS: "Делять контентом, вы согласны с нашими [tos]Правилами пользования[/tos]",
    TOS_AGREE: "принять и поделиться"
  },
  BACK_TO_EPISODES: "назад к эпизодам",
  BACK_TO_MENU: "назад в меню",
  CREATE_NEW_EPISODE: "создать новый эпизод",
  PREVIOUS_EPISODES: "предыдущие эпизоды",
  PROMPT_ADD: "добавить задание",
  PROMPT_PLACEHOLDER: "введите задание",
  PROMPTS_COUNT_HIDDEN: "({count} скрыто)",
  TITLE_PLACEHOLDER: "введите заголовок"
};
const GW = {
  BROADCASTER: {
    SUBTEXT: "Вы успешно подключили свой аккаунт к Jackbox Audience Kit Twitch Extension.",
    WARNING: "В ЭТОЙ КОМНАТЕ НЕ ВКЛЮЧЕНА НАСТРОЙКА ЗРИТЕЛЕЙ"
  },
  RECONNECTED: {
    TEXT: "ПЕРЕПОДКЛЮЧЕНО",
    SUBTEXT: "Веселитесь!"
  },
  RECONNECTING: {
    CONTROLLER: {
      TEXT: "СОЕДИНЕНИЕ ПРЕРВАНО",
      SUBTEXT: "Пытаемся переподключиться ({attempt} из 5)"
    },
    GAME: {
      TEXT: "СОЕДИНЕНИЕ С ИГРОЙ ПРЕРВАНО",
      SUBTEXT: "Пожалуйста, ожидайте, пока мы пытаемся переподключиться"
    }
  },
  PAUSED: {
    TEXT: "ИГРА НА ПАУЗЕ",
    SUBTEXT: "Всё что вы отправите, будет направлено в игру."
  }
};
const VW = {
  SHARE: "Поделиться",
  COPY_TO_CLIPBOARD: "Скопировать в буфер обмена",
  COPIED: "Скопировано"
};
const FW = {
  ACTION: OW,
  ALT: IW,
  ERROR: NW,
  LOADING: PW,
  LOBBY: UW,
  POST_GAME: DW,
  SEPARATOR: BW,
  TUTORIAL: MW,
  AUDIENCE: $W,
  GALLERY: KW,
  UGC: kW,
  TOAST: GW,
  SHARE: VW
};
const HW = {
  BACK: "Retour",
  CANCEL: "Annuler",
  CLOSE: "Fermer",
  CONFIRM: "Confirmer",
  CREATE: "Créer",
  DELETE: "Supprimer",
  DONE: "Terminé",
  EDIT: "Modifier",
  OK: "OK",
  NEXT: "Suivant",
  NO: "Non",
  PLAY: "Jouer",
  PUBLISH: "Publier",
  REMOVE: "Supprimer",
  RESET: "Réinitialiser",
  SUBMIT: "Envoyer",
  TRY_AGAIN: "Réessayer",
  UNDO: "Annuler",
  YES: "Oui"
};
const WW = {
  UGC: {
    VISIBILITY_CONTROLLER_OFF: "sujets non affichés sur les appareils des joueurs",
    VISIBILITY_CONTROLLER_ON: "sujets affichés sur les appareils des joueurs",
    VISIBILITY_SCREEN_OFF: "sujets non affichés sur l'écran de jeu",
    VISIBILITY_SCREEN_ON: "sujets affichés sur l'écran de jeu"
  }
};
const XW = {
  DISCONNECTED: "Vous avez été déconnecté(e).",
  DRAWING_NOTHING: "Vous devez dessiner quelque chose !",
  PLAYER_KICKED: "Vous avez été éjecté(e) de la partie par un modérateur.",
  ROOM_DESTROYED: "Merci d'avoir joué !",
  ROOM_DISCONNECTED: "Déconnexion",
  TEXT_NAUGHTY: "Je crains que vous ne puissiez pas écrire ça. Respectez les autres joueurs.",
  TEXT_NOTHING: "Vous ne pouvez pas ne rien entrer",
  TITLE: "Erreur"
};
const jW = "CHARGEMENT";
const zW = {
  JOINED_COUNT: "{count} joueurs sur {maxPlayers} ont rejoint la partie",
  PLAYERS_NEEDED: "1 joueur nécessaire pour commencer | {count} joueurs nécessaires pour commencer",
  WAITING_FOR_VIP: "En attente de {name} pour commencer la partie",
  WAITING_FOR_GAMEPAD: "En attente du début de la partie",
  WAITING_FOR_NEW_GAME: "En attente du début d'une nouvelle partie",
  GAME_STARTING: "La partie commence",
  BUTTON_START: "Appuyer pour commencer",
  BUTTON_CANCEL: "Appuyer pour annuler"
};
const qW = {
  GALLERY_LINK: "Visiter la galerie",
  NEW_GAME_STARTED: "Une nouvelle partie a commencé",
  PLAY_AGAIN: "Rejouer ?",
  THANKS_FOR_PLAYING: "Merci d'avoir joué !",
  BUTTON_GO_TO_GAME: "Aller au jeu",
  BUTTON_GO_TO_JACKBOX: "Retour à jackbox.tv",
  BUTTON_SAME_PLAYERS: "Mêmes joueurs",
  BUTTON_NEW_PLAYERS: "Nouveaux joueurs",
  BUTTON_CHANGE_GAME: "Jouer {gameName}"
};
const YW = {
  AND: "ET",
  OR: "OU"
};
const JW = {
  BUTTON_SKIP: "Passer",
  BUTTON_NEXT: "Suivant",
  BUTTON_DONE: "Allons-y !"
};
const ZW = {
  NAME: "SPECTATEURS"
};
const QW = {
  CART: {
    CHECK_OUT: "Paiement",
    EMPTY: "Votre panier est vide",
    TITLE: "Panier",
    TOTAL: "Total"
  }
};
const eX = {
  EPISODE_REPORT: "Signaler l'épisode",
  EPISODE_UNLOAD: "Retirer l'épisode",
  EPISODE_VIEW_AUTHOR: "Voir l'auteur",
  EPISODES_LOAD: "Charger un épisode par id :",
  EPISODES_MENU: "Menu des épisodes",
  EPISODES_SELECT: "Ou sélectionner un épisode :",
  EPISODES_WARNING: "Attention : le contenu généré par les utilisateurs ne fait pas l'objet d'un classement",
  INSTRUCTION: {
    CREATE_TITLE: "commencez par donner un nom à l'épisode qui contiendra vos sujets, puis touchez créer.",
    LOAD: "créer ou charger ?",
    PUBLISH: "publiez votre épisode",
    TITLE: "donnez un nom à votre épisode",
    TOGGLE_VISIBILITY: "touchez pour afficher/masquer les sujets",
    WRITE: "écrivez vos sujets"
  },
  WARNING: {
    DELETE: "Voulez-vous vraiment supprimer cet épisode ?",
    TOS: "En partageant votre contenu, vous acceptez nos [tos]Conditions de service[/tos]",
    TOS_AGREE: "accepter et partager"
  },
  BACK_TO_EPISODES: "retour aux épisodes",
  BACK_TO_MENU: "retour au menu",
  CREATE_NEW_EPISODE: "créer un nouvel épisode",
  PREVIOUS_EPISODES: "épisodes précédents",
  PROMPT_ADD: "ajouter un sujet",
  PROMPT_PLACEHOLDER: "taper un sujet",
  PROMPTS_COUNT_HIDDEN: "({count} non affiché)",
  TITLE_PLACEHOLDER: "taper un titre"
};
const tX = {
  BROADCASTER: {
    SUBTEXT: "La connexion de votre compte à l'extension Twitch Jackbox Audience Kit a réussi.",
    WARNING: "LE PARAMÈTRE 'PUBLIC' N'EST PAS ACTIVÉ DANS CETTE SALLE."
  },
  RECONNECTED: {
    TEXT: "RECONNECTÉ(E)",
    SUBTEXT: "Amusez-vous bien !"
  },
  RECONNECTING: {
    CONTROLLER: {
      TEXT: "CONNEXION INTERROMPUE",
      SUBTEXT: "Tentative de reconnexion ({attempt} sur 5)"
    },
    GAME: {
      TEXT: "CONNEXION AU JEU INTERROMPUE",
      SUBTEXT: "Veuillez patienter pendant que nous tentons de vous reconnecter."
    }
  },
  PAUSED: {
    TEXT: "LA PARTIE EST EN PAUSE",
    SUBTEXT: "Tout ce que vous proposez sera quand même envoyé dans le jeu."
  }
};
const rX = {
  SHARE: "Partager",
  COPY_TO_CLIPBOARD: "Copier dans le presse-papiers",
  COPIED: "Copié"
};
const nX = {
  ACTION: HW,
  ALT: WW,
  ERROR: XW,
  LOADING: jW,
  LOBBY: zW,
  POST_GAME: qW,
  SEPARATOR: YW,
  TUTORIAL: JW,
  AUDIENCE: ZW,
  GALLERY: QW,
  UGC: eX,
  TOAST: tX,
  SHARE: rX
};
const iX = {
  BACK: "Indietro",
  CANCEL: "Annulla",
  CLOSE: "Chiuda",
  CONFIRM: "Conferma",
  CREATE: "Crea",
  DELETE: "Elimina",
  DONE: "Fine",
  EDIT: "Modifica",
  OK: "OK",
  NEXT: "Prossimo",
  NO: "No",
  PLAY: "Gioca",
  PUBLISH: "Pubblica",
  REMOVE: "Rimuovi",
  RESET: "Reset",
  SUBMIT: "Invia",
  TRY_AGAIN: "Riprova",
  UNDO: "Annulla",
  YES: "Sì"
};
const sX = {
  UGC: {
    VISIBILITY_CONTROLLER_OFF: "definizioni nascoste sui dispositivi dei giocatori",
    VISIBILITY_CONTROLLER_ON: "definizioni visualizzate sui dispositivi dei giocatori",
    VISIBILITY_SCREEN_OFF: "definizioni nascoste sullo schermo di gioco",
    VISIBILITY_SCREEN_ON: "definizioni visualizzate sullo schermo di gioco"
  }
};
const aX = {
  DISCONNECTED: "È stata effettuata la disconnessione.",
  DRAWING_NOTHING: "Devi disegnare qualcosa!",
  PLAYER_KICKED: "Un moderatore ti ha cacciato dalla partita.",
  ROOM_DESTROYED: "Grazie per aver scelto di giocare con noi!",
  ROOM_DISCONNECTED: "Disconnessione effettuata",
  TEXT_NAUGHTY: "Purtroppo non puoi scrivere questa cosa. Abbi rispetto per gli altri giocatori.",
  TEXT_NOTHING: "Devi per forza inserire qualcosa!",
  TITLE: "Errore"
};
const oX = "CARICAMENTO";
const lX = {
  JOINED_COUNT: "{count} su {maxPlayers} giocatori in partita",
  PLAYERS_NEEDED: "Manca 1 giocatore per iniziare | Mancano {count} giocatori per iniziare",
  WAITING_FOR_VIP: "In attesa di {name} per iniziare la partita",
  WAITING_FOR_GAMEPAD: "In attesa d'iniziare la partita",
  WAITING_FOR_NEW_GAME: "In attesa d'iniziare una nuova partita",
  GAME_STARTING: "La partita sta per iniziare",
  BUTTON_START: "Premi per avviare",
  BUTTON_CANCEL: "Premi per annullare"
};
const uX = {
  GALLERY_LINK: "Visita la galleria",
  NEW_GAME_STARTED: "È iniziata una nuova partita",
  PLAY_AGAIN: "Vuoi giocare di nuovo?",
  THANKS_FOR_PLAYING: "Grazie per aver scelto di giocare con noi!",
  BUTTON_GO_TO_GAME: "Vai al gioco",
  BUTTON_GO_TO_JACKBOX: "Torna a jackbox.tv",
  BUTTON_SAME_PLAYERS: "Stessi giocatori",
  BUTTON_NEW_PLAYERS: "Nuovi giocatori",
  BUTTON_CHANGE_GAME: "Gioca {gameName}"
};
const fX = {
  AND: "E",
  OR: "O"
};
const cX = {
  BUTTON_SKIP: "Salta",
  BUTTON_NEXT: "Avanti",
  BUTTON_DONE: "Iniziamo!"
};
const pX = {
  NAME: "PUBBLICO"
};
const dX = {
  CART: {
    CHECK_OUT: "Vai al pagamento",
    EMPTY: "Il carrello è vuoto",
    TITLE: "Carrello",
    TOTAL: "Totale"
  }
};
const hX = {
  EPISODE_REPORT: "Segnala episodio",
  EPISODE_UNLOAD: "Rimuovi episodio",
  EPISODE_VIEW_AUTHOR: "Mostra autore",
  EPISODES_LOAD: "Carica un episodio in base al suo id:",
  EPISODES_MENU: "Menu Episodi",
  EPISODES_SELECT: "Oppure seleziona un episodio:",
  EPISODES_WARNING: "Attenzione: il contenuto generato dagli utenti non è classificato",
  INSTRUCTION: {
    CREATE_TITLE: "per prima cosa, inserisci un nome per l’episodio che contenga tutti i tuoi suggerimenti e premi crea.",
    LOAD: "creare o caricare?",
    PUBLISH: "pubblica il tuo episodio",
    TITLE: "dai un nome al tuo episodio",
    TOGGLE_VISIBILITY: "tocca per mostrare/nascondere suggerimenti",
    WRITE: "scrivi le tue definizioni"
  },
  WARNING: {
    DELETE: "Vuoi davvero eliminare questo episodio?",
    TOS: "Condividendo i contenuti, accetti le nostre [tos]Condizioni del servizio[/tos]",
    TOS_AGREE: "accetta e condividi"
  },
  BACK_TO_EPISODES: "torna agli episodi",
  BACK_TO_MENU: "torna al menu",
  CREATE_NEW_EPISODE: "crea un nuovo episodio",
  PREVIOUS_EPISODES: "episodi precedenti",
  PROMPT_ADD: "aggiungi suggerimento",
  PROMPT_PLACEHOLDER: "inserisci suggerimento",
  PROMPTS_COUNT_HIDDEN: "({count} nascosti)",
  TITLE_PLACEHOLDER: "inserisci un titolo"
};
const EX = {
  BROADCASTER: {
    SUBTEXT: "Il collegamento del tuo account con l'estensione per Twitch Jackbox Audience Kit è andato a buon fine.",
    WARNING: "L'IMPOSTAZIONE DEL PUBBLICO NON È ATTIVA PER QUESTA STANZA"
  },
  RECONNECTED: {
    TEXT: "RICONNESSO",
    SUBTEXT: "Buon divertimento!"
  },
  RECONNECTING: {
    CONTROLLER: {
      TEXT: "CONNESSIONE INTERROTTA",
      SUBTEXT: "Tentativo di riconnessione in corso ({attempt} di 5)"
    },
    GAME: {
      TEXT: "CONNESSIONE AL GIOCO INTERROTTA",
      SUBTEXT: "Resta in attesa mentre proviamo a riconnetterci"
    }
  },
  PAUSED: {
    TEXT: "IL GIOCO È IN PAUSA",
    SUBTEXT: "Qualsiasi cosa invii sarà comunque inviata al gioco."
  }
};
const mX = {
  SHARE: "Condividi",
  COPY_TO_CLIPBOARD: "Copia negli appunti",
  COPIED: "Copiato"
};
const gX = {
  ACTION: iX,
  ALT: sX,
  ERROR: aX,
  LOADING: oX,
  LOBBY: lX,
  POST_GAME: uX,
  SEPARATOR: fX,
  TUTORIAL: cX,
  AUDIENCE: pX,
  GALLERY: dX,
  UGC: hX,
  TOAST: EX,
  SHARE: mX
};
const _X = {
  BACK: "Zurück",
  CANCEL: "Abbrechen",
  CLOSE: "Schließen",
  CONFIRM: "Bestätigen",
  CREATE: "Erstellen",
  DELETE: "Löschen",
  DONE: "Fertig",
  EDIT: "Bearbeiten",
  OK: "OK",
  NEXT: "Weiter",
  NO: "Nein",
  PLAY: "Spielen",
  PUBLISH: "Veröffentlichen",
  REMOVE: "Entfernen",
  RESET: "Neu starten",
  SUBMIT: "Abschicken",
  TRY_AGAIN: "Erneut versuchen",
  UNDO: "Rückgängig",
  YES: "Ja"
};
const TX = {
  UGC: {
    VISIBILITY_CONTROLLER_OFF: "Prompts auf Spielergeräten verborgen",
    VISIBILITY_CONTROLLER_ON: "Prompts auf Spielergeräten angezeigt",
    VISIBILITY_SCREEN_OFF: "Prompts auf Spielbildschirm verborgen",
    VISIBILITY_SCREEN_ON: "Prompts auf Spielbildschirm angezeigt"
  }
};
const vX = {
  DISCONNECTED: "Deine Verbindung wurde getrennt.",
  DRAWING_NOTHING: "Du musst irgendwas zeichnen!",
  PLAYER_KICKED: "Du wurdest von einem Moderator gekickt.",
  ROOM_DESTROYED: "Danke fürs Spielen!",
  ROOM_DISCONNECTED: "Verbindung getrennt",
  TEXT_NAUGHTY: "Das kannst du leider nicht schreiben. Bitte nimm Rücksicht auf deine Mitspieler.",
  TEXT_NOTHING: "Du musst etwas eingeben!",
  TITLE: "Fehler"
};
const bX = "LADE";
const xX = {
  JOINED_COUNT: "{count} von {maxPlayers} Spielern sind beigetreten",
  PLAYERS_NEEDED: "1 Spieler zum Starten benötigt | {count} Spieler zum Starten benötigt",
  WAITING_FOR_VIP: "Warten, bis {name} das Spiel startet",
  WAITING_FOR_GAMEPAD: "Warten, bis das Spiel startet",
  WAITING_FOR_NEW_GAME: "Warten, bis ein neues Spiel startet",
  GAME_STARTING: "Das Spiel beginnt",
  BUTTON_START: "Zum Starten drücken",
  BUTTON_CANCEL: "Zum Abbrechen drücken"
};
const RX = {
  GALLERY_LINK: "Galerie besuchen",
  NEW_GAME_STARTED: "Ein neues Spiel hat begonnen",
  PLAY_AGAIN: "Erneut spielen?",
  THANKS_FOR_PLAYING: "Danke fürs Spielen!",
  BUTTON_GO_TO_GAME: "Zum Spiel",
  BUTTON_GO_TO_JACKBOX: "Zurück zu jackbox.tv",
  BUTTON_SAME_PLAYERS: "Selbe Spieler",
  BUTTON_NEW_PLAYERS: "Neue Spieler",
  BUTTON_CHANGE_GAME: "{gameName} spielen"
};
const SX = {
  AND: "UND",
  OR: "ODER"
};
const yX = {
  BUTTON_SKIP: "Überspringen",
  BUTTON_NEXT: "Weiter",
  BUTTON_DONE: "Los geht's!"
};
const AX = {
  NAME: "PUBLIKUM"
};
const LX = {
  CART: {
    CHECK_OUT: "Kasse",
    EMPTY: "Dein Einkaufswagen ist leer",
    TITLE: "Einkaufswagen",
    TOTAL: "Gesamtsumme"
  }
};
const CX = {
  EPISODE_REPORT: "Episode melden",
  EPISODE_UNLOAD: "Episode deaktivieren",
  EPISODE_VIEW_AUTHOR: "Autor ansehen",
  EPISODES_LOAD: "Lade eine Episode über dessen ID:",
  EPISODES_MENU: "Episoden-Menü",
  EPISODES_SELECT: "Oder wähle eine Episode aus:",
  EPISODES_WARNING: "Achtung: Von Nutzern erstellte Inhalte werden nicht auf Familientauglichkeit geprüft",
  INSTRUCTION: {
    CREATE_TITLE: "Benenne als allererstes deine Episode, die alle deine Prompts enthalten wird und drücke dann \"Erstellen\".",
    LOAD: "Erstellen oder laden?",
    PUBLISH: "Veröffentliche deine Episode",
    TITLE: "Benenne deine Episode",
    TOGGLE_VISIBILITY: "Drücken, um Prompts zu zeigen / zu verstecken",
    WRITE: "Schreibe deine Prompts"
  },
  WARNING: {
    DELETE: "Bist du sicher, dass du diese Episode löschen möchtest?",
    TOS: "Durch das Teilen von Inhalten stimmst du unseren [tos]Nutzungsbedingungen[/tos] zu",
    TOS_AGREE: "Zustimmen und teilen"
  },
  BACK_TO_EPISODES: "Zurück zu den Episoden",
  BACK_TO_MENU: "Zurück zum Menü",
  CREATE_NEW_EPISODE: "Eigene Episode erstellen",
  PREVIOUS_EPISODES: "Vorige Episoden",
  PROMPT_ADD: "Prompt hinzufügen",
  PROMPT_PLACEHOLDER: "Prompt eingeben",
  PROMPTS_COUNT_HIDDEN: "({count} versteckt)",
  TITLE_PLACEHOLDER: "Titel eingeben"
};
const wX = {
  BROADCASTER: {
    SUBTEXT: "Du hast dein Konto erfolgreich mit der Jackbox Audience Kit Twitch-Erweiterung verknüpft.",
    WARNING: "FÜR DIESEN RAUM IST DIE PUBLIKUMS-EINSTELLUNG NICHT AKTIV"
  },
  RECONNECTED: {
    TEXT: "NEU VERBUNDEN",
    SUBTEXT: "Viel Spaß!"
  },
  RECONNECTING: {
    CONTROLLER: {
      TEXT: "VERBINDUNG UNTERBROCHEN",
      SUBTEXT: "Versuche neu zu verbinden ({attempt} von 5)"
    },
    GAME: {
      TEXT: "VERBINDUNG ZUM SPIEL UNTERBROCHEN",
      SUBTEXT: "Bitte warte während wir versuchen, die Verbindung wiederherzustellen."
    }
  },
  PAUSED: {
    TEXT: "DAS SPIEL IST PAUSIERT",
    SUBTEXT: "Alles, was du abschickst, wird weiterhin ans Spiel gesendet."
  }
};
const OX = {
  SHARE: "Teilen",
  COPY_TO_CLIPBOARD: "In Zwischenablage kopieren",
  COPIED: "Kopiert"
};
const IX = {
  ACTION: _X,
  ALT: TX,
  ERROR: vX,
  LOADING: bX,
  LOBBY: xX,
  POST_GAME: RX,
  SEPARATOR: SX,
  TUTORIAL: yX,
  AUDIENCE: AX,
  GALLERY: LX,
  UGC: CX,
  TOAST: wX,
  SHARE: OX
};
const NX = {
  BACK: "Atrás",
  CANCEL: "Cancelar",
  CLOSE: "Cerrar",
  CONFIRM: "Confirmar",
  CREATE: "Crear",
  DELETE: "Borrar",
  DONE: "Hecho",
  EDIT: "Editar",
  OK: "Aceptar",
  NEXT: "Siguiente",
  NO: "No",
  PLAY: "Jugar",
  PUBLISH: "Publicar",
  REMOVE: "Eliminar",
  RESET: "Reiniciar",
  SUBMIT: "Enviar",
  TRY_AGAIN: "Volver a intentarlo",
  UNDO: "Deshacer",
  YES: "Sí"
};
const PX = {
  UGC: {
    VISIBILITY_CONTROLLER_OFF: "los enunciados no se muestran en el dispositivo del jugador",
    VISIBILITY_CONTROLLER_ON: "los enunciados se muestran en el dispositivo del jugador",
    VISIBILITY_SCREEN_OFF: "los enunciados no se muestran en la pantalla",
    VISIBILITY_SCREEN_ON: "los enunciados se muestran en la pantalla"
  }
};
const UX = {
  DISCONNECTED: "Te has desconectado.",
  DRAWING_NOTHING: "¡Tienes que dibujar algo!",
  PLAYER_KICKED: "Un moderador te ha expulsado de la partida.",
  ROOM_DESTROYED: "¡Gracias por jugar!",
  ROOM_DISCONNECTED: "Desconectado",
  TEXT_NAUGHTY: "Lo siento, no puedes escribir eso. Hay que ser respetuoso con los demás jugadores.",
  TEXT_NOTHING: "Tienes que escribir algo",
  TITLE: "Error"
};
const DX = "CARGANDO";
const BX = {
  JOINED_COUNT: "Se han unido {count} de {maxPlayers} jugadores",
  PLAYERS_NEEDED: "Se necesita 1 jugador para empezar | Se necesitan {count} jugadores para empezar",
  WAITING_FOR_VIP: "Esperando a que {name} inicie la partida",
  WAITING_FOR_GAMEPAD: "Esperando a que empiece la partida",
  WAITING_FOR_NEW_GAME: "Esperando a que empiece otra partida",
  GAME_STARTING: "La partida va a empezar",
  BUTTON_START: "Pulsa para empezar",
  BUTTON_CANCEL: "Pulsa para cancelar"
};
const MX = {
  GALLERY_LINK: "Visita la galería",
  NEW_GAME_STARTED: "Ha empezado una nueva partida",
  PLAY_AGAIN: "¿Jugar otra vez?",
  THANKS_FOR_PLAYING: "¡Gracias por jugar!",
  BUTTON_GO_TO_GAME: "Ir a al juego",
  BUTTON_GO_TO_JACKBOX: "Volver a jackbox.tv",
  BUTTON_SAME_PLAYERS: "Los mismos jugadores",
  BUTTON_NEW_PLAYERS: "Nuevos jugadores",
  BUTTON_CHANGE_GAME: "Jugar a {gameName}"
};
const $X = {
  AND: "Y",
  OR: "O"
};
const KX = {
  BUTTON_SKIP: "Omitir",
  BUTTON_NEXT: "Siguiente",
  BUTTON_DONE: "¡Vamos!"
};
const kX = {
  NAME: "PÚBLICO"
};
const GX = {
  CART: {
    CHECK_OUT: "Pagar",
    EMPTY: "El carrito está vacío",
    TITLE: "Carrito de la compra",
    TOTAL: "Total"
  }
};
const VX = {
  EPISODE_REPORT: "Denunciar episodio",
  EPISODE_UNLOAD: "Retirar episodio",
  EPISODE_VIEW_AUTHOR: "Ver autor",
  EPISODES_LOAD: "Cargar un episodio por ID:",
  EPISODES_MENU: "Menú de episodios",
  EPISODES_SELECT: "O selecciona un episodio:",
  EPISODES_WARNING: "Aviso: El contenido de los usuarios no tiene clasificación de edad",
  INSTRUCTION: {
    CREATE_TITLE: "en primer lugar, ponle un nombre al episodio que contendrá tus enunciados y dale a crear.",
    LOAD: "¿crear o cargar?",
    PUBLISH: "publica tu episodio",
    TITLE: "ponle nombre al episodio",
    TOGGLE_VISIBILITY: "toca para mostrar u ocultar los enunciados",
    WRITE: "escribe los enunciados"
  },
  WARNING: {
    DELETE: "¿Seguro que quieres borrar este episodio?",
    TOS: "Al compartir contenidos, aceptas las [tos]Condiciones del servicio[/tos]",
    TOS_AGREE: "aceptar y compartir"
  },
  BACK_TO_EPISODES: "volver a los episodios",
  BACK_TO_MENU: "volver al menú",
  CREATE_NEW_EPISODE: "crear nuevo episodio",
  PREVIOUS_EPISODES: "episodios anteriores",
  PROMPT_ADD: "añadir enunciado",
  PROMPT_PLACEHOLDER: "escribe un enunciado",
  PROMPTS_COUNT_HIDDEN: "({count} ocultos)",
  TITLE_PLACEHOLDER: "escribe un título"
};
const FX = {
  BROADCASTER: {
    SUBTEXT: "Has conectado tu cuenta con éxito a la extensión de Twitch del kit para público de Jackbox.",
    WARNING: "ESTA SALA NO TIENE LA FUNCIÓN DE PÚBLICO HABILITADA"
  },
  RECONNECTED: {
    TEXT: "CONEXIÓN RESTABLECIDA",
    SUBTEXT: "¡Diviértete!"
  },
  RECONNECTING: {
    CONTROLLER: {
      TEXT: "SE HA INTERRUMPIDO LA CONEXIÓN",
      SUBTEXT: "Recuperando conexión (intento {attempt} de 5)"
    },
    GAME: {
      TEXT: "SE HA INTERRUMPIDO LA CONEXIÓN CON EL JUEGO",
      SUBTEXT: "Espera mientras intentamos recuperar la conexión"
    }
  },
  PAUSED: {
    TEXT: "PARTIDA EN PAUSA",
    SUBTEXT: "Tus respuestas se enviarán igualmente al juego."
  }
};
const HX = {
  SHARE: "Compartir",
  COPY_TO_CLIPBOARD: "Copiar al portapapeles",
  COPIED: "Copiado"
};
const WX = {
  ACTION: NX,
  ALT: PX,
  ERROR: UX,
  LOADING: DX,
  LOBBY: BX,
  POST_GAME: MX,
  SEPARATOR: $X,
  TUTORIAL: KX,
  AUDIENCE: kX,
  GALLERY: GX,
  UGC: VX,
  TOAST: FX,
  SHARE: HX
};
const XX = {
  BACK: "Volver",
  CANCEL: "Cancelar",
  CLOSE: "Cerrar",
  CONFIRM: "Confirmar",
  CREATE: "Crear",
  DELETE: "Borrar",
  DONE: "Listo",
  EDIT: "Editar",
  OK: "Aceptar",
  NEXT: "Siguiente",
  NO: "No",
  PLAY: "Jugar",
  PUBLISH: "Publicar",
  REMOVE: "Quitar",
  RESET: "Reiniciar",
  SUBMIT: "Enviar",
  TRY_AGAIN: "Volver a intentarlo",
  UNDO: "Deshacer",
  YES: "Sí"
};
const jX = {
  UGC: {
    VISIBILITY_CONTROLLER_OFF: "indicaciones ocultas en los dispositivos de los jugadores",
    VISIBILITY_CONTROLLER_ON: "indicaciones presentes en los dispositivos de los jugadores",
    VISIBILITY_SCREEN_OFF: "indicaciones ocultas en la pantalla del juego",
    VISIBILITY_SCREEN_ON: "indicaciones presentes en la pantalla del juego"
  }
};
const zX = {
  DISCONNECTED: "Te desconectaste.",
  DRAWING_NOTHING: "¡Tienes que dibujar algo!",
  PLAYER_KICKED: "Un moderador te expulsó del juego.",
  ROOM_DESTROYED: "¡Gracias por jugar!",
  ROOM_DISCONNECTED: "Desconectado",
  TEXT_NAUGHTY: "Lo siento, no puedes escribir eso. Seamos respetuosos con los demás participantes.",
  TEXT_NOTHING: "¡Tienes que escribir algo!",
  TITLE: "Error"
};
const qX = "CARGANDO";
const YX = {
  JOINED_COUNT: "{count} de {maxPlayers} jugadores se unieron",
  PLAYERS_NEEDED: "Se necesita 1 jugador para empezar | Se necesitan {count} jugadores para empezar",
  WAITING_FOR_VIP: "Esperando a que {name} inicie la partida",
  WAITING_FOR_GAMEPAD: "Esperando a que empiece la partida",
  WAITING_FOR_NEW_GAME: "Esperando a que empiece una partida nueva",
  GAME_STARTING: "La partida va a empezar",
  BUTTON_START: "Pulsa para empezar",
  BUTTON_CANCEL: "Pulsa para cancelar"
};
const JX = {
  GALLERY_LINK: "Visita la galería",
  NEW_GAME_STARTED: "Una partida nueva ha empezado",
  PLAY_AGAIN: "¿Jugar de nuevo?",
  THANKS_FOR_PLAYING: "¡Gracias por jugar!",
  BUTTON_GO_TO_GAME: "Ir a la partida",
  BUTTON_GO_TO_JACKBOX: "Volver a jackbox.tv",
  BUTTON_SAME_PLAYERS: "Los mismos jugadores",
  BUTTON_NEW_PLAYERS: "Nuevos jugadores",
  BUTTON_CHANGE_GAME: "Jugar a {gameName}"
};
const ZX = {
  AND: "Y",
  OR: "O"
};
const QX = {
  BUTTON_SKIP: "Omitir",
  BUTTON_NEXT: "Siguiente",
  BUTTON_DONE: "¡Vamos!"
};
const ej = {
  NAME: "PÚBLICO"
};
const tj = {
  CART: {
    CHECK_OUT: "Comprar ahora",
    EMPTY: "Tu carrito está vacío",
    TITLE: "Carrito de compras",
    TOTAL: "Total"
  }
};
const rj = {
  EPISODE_REPORT: "Denunciar episodio",
  EPISODE_UNLOAD: "Descargar episodio",
  EPISODE_VIEW_AUTHOR: "Ver autor",
  EPISODES_LOAD: "Cargar un episodio por ID:",
  EPISODES_MENU: "Menú de episodios",
  EPISODES_SELECT: "O selecciona un episodio:",
  EPISODES_WARNING: "Aviso: El contenido de los usuarios no tiene clasificación por edades",
  INSTRUCTION: {
    CREATE_TITLE: "Lo primero que debes hacer es escribir un nombre para el episodio que contendrá todas sus indicaciones y pulsar crear.",
    LOAD: "¿Crear o cargar?",
    PUBLISH: "Publica tu episodio",
    TITLE: "Nombra tu episodio",
    TOGGLE_VISIBILITY: "Pulsa para mostrar/ocultar las indicaciones",
    WRITE: "Escribe tus indicaciones"
  },
  WARNING: {
    DELETE: "¿De verdad quieres borrar este episodio?",
    TOS: "Al compartir contenido, aceptas nuestros [tos]Términos de servicio[/tos]",
    TOS_AGREE: "Aceptar y compartir"
  },
  BACK_TO_EPISODES: "Volver a los episodios",
  BACK_TO_MENU: "Volver al menú",
  CREATE_NEW_EPISODE: "Crear un nuevo episodio",
  PREVIOUS_EPISODES: "Episodios anteriores",
  PROMPT_ADD: "Añadir indicación",
  PROMPT_PLACEHOLDER: "Escribe una indicación",
  PROMPTS_COUNT_HIDDEN: "({count} oculto(s))",
  TITLE_PLACEHOLDER: "Escribir un título"
};
const nj = {
  BROADCASTER: {
    SUBTEXT: "Conectaste correctamente tu cuenta a la extensión para Twitch del kit para público de Jackbox.",
    WARNING: "ESTA SALA NO TIENE ACTIVADA LA OPCIÓN DE PÚBLICO"
  },
  RECONNECTED: {
    TEXT: "CONEXIÓN RESTABLECIDA",
    SUBTEXT: "¡Diviértete!"
  },
  RECONNECTING: {
    CONTROLLER: {
      TEXT: "CONEXIÓN INTERRUMPIDA",
      SUBTEXT: "Intento de reconexión ({attempt} de 5)"
    },
    GAME: {
      TEXT: "SE INTERRUMPIÓ LA CONEXIÓN AL JUEGO",
      SUBTEXT: "Espera mientras intentamos restablecer la conexión"
    }
  },
  PAUSED: {
    TEXT: "EL JUEGO ESTÁ EN PAUSA",
    SUBTEXT: "Todo lo que ingreses será enviado al juego."
  }
};
const ij = {
  SHARE: "Compartir",
  COPY_TO_CLIPBOARD: "Copiar al portapapeles",
  COPIED: "Se copió"
};
const sj = {
  ACTION: XX,
  ALT: jX,
  ERROR: zX,
  LOADING: qX,
  LOBBY: YX,
  POST_GAME: JX,
  SEPARATOR: ZX,
  TUTORIAL: QX,
  AUDIENCE: ej,
  GALLERY: tj,
  UGC: rj,
  TOAST: nj,
  SHARE: ij
};
const aj = {
  BACK: "Voltar",
  CANCEL: "Cancelar",
  CLOSE: "Fechar",
  CONFIRM: "Confirmar",
  CREATE: "Criar",
  DELETE: "Excluir",
  DONE: "Pronto",
  EDIT: "Editar",
  OK: "OK",
  NEXT: "Avançar",
  NO: "Não",
  PLAY: "Jogar",
  PUBLISH: "Publicar",
  REMOVE: "Remover",
  RESET: "Redefinir",
  SUBMIT: "Enviar",
  TRY_AGAIN: "Tentar de novo",
  UNDO: "Desfazer",
  YES: "Sim"
};
const oj = {
  UGC: {
    VISIBILITY_CONTROLLER_OFF: "enunciados ocultos no dispositivo dos jogadores",
    VISIBILITY_CONTROLLER_ON: "enunciados exibidos no dispositivo dos jogadores",
    VISIBILITY_SCREEN_OFF: "enunciados ocultos na tela do jogo",
    VISIBILITY_SCREEN_ON: "enunciados exibidos na tela do jogo"
  }
};
const lj = {
  DISCONNECTED: "Você foi desconectado.",
  DRAWING_NOTHING: "Você tem que desenhar!",
  PLAYER_KICKED: "Você foi expulso do jogo por um moderador.",
  ROOM_DESTROYED: "Obrigado por jogar!",
  ROOM_DISCONNECTED: "Desconectado",
  TEXT_NAUGHTY: "Não pode escrever isso. Respeite os outros jogadores.",
  TEXT_NOTHING: "Não dá para inserir texto vazio!",
  TITLE: "Erro"
};
const uj = "CARREGANDO";
const fj = {
  JOINED_COUNT: "{count} de {maxPlayers} jogadores entraram",
  PLAYERS_NEEDED: "1 jogador necessário para começar | {count} jogadores necessários para começar",
  WAITING_FOR_VIP: "Aguardando {name} começar o jogo",
  WAITING_FOR_GAMEPAD: "Aguardando o começo do jogo",
  WAITING_FOR_NEW_GAME: "Aguardando o começo de uma nova partida",
  GAME_STARTING: "O jogo está começando",
  BUTTON_START: "Aperte para começar",
  BUTTON_CANCEL: "Aperte para cancelar"
};
const cj = {
  GALLERY_LINK: "Visitar a galeria",
  NEW_GAME_STARTED: "Começou uma nova partida",
  PLAY_AGAIN: "Jogar de novo?",
  THANKS_FOR_PLAYING: "Obrigado por jogar!",
  BUTTON_GO_TO_GAME: "Ir para o jogo",
  BUTTON_GO_TO_JACKBOX: "Voltar para jackbox.tv",
  BUTTON_SAME_PLAYERS: "Mesmos jogadores",
  BUTTON_NEW_PLAYERS: "Outros jogadores",
  BUTTON_CHANGE_GAME: "Jogar {gameName}"
};
const pj = {
  AND: "E",
  OR: "OU"
};
const dj = {
  BUTTON_SKIP: "Pular",
  BUTTON_NEXT: "Avançar",
  BUTTON_DONE: "Vamos lá!"
};
const hj = {
  NAME: "PLATEIA"
};
const Ej = {
  CART: {
    CHECK_OUT: "Finalizar",
    EMPTY: "Seu carrinho está vazio",
    TITLE: "Carrinho de Compras",
    TOTAL: "Total"
  }
};
const mj = {
  EPISODE_REPORT: "Denunciar episódio",
  EPISODE_UNLOAD: "Excluir cópia local do episódio",
  EPISODE_VIEW_AUTHOR: "Visualizar autor",
  EPISODES_LOAD: "Carregar um episódio por ID:",
  EPISODES_MENU: "Menu de episódios",
  EPISODES_SELECT: "Ou selecione um episódio:",
  EPISODES_WARNING: "Aviso: os conteúdos gerados pelos usuários não têm classificação indicativa",
  INSTRUCTION: {
    CREATE_TITLE: "para começar, insira o nome do episódio que conterá todos os seus enunciados e aperte “Criar”.",
    LOAD: "criar ou carregar?",
    PUBLISH: "publicar seu episódio",
    TITLE: "dê um nome ao seu episódio",
    TOGGLE_VISIBILITY: "toque para exibir/ocultar enunciados",
    WRITE: "escreva seus enunciados"
  },
  WARNING: {
    DELETE: "Deseja mesmo excluir este episódio?",
    TOS: "Ao compartilhar conteúdo, você concordará com os nossos [tos]Termos de Serviço[/tos]",
    TOS_AGREE: "concordar e compartilhar"
  },
  BACK_TO_EPISODES: "voltar aos episódios",
  BACK_TO_MENU: "voltar ao menu",
  CREATE_NEW_EPISODE: "criar novo episódio",
  PREVIOUS_EPISODES: "episódios anteriores",
  PROMPT_ADD: "adicionar enunciado",
  PROMPT_PLACEHOLDER: "insira um enunciado",
  PROMPTS_COUNT_HIDDEN: "({count} oculto[s])",
  TITLE_PLACEHOLDER: "insira um título"
};
const gj = {
  BROADCASTER: {
    SUBTEXT: "Você conectou sua conta à extensão Jackbox Audience Kit para Twitch.",
    WARNING: "A CONFIGURAÇÃO DE PLATEIA NÃO ESTÁ ATIVA NESTA SALA"
  },
  RECONNECTED: {
    TEXT: "CONEXÃO RESTABELECIDA",
    SUBTEXT: "Divirtam-se!"
  },
  RECONNECTING: {
    CONTROLLER: {
      TEXT: "CONEXÃO INTERROMPIDA",
      SUBTEXT: "Tentando reconectar-se ({attempt} de 5)"
    },
    GAME: {
      TEXT: "CONEXÃO DO JOGO INTERROMPIDA",
      SUBTEXT: "Aguarde enquanto tentamos restabelecer a conexão"
    }
  },
  PAUSED: {
    TEXT: "O JOGO ESTÁ PAUSADO",
    SUBTEXT: "Tudo que você enviar ainda será enviado ao jogo."
  }
};
const _j = {
  SHARE: "Compartilhar",
  COPY_TO_CLIPBOARD: "Copiar para área de transferência",
  COPIED: "Copiado"
};
const Tj = {
  ACTION: aj,
  ALT: oj,
  ERROR: lj,
  LOADING: uj,
  LOBBY: fj,
  POST_GAME: cj,
  SEPARATOR: pj,
  TUTORIAL: dj,
  AUDIENCE: hj,
  GALLERY: Ej,
  UGC: mj,
  TOAST: gj,
  SHARE: _j
};
const vj = {
  en: FW,
  fr: nX,
  it: gX,
  de: IX,
  es: WX,
  "es-XL": sj,
  "pt-BR": Tj
};
const Or = (t, e) => {
  const r = t.__vccOpts || t;
  for (const [n, i] of e) {
    r[n] = i;
  }
  return r;
};
var Hf = {
  exports: {}
}; /**
   * @license
   * Lodash <https://lodash.com/>
   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   */
Hf.exports;
(function (t, e) {
  (function () {
    var r;
    var n = "4.17.21";
    var i = 200;
    var s = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.";
    var o = "Expected a function";
    var f = "Invalid `variable` option passed into `_.template`";
    var c = "__lodash_hash_undefined__";
    var p = 500;
    var d = "__lodash_placeholder__";
    var E = 1;
    var m = 2;
    var g = 4;
    var T = 1;
    var b = 2;
    var x = 1;
    var A = 2;
    var R = 4;
    var v = 8;
    var y = 16;
    var U = 32;
    var P = 64;
    var M = 128;
    var X = 256;
    var N = 512;
    var ae = 30;
    var Q = "...";
    var V = 800;
    var Y = 16;
    var k = 1;
    var w = 2;
    var j = 3;
    var W = Infinity;
    var te = 9007199254740991;
    var ie = 1.7976931348623157e+308;
    var _e = NaN;
    var ye = 4294967295;
    var Be = ye - 1;
    var Le = ye >>> 1;
    var Ge = [["ary", M], ["bind", x], ["bindKey", A], ["curry", v], ["curryRight", y], ["flip", N], ["partial", U], ["partialRight", P], ["rearg", X]];
    var Rt = "[object Arguments]";
    var je = "[object Array]";
    var Et = "[object AsyncFunction]";
    var Ve = "[object Boolean]";
    var ot = "[object Date]";
    var ft = "[object DOMException]";
    var Ut = "[object Error]";
    var $t = "[object Function]";
    var F = "[object GeneratorFunction]";
    var D = "[object Map]";
    var ne = "[object Number]";
    var he = "[object Null]";
    var pe = "[object Object]";
    var xe = "[object Promise]";
    var Te = "[object Proxy]";
    var O = "[object RegExp]";
    var B = "[object Set]";
    var z = "[object String]";
    var fe = "[object Symbol]";
    var Ce = "[object Undefined]";
    var ve = "[object WeakMap]";
    var se = "[object WeakSet]";
    var oe = "[object ArrayBuffer]";
    var $e = "[object DataView]";
    var G = "[object Float32Array]";
    var $ = "[object Float64Array]";
    var J = "[object Int8Array]";
    var K = "[object Int16Array]";
    var Z = "[object Int32Array]";
    var ue = "[object Uint8Array]";
    var Ae = "[object Uint8ClampedArray]";
    var Se = "[object Uint16Array]";
    var Me = "[object Uint32Array]";
    var At = /\b__p \+= '';/g;
    var cr = /\b(__p \+=) '' \+/g;
    var ke = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
    var ia = /&(?:amp|lt|gt|quot|#39);/g;
    var ym = /[&<>"']/g;
    var hL = RegExp(ia.source);
    var EL = RegExp(ym.source);
    var mL = /<%-([\s\S]+?)%>/g;
    var gL = /<%([\s\S]+?)%>/g;
    var Am = /<%=([\s\S]+?)%>/g;
    var _L = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
    var TL = /^\w*$/;
    var vL = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var Hc = /[\\^$.*+?()[\]{}|]/g;
    var bL = RegExp(Hc.source);
    var Wc = /^\s+/;
    var xL = /\s/;
    var RL = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;
    var SL = /\{\n\/\* \[wrapped with (.+)\] \*/;
    var yL = /,? & /;
    var AL = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
    var LL = /[()=,{}\[\]\/\s]/;
    var CL = /\\(\\)?/g;
    var wL = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
    var Lm = /\w*$/;
    var OL = /^[-+]0x[0-9a-f]+$/i;
    var IL = /^0b[01]+$/i;
    var NL = /^\[object .+?Constructor\]$/;
    var PL = /^0o[0-7]+$/i;
    var UL = /^(?:0|[1-9]\d*)$/;
    var DL = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
    var Fl = /($^)/;
    var BL = /['\n\r\u2028\u2029\\]/g;
    var Hl = "\\ud800-\\udfff";
    var ML = "\\u0300-\\u036f";
    var $L = "\\ufe20-\\ufe2f";
    var KL = "\\u20d0-\\u20ff";
    var Cm = ML + $L + KL;
    var wm = "\\u2700-\\u27bf";
    var Om = "a-z\\xdf-\\xf6\\xf8-\\xff";
    var kL = "\\xac\\xb1\\xd7\\xf7";
    var GL = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf";
    var VL = "\\u2000-\\u206f";
    var FL = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000";
    var Im = "A-Z\\xc0-\\xd6\\xd8-\\xde";
    var Nm = "\\ufe0e\\ufe0f";
    var Pm = kL + GL + VL + FL;
    var Xc = "['’]";
    var HL = "[" + Hl + "]";
    var Um = "[" + Pm + "]";
    var Wl = "[" + Cm + "]";
    var Dm = "\\d+";
    var WL = "[" + wm + "]";
    var Bm = "[" + Om + "]";
    var Mm = "[^" + Hl + Pm + Dm + wm + Om + Im + "]";
    var jc = "\\ud83c[\\udffb-\\udfff]";
    var XL = "(?:" + Wl + "|" + jc + ")";
    var $m = "[^" + Hl + "]";
    var zc = "(?:\\ud83c[\\udde6-\\uddff]){2}";
    var qc = "[\\ud800-\\udbff][\\udc00-\\udfff]";
    var sa = "[" + Im + "]";
    var Km = "\\u200d";
    var km = "(?:" + Bm + "|" + Mm + ")";
    var jL = "(?:" + sa + "|" + Mm + ")";
    var Gm = "(?:" + Xc + "(?:d|ll|m|re|s|t|ve))?";
    var Vm = "(?:" + Xc + "(?:D|LL|M|RE|S|T|VE))?";
    var Fm = XL + "?";
    var Hm = "[" + Nm + "]?";
    var zL = "(?:" + Km + "(?:" + [$m, zc, qc].join("|") + ")" + Hm + Fm + ")*";
    var qL = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])";
    var YL = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])";
    var Wm = Hm + Fm + zL;
    var JL = "(?:" + [WL, zc, qc].join("|") + ")" + Wm;
    var ZL = "(?:" + [$m + Wl + "?", Wl, zc, qc, HL].join("|") + ")";
    var QL = RegExp(Xc, "g");
    var eC = RegExp(Wl, "g");
    var Yc = RegExp(jc + "(?=" + jc + ")|" + ZL + Wm, "g");
    var tC = RegExp([sa + "?" + Bm + "+" + Gm + "(?=" + [Um, sa, "$"].join("|") + ")", jL + "+" + Vm + "(?=" + [Um, sa + km, "$"].join("|") + ")", sa + "?" + km + "+" + Gm, sa + "+" + Vm, YL, qL, Dm, JL].join("|"), "g");
    var rC = RegExp("[" + Km + Hl + Cm + Nm + "]");
    var nC = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
    var iC = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout"];
    var sC = -1;
    var Vt = {};
    Vt[G] = Vt[$] = Vt[J] = Vt[K] = Vt[Z] = Vt[ue] = Vt[Ae] = Vt[Se] = Vt[Me] = true;
    Vt[Rt] = Vt[je] = Vt[oe] = Vt[Ve] = Vt[$e] = Vt[ot] = Vt[Ut] = Vt[$t] = Vt[D] = Vt[ne] = Vt[pe] = Vt[O] = Vt[B] = Vt[z] = Vt[ve] = false;
    var Kt = {};
    Kt[Rt] = Kt[je] = Kt[oe] = Kt[$e] = Kt[Ve] = Kt[ot] = Kt[G] = Kt[$] = Kt[J] = Kt[K] = Kt[Z] = Kt[D] = Kt[ne] = Kt[pe] = Kt[O] = Kt[B] = Kt[z] = Kt[fe] = Kt[ue] = Kt[Ae] = Kt[Se] = Kt[Me] = true;
    Kt[Ut] = Kt[$t] = Kt[ve] = false;
    var aC = {
      À: "A",
      Á: "A",
      Â: "A",
      Ã: "A",
      Ä: "A",
      Å: "A",
      à: "a",
      á: "a",
      â: "a",
      ã: "a",
      ä: "a",
      å: "a",
      Ç: "C",
      ç: "c",
      Ð: "D",
      ð: "d",
      È: "E",
      É: "E",
      Ê: "E",
      Ë: "E",
      è: "e",
      é: "e",
      ê: "e",
      ë: "e",
      Ì: "I",
      Í: "I",
      Î: "I",
      Ï: "I",
      ì: "i",
      í: "i",
      î: "i",
      ï: "i",
      Ñ: "N",
      ñ: "n",
      Ò: "O",
      Ó: "O",
      Ô: "O",
      Õ: "O",
      Ö: "O",
      Ø: "O",
      ò: "o",
      ó: "o",
      ô: "o",
      õ: "o",
      ö: "o",
      ø: "o",
      Ù: "U",
      Ú: "U",
      Û: "U",
      Ü: "U",
      ù: "u",
      ú: "u",
      û: "u",
      ü: "u",
      Ý: "Y",
      ý: "y",
      ÿ: "y",
      Æ: "Ae",
      æ: "ae",
      Þ: "Th",
      þ: "th",
      ß: "ss",
      Ā: "A",
      Ă: "A",
      Ą: "A",
      ā: "a",
      ă: "a",
      ą: "a",
      Ć: "C",
      Ĉ: "C",
      Ċ: "C",
      Č: "C",
      ć: "c",
      ĉ: "c",
      ċ: "c",
      č: "c",
      Ď: "D",
      Đ: "D",
      ď: "d",
      đ: "d",
      Ē: "E",
      Ĕ: "E",
      Ė: "E",
      Ę: "E",
      Ě: "E",
      ē: "e",
      ĕ: "e",
      ė: "e",
      ę: "e",
      ě: "e",
      Ĝ: "G",
      Ğ: "G",
      Ġ: "G",
      Ģ: "G",
      ĝ: "g",
      ğ: "g",
      ġ: "g",
      ģ: "g",
      Ĥ: "H",
      Ħ: "H",
      ĥ: "h",
      ħ: "h",
      Ĩ: "I",
      Ī: "I",
      Ĭ: "I",
      Į: "I",
      İ: "I",
      ĩ: "i",
      ī: "i",
      ĭ: "i",
      į: "i",
      ı: "i",
      Ĵ: "J",
      ĵ: "j",
      Ķ: "K",
      ķ: "k",
      ĸ: "k",
      Ĺ: "L",
      Ļ: "L",
      Ľ: "L",
      Ŀ: "L",
      Ł: "L",
      ĺ: "l",
      ļ: "l",
      ľ: "l",
      ŀ: "l",
      ł: "l",
      Ń: "N",
      Ņ: "N",
      Ň: "N",
      Ŋ: "N",
      ń: "n",
      ņ: "n",
      ň: "n",
      ŋ: "n",
      Ō: "O",
      Ŏ: "O",
      Ő: "O",
      ō: "o",
      ŏ: "o",
      ő: "o",
      Ŕ: "R",
      Ŗ: "R",
      Ř: "R",
      ŕ: "r",
      ŗ: "r",
      ř: "r",
      Ś: "S",
      Ŝ: "S",
      Ş: "S",
      Š: "S",
      ś: "s",
      ŝ: "s",
      ş: "s",
      š: "s",
      Ţ: "T",
      Ť: "T",
      Ŧ: "T",
      ţ: "t",
      ť: "t",
      ŧ: "t",
      Ũ: "U",
      Ū: "U",
      Ŭ: "U",
      Ů: "U",
      Ű: "U",
      Ų: "U",
      ũ: "u",
      ū: "u",
      ŭ: "u",
      ů: "u",
      ű: "u",
      ų: "u",
      Ŵ: "W",
      ŵ: "w",
      Ŷ: "Y",
      ŷ: "y",
      Ÿ: "Y",
      Ź: "Z",
      Ż: "Z",
      Ž: "Z",
      ź: "z",
      ż: "z",
      ž: "z",
      Ĳ: "IJ",
      ĳ: "ij",
      Œ: "Oe",
      œ: "oe",
      ŉ: "'n",
      ſ: "s"
    };
    var oC = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      "\"": "&quot;",
      "'": "&#39;"
    };
    var lC = {
      "&amp;": "&",
      "&lt;": "<",
      "&gt;": ">",
      "&quot;": "\"",
      "&#39;": "'"
    };
    var uC = {
      "\\": "\\",
      "'": "'",
      "\n": "n",
      "\r": "r",
      "\u2028": "u2028",
      "\u2029": "u2029"
    };
    var fC = parseFloat;
    var cC = parseInt;
    var Xm = typeof Nt == "object" && Nt && Nt.Object === Object && Nt;
    var pC = typeof self == "object" && self && self.Object === Object && self;
    var Er = Xm || pC || Function("return this")();
    var Jc = e && !e.nodeType && e;
    var bs = Jc && true && t && !t.nodeType && t;
    var jm = bs && bs.exports === Jc;
    var Zc = jm && Xm.process;
    var ln = function () {
      try {
        var ee = bs && bs.require && bs.require("util").types;
        return ee || Zc && Zc.binding && Zc.binding("util");
      } catch {}
    }();
    var zm = ln && ln.isArrayBuffer;
    var qm = ln && ln.isDate;
    var Ym = ln && ln.isMap;
    var Jm = ln && ln.isRegExp;
    var Zm = ln && ln.isSet;
    var Qm = ln && ln.isTypedArray;
    function Yr(ee, Ee, le) {
      switch (le.length) {
        case 0:
          return ee.call(Ee);
        case 1:
          return ee.call(Ee, le[0]);
        case 2:
          return ee.call(Ee, le[0], le[1]);
        case 3:
          return ee.call(Ee, le[0], le[1], le[2]);
      }
      return ee.apply(Ee, le);
    }
    function dC(ee, Ee, le, Ue) {
      for (var Qe = -1, St = ee == null ? 0 : ee.length; ++Qe < St;) {
        var sr = ee[Qe];
        Ee(Ue, sr, le(sr), ee);
      }
      return Ue;
    }
    function un(ee, Ee) {
      for (var le = -1, Ue = ee == null ? 0 : ee.length; ++le < Ue && Ee(ee[le], le, ee) !== false;);
      return ee;
    }
    function hC(ee, Ee) {
      for (var le = ee == null ? 0 : ee.length; le-- && Ee(ee[le], le, ee) !== false;);
      return ee;
    }
    function eg(ee, Ee) {
      for (var le = -1, Ue = ee == null ? 0 : ee.length; ++le < Ue;) {
        if (!Ee(ee[le], le, ee)) {
          return false;
        }
      }
      return true;
    }
    function Ni(ee, Ee) {
      for (var le = -1, Ue = ee == null ? 0 : ee.length, Qe = 0, St = []; ++le < Ue;) {
        var sr = ee[le];
        if (Ee(sr, le, ee)) {
          St[Qe++] = sr;
        }
      }
      return St;
    }
    function Xl(ee, Ee) {
      var le = ee == null ? 0 : ee.length;
      return !!le && aa(ee, Ee, 0) > -1;
    }
    function Qc(ee, Ee, le) {
      for (var Ue = -1, Qe = ee == null ? 0 : ee.length; ++Ue < Qe;) {
        if (le(Ee, ee[Ue])) {
          return true;
        }
      }
      return false;
    }
    function jt(ee, Ee) {
      for (var le = -1, Ue = ee == null ? 0 : ee.length, Qe = Array(Ue); ++le < Ue;) {
        Qe[le] = Ee(ee[le], le, ee);
      }
      return Qe;
    }
    function Pi(ee, Ee) {
      for (var le = -1, Ue = Ee.length, Qe = ee.length; ++le < Ue;) {
        ee[Qe + le] = Ee[le];
      }
      return ee;
    }
    function ep(ee, Ee, le, Ue) {
      var Qe = -1;
      var St = ee == null ? 0 : ee.length;
      for (Ue && St && (le = ee[++Qe]); ++Qe < St;) {
        le = Ee(le, ee[Qe], Qe, ee);
      }
      return le;
    }
    function EC(ee, Ee, le, Ue) {
      var Qe = ee == null ? 0 : ee.length;
      for (Ue && Qe && (le = ee[--Qe]); Qe--;) {
        le = Ee(le, ee[Qe], Qe, ee);
      }
      return le;
    }
    function tp(ee, Ee) {
      for (var le = -1, Ue = ee == null ? 0 : ee.length; ++le < Ue;) {
        if (Ee(ee[le], le, ee)) {
          return true;
        }
      }
      return false;
    }
    var mC = rp("length");
    function gC(ee) {
      return ee.split("");
    }
    function _C(ee) {
      return ee.match(AL) || [];
    }
    function tg(ee, Ee, le) {
      var Ue;
      le(ee, function (Qe, St, sr) {
        if (Ee(Qe, St, sr)) {
          Ue = St;
          return false;
        }
      });
      return Ue;
    }
    function jl(ee, Ee, le, Ue) {
      for (var Qe = ee.length, St = le + (Ue ? 1 : -1); Ue ? St-- : ++St < Qe;) {
        if (Ee(ee[St], St, ee)) {
          return St;
        }
      }
      return -1;
    }
    function aa(ee, Ee, le) {
      if (Ee === Ee) {
        return OC(ee, Ee, le);
      } else {
        return jl(ee, rg, le);
      }
    }
    function TC(ee, Ee, le, Ue) {
      for (var Qe = le - 1, St = ee.length; ++Qe < St;) {
        if (Ue(ee[Qe], Ee)) {
          return Qe;
        }
      }
      return -1;
    }
    function rg(ee) {
      return ee !== ee;
    }
    function ng(ee, Ee) {
      var le = ee == null ? 0 : ee.length;
      if (le) {
        return ip(ee, Ee) / le;
      } else {
        return _e;
      }
    }
    function rp(ee) {
      return function (Ee) {
        if (Ee == null) {
          return r;
        } else {
          return Ee[ee];
        }
      };
    }
    function np(ee) {
      return function (Ee) {
        if (ee == null) {
          return r;
        } else {
          return ee[Ee];
        }
      };
    }
    function ig(ee, Ee, le, Ue, Qe) {
      Qe(ee, function (St, sr, Dt) {
        le = Ue ? (Ue = false, St) : Ee(le, St, sr, Dt);
      });
      return le;
    }
    function vC(ee, Ee) {
      var le = ee.length;
      for (ee.sort(Ee); le--;) {
        ee[le] = ee[le].value;
      }
      return ee;
    }
    function ip(ee, Ee) {
      var le;
      for (var Ue = -1, Qe = ee.length; ++Ue < Qe;) {
        var St = Ee(ee[Ue]);
        if (St !== r) {
          le = le === r ? St : le + St;
        }
      }
      return le;
    }
    function sp(ee, Ee) {
      for (var le = -1, Ue = Array(ee); ++le < ee;) {
        Ue[le] = Ee(le);
      }
      return Ue;
    }
    function bC(ee, Ee) {
      return jt(Ee, function (le) {
        return [le, ee[le]];
      });
    }
    function sg(ee) {
      return ee && ee.slice(0, ug(ee) + 1).replace(Wc, "");
    }
    function Jr(ee) {
      return function (Ee) {
        return ee(Ee);
      };
    }
    function ap(ee, Ee) {
      return jt(Ee, function (le) {
        return ee[le];
      });
    }
    function Ao(ee, Ee) {
      return ee.has(Ee);
    }
    function ag(ee, Ee) {
      for (var le = -1, Ue = ee.length; ++le < Ue && aa(Ee, ee[le], 0) > -1;);
      return le;
    }
    function og(ee, Ee) {
      for (var le = ee.length; le-- && aa(Ee, ee[le], 0) > -1;);
      return le;
    }
    function xC(ee, Ee) {
      for (var le = ee.length, Ue = 0; le--;) {
        if (ee[le] === Ee) {
          ++Ue;
        }
      }
      return Ue;
    }
    var RC = np(aC);
    var SC = np(oC);
    function yC(ee) {
      return "\\" + uC[ee];
    }
    function AC(ee, Ee) {
      if (ee == null) {
        return r;
      } else {
        return ee[Ee];
      }
    }
    function oa(ee) {
      return rC.test(ee);
    }
    function LC(ee) {
      return nC.test(ee);
    }
    function CC(ee) {
      for (var Ee, le = []; !(Ee = ee.next()).done;) {
        le.push(Ee.value);
      }
      return le;
    }
    function op(ee) {
      var Ee = -1;
      var le = Array(ee.size);
      ee.forEach(function (Ue, Qe) {
        le[++Ee] = [Qe, Ue];
      });
      return le;
    }
    function lg(ee, Ee) {
      return function (le) {
        return ee(Ee(le));
      };
    }
    function Ui(ee, Ee) {
      for (var le = -1, Ue = ee.length, Qe = 0, St = []; ++le < Ue;) {
        var sr = ee[le];
        if (sr === Ee || sr === d) {
          ee[le] = d;
          St[Qe++] = le;
        }
      }
      return St;
    }
    function zl(ee) {
      var Ee = -1;
      var le = Array(ee.size);
      ee.forEach(function (Ue) {
        le[++Ee] = Ue;
      });
      return le;
    }
    function wC(ee) {
      var Ee = -1;
      var le = Array(ee.size);
      ee.forEach(function (Ue) {
        le[++Ee] = [Ue, Ue];
      });
      return le;
    }
    function OC(ee, Ee, le) {
      for (var Ue = le - 1, Qe = ee.length; ++Ue < Qe;) {
        if (ee[Ue] === Ee) {
          return Ue;
        }
      }
      return -1;
    }
    function IC(ee, Ee, le) {
      for (var Ue = le + 1; Ue--;) {
        if (ee[Ue] === Ee) {
          return Ue;
        }
      }
      return Ue;
    }
    function la(ee) {
      if (oa(ee)) {
        return PC(ee);
      } else {
        return mC(ee);
      }
    }
    function Rn(ee) {
      if (oa(ee)) {
        return UC(ee);
      } else {
        return gC(ee);
      }
    }
    function ug(ee) {
      for (var Ee = ee.length; Ee-- && xL.test(ee.charAt(Ee)););
      return Ee;
    }
    var NC = np(lC);
    function PC(ee) {
      var Ee = Yc.lastIndex = 0;
      for (; Yc.test(ee);) {
        ++Ee;
      }
      return Ee;
    }
    function UC(ee) {
      return ee.match(Yc) || [];
    }
    function DC(ee) {
      return ee.match(tC) || [];
    }
    var BC = function ee(Ee) {
      Ee = Ee == null ? Er : ua.defaults(Er.Object(), Ee, ua.pick(Er, iC));
      var le = Ee.Array;
      var Ue = Ee.Date;
      var Qe = Ee.Error;
      var St = Ee.Function;
      var sr = Ee.Math;
      var Dt = Ee.Object;
      var lp = Ee.RegExp;
      var MC = Ee.String;
      var fn = Ee.TypeError;
      var ql = le.prototype;
      var $C = St.prototype;
      var fa = Dt.prototype;
      var Yl = Ee["__core-js_shared__"];
      var Jl = $C.toString;
      var Ot = fa.hasOwnProperty;
      var KC = 0;
      var fg = function () {
        var a = /[^.]+$/.exec(Yl && Yl.keys && Yl.keys.IE_PROTO || "");
        if (a) {
          return "Symbol(src)_1." + a;
        } else {
          return "";
        }
      }();
      var Zl = fa.toString;
      var kC = Jl.call(Dt);
      var GC = Er._;
      var VC = lp("^" + Jl.call(Ot).replace(Hc, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
      var Ql = jm ? Ee.Buffer : r;
      var Di = Ee.Symbol;
      var eu = Ee.Uint8Array;
      var cg = Ql ? Ql.allocUnsafe : r;
      var tu = lg(Dt.getPrototypeOf, Dt);
      var pg = Dt.create;
      var dg = fa.propertyIsEnumerable;
      var ru = ql.splice;
      var hg = Di ? Di.isConcatSpreadable : r;
      var Lo = Di ? Di.iterator : r;
      var xs = Di ? Di.toStringTag : r;
      var nu = function () {
        try {
          var a = Ls(Dt, "defineProperty");
          a({}, "", {});
          return a;
        } catch {}
      }();
      var FC = Ee.clearTimeout !== Er.clearTimeout && Ee.clearTimeout;
      var HC = Ue && Ue.now !== Er.Date.now && Ue.now;
      var WC = Ee.setTimeout !== Er.setTimeout && Ee.setTimeout;
      var iu = sr.ceil;
      var su = sr.floor;
      var up = Dt.getOwnPropertySymbols;
      var XC = Ql ? Ql.isBuffer : r;
      var Eg = Ee.isFinite;
      var jC = ql.join;
      var zC = lg(Dt.keys, Dt);
      var ar = sr.max;
      var xr = sr.min;
      var qC = Ue.now;
      var YC = Ee.parseInt;
      var mg = sr.random;
      var JC = ql.reverse;
      var fp = Ls(Ee, "DataView");
      var Co = Ls(Ee, "Map");
      var cp = Ls(Ee, "Promise");
      var ca = Ls(Ee, "Set");
      var wo = Ls(Ee, "WeakMap");
      var Oo = Ls(Dt, "create");
      var au = wo && new wo();
      var pa = {};
      var ZC = Cs(fp);
      var QC = Cs(Co);
      var ew = Cs(cp);
      var tw = Cs(ca);
      var rw = Cs(wo);
      var ou = Di ? Di.prototype : r;
      var Io = ou ? ou.valueOf : r;
      var gg = ou ? ou.toString : r;
      function C(a) {
        if (Jt(a) && !et(a) && !(a instanceof dt)) {
          if (a instanceof cn) {
            return a;
          }
          if (Ot.call(a, "__wrapped__")) {
            return __(a);
          }
        }
        return new cn(a);
      }
      var da = function () {
        function a() {}
        return function (l) {
          if (!qt(l)) {
            return {};
          }
          if (pg) {
            return pg(l);
          }
          a.prototype = l;
          var h = new a();
          a.prototype = r;
          return h;
        };
      }();
      function lu() {}
      function cn(a, l) {
        this.__wrapped__ = a;
        this.__actions__ = [];
        this.__chain__ = !!l;
        this.__index__ = 0;
        this.__values__ = r;
      }
      C.templateSettings = {
        escape: mL,
        evaluate: gL,
        interpolate: Am,
        variable: "",
        imports: {
          _: C
        }
      };
      C.prototype = lu.prototype;
      C.prototype.constructor = C;
      cn.prototype = da(lu.prototype);
      cn.prototype.constructor = cn;
      function dt(a) {
        this.__wrapped__ = a;
        this.__actions__ = [];
        this.__dir__ = 1;
        this.__filtered__ = false;
        this.__iteratees__ = [];
        this.__takeCount__ = ye;
        this.__views__ = [];
      }
      function nw() {
        var a = new dt(this.__wrapped__);
        a.__actions__ = kr(this.__actions__);
        a.__dir__ = this.__dir__;
        a.__filtered__ = this.__filtered__;
        a.__iteratees__ = kr(this.__iteratees__);
        a.__takeCount__ = this.__takeCount__;
        a.__views__ = kr(this.__views__);
        return a;
      }
      function iw() {
        if (this.__filtered__) {
          var a = new dt(this);
          a.__dir__ = -1;
          a.__filtered__ = true;
        } else {
          a = this.clone();
          a.__dir__ *= -1;
        }
        return a;
      }
      function sw() {
        var a = this.__wrapped__.value();
        var l = this.__dir__;
        var h = et(a);
        var _ = l < 0;
        var S = h ? a.length : 0;
        var I = gO(0, S, this.__views__);
        var H = I.start;
        var q = I.end;
        var re = q - H;
        var me = _ ? q : H - 1;
        var ge = this.__iteratees__;
        var be = ge.length;
        var Oe = 0;
        var Ke = xr(re, this.__takeCount__);
        if (!h || !_ && S == re && Ke == re) {
          return Gg(a, this.__actions__);
        }
        var We = [];
        e: while (re-- && Oe < Ke) {
          me += l;
          for (var it = -1, Xe = a[me]; ++it < be;) {
            var ct = ge[it];
            var mt = ct.iteratee;
            var en = ct.type;
            var Pr = mt(Xe);
            if (en == w) {
              Xe = Pr;
            } else if (!Pr) {
              if (en == k) {
                continue e;
              }
              break e;
            }
          }
          We[Oe++] = Xe;
        }
        return We;
      }
      dt.prototype = da(lu.prototype);
      dt.prototype.constructor = dt;
      function Rs(a) {
        var l = -1;
        var h = a == null ? 0 : a.length;
        for (this.clear(); ++l < h;) {
          var _ = a[l];
          this.set(_[0], _[1]);
        }
      }
      function aw() {
        this.__data__ = Oo ? Oo(null) : {};
        this.size = 0;
      }
      function ow(a) {
        var l = this.has(a) && delete this.__data__[a];
        this.size -= l ? 1 : 0;
        return l;
      }
      function lw(a) {
        var l = this.__data__;
        if (Oo) {
          var h = l[a];
          if (h === c) {
            return r;
          } else {
            return h;
          }
        }
        if (Ot.call(l, a)) {
          return l[a];
        } else {
          return r;
        }
      }
      function uw(a) {
        var l = this.__data__;
        if (Oo) {
          return l[a] !== r;
        } else {
          return Ot.call(l, a);
        }
      }
      function fw(a, l) {
        var h = this.__data__;
        this.size += this.has(a) ? 0 : 1;
        h[a] = Oo && l === r ? c : l;
        return this;
      }
      Rs.prototype.clear = aw;
      Rs.prototype.delete = ow;
      Rs.prototype.get = lw;
      Rs.prototype.has = uw;
      Rs.prototype.set = fw;
      function ai(a) {
        var l = -1;
        var h = a == null ? 0 : a.length;
        for (this.clear(); ++l < h;) {
          var _ = a[l];
          this.set(_[0], _[1]);
        }
      }
      function cw() {
        this.__data__ = [];
        this.size = 0;
      }
      function pw(a) {
        var l = this.__data__;
        var h = uu(l, a);
        if (h < 0) {
          return false;
        }
        var _ = l.length - 1;
        if (h == _) {
          l.pop();
        } else {
          ru.call(l, h, 1);
        }
        --this.size;
        return true;
      }
      function dw(a) {
        var l = this.__data__;
        var h = uu(l, a);
        if (h < 0) {
          return r;
        } else {
          return l[h][1];
        }
      }
      function hw(a) {
        return uu(this.__data__, a) > -1;
      }
      function Ew(a, l) {
        var h = this.__data__;
        var _ = uu(h, a);
        if (_ < 0) {
          ++this.size;
          h.push([a, l]);
        } else {
          h[_][1] = l;
        }
        return this;
      }
      ai.prototype.clear = cw;
      ai.prototype.delete = pw;
      ai.prototype.get = dw;
      ai.prototype.has = hw;
      ai.prototype.set = Ew;
      function oi(a) {
        var l = -1;
        var h = a == null ? 0 : a.length;
        for (this.clear(); ++l < h;) {
          var _ = a[l];
          this.set(_[0], _[1]);
        }
      }
      function mw() {
        this.size = 0;
        this.__data__ = {
          hash: new Rs(),
          map: new (Co || ai)(),
          string: new Rs()
        };
      }
      function gw(a) {
        var l = bu(this, a).delete(a);
        this.size -= l ? 1 : 0;
        return l;
      }
      function _w(a) {
        return bu(this, a).get(a);
      }
      function Tw(a) {
        return bu(this, a).has(a);
      }
      function vw(a, l) {
        var h = bu(this, a);
        var _ = h.size;
        h.set(a, l);
        this.size += h.size == _ ? 0 : 1;
        return this;
      }
      oi.prototype.clear = mw;
      oi.prototype.delete = gw;
      oi.prototype.get = _w;
      oi.prototype.has = Tw;
      oi.prototype.set = vw;
      function Ss(a) {
        var l = -1;
        var h = a == null ? 0 : a.length;
        for (this.__data__ = new oi(); ++l < h;) {
          this.add(a[l]);
        }
      }
      function bw(a) {
        this.__data__.set(a, c);
        return this;
      }
      function xw(a) {
        return this.__data__.has(a);
      }
      Ss.prototype.add = Ss.prototype.push = bw;
      Ss.prototype.has = xw;
      function Sn(a) {
        var l = this.__data__ = new ai(a);
        this.size = l.size;
      }
      function Rw() {
        this.__data__ = new ai();
        this.size = 0;
      }
      function Sw(a) {
        var l = this.__data__;
        var h = l.delete(a);
        this.size = l.size;
        return h;
      }
      function yw(a) {
        return this.__data__.get(a);
      }
      function Aw(a) {
        return this.__data__.has(a);
      }
      function Lw(a, l) {
        var h = this.__data__;
        if (h instanceof ai) {
          var _ = h.__data__;
          if (!Co || _.length < i - 1) {
            _.push([a, l]);
            this.size = ++h.size;
            return this;
          }
          h = this.__data__ = new oi(_);
        }
        h.set(a, l);
        this.size = h.size;
        return this;
      }
      Sn.prototype.clear = Rw;
      Sn.prototype.delete = Sw;
      Sn.prototype.get = yw;
      Sn.prototype.has = Aw;
      Sn.prototype.set = Lw;
      function _g(a, l) {
        var h = et(a);
        var _ = !h && ws(a);
        var S = !h && !_ && ki(a);
        var I = !h && !_ && !S && ga(a);
        var H = h || _ || S || I;
        var q = H ? sp(a.length, MC) : [];
        var re = q.length;
        for (var me in a) {
          if ((l || Ot.call(a, me)) && (!H || me != "length" && (!S || me != "offset" && me != "parent") && (!I || me != "buffer" && me != "byteLength" && me != "byteOffset") && !ci(me, re))) {
            q.push(me);
          }
        }
        return q;
      }
      function Tg(a) {
        var l = a.length;
        if (l) {
          return a[xp(0, l - 1)];
        } else {
          return r;
        }
      }
      function Cw(a, l) {
        return xu(kr(a), ys(l, 0, a.length));
      }
      function ww(a) {
        return xu(kr(a));
      }
      function pp(a, l, h) {
        if (h !== r && !yn(a[l], h) || h === r && !(l in a)) {
          li(a, l, h);
        }
      }
      function No(a, l, h) {
        var _ = a[l];
        if (!Ot.call(a, l) || !yn(_, h) || h === r && !(l in a)) {
          li(a, l, h);
        }
      }
      function uu(a, l) {
        for (var h = a.length; h--;) {
          if (yn(a[h][0], l)) {
            return h;
          }
        }
        return -1;
      }
      function Ow(a, l, h, _) {
        Bi(a, function (S, I, H) {
          l(_, S, h(S), H);
        });
        return _;
      }
      function vg(a, l) {
        return a && $n(l, pr(l), a);
      }
      function Iw(a, l) {
        return a && $n(l, Vr(l), a);
      }
      function li(a, l, h) {
        if (l == "__proto__" && nu) {
          nu(a, l, {
            configurable: true,
            enumerable: true,
            value: h,
            writable: true
          });
        } else {
          a[l] = h;
        }
      }
      function dp(a, l) {
        for (var h = -1, _ = l.length, S = le(_), I = a == null; ++h < _;) {
          S[h] = I ? r : jp(a, l[h]);
        }
        return S;
      }
      function ys(a, l, h) {
        if (a === a) {
          if (h !== r) {
            a = a <= h ? a : h;
          }
          if (l !== r) {
            a = a >= l ? a : l;
          }
        }
        return a;
      }
      function pn(a, l, h, _, S, I) {
        var H;
        var q = l & E;
        var re = l & m;
        var me = l & g;
        if (h) {
          H = S ? h(a, _, S, I) : h(a);
        }
        if (H !== r) {
          return H;
        }
        if (!qt(a)) {
          return a;
        }
        var ge = et(a);
        if (ge) {
          H = TO(a);
          if (!q) {
            return kr(a, H);
          }
        } else {
          var be = Rr(a);
          var Oe = be == $t || be == F;
          if (ki(a)) {
            return Hg(a, q);
          }
          if (be == pe || be == Rt || Oe && !S) {
            H = re || Oe ? {} : u_(a);
            if (!q) {
              if (re) {
                return lO(a, Iw(H, a));
              } else {
                return oO(a, vg(H, a));
              }
            }
          } else {
            if (!Kt[be]) {
              if (S) {
                return a;
              } else {
                return {};
              }
            }
            H = vO(a, be, q);
          }
        }
        I ||= new Sn();
        var Ke = I.get(a);
        if (Ke) {
          return Ke;
        }
        I.set(a, H);
        if ($_(a)) {
          a.forEach(function (Xe) {
            H.add(pn(Xe, l, h, Xe, a, I));
          });
        } else if (B_(a)) {
          a.forEach(function (Xe, ct) {
            H.set(ct, pn(Xe, l, h, ct, a, I));
          });
        }
        var We = me ? re ? Pp : Np : re ? Vr : pr;
        var it = ge ? r : We(a);
        un(it || a, function (Xe, ct) {
          if (it) {
            ct = Xe;
            Xe = a[ct];
          }
          No(H, ct, pn(Xe, l, h, ct, a, I));
        });
        return H;
      }
      function Nw(a) {
        var l = pr(a);
        return function (h) {
          return bg(h, a, l);
        };
      }
      function bg(a, l, h) {
        var _ = h.length;
        if (a == null) {
          return !_;
        }
        for (a = Dt(a); _--;) {
          var S = h[_];
          var I = l[S];
          var H = a[S];
          if (H === r && !(S in a) || !I(H)) {
            return false;
          }
        }
        return true;
      }
      function xg(a, l, h) {
        if (typeof a != "function") {
          throw new fn(o);
        }
        return Ko(function () {
          a.apply(r, h);
        }, l);
      }
      function Po(a, l, h, _) {
        var S = -1;
        var I = Xl;
        var H = true;
        var q = a.length;
        var re = [];
        var me = l.length;
        if (!q) {
          return re;
        }
        if (h) {
          l = jt(l, Jr(h));
        }
        if (_) {
          I = Qc;
          H = false;
        } else if (l.length >= i) {
          I = Ao;
          H = false;
          l = new Ss(l);
        }
        e: while (++S < q) {
          var ge = a[S];
          var be = h == null ? ge : h(ge);
          ge = _ || ge !== 0 ? ge : 0;
          if (H && be === be) {
            for (var Oe = me; Oe--;) {
              if (l[Oe] === be) {
                continue e;
              }
            }
            re.push(ge);
          } else if (!I(l, be, _)) {
            re.push(ge);
          }
        }
        return re;
      }
      var Bi = qg(Mn);
      var Rg = qg(Ep, true);
      function Pw(a, l) {
        var h = true;
        Bi(a, function (_, S, I) {
          h = !!l(_, S, I);
          return h;
        });
        return h;
      }
      function fu(a, l, h) {
        for (var _ = -1, S = a.length; ++_ < S;) {
          var I = a[_];
          var H = l(I);
          if (H != null && (q === r ? H === H && !Qr(H) : h(H, q))) {
            var q = H;
            var re = I;
          }
        }
        return re;
      }
      function Uw(a, l, h, _) {
        var S = a.length;
        h = nt(h);
        if (h < 0) {
          h = -h > S ? 0 : S + h;
        }
        _ = _ === r || _ > S ? S : nt(_);
        if (_ < 0) {
          _ += S;
        }
        _ = h > _ ? 0 : k_(_);
        while (h < _) {
          a[h++] = l;
        }
        return a;
      }
      function Sg(a, l) {
        var h = [];
        Bi(a, function (_, S, I) {
          if (l(_, S, I)) {
            h.push(_);
          }
        });
        return h;
      }
      function mr(a, l, h, _, S) {
        var I = -1;
        var H = a.length;
        h ||= xO;
        S ||= [];
        while (++I < H) {
          var q = a[I];
          if (l > 0 && h(q)) {
            if (l > 1) {
              mr(q, l - 1, h, _, S);
            } else {
              Pi(S, q);
            }
          } else if (!_) {
            S[S.length] = q;
          }
        }
        return S;
      }
      var hp = Yg();
      var yg = Yg(true);
      function Mn(a, l) {
        return a && hp(a, l, pr);
      }
      function Ep(a, l) {
        return a && yg(a, l, pr);
      }
      function cu(a, l) {
        return Ni(l, function (h) {
          return pi(a[h]);
        });
      }
      function As(a, l) {
        l = $i(l, a);
        for (var h = 0, _ = l.length; a != null && h < _;) {
          a = a[Kn(l[h++])];
        }
        if (h && h == _) {
          return a;
        } else {
          return r;
        }
      }
      function Ag(a, l, h) {
        var _ = l(a);
        if (et(a)) {
          return _;
        } else {
          return Pi(_, h(a));
        }
      }
      function Ir(a) {
        if (a == null) {
          if (a === r) {
            return Ce;
          } else {
            return he;
          }
        } else if (xs && xs in Dt(a)) {
          return mO(a);
        } else {
          return wO(a);
        }
      }
      function mp(a, l) {
        return a > l;
      }
      function Dw(a, l) {
        return a != null && Ot.call(a, l);
      }
      function Bw(a, l) {
        return a != null && l in Dt(a);
      }
      function Mw(a, l, h) {
        return a >= xr(l, h) && a < ar(l, h);
      }
      function gp(a, l, h) {
        var _ = h ? Qc : Xl;
        var S = a[0].length;
        var I = a.length;
        for (var H = I, q = le(I), re = Infinity, me = []; H--;) {
          var ge = a[H];
          if (H && l) {
            ge = jt(ge, Jr(l));
          }
          re = xr(ge.length, re);
          q[H] = !h && (l || S >= 120 && ge.length >= 120) ? new Ss(H && ge) : r;
        }
        ge = a[0];
        var be = -1;
        var Oe = q[0];
        e: while (++be < S && me.length < re) {
          var Ke = ge[be];
          var We = l ? l(Ke) : Ke;
          Ke = h || Ke !== 0 ? Ke : 0;
          if (!(Oe ? Ao(Oe, We) : _(me, We, h))) {
            for (H = I; --H;) {
              var it = q[H];
              if (!(it ? Ao(it, We) : _(a[H], We, h))) {
                continue e;
              }
            }
            if (Oe) {
              Oe.push(We);
            }
            me.push(Ke);
          }
        }
        return me;
      }
      function $w(a, l, h, _) {
        Mn(a, function (S, I, H) {
          l(_, h(S), I, H);
        });
        return _;
      }
      function Uo(a, l, h) {
        l = $i(l, a);
        a = d_(a, l);
        var _ = a == null ? a : a[Kn(hn(l))];
        if (_ == null) {
          return r;
        } else {
          return Yr(_, a, h);
        }
      }
      function Lg(a) {
        return Jt(a) && Ir(a) == Rt;
      }
      function Kw(a) {
        return Jt(a) && Ir(a) == oe;
      }
      function kw(a) {
        return Jt(a) && Ir(a) == ot;
      }
      function Do(a, l, h, _, S) {
        if (a === l) {
          return true;
        } else if (a == null || l == null || !Jt(a) && !Jt(l)) {
          return a !== a && l !== l;
        } else {
          return Gw(a, l, h, _, Do, S);
        }
      }
      function Gw(a, l, h, _, S, I) {
        var H = et(a);
        var q = et(l);
        var re = H ? je : Rr(a);
        var me = q ? je : Rr(l);
        re = re == Rt ? pe : re;
        me = me == Rt ? pe : me;
        var ge = re == pe;
        var be = me == pe;
        var Oe = re == me;
        if (Oe && ki(a)) {
          if (!ki(l)) {
            return false;
          }
          H = true;
          ge = false;
        }
        if (Oe && !ge) {
          I ||= new Sn();
          if (H || ga(a)) {
            return a_(a, l, h, _, S, I);
          } else {
            return hO(a, l, re, h, _, S, I);
          }
        }
        if (!(h & T)) {
          var Ke = ge && Ot.call(a, "__wrapped__");
          var We = be && Ot.call(l, "__wrapped__");
          if (Ke || We) {
            var it = Ke ? a.value() : a;
            var Xe = We ? l.value() : l;
            I ||= new Sn();
            return S(it, Xe, h, _, I);
          }
        }
        if (Oe) {
          I ||= new Sn();
          return EO(a, l, h, _, S, I);
        } else {
          return false;
        }
      }
      function Vw(a) {
        return Jt(a) && Rr(a) == D;
      }
      function _p(a, l, h, _) {
        var S = h.length;
        var I = S;
        var H = !_;
        if (a == null) {
          return !I;
        }
        for (a = Dt(a); S--;) {
          var q = h[S];
          if (H && q[2] ? q[1] !== a[q[0]] : !(q[0] in a)) {
            return false;
          }
        }
        while (++S < I) {
          q = h[S];
          var re = q[0];
          var me = a[re];
          var ge = q[1];
          if (H && q[2]) {
            if (me === r && !(re in a)) {
              return false;
            }
          } else {
            var be = new Sn();
            if (_) {
              var Oe = _(me, ge, re, a, l, be);
            }
            if (!(Oe === r ? Do(ge, me, T | b, _, be) : Oe)) {
              return false;
            }
          }
        }
        return true;
      }
      function Cg(a) {
        if (!qt(a) || SO(a)) {
          return false;
        }
        var l = pi(a) ? VC : NL;
        return l.test(Cs(a));
      }
      function Fw(a) {
        return Jt(a) && Ir(a) == O;
      }
      function Hw(a) {
        return Jt(a) && Rr(a) == B;
      }
      function Ww(a) {
        return Jt(a) && Cu(a.length) && !!Vt[Ir(a)];
      }
      function wg(a) {
        if (typeof a == "function") {
          return a;
        } else if (a == null) {
          return Fr;
        } else if (typeof a == "object") {
          if (et(a)) {
            return Ng(a[0], a[1]);
          } else {
            return Ig(a);
          }
        } else {
          return J_(a);
        }
      }
      function Tp(a) {
        if (!$o(a)) {
          return zC(a);
        }
        var l = [];
        for (var h in Dt(a)) {
          if (Ot.call(a, h) && h != "constructor") {
            l.push(h);
          }
        }
        return l;
      }
      function Xw(a) {
        if (!qt(a)) {
          return CO(a);
        }
        var l = $o(a);
        var h = [];
        for (var _ in a) {
          if (_ != "constructor" || !l && !!Ot.call(a, _)) {
            h.push(_);
          }
        }
        return h;
      }
      function vp(a, l) {
        return a < l;
      }
      function Og(a, l) {
        var h = -1;
        var _ = Gr(a) ? le(a.length) : [];
        Bi(a, function (S, I, H) {
          _[++h] = l(S, I, H);
        });
        return _;
      }
      function Ig(a) {
        var l = Dp(a);
        if (l.length == 1 && l[0][2]) {
          return c_(l[0][0], l[0][1]);
        } else {
          return function (h) {
            return h === a || _p(h, a, l);
          };
        }
      }
      function Ng(a, l) {
        if (Mp(a) && f_(l)) {
          return c_(Kn(a), l);
        } else {
          return function (h) {
            var _ = jp(h, a);
            if (_ === r && _ === l) {
              return zp(h, a);
            } else {
              return Do(l, _, T | b);
            }
          };
        }
      }
      function pu(a, l, h, _, S) {
        if (a !== l) {
          hp(l, function (I, H) {
            S ||= new Sn();
            if (qt(I)) {
              jw(a, l, H, h, pu, _, S);
            } else {
              var q = _ ? _(Kp(a, H), I, H + "", a, l, S) : r;
              if (q === r) {
                q = I;
              }
              pp(a, H, q);
            }
          }, Vr);
        }
      }
      function jw(a, l, h, _, S, I, H) {
        var q = Kp(a, h);
        var re = Kp(l, h);
        var me = H.get(re);
        if (me) {
          pp(a, h, me);
          return;
        }
        var ge = I ? I(q, re, h + "", a, l, H) : r;
        var be = ge === r;
        if (be) {
          var Oe = et(re);
          var Ke = !Oe && ki(re);
          var We = !Oe && !Ke && ga(re);
          ge = re;
          if (Oe || Ke || We) {
            if (et(q)) {
              ge = q;
            } else if (Qt(q)) {
              ge = kr(q);
            } else if (Ke) {
              be = false;
              ge = Hg(re, true);
            } else if (We) {
              be = false;
              ge = Wg(re, true);
            } else {
              ge = [];
            }
          } else if (ko(re) || ws(re)) {
            ge = q;
            if (ws(q)) {
              ge = G_(q);
            } else if (!qt(q) || pi(q)) {
              ge = u_(re);
            }
          } else {
            be = false;
          }
        }
        if (be) {
          H.set(re, ge);
          S(ge, re, _, I, H);
          H.delete(re);
        }
        pp(a, h, ge);
      }
      function Pg(a, l) {
        var h = a.length;
        if (h) {
          l += l < 0 ? h : 0;
          if (ci(l, h)) {
            return a[l];
          } else {
            return r;
          }
        }
      }
      function Ug(a, l, h) {
        if (l.length) {
          l = jt(l, function (I) {
            if (et(I)) {
              return function (H) {
                return As(H, I.length === 1 ? I[0] : I);
              };
            } else {
              return I;
            }
          });
        } else {
          l = [Fr];
        }
        var _ = -1;
        l = jt(l, Jr(He()));
        var S = Og(a, function (I, H, q) {
          var re = jt(l, function (me) {
            return me(I);
          });
          return {
            criteria: re,
            index: ++_,
            value: I
          };
        });
        return vC(S, function (I, H) {
          return aO(I, H, h);
        });
      }
      function zw(a, l) {
        return Dg(a, l, function (h, _) {
          return zp(a, _);
        });
      }
      function Dg(a, l, h) {
        for (var _ = -1, S = l.length, I = {}; ++_ < S;) {
          var H = l[_];
          var q = As(a, H);
          if (h(q, H)) {
            Bo(I, $i(H, a), q);
          }
        }
        return I;
      }
      function qw(a) {
        return function (l) {
          return As(l, a);
        };
      }
      function bp(a, l, h, _) {
        var S = _ ? TC : aa;
        var I = -1;
        var H = l.length;
        var q = a;
        if (a === l) {
          l = kr(l);
        }
        if (h) {
          q = jt(a, Jr(h));
        }
        while (++I < H) {
          for (var re = 0, me = l[I], ge = h ? h(me) : me; (re = S(q, ge, re, _)) > -1;) {
            if (q !== a) {
              ru.call(q, re, 1);
            }
            ru.call(a, re, 1);
          }
        }
        return a;
      }
      function Bg(a, l) {
        for (var h = a ? l.length : 0, _ = h - 1; h--;) {
          var S = l[h];
          if (h == _ || S !== I) {
            var I = S;
            if (ci(S)) {
              ru.call(a, S, 1);
            } else {
              yp(a, S);
            }
          }
        }
        return a;
      }
      function xp(a, l) {
        return a + su(mg() * (l - a + 1));
      }
      function Yw(a, l, h, _) {
        var S = -1;
        for (var I = ar(iu((l - a) / (h || 1)), 0), H = le(I); I--;) {
          H[_ ? I : ++S] = a;
          a += h;
        }
        return H;
      }
      function Rp(a, l) {
        var h = "";
        if (!a || l < 1 || l > te) {
          return h;
        }
        do {
          if (l % 2) {
            h += a;
          }
          l = su(l / 2);
          if (l) {
            a += a;
          }
        } while (l);
        return h;
      }
      function st(a, l) {
        return kp(p_(a, l, Fr), a + "");
      }
      function Jw(a) {
        return Tg(_a(a));
      }
      function Zw(a, l) {
        var h = _a(a);
        return xu(h, ys(l, 0, h.length));
      }
      function Bo(a, l, h, _) {
        if (!qt(a)) {
          return a;
        }
        l = $i(l, a);
        for (var S = -1, I = l.length, H = I - 1, q = a; q != null && ++S < I;) {
          var re = Kn(l[S]);
          var me = h;
          if (re === "__proto__" || re === "constructor" || re === "prototype") {
            return a;
          }
          if (S != H) {
            var ge = q[re];
            me = _ ? _(ge, re, q) : r;
            if (me === r) {
              me = qt(ge) ? ge : ci(l[S + 1]) ? [] : {};
            }
          }
          No(q, re, me);
          q = q[re];
        }
        return a;
      }
      var Mg = au ? function (a, l) {
        au.set(a, l);
        return a;
      } : Fr;
      var Qw = nu ? function (a, l) {
        return nu(a, "toString", {
          configurable: true,
          enumerable: false,
          value: Yp(l),
          writable: true
        });
      } : Fr;
      function eO(a) {
        return xu(_a(a));
      }
      function dn(a, l, h) {
        var _ = -1;
        var S = a.length;
        if (l < 0) {
          l = -l > S ? 0 : S + l;
        }
        h = h > S ? S : h;
        if (h < 0) {
          h += S;
        }
        S = l > h ? 0 : h - l >>> 0;
        l >>>= 0;
        var I = le(S);
        for (; ++_ < S;) {
          I[_] = a[_ + l];
        }
        return I;
      }
      function tO(a, l) {
        var h;
        Bi(a, function (_, S, I) {
          h = l(_, S, I);
          return !h;
        });
        return !!h;
      }
      function du(a, l, h) {
        var _ = 0;
        var S = a == null ? _ : a.length;
        if (typeof l == "number" && l === l && S <= Le) {
          while (_ < S) {
            var I = _ + S >>> 1;
            var H = a[I];
            if (H !== null && !Qr(H) && (h ? H <= l : H < l)) {
              _ = I + 1;
            } else {
              S = I;
            }
          }
          return S;
        }
        return Sp(a, l, Fr, h);
      }
      function Sp(a, l, h, _) {
        var S = 0;
        var I = a == null ? 0 : a.length;
        if (I === 0) {
          return 0;
        }
        l = h(l);
        var H = l !== l;
        var q = l === null;
        var re = Qr(l);
        var me = l === r;
        for (; S < I;) {
          var ge = su((S + I) / 2);
          var be = h(a[ge]);
          var Oe = be !== r;
          var Ke = be === null;
          var We = be === be;
          var it = Qr(be);
          if (H) {
            var Xe = _ || We;
          } else if (me) {
            Xe = We && (_ || Oe);
          } else if (q) {
            Xe = We && Oe && (_ || !Ke);
          } else if (re) {
            Xe = We && Oe && !Ke && (_ || !it);
          } else if (Ke || it) {
            Xe = false;
          } else {
            Xe = _ ? be <= l : be < l;
          }
          if (Xe) {
            S = ge + 1;
          } else {
            I = ge;
          }
        }
        return xr(I, Be);
      }
      function $g(a, l) {
        for (var h = -1, _ = a.length, S = 0, I = []; ++h < _;) {
          var H = a[h];
          var q = l ? l(H) : H;
          if (!h || !yn(q, re)) {
            var re = q;
            I[S++] = H === 0 ? 0 : H;
          }
        }
        return I;
      }
      function Kg(a) {
        if (typeof a == "number") {
          return a;
        } else if (Qr(a)) {
          return _e;
        } else {
          return +a;
        }
      }
      function Zr(a) {
        if (typeof a == "string") {
          return a;
        }
        if (et(a)) {
          return jt(a, Zr) + "";
        }
        if (Qr(a)) {
          if (gg) {
            return gg.call(a);
          } else {
            return "";
          }
        }
        var l = a + "";
        if (l == "0" && 1 / a == -W) {
          return "-0";
        } else {
          return l;
        }
      }
      function Mi(a, l, h) {
        var _ = -1;
        var S = Xl;
        var I = a.length;
        var H = true;
        var q = [];
        var re = q;
        if (h) {
          H = false;
          S = Qc;
        } else if (I >= i) {
          var me = l ? null : pO(a);
          if (me) {
            return zl(me);
          }
          H = false;
          S = Ao;
          re = new Ss();
        } else {
          re = l ? [] : q;
        }
        e: while (++_ < I) {
          var ge = a[_];
          var be = l ? l(ge) : ge;
          ge = h || ge !== 0 ? ge : 0;
          if (H && be === be) {
            for (var Oe = re.length; Oe--;) {
              if (re[Oe] === be) {
                continue e;
              }
            }
            if (l) {
              re.push(be);
            }
            q.push(ge);
          } else if (!S(re, be, h)) {
            if (re !== q) {
              re.push(be);
            }
            q.push(ge);
          }
        }
        return q;
      }
      function yp(a, l) {
        l = $i(l, a);
        a = d_(a, l);
        return a == null || delete a[Kn(hn(l))];
      }
      function kg(a, l, h, _) {
        return Bo(a, l, h(As(a, l)), _);
      }
      function hu(a, l, h, _) {
        for (var S = a.length, I = _ ? S : -1; (_ ? I-- : ++I < S) && l(a[I], I, a););
        if (h) {
          return dn(a, _ ? 0 : I, _ ? I + 1 : S);
        } else {
          return dn(a, _ ? I + 1 : 0, _ ? S : I);
        }
      }
      function Gg(a, l) {
        var h = a;
        if (h instanceof dt) {
          h = h.value();
        }
        return ep(l, function (_, S) {
          return S.func.apply(S.thisArg, Pi([_], S.args));
        }, h);
      }
      function Ap(a, l, h) {
        var _ = a.length;
        if (_ < 2) {
          if (_) {
            return Mi(a[0]);
          } else {
            return [];
          }
        }
        for (var S = -1, I = le(_); ++S < _;) {
          var H = a[S];
          for (var q = -1; ++q < _;) {
            if (q != S) {
              I[S] = Po(I[S] || H, a[q], l, h);
            }
          }
        }
        return Mi(mr(I, 1), l, h);
      }
      function Vg(a, l, h) {
        for (var _ = -1, S = a.length, I = l.length, H = {}; ++_ < S;) {
          var q = _ < I ? l[_] : r;
          h(H, a[_], q);
        }
        return H;
      }
      function Lp(a) {
        if (Qt(a)) {
          return a;
        } else {
          return [];
        }
      }
      function Cp(a) {
        if (typeof a == "function") {
          return a;
        } else {
          return Fr;
        }
      }
      function $i(a, l) {
        if (et(a)) {
          return a;
        } else if (Mp(a, l)) {
          return [a];
        } else {
          return g_(Lt(a));
        }
      }
      var rO = st;
      function Ki(a, l, h) {
        var _ = a.length;
        h = h === r ? _ : h;
        if (!l && h >= _) {
          return a;
        } else {
          return dn(a, l, h);
        }
      }
      var Fg = FC || function (a) {
        return Er.clearTimeout(a);
      };
      function Hg(a, l) {
        if (l) {
          return a.slice();
        }
        var h = a.length;
        var _ = cg ? cg(h) : new a.constructor(h);
        a.copy(_);
        return _;
      }
      function wp(a) {
        var l = new a.constructor(a.byteLength);
        new eu(l).set(new eu(a));
        return l;
      }
      function nO(a, l) {
        var h = l ? wp(a.buffer) : a.buffer;
        return new a.constructor(h, a.byteOffset, a.byteLength);
      }
      function iO(a) {
        var l = new a.constructor(a.source, Lm.exec(a));
        l.lastIndex = a.lastIndex;
        return l;
      }
      function sO(a) {
        if (Io) {
          return Dt(Io.call(a));
        } else {
          return {};
        }
      }
      function Wg(a, l) {
        var h = l ? wp(a.buffer) : a.buffer;
        return new a.constructor(h, a.byteOffset, a.length);
      }
      function Xg(a, l) {
        if (a !== l) {
          var h = a !== r;
          var _ = a === null;
          var S = a === a;
          var I = Qr(a);
          var H = l !== r;
          var q = l === null;
          var re = l === l;
          var me = Qr(l);
          if (!q && !me && !I && a > l || I && H && re && !q && !me || _ && H && re || !h && re || !S) {
            return 1;
          }
          if (!_ && !I && !me && a < l || me && h && S && !_ && !I || q && h && S || !H && S || !re) {
            return -1;
          }
        }
        return 0;
      }
      function aO(a, l, h) {
        for (var _ = -1, S = a.criteria, I = l.criteria, H = S.length, q = h.length; ++_ < H;) {
          var re = Xg(S[_], I[_]);
          if (re) {
            if (_ >= q) {
              return re;
            }
            var me = h[_];
            return re * (me == "desc" ? -1 : 1);
          }
        }
        return a.index - l.index;
      }
      function jg(a, l, h, _) {
        var S = -1;
        var I = a.length;
        var H = h.length;
        for (var q = -1, re = l.length, me = ar(I - H, 0), ge = le(re + me), be = !_; ++q < re;) {
          ge[q] = l[q];
        }
        while (++S < H) {
          if (be || S < I) {
            ge[h[S]] = a[S];
          }
        }
        while (me--) {
          ge[q++] = a[S++];
        }
        return ge;
      }
      function zg(a, l, h, _) {
        for (var S = -1, I = a.length, H = -1, q = h.length, re = -1, me = l.length, ge = ar(I - q, 0), be = le(ge + me), Oe = !_; ++S < ge;) {
          be[S] = a[S];
        }
        var Ke = S;
        for (; ++re < me;) {
          be[Ke + re] = l[re];
        }
        while (++H < q) {
          if (Oe || S < I) {
            be[Ke + h[H]] = a[S++];
          }
        }
        return be;
      }
      function kr(a, l) {
        var h = -1;
        var _ = a.length;
        for (l ||= le(_); ++h < _;) {
          l[h] = a[h];
        }
        return l;
      }
      function $n(a, l, h, _) {
        var S = !h;
        h ||= {};
        for (var I = -1, H = l.length; ++I < H;) {
          var q = l[I];
          var re = _ ? _(h[q], a[q], q, h, a) : r;
          if (re === r) {
            re = a[q];
          }
          if (S) {
            li(h, q, re);
          } else {
            No(h, q, re);
          }
        }
        return h;
      }
      function oO(a, l) {
        return $n(a, Bp(a), l);
      }
      function lO(a, l) {
        return $n(a, o_(a), l);
      }
      function Eu(a, l) {
        return function (h, _) {
          var S = et(h) ? dC : Ow;
          var I = l ? l() : {};
          return S(h, a, He(_, 2), I);
        };
      }
      function ha(a) {
        return st(function (l, h) {
          var _ = -1;
          var S = h.length;
          var I = S > 1 ? h[S - 1] : r;
          var H = S > 2 ? h[2] : r;
          I = a.length > 3 && typeof I == "function" ? (S--, I) : r;
          if (H && Nr(h[0], h[1], H)) {
            I = S < 3 ? r : I;
            S = 1;
          }
          l = Dt(l);
          while (++_ < S) {
            var q = h[_];
            if (q) {
              a(l, q, _, I);
            }
          }
          return l;
        });
      }
      function qg(a, l) {
        return function (h, _) {
          if (h == null) {
            return h;
          }
          if (!Gr(h)) {
            return a(h, _);
          }
          for (var S = h.length, I = l ? S : -1, H = Dt(h); (l ? I-- : ++I < S) && _(H[I], I, H) !== false;);
          return h;
        };
      }
      function Yg(a) {
        return function (l, h, _) {
          var S = -1;
          var I = Dt(l);
          var H = _(l);
          for (var q = H.length; q--;) {
            var re = H[a ? q : ++S];
            if (h(I[re], re, I) === false) {
              break;
            }
          }
          return l;
        };
      }
      function uO(a, l, h) {
        var _ = l & x;
        var S = Mo(a);
        function I() {
          var H = this && this !== Er && this instanceof I ? S : a;
          return H.apply(_ ? h : this, arguments);
        }
        return I;
      }
      function Jg(a) {
        return function (l) {
          l = Lt(l);
          var h = oa(l) ? Rn(l) : r;
          var _ = h ? h[0] : l.charAt(0);
          var S = h ? Ki(h, 1).join("") : l.slice(1);
          return _[a]() + S;
        };
      }
      function Ea(a) {
        return function (l) {
          return ep(q_(z_(l).replace(QL, "")), a, "");
        };
      }
      function Mo(a) {
        return function () {
          var l = arguments;
          switch (l.length) {
            case 0:
              return new a();
            case 1:
              return new a(l[0]);
            case 2:
              return new a(l[0], l[1]);
            case 3:
              return new a(l[0], l[1], l[2]);
            case 4:
              return new a(l[0], l[1], l[2], l[3]);
            case 5:
              return new a(l[0], l[1], l[2], l[3], l[4]);
            case 6:
              return new a(l[0], l[1], l[2], l[3], l[4], l[5]);
            case 7:
              return new a(l[0], l[1], l[2], l[3], l[4], l[5], l[6]);
          }
          var h = da(a.prototype);
          var _ = a.apply(h, l);
          if (qt(_)) {
            return _;
          } else {
            return h;
          }
        };
      }
      function fO(a, l, h) {
        var _ = Mo(a);
        function S() {
          var I = arguments.length;
          var H = le(I);
          for (var q = I, re = ma(S); q--;) {
            H[q] = arguments[q];
          }
          var me = I < 3 && H[0] !== re && H[I - 1] !== re ? [] : Ui(H, re);
          I -= me.length;
          if (I < h) {
            return r_(a, l, mu, S.placeholder, r, H, me, r, r, h - I);
          }
          var ge = this && this !== Er && this instanceof S ? _ : a;
          return Yr(ge, this, H);
        }
        return S;
      }
      function Zg(a) {
        return function (l, h, _) {
          var S = Dt(l);
          if (!Gr(l)) {
            var I = He(h, 3);
            l = pr(l);
            h = function (q) {
              return I(S[q], q, S);
            };
          }
          var H = a(l, h, _);
          if (H > -1) {
            return S[I ? l[H] : H];
          } else {
            return r;
          }
        };
      }
      function Qg(a) {
        return fi(function (l) {
          var h = l.length;
          var _ = h;
          var S = cn.prototype.thru;
          for (a && l.reverse(); _--;) {
            var I = l[_];
            if (typeof I != "function") {
              throw new fn(o);
            }
            if (S && !H && vu(I) == "wrapper") {
              var H = new cn([], true);
            }
          }
          for (_ = H ? _ : h; ++_ < h;) {
            I = l[_];
            var q = vu(I);
            var re = q == "wrapper" ? Up(I) : r;
            if (re && $p(re[0]) && re[1] == (M | v | U | X) && !re[4].length && re[9] == 1) {
              H = H[vu(re[0])].apply(H, re[3]);
            } else {
              H = I.length == 1 && $p(I) ? H[q]() : H.thru(I);
            }
          }
          return function () {
            var me = arguments;
            var ge = me[0];
            if (H && me.length == 1 && et(ge)) {
              return H.plant(ge).value();
            }
            for (var be = 0, Oe = h ? l[be].apply(this, me) : ge; ++be < h;) {
              Oe = l[be].call(this, Oe);
            }
            return Oe;
          };
        });
      }
      function mu(a, l, h, _, S, I, H, q, re, me) {
        var ge = l & M;
        var be = l & x;
        var Oe = l & A;
        var Ke = l & (v | y);
        var We = l & N;
        var it = Oe ? r : Mo(a);
        function Xe() {
          var ct = arguments.length;
          var mt = le(ct);
          for (var en = ct; en--;) {
            mt[en] = arguments[en];
          }
          if (Ke) {
            var Pr = ma(Xe);
            var tn = xC(mt, Pr);
          }
          if (_) {
            mt = jg(mt, _, S, Ke);
          }
          if (I) {
            mt = zg(mt, I, H, Ke);
          }
          ct -= tn;
          if (Ke && ct < me) {
            var er = Ui(mt, Pr);
            return r_(a, l, mu, Xe.placeholder, h, mt, er, q, re, me - ct);
          }
          var An = be ? h : this;
          var hi = Oe ? An[a] : a;
          ct = mt.length;
          if (q) {
            mt = OO(mt, q);
          } else if (We && ct > 1) {
            mt.reverse();
          }
          if (ge && re < ct) {
            mt.length = re;
          }
          if (this && this !== Er && this instanceof Xe) {
            hi = it || Mo(hi);
          }
          return hi.apply(An, mt);
        }
        return Xe;
      }
      function e_(a, l) {
        return function (h, _) {
          return $w(h, a, l(_), {});
        };
      }
      function gu(a, l) {
        return function (h, _) {
          var S;
          if (h === r && _ === r) {
            return l;
          }
          if (h !== r) {
            S = h;
          }
          if (_ !== r) {
            if (S === r) {
              return _;
            }
            if (typeof h == "string" || typeof _ == "string") {
              h = Zr(h);
              _ = Zr(_);
            } else {
              h = Kg(h);
              _ = Kg(_);
            }
            S = a(h, _);
          }
          return S;
        };
      }
      function Op(a) {
        return fi(function (l) {
          l = jt(l, Jr(He()));
          return st(function (h) {
            var _ = this;
            return a(l, function (S) {
              return Yr(S, _, h);
            });
          });
        });
      }
      function _u(a, l) {
        l = l === r ? " " : Zr(l);
        var h = l.length;
        if (h < 2) {
          if (h) {
            return Rp(l, a);
          } else {
            return l;
          }
        }
        var _ = Rp(l, iu(a / la(l)));
        if (oa(l)) {
          return Ki(Rn(_), 0, a).join("");
        } else {
          return _.slice(0, a);
        }
      }
      function cO(a, l, h, _) {
        var S = l & x;
        var I = Mo(a);
        function H() {
          var q = -1;
          var re = arguments.length;
          for (var me = -1, ge = _.length, be = le(ge + re), Oe = this && this !== Er && this instanceof H ? I : a; ++me < ge;) {
            be[me] = _[me];
          }
          while (re--) {
            be[me++] = arguments[++q];
          }
          return Yr(Oe, S ? h : this, be);
        }
        return H;
      }
      function t_(a) {
        return function (l, h, _) {
          if (_ && typeof _ != "number" && Nr(l, h, _)) {
            h = _ = r;
          }
          l = di(l);
          if (h === r) {
            h = l;
            l = 0;
          } else {
            h = di(h);
          }
          _ = _ === r ? l < h ? 1 : -1 : di(_);
          return Yw(l, h, _, a);
        };
      }
      function Tu(a) {
        return function (l, h) {
          if (typeof l != "string" || typeof h != "string") {
            l = En(l);
            h = En(h);
          }
          return a(l, h);
        };
      }
      function r_(a, l, h, _, S, I, H, q, re, me) {
        var ge = l & v;
        var be = ge ? H : r;
        var Oe = ge ? r : H;
        var Ke = ge ? I : r;
        var We = ge ? r : I;
        l |= ge ? U : P;
        l &= ~(ge ? P : U);
        if (!(l & R)) {
          l &= ~(x | A);
        }
        var it = [a, l, S, Ke, be, We, Oe, q, re, me];
        var Xe = h.apply(r, it);
        if ($p(a)) {
          h_(Xe, it);
        }
        Xe.placeholder = _;
        return E_(Xe, a, l);
      }
      function Ip(a) {
        var l = sr[a];
        return function (h, _) {
          h = En(h);
          _ = _ == null ? 0 : xr(nt(_), 292);
          if (_ && Eg(h)) {
            var S = (Lt(h) + "e").split("e");
            var I = l(S[0] + "e" + (+S[1] + _));
            S = (Lt(I) + "e").split("e");
            return +(S[0] + "e" + (+S[1] - _));
          }
          return l(h);
        };
      }
      var pO = ca && 1 / zl(new ca([, -0]))[1] == W ? function (a) {
        return new ca(a);
      } : Qp;
      function n_(a) {
        return function (l) {
          var h = Rr(l);
          if (h == D) {
            return op(l);
          } else if (h == B) {
            return wC(l);
          } else {
            return bC(l, a(l));
          }
        };
      }
      function ui(a, l, h, _, S, I, H, q) {
        var re = l & A;
        if (!re && typeof a != "function") {
          throw new fn(o);
        }
        var me = _ ? _.length : 0;
        if (!me) {
          l &= ~(U | P);
          _ = S = r;
        }
        H = H === r ? H : ar(nt(H), 0);
        q = q === r ? q : nt(q);
        me -= S ? S.length : 0;
        if (l & P) {
          var ge = _;
          var be = S;
          _ = S = r;
        }
        var Oe = re ? r : Up(a);
        var Ke = [a, l, h, _, S, ge, be, I, H, q];
        if (Oe) {
          LO(Ke, Oe);
        }
        a = Ke[0];
        l = Ke[1];
        h = Ke[2];
        _ = Ke[3];
        S = Ke[4];
        q = Ke[9] = Ke[9] === r ? re ? 0 : a.length : ar(Ke[9] - me, 0);
        if (!q && l & (v | y)) {
          l &= ~(v | y);
        }
        if (!l || l == x) {
          var We = uO(a, l, h);
        } else if (l == v || l == y) {
          We = fO(a, l, q);
        } else if ((l == U || l == (x | U)) && !S.length) {
          We = cO(a, l, h, _);
        } else {
          We = mu.apply(r, Ke);
        }
        var it = Oe ? Mg : h_;
        return E_(it(We, Ke), a, l);
      }
      function i_(a, l, h, _) {
        if (a === r || yn(a, fa[h]) && !Ot.call(_, h)) {
          return l;
        } else {
          return a;
        }
      }
      function s_(a, l, h, _, S, I) {
        if (qt(a) && qt(l)) {
          I.set(l, a);
          pu(a, l, r, s_, I);
          I.delete(l);
        }
        return a;
      }
      function dO(a) {
        if (ko(a)) {
          return r;
        } else {
          return a;
        }
      }
      function a_(a, l, h, _, S, I) {
        var H = h & T;
        var q = a.length;
        var re = l.length;
        if (q != re && (!H || re <= q)) {
          return false;
        }
        var me = I.get(a);
        var ge = I.get(l);
        if (me && ge) {
          return me == l && ge == a;
        }
        var be = -1;
        var Oe = true;
        var Ke = h & b ? new Ss() : r;
        I.set(a, l);
        I.set(l, a);
        while (++be < q) {
          var We = a[be];
          var it = l[be];
          if (_) {
            var Xe = H ? _(it, We, be, l, a, I) : _(We, it, be, a, l, I);
          }
          if (Xe !== r) {
            if (Xe) {
              continue;
            }
            Oe = false;
            break;
          }
          if (Ke) {
            if (!tp(l, function (ct, mt) {
              if (!Ao(Ke, mt) && (We === ct || S(We, ct, h, _, I))) {
                return Ke.push(mt);
              }
            })) {
              Oe = false;
              break;
            }
          } else if (We !== it && !S(We, it, h, _, I)) {
            Oe = false;
            break;
          }
        }
        I.delete(a);
        I.delete(l);
        return Oe;
      }
      function hO(a, l, h, _, S, I, H) {
        switch (h) {
          case $e:
            if (a.byteLength != l.byteLength || a.byteOffset != l.byteOffset) {
              return false;
            }
            a = a.buffer;
            l = l.buffer;
          case oe:
            return a.byteLength == l.byteLength && !!I(new eu(a), new eu(l));
          case Ve:
          case ot:
          case ne:
            return yn(+a, +l);
          case Ut:
            return a.name == l.name && a.message == l.message;
          case O:
          case z:
            return a == l + "";
          case D:
            var q = op;
          case B:
            var re = _ & T;
            q ||= zl;
            if (a.size != l.size && !re) {
              return false;
            }
            var me = H.get(a);
            if (me) {
              return me == l;
            }
            _ |= b;
            H.set(a, l);
            var ge = a_(q(a), q(l), _, S, I, H);
            H.delete(a);
            return ge;
          case fe:
            if (Io) {
              return Io.call(a) == Io.call(l);
            }
        }
        return false;
      }
      function EO(a, l, h, _, S, I) {
        var H = h & T;
        var q = Np(a);
        var re = q.length;
        var me = Np(l);
        var ge = me.length;
        if (re != ge && !H) {
          return false;
        }
        for (var be = re; be--;) {
          var Oe = q[be];
          if (!(H ? Oe in l : Ot.call(l, Oe))) {
            return false;
          }
        }
        var Ke = I.get(a);
        var We = I.get(l);
        if (Ke && We) {
          return Ke == l && We == a;
        }
        var it = true;
        I.set(a, l);
        I.set(l, a);
        var Xe = H;
        for (; ++be < re;) {
          Oe = q[be];
          var ct = a[Oe];
          var mt = l[Oe];
          if (_) {
            var en = H ? _(mt, ct, Oe, l, a, I) : _(ct, mt, Oe, a, l, I);
          }
          if (!(en === r ? ct === mt || S(ct, mt, h, _, I) : en)) {
            it = false;
            break;
          }
          Xe ||= Oe == "constructor";
        }
        if (it && !Xe) {
          var Pr = a.constructor;
          var tn = l.constructor;
          if (Pr != tn && "constructor" in a && "constructor" in l && (typeof Pr != "function" || !(Pr instanceof Pr) || typeof tn != "function" || !(tn instanceof tn))) {
            it = false;
          }
        }
        I.delete(a);
        I.delete(l);
        return it;
      }
      function fi(a) {
        return kp(p_(a, r, b_), a + "");
      }
      function Np(a) {
        return Ag(a, pr, Bp);
      }
      function Pp(a) {
        return Ag(a, Vr, o_);
      }
      var Up = au ? function (a) {
        return au.get(a);
      } : Qp;
      function vu(a) {
        var l = a.name + "";
        var h = pa[l];
        for (var _ = Ot.call(pa, l) ? h.length : 0; _--;) {
          var S = h[_];
          var I = S.func;
          if (I == null || I == a) {
            return S.name;
          }
        }
        return l;
      }
      function ma(a) {
        var l = Ot.call(C, "placeholder") ? C : a;
        return l.placeholder;
      }
      function He() {
        var a = C.iteratee || Jp;
        a = a === Jp ? wg : a;
        if (arguments.length) {
          return a(arguments[0], arguments[1]);
        } else {
          return a;
        }
      }
      function bu(a, l) {
        var h = a.__data__;
        if (RO(l)) {
          return h[typeof l == "string" ? "string" : "hash"];
        } else {
          return h.map;
        }
      }
      function Dp(a) {
        var l = pr(a);
        for (var h = l.length; h--;) {
          var _ = l[h];
          var S = a[_];
          l[h] = [_, S, f_(S)];
        }
        return l;
      }
      function Ls(a, l) {
        var h = AC(a, l);
        if (Cg(h)) {
          return h;
        } else {
          return r;
        }
      }
      function mO(a) {
        var l = Ot.call(a, xs);
        var h = a[xs];
        try {
          a[xs] = r;
          var _ = true;
        } catch {}
        var S = Zl.call(a);
        if (_) {
          if (l) {
            a[xs] = h;
          } else {
            delete a[xs];
          }
        }
        return S;
      }
      var Bp = up ? function (a) {
        if (a == null) {
          return [];
        } else {
          a = Dt(a);
          return Ni(up(a), function (l) {
            return dg.call(a, l);
          });
        }
      } : ed;
      var o_ = up ? function (a) {
        var l = [];
        for (; a;) {
          Pi(l, Bp(a));
          a = tu(a);
        }
        return l;
      } : ed;
      var Rr = Ir;
      if (fp && Rr(new fp(new ArrayBuffer(1))) != $e || Co && Rr(new Co()) != D || cp && Rr(cp.resolve()) != xe || ca && Rr(new ca()) != B || wo && Rr(new wo()) != ve) {
        Rr = function (a) {
          var l = Ir(a);
          var h = l == pe ? a.constructor : r;
          var _ = h ? Cs(h) : "";
          if (_) {
            switch (_) {
              case ZC:
                return $e;
              case QC:
                return D;
              case ew:
                return xe;
              case tw:
                return B;
              case rw:
                return ve;
            }
          }
          return l;
        };
      }
      function gO(a, l, h) {
        for (var _ = -1, S = h.length; ++_ < S;) {
          var I = h[_];
          var H = I.size;
          switch (I.type) {
            case "drop":
              a += H;
              break;
            case "dropRight":
              l -= H;
              break;
            case "take":
              l = xr(l, a + H);
              break;
            case "takeRight":
              a = ar(a, l - H);
              break;
          }
        }
        return {
          start: a,
          end: l
        };
      }
      function _O(a) {
        var l = a.match(SL);
        if (l) {
          return l[1].split(yL);
        } else {
          return [];
        }
      }
      function l_(a, l, h) {
        l = $i(l, a);
        for (var _ = -1, S = l.length, I = false; ++_ < S;) {
          var H = Kn(l[_]);
          if (!(I = a != null && h(a, H))) {
            break;
          }
          a = a[H];
        }
        if (I || ++_ != S) {
          return I;
        } else {
          S = a == null ? 0 : a.length;
          return !!S && Cu(S) && ci(H, S) && (et(a) || ws(a));
        }
      }
      function TO(a) {
        var l = a.length;
        var h = new a.constructor(l);
        if (l && typeof a[0] == "string" && Ot.call(a, "index")) {
          h.index = a.index;
          h.input = a.input;
        }
        return h;
      }
      function u_(a) {
        if (typeof a.constructor == "function" && !$o(a)) {
          return da(tu(a));
        } else {
          return {};
        }
      }
      function vO(a, l, h) {
        var _ = a.constructor;
        switch (l) {
          case oe:
            return wp(a);
          case Ve:
          case ot:
            return new _(+a);
          case $e:
            return nO(a, h);
          case G:
          case $:
          case J:
          case K:
          case Z:
          case ue:
          case Ae:
          case Se:
          case Me:
            return Wg(a, h);
          case D:
            return new _();
          case ne:
          case z:
            return new _(a);
          case O:
            return iO(a);
          case B:
            return new _();
          case fe:
            return sO(a);
        }
      }
      function bO(a, l) {
        var h = l.length;
        if (!h) {
          return a;
        }
        var _ = h - 1;
        l[_] = (h > 1 ? "& " : "") + l[_];
        l = l.join(h > 2 ? ", " : " ");
        return a.replace(RL, `{
/* [wrapped with ${l}] */
`);
      }
      function xO(a) {
        return et(a) || ws(a) || !!hg && !!a && !!a[hg];
      }
      function ci(a, l) {
        var h = typeof a;
        l = l ?? te;
        return !!l && (h == "number" || h != "symbol" && UL.test(a)) && a > -1 && a % 1 == 0 && a < l;
      }
      function Nr(a, l, h) {
        if (!qt(h)) {
          return false;
        }
        var _ = typeof l;
        if (_ == "number" ? Gr(h) && ci(l, h.length) : _ == "string" && l in h) {
          return yn(h[l], a);
        } else {
          return false;
        }
      }
      function Mp(a, l) {
        if (et(a)) {
          return false;
        }
        var h = typeof a;
        if (h == "number" || h == "symbol" || h == "boolean" || a == null || Qr(a)) {
          return true;
        } else {
          return TL.test(a) || !_L.test(a) || l != null && a in Dt(l);
        }
      }
      function RO(a) {
        var l = typeof a;
        if (l == "string" || l == "number" || l == "symbol" || l == "boolean") {
          return a !== "__proto__";
        } else {
          return a === null;
        }
      }
      function $p(a) {
        var l = vu(a);
        var h = C[l];
        if (typeof h != "function" || !(l in dt.prototype)) {
          return false;
        }
        if (a === h) {
          return true;
        }
        var _ = Up(h);
        return !!_ && a === _[0];
      }
      function SO(a) {
        return !!fg && fg in a;
      }
      var yO = Yl ? pi : td;
      function $o(a) {
        var l = a && a.constructor;
        var h = typeof l == "function" && l.prototype || fa;
        return a === h;
      }
      function f_(a) {
        return a === a && !qt(a);
      }
      function c_(a, l) {
        return function (h) {
          if (h == null) {
            return false;
          } else {
            return h[a] === l && (l !== r || a in Dt(h));
          }
        };
      }
      function AO(a) {
        var l = Au(a, function (_) {
          if (h.size === p) {
            h.clear();
          }
          return _;
        });
        var h = l.cache;
        return l;
      }
      function LO(a, l) {
        var h = a[1];
        var _ = l[1];
        var S = h | _;
        var I = S < (x | A | M);
        var H = _ == M && h == v || _ == M && h == X && a[7].length <= l[8] || _ == (M | X) && l[7].length <= l[8] && h == v;
        if (!I && !H) {
          return a;
        }
        if (_ & x) {
          a[2] = l[2];
          S |= h & x ? 0 : R;
        }
        var q = l[3];
        if (q) {
          var re = a[3];
          a[3] = re ? jg(re, q, l[4]) : q;
          a[4] = re ? Ui(a[3], d) : l[4];
        }
        q = l[5];
        if (q) {
          re = a[5];
          a[5] = re ? zg(re, q, l[6]) : q;
          a[6] = re ? Ui(a[5], d) : l[6];
        }
        q = l[7];
        if (q) {
          a[7] = q;
        }
        if (_ & M) {
          a[8] = a[8] == null ? l[8] : xr(a[8], l[8]);
        }
        if (a[9] == null) {
          a[9] = l[9];
        }
        a[0] = l[0];
        a[1] = S;
        return a;
      }
      function CO(a) {
        var l = [];
        if (a != null) {
          for (var h in Dt(a)) {
            l.push(h);
          }
        }
        return l;
      }
      function wO(a) {
        return Zl.call(a);
      }
      function p_(a, l, h) {
        l = ar(l === r ? a.length - 1 : l, 0);
        return function () {
          var _ = arguments;
          for (var S = -1, I = ar(_.length - l, 0), H = le(I); ++S < I;) {
            H[S] = _[l + S];
          }
          S = -1;
          var q = le(l + 1);
          for (; ++S < l;) {
            q[S] = _[S];
          }
          q[l] = h(H);
          return Yr(a, this, q);
        };
      }
      function d_(a, l) {
        if (l.length < 2) {
          return a;
        } else {
          return As(a, dn(l, 0, -1));
        }
      }
      function OO(a, l) {
        var h = a.length;
        for (var _ = xr(l.length, h), S = kr(a); _--;) {
          var I = l[_];
          a[_] = ci(I, h) ? S[I] : r;
        }
        return a;
      }
      function Kp(a, l) {
        if ((l !== "constructor" || typeof a[l] != "function") && l != "__proto__") {
          return a[l];
        }
      }
      var h_ = m_(Mg);
      var Ko = WC || function (a, l) {
        return Er.setTimeout(a, l);
      };
      var kp = m_(Qw);
      function E_(a, l, h) {
        var _ = l + "";
        return kp(a, bO(_, IO(_O(_), h)));
      }
      function m_(a) {
        var l = 0;
        var h = 0;
        return function () {
          var _ = qC();
          var S = Y - (_ - h);
          h = _;
          if (S > 0) {
            if (++l >= V) {
              return arguments[0];
            }
          } else {
            l = 0;
          }
          return a.apply(r, arguments);
        };
      }
      function xu(a, l) {
        var h = -1;
        var _ = a.length;
        var S = _ - 1;
        for (l = l === r ? _ : l; ++h < l;) {
          var I = xp(h, S);
          var H = a[I];
          a[I] = a[h];
          a[h] = H;
        }
        a.length = l;
        return a;
      }
      var g_ = AO(function (a) {
        var l = [];
        if (a.charCodeAt(0) === 46) {
          l.push("");
        }
        a.replace(vL, function (h, _, S, I) {
          l.push(S ? I.replace(CL, "$1") : _ || h);
        });
        return l;
      });
      function Kn(a) {
        if (typeof a == "string" || Qr(a)) {
          return a;
        }
        var l = a + "";
        if (l == "0" && 1 / a == -W) {
          return "-0";
        } else {
          return l;
        }
      }
      function Cs(a) {
        if (a != null) {
          try {
            return Jl.call(a);
          } catch {}
          try {
            return a + "";
          } catch {}
        }
        return "";
      }
      function IO(a, l) {
        un(Ge, function (h) {
          var _ = "_." + h[0];
          if (l & h[1] && !Xl(a, _)) {
            a.push(_);
          }
        });
        return a.sort();
      }
      function __(a) {
        if (a instanceof dt) {
          return a.clone();
        }
        var l = new cn(a.__wrapped__, a.__chain__);
        l.__actions__ = kr(a.__actions__);
        l.__index__ = a.__index__;
        l.__values__ = a.__values__;
        return l;
      }
      function NO(a, l, h) {
        if (h ? Nr(a, l, h) : l === r) {
          l = 1;
        } else {
          l = ar(nt(l), 0);
        }
        var _ = a == null ? 0 : a.length;
        if (!_ || l < 1) {
          return [];
        }
        for (var S = 0, I = 0, H = le(iu(_ / l)); S < _;) {
          H[I++] = dn(a, S, S += l);
        }
        return H;
      }
      function PO(a) {
        for (var l = -1, h = a == null ? 0 : a.length, _ = 0, S = []; ++l < h;) {
          var I = a[l];
          if (I) {
            S[_++] = I;
          }
        }
        return S;
      }
      function UO() {
        var a = arguments.length;
        if (!a) {
          return [];
        }
        var l = le(a - 1);
        var h = arguments[0];
        for (var _ = a; _--;) {
          l[_ - 1] = arguments[_];
        }
        return Pi(et(h) ? kr(h) : [h], mr(l, 1));
      }
      var DO = st(function (a, l) {
        if (Qt(a)) {
          return Po(a, mr(l, 1, Qt, true));
        } else {
          return [];
        }
      });
      var BO = st(function (a, l) {
        var h = hn(l);
        if (Qt(h)) {
          h = r;
        }
        if (Qt(a)) {
          return Po(a, mr(l, 1, Qt, true), He(h, 2));
        } else {
          return [];
        }
      });
      var MO = st(function (a, l) {
        var h = hn(l);
        if (Qt(h)) {
          h = r;
        }
        if (Qt(a)) {
          return Po(a, mr(l, 1, Qt, true), r, h);
        } else {
          return [];
        }
      });
      function $O(a, l, h) {
        var _ = a == null ? 0 : a.length;
        if (_) {
          l = h || l === r ? 1 : nt(l);
          return dn(a, l < 0 ? 0 : l, _);
        } else {
          return [];
        }
      }
      function KO(a, l, h) {
        var _ = a == null ? 0 : a.length;
        if (_) {
          l = h || l === r ? 1 : nt(l);
          l = _ - l;
          return dn(a, 0, l < 0 ? 0 : l);
        } else {
          return [];
        }
      }
      function kO(a, l) {
        if (a && a.length) {
          return hu(a, He(l, 3), true, true);
        } else {
          return [];
        }
      }
      function GO(a, l) {
        if (a && a.length) {
          return hu(a, He(l, 3), true);
        } else {
          return [];
        }
      }
      function VO(a, l, h, _) {
        var S = a == null ? 0 : a.length;
        if (S) {
          if (h && typeof h != "number" && Nr(a, l, h)) {
            h = 0;
            _ = S;
          }
          return Uw(a, l, h, _);
        } else {
          return [];
        }
      }
      function T_(a, l, h) {
        var _ = a == null ? 0 : a.length;
        if (!_) {
          return -1;
        }
        var S = h == null ? 0 : nt(h);
        if (S < 0) {
          S = ar(_ + S, 0);
        }
        return jl(a, He(l, 3), S);
      }
      function v_(a, l, h) {
        var _ = a == null ? 0 : a.length;
        if (!_) {
          return -1;
        }
        var S = _ - 1;
        if (h !== r) {
          S = nt(h);
          S = h < 0 ? ar(_ + S, 0) : xr(S, _ - 1);
        }
        return jl(a, He(l, 3), S, true);
      }
      function b_(a) {
        var l = a == null ? 0 : a.length;
        if (l) {
          return mr(a, 1);
        } else {
          return [];
        }
      }
      function FO(a) {
        var l = a == null ? 0 : a.length;
        if (l) {
          return mr(a, W);
        } else {
          return [];
        }
      }
      function HO(a, l) {
        var h = a == null ? 0 : a.length;
        if (h) {
          l = l === r ? 1 : nt(l);
          return mr(a, l);
        } else {
          return [];
        }
      }
      function WO(a) {
        for (var l = -1, h = a == null ? 0 : a.length, _ = {}; ++l < h;) {
          var S = a[l];
          _[S[0]] = S[1];
        }
        return _;
      }
      function x_(a) {
        if (a && a.length) {
          return a[0];
        } else {
          return r;
        }
      }
      function XO(a, l, h) {
        var _ = a == null ? 0 : a.length;
        if (!_) {
          return -1;
        }
        var S = h == null ? 0 : nt(h);
        if (S < 0) {
          S = ar(_ + S, 0);
        }
        return aa(a, l, S);
      }
      function jO(a) {
        var l = a == null ? 0 : a.length;
        if (l) {
          return dn(a, 0, -1);
        } else {
          return [];
        }
      }
      var zO = st(function (a) {
        var l = jt(a, Lp);
        if (l.length && l[0] === a[0]) {
          return gp(l);
        } else {
          return [];
        }
      });
      var qO = st(function (a) {
        var l = hn(a);
        var h = jt(a, Lp);
        if (l === hn(h)) {
          l = r;
        } else {
          h.pop();
        }
        if (h.length && h[0] === a[0]) {
          return gp(h, He(l, 2));
        } else {
          return [];
        }
      });
      var YO = st(function (a) {
        var l = hn(a);
        var h = jt(a, Lp);
        l = typeof l == "function" ? l : r;
        if (l) {
          h.pop();
        }
        if (h.length && h[0] === a[0]) {
          return gp(h, r, l);
        } else {
          return [];
        }
      });
      function JO(a, l) {
        if (a == null) {
          return "";
        } else {
          return jC.call(a, l);
        }
      }
      function hn(a) {
        var l = a == null ? 0 : a.length;
        if (l) {
          return a[l - 1];
        } else {
          return r;
        }
      }
      function ZO(a, l, h) {
        var _ = a == null ? 0 : a.length;
        if (!_) {
          return -1;
        }
        var S = _;
        if (h !== r) {
          S = nt(h);
          S = S < 0 ? ar(_ + S, 0) : xr(S, _ - 1);
        }
        if (l === l) {
          return IC(a, l, S);
        } else {
          return jl(a, rg, S, true);
        }
      }
      function QO(a, l) {
        if (a && a.length) {
          return Pg(a, nt(l));
        } else {
          return r;
        }
      }
      var eI = st(R_);
      function R_(a, l) {
        if (a && a.length && l && l.length) {
          return bp(a, l);
        } else {
          return a;
        }
      }
      function tI(a, l, h) {
        if (a && a.length && l && l.length) {
          return bp(a, l, He(h, 2));
        } else {
          return a;
        }
      }
      function rI(a, l, h) {
        if (a && a.length && l && l.length) {
          return bp(a, l, r, h);
        } else {
          return a;
        }
      }
      var nI = fi(function (a, l) {
        var h = a == null ? 0 : a.length;
        var _ = dp(a, l);
        Bg(a, jt(l, function (S) {
          if (ci(S, h)) {
            return +S;
          } else {
            return S;
          }
        }).sort(Xg));
        return _;
      });
      function iI(a, l) {
        var h = [];
        if (!a || !a.length) {
          return h;
        }
        var _ = -1;
        var S = [];
        var I = a.length;
        for (l = He(l, 3); ++_ < I;) {
          var H = a[_];
          if (l(H, _, a)) {
            h.push(H);
            S.push(_);
          }
        }
        Bg(a, S);
        return h;
      }
      function Gp(a) {
        if (a == null) {
          return a;
        } else {
          return JC.call(a);
        }
      }
      function sI(a, l, h) {
        var _ = a == null ? 0 : a.length;
        if (_) {
          if (h && typeof h != "number" && Nr(a, l, h)) {
            l = 0;
            h = _;
          } else {
            l = l == null ? 0 : nt(l);
            h = h === r ? _ : nt(h);
          }
          return dn(a, l, h);
        } else {
          return [];
        }
      }
      function aI(a, l) {
        return du(a, l);
      }
      function oI(a, l, h) {
        return Sp(a, l, He(h, 2));
      }
      function lI(a, l) {
        var h = a == null ? 0 : a.length;
        if (h) {
          var _ = du(a, l);
          if (_ < h && yn(a[_], l)) {
            return _;
          }
        }
        return -1;
      }
      function uI(a, l) {
        return du(a, l, true);
      }
      function fI(a, l, h) {
        return Sp(a, l, He(h, 2), true);
      }
      function cI(a, l) {
        var h = a == null ? 0 : a.length;
        if (h) {
          var _ = du(a, l, true) - 1;
          if (yn(a[_], l)) {
            return _;
          }
        }
        return -1;
      }
      function pI(a) {
        if (a && a.length) {
          return $g(a);
        } else {
          return [];
        }
      }
      function dI(a, l) {
        if (a && a.length) {
          return $g(a, He(l, 2));
        } else {
          return [];
        }
      }
      function hI(a) {
        var l = a == null ? 0 : a.length;
        if (l) {
          return dn(a, 1, l);
        } else {
          return [];
        }
      }
      function EI(a, l, h) {
        if (a && a.length) {
          l = h || l === r ? 1 : nt(l);
          return dn(a, 0, l < 0 ? 0 : l);
        } else {
          return [];
        }
      }
      function mI(a, l, h) {
        var _ = a == null ? 0 : a.length;
        if (_) {
          l = h || l === r ? 1 : nt(l);
          l = _ - l;
          return dn(a, l < 0 ? 0 : l, _);
        } else {
          return [];
        }
      }
      function gI(a, l) {
        if (a && a.length) {
          return hu(a, He(l, 3), false, true);
        } else {
          return [];
        }
      }
      function _I(a, l) {
        if (a && a.length) {
          return hu(a, He(l, 3));
        } else {
          return [];
        }
      }
      var TI = st(function (a) {
        return Mi(mr(a, 1, Qt, true));
      });
      var vI = st(function (a) {
        var l = hn(a);
        if (Qt(l)) {
          l = r;
        }
        return Mi(mr(a, 1, Qt, true), He(l, 2));
      });
      var bI = st(function (a) {
        var l = hn(a);
        l = typeof l == "function" ? l : r;
        return Mi(mr(a, 1, Qt, true), r, l);
      });
      function xI(a) {
        if (a && a.length) {
          return Mi(a);
        } else {
          return [];
        }
      }
      function RI(a, l) {
        if (a && a.length) {
          return Mi(a, He(l, 2));
        } else {
          return [];
        }
      }
      function SI(a, l) {
        l = typeof l == "function" ? l : r;
        if (a && a.length) {
          return Mi(a, r, l);
        } else {
          return [];
        }
      }
      function Vp(a) {
        if (!a || !a.length) {
          return [];
        }
        var l = 0;
        a = Ni(a, function (h) {
          if (Qt(h)) {
            l = ar(h.length, l);
            return true;
          }
        });
        return sp(l, function (h) {
          return jt(a, rp(h));
        });
      }
      function S_(a, l) {
        if (!a || !a.length) {
          return [];
        }
        var h = Vp(a);
        if (l == null) {
          return h;
        } else {
          return jt(h, function (_) {
            return Yr(l, r, _);
          });
        }
      }
      var yI = st(function (a, l) {
        if (Qt(a)) {
          return Po(a, l);
        } else {
          return [];
        }
      });
      var AI = st(function (a) {
        return Ap(Ni(a, Qt));
      });
      var LI = st(function (a) {
        var l = hn(a);
        if (Qt(l)) {
          l = r;
        }
        return Ap(Ni(a, Qt), He(l, 2));
      });
      var CI = st(function (a) {
        var l = hn(a);
        l = typeof l == "function" ? l : r;
        return Ap(Ni(a, Qt), r, l);
      });
      var wI = st(Vp);
      function OI(a, l) {
        return Vg(a || [], l || [], No);
      }
      function II(a, l) {
        return Vg(a || [], l || [], Bo);
      }
      var NI = st(function (a) {
        var l = a.length;
        var h = l > 1 ? a[l - 1] : r;
        h = typeof h == "function" ? (a.pop(), h) : r;
        return S_(a, h);
      });
      function y_(a) {
        var l = C(a);
        l.__chain__ = true;
        return l;
      }
      function PI(a, l) {
        l(a);
        return a;
      }
      function Ru(a, l) {
        return l(a);
      }
      var UI = fi(function (a) {
        var l = a.length;
        var h = l ? a[0] : 0;
        var _ = this.__wrapped__;
        function S(I) {
          return dp(I, a);
        }
        if (l > 1 || this.__actions__.length || !(_ instanceof dt) || !ci(h)) {
          return this.thru(S);
        } else {
          _ = _.slice(h, +h + (l ? 1 : 0));
          _.__actions__.push({
            func: Ru,
            args: [S],
            thisArg: r
          });
          return new cn(_, this.__chain__).thru(function (I) {
            if (l && !I.length) {
              I.push(r);
            }
            return I;
          });
        }
      });
      function DI() {
        return y_(this);
      }
      function BI() {
        return new cn(this.value(), this.__chain__);
      }
      function MI() {
        if (this.__values__ === r) {
          this.__values__ = K_(this.value());
        }
        var a = this.__index__ >= this.__values__.length;
        var l = a ? r : this.__values__[this.__index__++];
        return {
          done: a,
          value: l
        };
      }
      function $I() {
        return this;
      }
      function KI(a) {
        var l;
        for (var h = this; h instanceof lu;) {
          var _ = __(h);
          _.__index__ = 0;
          _.__values__ = r;
          if (l) {
            S.__wrapped__ = _;
          } else {
            l = _;
          }
          var S = _;
          h = h.__wrapped__;
        }
        S.__wrapped__ = a;
        return l;
      }
      function kI() {
        var a = this.__wrapped__;
        if (a instanceof dt) {
          var l = a;
          if (this.__actions__.length) {
            l = new dt(this);
          }
          l = l.reverse();
          l.__actions__.push({
            func: Ru,
            args: [Gp],
            thisArg: r
          });
          return new cn(l, this.__chain__);
        }
        return this.thru(Gp);
      }
      function GI() {
        return Gg(this.__wrapped__, this.__actions__);
      }
      var VI = Eu(function (a, l, h) {
        if (Ot.call(a, h)) {
          ++a[h];
        } else {
          li(a, h, 1);
        }
      });
      function FI(a, l, h) {
        var _ = et(a) ? eg : Pw;
        if (h && Nr(a, l, h)) {
          l = r;
        }
        return _(a, He(l, 3));
      }
      function HI(a, l) {
        var h = et(a) ? Ni : Sg;
        return h(a, He(l, 3));
      }
      var WI = Zg(T_);
      var XI = Zg(v_);
      function jI(a, l) {
        return mr(Su(a, l), 1);
      }
      function zI(a, l) {
        return mr(Su(a, l), W);
      }
      function qI(a, l, h) {
        h = h === r ? 1 : nt(h);
        return mr(Su(a, l), h);
      }
      function A_(a, l) {
        var h = et(a) ? un : Bi;
        return h(a, He(l, 3));
      }
      function L_(a, l) {
        var h = et(a) ? hC : Rg;
        return h(a, He(l, 3));
      }
      var YI = Eu(function (a, l, h) {
        if (Ot.call(a, h)) {
          a[h].push(l);
        } else {
          li(a, h, [l]);
        }
      });
      function JI(a, l, h, _) {
        a = Gr(a) ? a : _a(a);
        h = h && !_ ? nt(h) : 0;
        var S = a.length;
        if (h < 0) {
          h = ar(S + h, 0);
        }
        if (wu(a)) {
          return h <= S && a.indexOf(l, h) > -1;
        } else {
          return !!S && aa(a, l, h) > -1;
        }
      }
      var ZI = st(function (a, l, h) {
        var _ = -1;
        var S = typeof l == "function";
        var I = Gr(a) ? le(a.length) : [];
        Bi(a, function (H) {
          I[++_] = S ? Yr(l, H, h) : Uo(H, l, h);
        });
        return I;
      });
      var QI = Eu(function (a, l, h) {
        li(a, h, l);
      });
      function Su(a, l) {
        var h = et(a) ? jt : Og;
        return h(a, He(l, 3));
      }
      function eN(a, l, h, _) {
        if (a == null) {
          return [];
        } else {
          if (!et(l)) {
            l = l == null ? [] : [l];
          }
          h = _ ? r : h;
          if (!et(h)) {
            h = h == null ? [] : [h];
          }
          return Ug(a, l, h);
        }
      }
      var tN = Eu(function (a, l, h) {
        a[h ? 0 : 1].push(l);
      }, function () {
        return [[], []];
      });
      function rN(a, l, h) {
        var _ = et(a) ? ep : ig;
        var S = arguments.length < 3;
        return _(a, He(l, 4), h, S, Bi);
      }
      function nN(a, l, h) {
        var _ = et(a) ? EC : ig;
        var S = arguments.length < 3;
        return _(a, He(l, 4), h, S, Rg);
      }
      function iN(a, l) {
        var h = et(a) ? Ni : Sg;
        return h(a, Lu(He(l, 3)));
      }
      function sN(a) {
        var l = et(a) ? Tg : Jw;
        return l(a);
      }
      function aN(a, l, h) {
        if (h ? Nr(a, l, h) : l === r) {
          l = 1;
        } else {
          l = nt(l);
        }
        var _ = et(a) ? Cw : Zw;
        return _(a, l);
      }
      function oN(a) {
        var l = et(a) ? ww : eO;
        return l(a);
      }
      function lN(a) {
        if (a == null) {
          return 0;
        }
        if (Gr(a)) {
          if (wu(a)) {
            return la(a);
          } else {
            return a.length;
          }
        }
        var l = Rr(a);
        if (l == D || l == B) {
          return a.size;
        } else {
          return Tp(a).length;
        }
      }
      function uN(a, l, h) {
        var _ = et(a) ? tp : tO;
        if (h && Nr(a, l, h)) {
          l = r;
        }
        return _(a, He(l, 3));
      }
      var fN = st(function (a, l) {
        if (a == null) {
          return [];
        }
        var h = l.length;
        if (h > 1 && Nr(a, l[0], l[1])) {
          l = [];
        } else if (h > 2 && Nr(l[0], l[1], l[2])) {
          l = [l[0]];
        }
        return Ug(a, mr(l, 1), []);
      });
      var yu = HC || function () {
        return Er.Date.now();
      };
      function cN(a, l) {
        if (typeof l != "function") {
          throw new fn(o);
        }
        a = nt(a);
        return function () {
          if (--a < 1) {
            return l.apply(this, arguments);
          }
        };
      }
      function C_(a, l, h) {
        l = h ? r : l;
        l = a && l == null ? a.length : l;
        return ui(a, M, r, r, r, r, l);
      }
      function w_(a, l) {
        var h;
        if (typeof l != "function") {
          throw new fn(o);
        }
        a = nt(a);
        return function () {
          if (--a > 0) {
            h = l.apply(this, arguments);
          }
          if (a <= 1) {
            l = r;
          }
          return h;
        };
      }
      var Fp = st(function (a, l, h) {
        var _ = x;
        if (h.length) {
          var S = Ui(h, ma(Fp));
          _ |= U;
        }
        return ui(a, _, l, h, S);
      });
      var O_ = st(function (a, l, h) {
        var _ = x | A;
        if (h.length) {
          var S = Ui(h, ma(O_));
          _ |= U;
        }
        return ui(l, _, a, h, S);
      });
      function I_(a, l, h) {
        l = h ? r : l;
        var _ = ui(a, v, r, r, r, r, r, l);
        _.placeholder = I_.placeholder;
        return _;
      }
      function N_(a, l, h) {
        l = h ? r : l;
        var _ = ui(a, y, r, r, r, r, r, l);
        _.placeholder = N_.placeholder;
        return _;
      }
      function P_(a, l, h) {
        var _;
        var S;
        var I;
        var H;
        var q;
        var re;
        var me = 0;
        var ge = false;
        var be = false;
        var Oe = true;
        if (typeof a != "function") {
          throw new fn(o);
        }
        l = En(l) || 0;
        if (qt(h)) {
          ge = !!h.leading;
          be = "maxWait" in h;
          I = be ? ar(En(h.maxWait) || 0, l) : I;
          Oe = "trailing" in h ? !!h.trailing : Oe;
        }
        function Ke(er) {
          var An = _;
          var hi = S;
          _ = S = r;
          me = er;
          H = a.apply(hi, An);
          return H;
        }
        function We(er) {
          me = er;
          q = Ko(ct, l);
          if (ge) {
            return Ke(er);
          } else {
            return H;
          }
        }
        function it(er) {
          var An = er - re;
          var hi = er - me;
          var Z_ = l - An;
          if (be) {
            return xr(Z_, I - hi);
          } else {
            return Z_;
          }
        }
        function Xe(er) {
          var An = er - re;
          var hi = er - me;
          return re === r || An >= l || An < 0 || be && hi >= I;
        }
        function ct() {
          var er = yu();
          if (Xe(er)) {
            return mt(er);
          }
          q = Ko(ct, it(er));
        }
        function mt(er) {
          q = r;
          if (Oe && _) {
            return Ke(er);
          } else {
            _ = S = r;
            return H;
          }
        }
        function en() {
          if (q !== r) {
            Fg(q);
          }
          me = 0;
          _ = re = S = q = r;
        }
        function Pr() {
          if (q === r) {
            return H;
          } else {
            return mt(yu());
          }
        }
        function tn() {
          var er = yu();
          var An = Xe(er);
          _ = arguments;
          S = this;
          re = er;
          if (An) {
            if (q === r) {
              return We(re);
            }
            if (be) {
              Fg(q);
              q = Ko(ct, l);
              return Ke(re);
            }
          }
          if (q === r) {
            q = Ko(ct, l);
          }
          return H;
        }
        tn.cancel = en;
        tn.flush = Pr;
        return tn;
      }
      var pN = st(function (a, l) {
        return xg(a, 1, l);
      });
      var dN = st(function (a, l, h) {
        return xg(a, En(l) || 0, h);
      });
      function hN(a) {
        return ui(a, N);
      }
      function Au(a, l) {
        if (typeof a != "function" || l != null && typeof l != "function") {
          throw new fn(o);
        }
        function h() {
          var _ = arguments;
          var S = l ? l.apply(this, _) : _[0];
          var I = h.cache;
          if (I.has(S)) {
            return I.get(S);
          }
          var H = a.apply(this, _);
          h.cache = I.set(S, H) || I;
          return H;
        }
        h.cache = new (Au.Cache || oi)();
        return h;
      }
      Au.Cache = oi;
      function Lu(a) {
        if (typeof a != "function") {
          throw new fn(o);
        }
        return function () {
          var l = arguments;
          switch (l.length) {
            case 0:
              return !a.call(this);
            case 1:
              return !a.call(this, l[0]);
            case 2:
              return !a.call(this, l[0], l[1]);
            case 3:
              return !a.call(this, l[0], l[1], l[2]);
          }
          return !a.apply(this, l);
        };
      }
      function EN(a) {
        return w_(2, a);
      }
      var mN = rO(function (a, l) {
        l = l.length == 1 && et(l[0]) ? jt(l[0], Jr(He())) : jt(mr(l, 1), Jr(He()));
        var h = l.length;
        return st(function (_) {
          for (var S = -1, I = xr(_.length, h); ++S < I;) {
            _[S] = l[S].call(this, _[S]);
          }
          return Yr(a, this, _);
        });
      });
      var Hp = st(function (a, l) {
        var h = Ui(l, ma(Hp));
        return ui(a, U, r, l, h);
      });
      var U_ = st(function (a, l) {
        var h = Ui(l, ma(U_));
        return ui(a, P, r, l, h);
      });
      var gN = fi(function (a, l) {
        return ui(a, X, r, r, r, l);
      });
      function _N(a, l) {
        if (typeof a != "function") {
          throw new fn(o);
        }
        l = l === r ? l : nt(l);
        return st(a, l);
      }
      function TN(a, l) {
        if (typeof a != "function") {
          throw new fn(o);
        }
        l = l == null ? 0 : ar(nt(l), 0);
        return st(function (h) {
          var _ = h[l];
          var S = Ki(h, 0, l);
          if (_) {
            Pi(S, _);
          }
          return Yr(a, this, S);
        });
      }
      function vN(a, l, h) {
        var _ = true;
        var S = true;
        if (typeof a != "function") {
          throw new fn(o);
        }
        if (qt(h)) {
          _ = "leading" in h ? !!h.leading : _;
          S = "trailing" in h ? !!h.trailing : S;
        }
        return P_(a, l, {
          leading: _,
          maxWait: l,
          trailing: S
        });
      }
      function bN(a) {
        return C_(a, 1);
      }
      function xN(a, l) {
        return Hp(Cp(l), a);
      }
      function RN() {
        if (!arguments.length) {
          return [];
        }
        var a = arguments[0];
        if (et(a)) {
          return a;
        } else {
          return [a];
        }
      }
      function SN(a) {
        return pn(a, g);
      }
      function yN(a, l) {
        l = typeof l == "function" ? l : r;
        return pn(a, g, l);
      }
      function AN(a) {
        return pn(a, E | g);
      }
      function LN(a, l) {
        l = typeof l == "function" ? l : r;
        return pn(a, E | g, l);
      }
      function CN(a, l) {
        return l == null || bg(a, l, pr(l));
      }
      function yn(a, l) {
        return a === l || a !== a && l !== l;
      }
      var wN = Tu(mp);
      var ON = Tu(function (a, l) {
        return a >= l;
      });
      var ws = Lg(function () {
        return arguments;
      }()) ? Lg : function (a) {
        return Jt(a) && Ot.call(a, "callee") && !dg.call(a, "callee");
      };
      var et = le.isArray;
      var IN = zm ? Jr(zm) : Kw;
      function Gr(a) {
        return a != null && Cu(a.length) && !pi(a);
      }
      function Qt(a) {
        return Jt(a) && Gr(a);
      }
      function NN(a) {
        return a === true || a === false || Jt(a) && Ir(a) == Ve;
      }
      var ki = XC || td;
      var PN = qm ? Jr(qm) : kw;
      function UN(a) {
        return Jt(a) && a.nodeType === 1 && !ko(a);
      }
      function DN(a) {
        if (a == null) {
          return true;
        }
        if (Gr(a) && (et(a) || typeof a == "string" || typeof a.splice == "function" || ki(a) || ga(a) || ws(a))) {
          return !a.length;
        }
        var l = Rr(a);
        if (l == D || l == B) {
          return !a.size;
        }
        if ($o(a)) {
          return !Tp(a).length;
        }
        for (var h in a) {
          if (Ot.call(a, h)) {
            return false;
          }
        }
        return true;
      }
      function BN(a, l) {
        return Do(a, l);
      }
      function MN(a, l, h) {
        h = typeof h == "function" ? h : r;
        var _ = h ? h(a, l) : r;
        if (_ === r) {
          return Do(a, l, r, h);
        } else {
          return !!_;
        }
      }
      function Wp(a) {
        if (!Jt(a)) {
          return false;
        }
        var l = Ir(a);
        return l == Ut || l == ft || typeof a.message == "string" && typeof a.name == "string" && !ko(a);
      }
      function $N(a) {
        return typeof a == "number" && Eg(a);
      }
      function pi(a) {
        if (!qt(a)) {
          return false;
        }
        var l = Ir(a);
        return l == $t || l == F || l == Et || l == Te;
      }
      function D_(a) {
        return typeof a == "number" && a == nt(a);
      }
      function Cu(a) {
        return typeof a == "number" && a > -1 && a % 1 == 0 && a <= te;
      }
      function qt(a) {
        var l = typeof a;
        return a != null && (l == "object" || l == "function");
      }
      function Jt(a) {
        return a != null && typeof a == "object";
      }
      var B_ = Ym ? Jr(Ym) : Vw;
      function KN(a, l) {
        return a === l || _p(a, l, Dp(l));
      }
      function kN(a, l, h) {
        h = typeof h == "function" ? h : r;
        return _p(a, l, Dp(l), h);
      }
      function GN(a) {
        return M_(a) && a != +a;
      }
      function VN(a) {
        if (yO(a)) {
          throw new Qe(s);
        }
        return Cg(a);
      }
      function FN(a) {
        return a === null;
      }
      function HN(a) {
        return a == null;
      }
      function M_(a) {
        return typeof a == "number" || Jt(a) && Ir(a) == ne;
      }
      function ko(a) {
        if (!Jt(a) || Ir(a) != pe) {
          return false;
        }
        var l = tu(a);
        if (l === null) {
          return true;
        }
        var h = Ot.call(l, "constructor") && l.constructor;
        return typeof h == "function" && h instanceof h && Jl.call(h) == kC;
      }
      var Xp = Jm ? Jr(Jm) : Fw;
      function WN(a) {
        return D_(a) && a >= -te && a <= te;
      }
      var $_ = Zm ? Jr(Zm) : Hw;
      function wu(a) {
        return typeof a == "string" || !et(a) && Jt(a) && Ir(a) == z;
      }
      function Qr(a) {
        return typeof a == "symbol" || Jt(a) && Ir(a) == fe;
      }
      var ga = Qm ? Jr(Qm) : Ww;
      function XN(a) {
        return a === r;
      }
      function jN(a) {
        return Jt(a) && Rr(a) == ve;
      }
      function zN(a) {
        return Jt(a) && Ir(a) == se;
      }
      var qN = Tu(vp);
      var YN = Tu(function (a, l) {
        return a <= l;
      });
      function K_(a) {
        if (!a) {
          return [];
        }
        if (Gr(a)) {
          if (wu(a)) {
            return Rn(a);
          } else {
            return kr(a);
          }
        }
        if (Lo && a[Lo]) {
          return CC(a[Lo]());
        }
        var l = Rr(a);
        var h = l == D ? op : l == B ? zl : _a;
        return h(a);
      }
      function di(a) {
        if (!a) {
          if (a === 0) {
            return a;
          } else {
            return 0;
          }
        }
        a = En(a);
        if (a === W || a === -W) {
          var l = a < 0 ? -1 : 1;
          return l * ie;
        }
        if (a === a) {
          return a;
        } else {
          return 0;
        }
      }
      function nt(a) {
        var l = di(a);
        var h = l % 1;
        if (l === l) {
          if (h) {
            return l - h;
          } else {
            return l;
          }
        } else {
          return 0;
        }
      }
      function k_(a) {
        if (a) {
          return ys(nt(a), 0, ye);
        } else {
          return 0;
        }
      }
      function En(a) {
        if (typeof a == "number") {
          return a;
        }
        if (Qr(a)) {
          return _e;
        }
        if (qt(a)) {
          var l = typeof a.valueOf == "function" ? a.valueOf() : a;
          a = qt(l) ? l + "" : l;
        }
        if (typeof a != "string") {
          if (a === 0) {
            return a;
          } else {
            return +a;
          }
        }
        a = sg(a);
        var h = IL.test(a);
        if (h || PL.test(a)) {
          return cC(a.slice(2), h ? 2 : 8);
        } else if (OL.test(a)) {
          return _e;
        } else {
          return +a;
        }
      }
      function G_(a) {
        return $n(a, Vr(a));
      }
      function JN(a) {
        if (a) {
          return ys(nt(a), -te, te);
        } else if (a === 0) {
          return a;
        } else {
          return 0;
        }
      }
      function Lt(a) {
        if (a == null) {
          return "";
        } else {
          return Zr(a);
        }
      }
      var ZN = ha(function (a, l) {
        if ($o(l) || Gr(l)) {
          $n(l, pr(l), a);
          return;
        }
        for (var h in l) {
          if (Ot.call(l, h)) {
            No(a, h, l[h]);
          }
        }
      });
      var V_ = ha(function (a, l) {
        $n(l, Vr(l), a);
      });
      var Ou = ha(function (a, l, h, _) {
        $n(l, Vr(l), a, _);
      });
      var QN = ha(function (a, l, h, _) {
        $n(l, pr(l), a, _);
      });
      var eP = fi(dp);
      function tP(a, l) {
        var h = da(a);
        if (l == null) {
          return h;
        } else {
          return vg(h, l);
        }
      }
      var rP = st(function (a, l) {
        a = Dt(a);
        var h = -1;
        var _ = l.length;
        var S = _ > 2 ? l[2] : r;
        for (S && Nr(l[0], l[1], S) && (_ = 1); ++h < _;) {
          var I = l[h];
          var H = Vr(I);
          for (var q = -1, re = H.length; ++q < re;) {
            var me = H[q];
            var ge = a[me];
            if (ge === r || yn(ge, fa[me]) && !Ot.call(a, me)) {
              a[me] = I[me];
            }
          }
        }
        return a;
      });
      var nP = st(function (a) {
        a.push(r, s_);
        return Yr(F_, r, a);
      });
      function iP(a, l) {
        return tg(a, He(l, 3), Mn);
      }
      function sP(a, l) {
        return tg(a, He(l, 3), Ep);
      }
      function aP(a, l) {
        if (a == null) {
          return a;
        } else {
          return hp(a, He(l, 3), Vr);
        }
      }
      function oP(a, l) {
        if (a == null) {
          return a;
        } else {
          return yg(a, He(l, 3), Vr);
        }
      }
      function lP(a, l) {
        return a && Mn(a, He(l, 3));
      }
      function uP(a, l) {
        return a && Ep(a, He(l, 3));
      }
      function fP(a) {
        if (a == null) {
          return [];
        } else {
          return cu(a, pr(a));
        }
      }
      function cP(a) {
        if (a == null) {
          return [];
        } else {
          return cu(a, Vr(a));
        }
      }
      function jp(a, l, h) {
        var _ = a == null ? r : As(a, l);
        if (_ === r) {
          return h;
        } else {
          return _;
        }
      }
      function pP(a, l) {
        return a != null && l_(a, l, Dw);
      }
      function zp(a, l) {
        return a != null && l_(a, l, Bw);
      }
      var dP = e_(function (a, l, h) {
        if (l != null && typeof l.toString != "function") {
          l = Zl.call(l);
        }
        a[l] = h;
      }, Yp(Fr));
      var hP = e_(function (a, l, h) {
        if (l != null && typeof l.toString != "function") {
          l = Zl.call(l);
        }
        if (Ot.call(a, l)) {
          a[l].push(h);
        } else {
          a[l] = [h];
        }
      }, He);
      var EP = st(Uo);
      function pr(a) {
        if (Gr(a)) {
          return _g(a);
        } else {
          return Tp(a);
        }
      }
      function Vr(a) {
        if (Gr(a)) {
          return _g(a, true);
        } else {
          return Xw(a);
        }
      }
      function mP(a, l) {
        var h = {};
        l = He(l, 3);
        Mn(a, function (_, S, I) {
          li(h, l(_, S, I), _);
        });
        return h;
      }
      function gP(a, l) {
        var h = {};
        l = He(l, 3);
        Mn(a, function (_, S, I) {
          li(h, S, l(_, S, I));
        });
        return h;
      }
      var _P = ha(function (a, l, h) {
        pu(a, l, h);
      });
      var F_ = ha(function (a, l, h, _) {
        pu(a, l, h, _);
      });
      var TP = fi(function (a, l) {
        var h = {};
        if (a == null) {
          return h;
        }
        var _ = false;
        l = jt(l, function (I) {
          I = $i(I, a);
          _ ||= I.length > 1;
          return I;
        });
        $n(a, Pp(a), h);
        if (_) {
          h = pn(h, E | m | g, dO);
        }
        for (var S = l.length; S--;) {
          yp(h, l[S]);
        }
        return h;
      });
      function vP(a, l) {
        return H_(a, Lu(He(l)));
      }
      var bP = fi(function (a, l) {
        if (a == null) {
          return {};
        } else {
          return zw(a, l);
        }
      });
      function H_(a, l) {
        if (a == null) {
          return {};
        }
        var h = jt(Pp(a), function (_) {
          return [_];
        });
        l = He(l);
        return Dg(a, h, function (_, S) {
          return l(_, S[0]);
        });
      }
      function xP(a, l, h) {
        l = $i(l, a);
        var _ = -1;
        var S = l.length;
        for (S || (S = 1, a = r); ++_ < S;) {
          var I = a == null ? r : a[Kn(l[_])];
          if (I === r) {
            _ = S;
            I = h;
          }
          a = pi(I) ? I.call(a) : I;
        }
        return a;
      }
      function RP(a, l, h) {
        if (a == null) {
          return a;
        } else {
          return Bo(a, l, h);
        }
      }
      function SP(a, l, h, _) {
        _ = typeof _ == "function" ? _ : r;
        if (a == null) {
          return a;
        } else {
          return Bo(a, l, h, _);
        }
      }
      var W_ = n_(pr);
      var X_ = n_(Vr);
      function yP(a, l, h) {
        var _ = et(a);
        var S = _ || ki(a) || ga(a);
        l = He(l, 4);
        if (h == null) {
          var I = a && a.constructor;
          if (S) {
            h = _ ? new I() : [];
          } else if (qt(a)) {
            h = pi(I) ? da(tu(a)) : {};
          } else {
            h = {};
          }
        }
        (S ? un : Mn)(a, function (H, q, re) {
          return l(h, H, q, re);
        });
        return h;
      }
      function AP(a, l) {
        if (a == null) {
          return true;
        } else {
          return yp(a, l);
        }
      }
      function LP(a, l, h) {
        if (a == null) {
          return a;
        } else {
          return kg(a, l, Cp(h));
        }
      }
      function CP(a, l, h, _) {
        _ = typeof _ == "function" ? _ : r;
        if (a == null) {
          return a;
        } else {
          return kg(a, l, Cp(h), _);
        }
      }
      function _a(a) {
        if (a == null) {
          return [];
        } else {
          return ap(a, pr(a));
        }
      }
      function wP(a) {
        if (a == null) {
          return [];
        } else {
          return ap(a, Vr(a));
        }
      }
      function OP(a, l, h) {
        if (h === r) {
          h = l;
          l = r;
        }
        if (h !== r) {
          h = En(h);
          h = h === h ? h : 0;
        }
        if (l !== r) {
          l = En(l);
          l = l === l ? l : 0;
        }
        return ys(En(a), l, h);
      }
      function IP(a, l, h) {
        l = di(l);
        if (h === r) {
          h = l;
          l = 0;
        } else {
          h = di(h);
        }
        a = En(a);
        return Mw(a, l, h);
      }
      function NP(a, l, h) {
        if (h && typeof h != "boolean" && Nr(a, l, h)) {
          l = h = r;
        }
        if (h === r) {
          if (typeof l == "boolean") {
            h = l;
            l = r;
          } else if (typeof a == "boolean") {
            h = a;
            a = r;
          }
        }
        if (a === r && l === r) {
          a = 0;
          l = 1;
        } else {
          a = di(a);
          if (l === r) {
            l = a;
            a = 0;
          } else {
            l = di(l);
          }
        }
        if (a > l) {
          var _ = a;
          a = l;
          l = _;
        }
        if (h || a % 1 || l % 1) {
          var S = mg();
          return xr(a + S * (l - a + fC("1e-" + ((S + "").length - 1))), l);
        }
        return xp(a, l);
      }
      var PP = Ea(function (a, l, h) {
        l = l.toLowerCase();
        return a + (h ? j_(l) : l);
      });
      function j_(a) {
        return qp(Lt(a).toLowerCase());
      }
      function z_(a) {
        a = Lt(a);
        return a && a.replace(DL, RC).replace(eC, "");
      }
      function UP(a, l, h) {
        a = Lt(a);
        l = Zr(l);
        var _ = a.length;
        h = h === r ? _ : ys(nt(h), 0, _);
        var S = h;
        h -= l.length;
        return h >= 0 && a.slice(h, S) == l;
      }
      function DP(a) {
        a = Lt(a);
        if (a && EL.test(a)) {
          return a.replace(ym, SC);
        } else {
          return a;
        }
      }
      function BP(a) {
        a = Lt(a);
        if (a && bL.test(a)) {
          return a.replace(Hc, "\\$&");
        } else {
          return a;
        }
      }
      var MP = Ea(function (a, l, h) {
        return a + (h ? "-" : "") + l.toLowerCase();
      });
      var $P = Ea(function (a, l, h) {
        return a + (h ? " " : "") + l.toLowerCase();
      });
      var KP = Jg("toLowerCase");
      function kP(a, l, h) {
        a = Lt(a);
        l = nt(l);
        var _ = l ? la(a) : 0;
        if (!l || _ >= l) {
          return a;
        }
        var S = (l - _) / 2;
        return _u(su(S), h) + a + _u(iu(S), h);
      }
      function GP(a, l, h) {
        a = Lt(a);
        l = nt(l);
        var _ = l ? la(a) : 0;
        if (l && _ < l) {
          return a + _u(l - _, h);
        } else {
          return a;
        }
      }
      function VP(a, l, h) {
        a = Lt(a);
        l = nt(l);
        var _ = l ? la(a) : 0;
        if (l && _ < l) {
          return _u(l - _, h) + a;
        } else {
          return a;
        }
      }
      function FP(a, l, h) {
        if (h || l == null) {
          l = 0;
        } else {
          l &&= +l;
        }
        return YC(Lt(a).replace(Wc, ""), l || 0);
      }
      function HP(a, l, h) {
        if (h ? Nr(a, l, h) : l === r) {
          l = 1;
        } else {
          l = nt(l);
        }
        return Rp(Lt(a), l);
      }
      function WP() {
        var a = arguments;
        var l = Lt(a[0]);
        if (a.length < 3) {
          return l;
        } else {
          return l.replace(a[1], a[2]);
        }
      }
      var XP = Ea(function (a, l, h) {
        return a + (h ? "_" : "") + l.toLowerCase();
      });
      function jP(a, l, h) {
        if (h && typeof h != "number" && Nr(a, l, h)) {
          l = h = r;
        }
        h = h === r ? ye : h >>> 0;
        if (h) {
          a = Lt(a);
          if (a && (typeof l == "string" || l != null && !Xp(l)) && (l = Zr(l), !l && oa(a))) {
            return Ki(Rn(a), 0, h);
          } else {
            return a.split(l, h);
          }
        } else {
          return [];
        }
      }
      var zP = Ea(function (a, l, h) {
        return a + (h ? " " : "") + qp(l);
      });
      function qP(a, l, h) {
        a = Lt(a);
        h = h == null ? 0 : ys(nt(h), 0, a.length);
        l = Zr(l);
        return a.slice(h, h + l.length) == l;
      }
      function YP(a, l, h) {
        var _ = C.templateSettings;
        if (h && Nr(a, l, h)) {
          l = r;
        }
        a = Lt(a);
        l = Ou({}, l, _, i_);
        var S = Ou({}, l.imports, _.imports, i_);
        var I = pr(S);
        var H = ap(S, I);
        var q;
        var re;
        var me = 0;
        var ge = l.interpolate || Fl;
        var be = "__p += '";
        var Oe = lp((l.escape || Fl).source + "|" + ge.source + "|" + (ge === Am ? wL : Fl).source + "|" + (l.evaluate || Fl).source + "|$", "g");
        var Ke = `${"//# sourceURL=" + (Ot.call(l, "sourceURL") ? (l.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++sC + "]")}
`;
        a.replace(Oe, function (Xe, ct, mt, en, Pr, tn) {
          mt ||= en;
          be += a.slice(me, tn).replace(BL, yC);
          if (ct) {
            q = true;
            be += `' +
__e(${ct}) +
'`;
          }
          if (Pr) {
            re = true;
            be += `';
${Pr};
__p += '`;
          }
          if (mt) {
            be += `' +
((__t = (${mt})) == null ? '' : __t) +
'`;
          }
          me = tn + Xe.length;
          return Xe;
        });
        be += `';
`;
        var We = Ot.call(l, "variable") && l.variable;
        if (!We) {
          be = `with (obj) {
${be}
}
`;
        } else if (LL.test(We)) {
          throw new Qe(f);
        }
        be = (re ? be.replace(At, "") : be).replace(cr, "$1").replace(ke, "$1;");
        be = `${"function(" + (We || "obj")}) {
${We ? "" : `obj || (obj = {});
`}var __t, __p = ''${q ? ", __e = _.escape" : ""}${re ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
` : `;
`}${be}return __p
}`;
        var it = Y_(function () {
          return St(I, Ke + "return " + be).apply(r, H);
        });
        it.source = be;
        if (Wp(it)) {
          throw it;
        }
        return it;
      }
      function JP(a) {
        return Lt(a).toLowerCase();
      }
      function ZP(a) {
        return Lt(a).toUpperCase();
      }
      function QP(a, l, h) {
        a = Lt(a);
        if (a && (h || l === r)) {
          return sg(a);
        }
        if (!a || !(l = Zr(l))) {
          return a;
        }
        var _ = Rn(a);
        var S = Rn(l);
        var I = ag(_, S);
        var H = og(_, S) + 1;
        return Ki(_, I, H).join("");
      }
      function eU(a, l, h) {
        a = Lt(a);
        if (a && (h || l === r)) {
          return a.slice(0, ug(a) + 1);
        }
        if (!a || !(l = Zr(l))) {
          return a;
        }
        var _ = Rn(a);
        var S = og(_, Rn(l)) + 1;
        return Ki(_, 0, S).join("");
      }
      function tU(a, l, h) {
        a = Lt(a);
        if (a && (h || l === r)) {
          return a.replace(Wc, "");
        }
        if (!a || !(l = Zr(l))) {
          return a;
        }
        var _ = Rn(a);
        var S = ag(_, Rn(l));
        return Ki(_, S).join("");
      }
      function rU(a, l) {
        var h = ae;
        var _ = Q;
        if (qt(l)) {
          var S = "separator" in l ? l.separator : S;
          h = "length" in l ? nt(l.length) : h;
          _ = "omission" in l ? Zr(l.omission) : _;
        }
        a = Lt(a);
        var I = a.length;
        if (oa(a)) {
          var H = Rn(a);
          I = H.length;
        }
        if (h >= I) {
          return a;
        }
        var q = h - la(_);
        if (q < 1) {
          return _;
        }
        var re = H ? Ki(H, 0, q).join("") : a.slice(0, q);
        if (S === r) {
          return re + _;
        }
        if (H) {
          q += re.length - q;
        }
        if (Xp(S)) {
          if (a.slice(q).search(S)) {
            var me;
            var ge = re;
            if (!S.global) {
              S = lp(S.source, Lt(Lm.exec(S)) + "g");
            }
            S.lastIndex = 0;
            while (me = S.exec(ge)) {
              var be = me.index;
            }
            re = re.slice(0, be === r ? q : be);
          }
        } else if (a.indexOf(Zr(S), q) != q) {
          var Oe = re.lastIndexOf(S);
          if (Oe > -1) {
            re = re.slice(0, Oe);
          }
        }
        return re + _;
      }
      function nU(a) {
        a = Lt(a);
        if (a && hL.test(a)) {
          return a.replace(ia, NC);
        } else {
          return a;
        }
      }
      var iU = Ea(function (a, l, h) {
        return a + (h ? " " : "") + l.toUpperCase();
      });
      var qp = Jg("toUpperCase");
      function q_(a, l, h) {
        a = Lt(a);
        l = h ? r : l;
        if (l === r) {
          if (LC(a)) {
            return DC(a);
          } else {
            return _C(a);
          }
        } else {
          return a.match(l) || [];
        }
      }
      var Y_ = st(function (a, l) {
        try {
          return Yr(a, r, l);
        } catch (h) {
          if (Wp(h)) {
            return h;
          } else {
            return new Qe(h);
          }
        }
      });
      var sU = fi(function (a, l) {
        un(l, function (h) {
          h = Kn(h);
          li(a, h, Fp(a[h], a));
        });
        return a;
      });
      function aU(a) {
        var l = a == null ? 0 : a.length;
        var h = He();
        a = l ? jt(a, function (_) {
          if (typeof _[1] != "function") {
            throw new fn(o);
          }
          return [h(_[0]), _[1]];
        }) : [];
        return st(function (_) {
          for (var S = -1; ++S < l;) {
            var I = a[S];
            if (Yr(I[0], this, _)) {
              return Yr(I[1], this, _);
            }
          }
        });
      }
      function oU(a) {
        return Nw(pn(a, E));
      }
      function Yp(a) {
        return function () {
          return a;
        };
      }
      function lU(a, l) {
        if (a == null || a !== a) {
          return l;
        } else {
          return a;
        }
      }
      var uU = Qg();
      var fU = Qg(true);
      function Fr(a) {
        return a;
      }
      function Jp(a) {
        return wg(typeof a == "function" ? a : pn(a, E));
      }
      function cU(a) {
        return Ig(pn(a, E));
      }
      function pU(a, l) {
        return Ng(a, pn(l, E));
      }
      var dU = st(function (a, l) {
        return function (h) {
          return Uo(h, a, l);
        };
      });
      var hU = st(function (a, l) {
        return function (h) {
          return Uo(a, h, l);
        };
      });
      function Zp(a, l, h) {
        var _ = pr(l);
        var S = cu(l, _);
        if (h == null && (!qt(l) || !S.length && !!_.length)) {
          h = l;
          l = a;
          a = this;
          S = cu(l, pr(l));
        }
        var I = !qt(h) || !("chain" in h) || !!h.chain;
        var H = pi(a);
        un(S, function (q) {
          var re = l[q];
          a[q] = re;
          if (H) {
            a.prototype[q] = function () {
              var me = this.__chain__;
              if (I || me) {
                var ge = a(this.__wrapped__);
                var be = ge.__actions__ = kr(this.__actions__);
                be.push({
                  func: re,
                  args: arguments,
                  thisArg: a
                });
                ge.__chain__ = me;
                return ge;
              }
              return re.apply(a, Pi([this.value()], arguments));
            };
          }
        });
        return a;
      }
      function EU() {
        if (Er._ === this) {
          Er._ = GC;
        }
        return this;
      }
      function Qp() {}
      function mU(a) {
        a = nt(a);
        return st(function (l) {
          return Pg(l, a);
        });
      }
      var gU = Op(jt);
      var _U = Op(eg);
      var TU = Op(tp);
      function J_(a) {
        if (Mp(a)) {
          return rp(Kn(a));
        } else {
          return qw(a);
        }
      }
      function vU(a) {
        return function (l) {
          if (a == null) {
            return r;
          } else {
            return As(a, l);
          }
        };
      }
      var bU = t_();
      var xU = t_(true);
      function ed() {
        return [];
      }
      function td() {
        return false;
      }
      function RU() {
        return {};
      }
      function SU() {
        return "";
      }
      function yU() {
        return true;
      }
      function AU(a, l) {
        a = nt(a);
        if (a < 1 || a > te) {
          return [];
        }
        var h = ye;
        var _ = xr(a, ye);
        l = He(l);
        a -= ye;
        var S = sp(_, l);
        for (; ++h < a;) {
          l(h);
        }
        return S;
      }
      function LU(a) {
        if (et(a)) {
          return jt(a, Kn);
        } else if (Qr(a)) {
          return [a];
        } else {
          return kr(g_(Lt(a)));
        }
      }
      function CU(a) {
        var l = ++KC;
        return Lt(a) + l;
      }
      var wU = gu(function (a, l) {
        return a + l;
      }, 0);
      var OU = Ip("ceil");
      var IU = gu(function (a, l) {
        return a / l;
      }, 1);
      var NU = Ip("floor");
      function PU(a) {
        if (a && a.length) {
          return fu(a, Fr, mp);
        } else {
          return r;
        }
      }
      function UU(a, l) {
        if (a && a.length) {
          return fu(a, He(l, 2), mp);
        } else {
          return r;
        }
      }
      function DU(a) {
        return ng(a, Fr);
      }
      function BU(a, l) {
        return ng(a, He(l, 2));
      }
      function MU(a) {
        if (a && a.length) {
          return fu(a, Fr, vp);
        } else {
          return r;
        }
      }
      function $U(a, l) {
        if (a && a.length) {
          return fu(a, He(l, 2), vp);
        } else {
          return r;
        }
      }
      var KU = gu(function (a, l) {
        return a * l;
      }, 1);
      var kU = Ip("round");
      var GU = gu(function (a, l) {
        return a - l;
      }, 0);
      function VU(a) {
        if (a && a.length) {
          return ip(a, Fr);
        } else {
          return 0;
        }
      }
      function FU(a, l) {
        if (a && a.length) {
          return ip(a, He(l, 2));
        } else {
          return 0;
        }
      }
      C.after = cN;
      C.ary = C_;
      C.assign = ZN;
      C.assignIn = V_;
      C.assignInWith = Ou;
      C.assignWith = QN;
      C.at = eP;
      C.before = w_;
      C.bind = Fp;
      C.bindAll = sU;
      C.bindKey = O_;
      C.castArray = RN;
      C.chain = y_;
      C.chunk = NO;
      C.compact = PO;
      C.concat = UO;
      C.cond = aU;
      C.conforms = oU;
      C.constant = Yp;
      C.countBy = VI;
      C.create = tP;
      C.curry = I_;
      C.curryRight = N_;
      C.debounce = P_;
      C.defaults = rP;
      C.defaultsDeep = nP;
      C.defer = pN;
      C.delay = dN;
      C.difference = DO;
      C.differenceBy = BO;
      C.differenceWith = MO;
      C.drop = $O;
      C.dropRight = KO;
      C.dropRightWhile = kO;
      C.dropWhile = GO;
      C.fill = VO;
      C.filter = HI;
      C.flatMap = jI;
      C.flatMapDeep = zI;
      C.flatMapDepth = qI;
      C.flatten = b_;
      C.flattenDeep = FO;
      C.flattenDepth = HO;
      C.flip = hN;
      C.flow = uU;
      C.flowRight = fU;
      C.fromPairs = WO;
      C.functions = fP;
      C.functionsIn = cP;
      C.groupBy = YI;
      C.initial = jO;
      C.intersection = zO;
      C.intersectionBy = qO;
      C.intersectionWith = YO;
      C.invert = dP;
      C.invertBy = hP;
      C.invokeMap = ZI;
      C.iteratee = Jp;
      C.keyBy = QI;
      C.keys = pr;
      C.keysIn = Vr;
      C.map = Su;
      C.mapKeys = mP;
      C.mapValues = gP;
      C.matches = cU;
      C.matchesProperty = pU;
      C.memoize = Au;
      C.merge = _P;
      C.mergeWith = F_;
      C.method = dU;
      C.methodOf = hU;
      C.mixin = Zp;
      C.negate = Lu;
      C.nthArg = mU;
      C.omit = TP;
      C.omitBy = vP;
      C.once = EN;
      C.orderBy = eN;
      C.over = gU;
      C.overArgs = mN;
      C.overEvery = _U;
      C.overSome = TU;
      C.partial = Hp;
      C.partialRight = U_;
      C.partition = tN;
      C.pick = bP;
      C.pickBy = H_;
      C.property = J_;
      C.propertyOf = vU;
      C.pull = eI;
      C.pullAll = R_;
      C.pullAllBy = tI;
      C.pullAllWith = rI;
      C.pullAt = nI;
      C.range = bU;
      C.rangeRight = xU;
      C.rearg = gN;
      C.reject = iN;
      C.remove = iI;
      C.rest = _N;
      C.reverse = Gp;
      C.sampleSize = aN;
      C.set = RP;
      C.setWith = SP;
      C.shuffle = oN;
      C.slice = sI;
      C.sortBy = fN;
      C.sortedUniq = pI;
      C.sortedUniqBy = dI;
      C.split = jP;
      C.spread = TN;
      C.tail = hI;
      C.take = EI;
      C.takeRight = mI;
      C.takeRightWhile = gI;
      C.takeWhile = _I;
      C.tap = PI;
      C.throttle = vN;
      C.thru = Ru;
      C.toArray = K_;
      C.toPairs = W_;
      C.toPairsIn = X_;
      C.toPath = LU;
      C.toPlainObject = G_;
      C.transform = yP;
      C.unary = bN;
      C.union = TI;
      C.unionBy = vI;
      C.unionWith = bI;
      C.uniq = xI;
      C.uniqBy = RI;
      C.uniqWith = SI;
      C.unset = AP;
      C.unzip = Vp;
      C.unzipWith = S_;
      C.update = LP;
      C.updateWith = CP;
      C.values = _a;
      C.valuesIn = wP;
      C.without = yI;
      C.words = q_;
      C.wrap = xN;
      C.xor = AI;
      C.xorBy = LI;
      C.xorWith = CI;
      C.zip = wI;
      C.zipObject = OI;
      C.zipObjectDeep = II;
      C.zipWith = NI;
      C.entries = W_;
      C.entriesIn = X_;
      C.extend = V_;
      C.extendWith = Ou;
      Zp(C, C);
      C.add = wU;
      C.attempt = Y_;
      C.camelCase = PP;
      C.capitalize = j_;
      C.ceil = OU;
      C.clamp = OP;
      C.clone = SN;
      C.cloneDeep = AN;
      C.cloneDeepWith = LN;
      C.cloneWith = yN;
      C.conformsTo = CN;
      C.deburr = z_;
      C.defaultTo = lU;
      C.divide = IU;
      C.endsWith = UP;
      C.eq = yn;
      C.escape = DP;
      C.escapeRegExp = BP;
      C.every = FI;
      C.find = WI;
      C.findIndex = T_;
      C.findKey = iP;
      C.findLast = XI;
      C.findLastIndex = v_;
      C.findLastKey = sP;
      C.floor = NU;
      C.forEach = A_;
      C.forEachRight = L_;
      C.forIn = aP;
      C.forInRight = oP;
      C.forOwn = lP;
      C.forOwnRight = uP;
      C.get = jp;
      C.gt = wN;
      C.gte = ON;
      C.has = pP;
      C.hasIn = zp;
      C.head = x_;
      C.identity = Fr;
      C.includes = JI;
      C.indexOf = XO;
      C.inRange = IP;
      C.invoke = EP;
      C.isArguments = ws;
      C.isArray = et;
      C.isArrayBuffer = IN;
      C.isArrayLike = Gr;
      C.isArrayLikeObject = Qt;
      C.isBoolean = NN;
      C.isBuffer = ki;
      C.isDate = PN;
      C.isElement = UN;
      C.isEmpty = DN;
      C.isEqual = BN;
      C.isEqualWith = MN;
      C.isError = Wp;
      C.isFinite = $N;
      C.isFunction = pi;
      C.isInteger = D_;
      C.isLength = Cu;
      C.isMap = B_;
      C.isMatch = KN;
      C.isMatchWith = kN;
      C.isNaN = GN;
      C.isNative = VN;
      C.isNil = HN;
      C.isNull = FN;
      C.isNumber = M_;
      C.isObject = qt;
      C.isObjectLike = Jt;
      C.isPlainObject = ko;
      C.isRegExp = Xp;
      C.isSafeInteger = WN;
      C.isSet = $_;
      C.isString = wu;
      C.isSymbol = Qr;
      C.isTypedArray = ga;
      C.isUndefined = XN;
      C.isWeakMap = jN;
      C.isWeakSet = zN;
      C.join = JO;
      C.kebabCase = MP;
      C.last = hn;
      C.lastIndexOf = ZO;
      C.lowerCase = $P;
      C.lowerFirst = KP;
      C.lt = qN;
      C.lte = YN;
      C.max = PU;
      C.maxBy = UU;
      C.mean = DU;
      C.meanBy = BU;
      C.min = MU;
      C.minBy = $U;
      C.stubArray = ed;
      C.stubFalse = td;
      C.stubObject = RU;
      C.stubString = SU;
      C.stubTrue = yU;
      C.multiply = KU;
      C.nth = QO;
      C.noConflict = EU;
      C.noop = Qp;
      C.now = yu;
      C.pad = kP;
      C.padEnd = GP;
      C.padStart = VP;
      C.parseInt = FP;
      C.random = NP;
      C.reduce = rN;
      C.reduceRight = nN;
      C.repeat = HP;
      C.replace = WP;
      C.result = xP;
      C.round = kU;
      C.runInContext = ee;
      C.sample = sN;
      C.size = lN;
      C.snakeCase = XP;
      C.some = uN;
      C.sortedIndex = aI;
      C.sortedIndexBy = oI;
      C.sortedIndexOf = lI;
      C.sortedLastIndex = uI;
      C.sortedLastIndexBy = fI;
      C.sortedLastIndexOf = cI;
      C.startCase = zP;
      C.startsWith = qP;
      C.subtract = GU;
      C.sum = VU;
      C.sumBy = FU;
      C.template = YP;
      C.times = AU;
      C.toFinite = di;
      C.toInteger = nt;
      C.toLength = k_;
      C.toLower = JP;
      C.toNumber = En;
      C.toSafeInteger = JN;
      C.toString = Lt;
      C.toUpper = ZP;
      C.trim = QP;
      C.trimEnd = eU;
      C.trimStart = tU;
      C.truncate = rU;
      C.unescape = nU;
      C.uniqueId = CU;
      C.upperCase = iU;
      C.upperFirst = qp;
      C.each = A_;
      C.eachRight = L_;
      C.first = x_;
      Zp(C, function () {
        var a = {};
        Mn(C, function (l, h) {
          if (!Ot.call(C.prototype, h)) {
            a[h] = l;
          }
        });
        return a;
      }(), {
        chain: false
      });
      C.VERSION = n;
      un(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function (a) {
        C[a].placeholder = C;
      });
      un(["drop", "take"], function (a, l) {
        dt.prototype[a] = function (h) {
          h = h === r ? 1 : ar(nt(h), 0);
          var _ = this.__filtered__ && !l ? new dt(this) : this.clone();
          if (_.__filtered__) {
            _.__takeCount__ = xr(h, _.__takeCount__);
          } else {
            _.__views__.push({
              size: xr(h, ye),
              type: a + (_.__dir__ < 0 ? "Right" : "")
            });
          }
          return _;
        };
        dt.prototype[a + "Right"] = function (h) {
          return this.reverse()[a](h).reverse();
        };
      });
      un(["filter", "map", "takeWhile"], function (a, l) {
        var h = l + 1;
        var _ = h == k || h == j;
        dt.prototype[a] = function (S) {
          var I = this.clone();
          I.__iteratees__.push({
            iteratee: He(S, 3),
            type: h
          });
          I.__filtered__ = I.__filtered__ || _;
          return I;
        };
      });
      un(["head", "last"], function (a, l) {
        var h = "take" + (l ? "Right" : "");
        dt.prototype[a] = function () {
          return this[h](1).value()[0];
        };
      });
      un(["initial", "tail"], function (a, l) {
        var h = "drop" + (l ? "" : "Right");
        dt.prototype[a] = function () {
          if (this.__filtered__) {
            return new dt(this);
          } else {
            return this[h](1);
          }
        };
      });
      dt.prototype.compact = function () {
        return this.filter(Fr);
      };
      dt.prototype.find = function (a) {
        return this.filter(a).head();
      };
      dt.prototype.findLast = function (a) {
        return this.reverse().find(a);
      };
      dt.prototype.invokeMap = st(function (a, l) {
        if (typeof a == "function") {
          return new dt(this);
        } else {
          return this.map(function (h) {
            return Uo(h, a, l);
          });
        }
      });
      dt.prototype.reject = function (a) {
        return this.filter(Lu(He(a)));
      };
      dt.prototype.slice = function (a, l) {
        a = nt(a);
        var h = this;
        if (h.__filtered__ && (a > 0 || l < 0)) {
          return new dt(h);
        } else {
          if (a < 0) {
            h = h.takeRight(-a);
          } else if (a) {
            h = h.drop(a);
          }
          if (l !== r) {
            l = nt(l);
            h = l < 0 ? h.dropRight(-l) : h.take(l - a);
          }
          return h;
        }
      };
      dt.prototype.takeRightWhile = function (a) {
        return this.reverse().takeWhile(a).reverse();
      };
      dt.prototype.toArray = function () {
        return this.take(ye);
      };
      Mn(dt.prototype, function (a, l) {
        var h = /^(?:filter|find|map|reject)|While$/.test(l);
        var _ = /^(?:head|last)$/.test(l);
        var S = C[_ ? "take" + (l == "last" ? "Right" : "") : l];
        var I = _ || /^find/.test(l);
        if (S) {
          C.prototype[l] = function () {
            var H = this.__wrapped__;
            var q = _ ? [1] : arguments;
            var re = H instanceof dt;
            var me = q[0];
            var ge = re || et(H);
            function be(ct) {
              var mt = S.apply(C, Pi([ct], q));
              if (_ && Oe) {
                return mt[0];
              } else {
                return mt;
              }
            }
            if (ge && h && typeof me == "function" && me.length != 1) {
              re = ge = false;
            }
            var Oe = this.__chain__;
            var Ke = !!this.__actions__.length;
            var We = I && !Oe;
            var it = re && !Ke;
            if (!I && ge) {
              H = it ? H : new dt(this);
              var Xe = a.apply(H, q);
              Xe.__actions__.push({
                func: Ru,
                args: [be],
                thisArg: r
              });
              return new cn(Xe, Oe);
            }
            if (We && it) {
              return a.apply(this, q);
            } else {
              Xe = this.thru(be);
              if (We) {
                if (_) {
                  return Xe.value()[0];
                } else {
                  return Xe.value();
                }
              } else {
                return Xe;
              }
            }
          };
        }
      });
      un(["pop", "push", "shift", "sort", "splice", "unshift"], function (a) {
        var l = ql[a];
        var h = /^(?:push|sort|unshift)$/.test(a) ? "tap" : "thru";
        var _ = /^(?:pop|shift)$/.test(a);
        C.prototype[a] = function () {
          var S = arguments;
          if (_ && !this.__chain__) {
            var I = this.value();
            return l.apply(et(I) ? I : [], S);
          }
          return this[h](function (H) {
            return l.apply(et(H) ? H : [], S);
          });
        };
      });
      Mn(dt.prototype, function (a, l) {
        var h = C[l];
        if (h) {
          var _ = h.name + "";
          if (!Ot.call(pa, _)) {
            pa[_] = [];
          }
          pa[_].push({
            name: l,
            func: h
          });
        }
      });
      pa[mu(r, A).name] = [{
        name: "wrapper",
        func: r
      }];
      dt.prototype.clone = nw;
      dt.prototype.reverse = iw;
      dt.prototype.value = sw;
      C.prototype.at = UI;
      C.prototype.chain = DI;
      C.prototype.commit = BI;
      C.prototype.next = MI;
      C.prototype.plant = KI;
      C.prototype.reverse = kI;
      C.prototype.toJSON = C.prototype.valueOf = C.prototype.value = GI;
      C.prototype.first = C.prototype.head;
      if (Lo) {
        C.prototype[Lo] = $I;
      }
      return C;
    };
    var ua = BC();
    if (bs) {
      (bs.exports = ua)._ = ua;
      Jc._ = ua;
    } else {
      Er._ = ua;
    }
  }).call(Nt);
})(Hf, Hf.exports);
Hf.exports;
const bj = fr({
  props: {
    modelValue: String,
    sanitizers: Array
  },
  emits: {
    "update:modelValue": t => true
  },
  watch: {
    modelValue(t, e) {
      if (t !== e) {
        const r = this.$refs.input;
        r.value = t;
      }
    }
  },
  methods: {
    focus() {
      this.$refs.input.focus();
    },
    async onInput(t) {
      const e = t.target;
      const r = e.maxLength === -1 ? Number.MAX_SAFE_INTEGER : e.maxLength;
      if (this.sanitizers) {
        e.value = zh.withTypes(e.value, [...this.sanitizers]);
      }
      if (e.value.length > r) {
        e.value = e.value.substring(0, r);
        return;
      }
      this.$emit("update:modelValue", e.value);
      await this.$nextTick();
      if (e.value !== this.modelValue) {
        e.value = this.modelValue;
      }
    }
  }
});
const xj = ["value"];
function Rj(t, e, r, n, i, s) {
  we();
  return Ie("input", {
    ref: "input",
    value: t.modelValue,
    onInput: e[0] ||= (...o) => t.onInput && t.onInput(...o)
  }, null, 40, xj);
}
const Sj = Or(bj, [["render", Rj]]);
var ll = new Map();
function yj(t) {
  var e = ll.get(t);
  if (e) {
    e.destroy();
  }
}
function Aj(t) {
  var e = ll.get(t);
  if (e) {
    e.update();
  }
}
var Wu = null;
if (typeof window === "undefined") {
  (Wu = function (t) {
    return t;
  }).destroy = function (t) {
    return t;
  };
  Wu.update = function (t) {
    return t;
  };
} else {
  (Wu = function (t, e) {
    if (t) {
      Array.prototype.forEach.call(t.length ? t : [t], function (r) {
        return function (n) {
          if (n && n.nodeName && n.nodeName === "TEXTAREA" && !ll.has(n)) {
            var i;
            var s = null;
            var o = window.getComputedStyle(n);
            i = n.value;
            function f() {
              p({
                testForHeightReduction: i === "" || !n.value.startsWith(i),
                restoreTextAlign: null
              });
              i = n.value;
            }
            var c = function (E) {
              n.removeEventListener("autosize:destroy", c);
              n.removeEventListener("autosize:update", d);
              n.removeEventListener("input", f);
              window.removeEventListener("resize", d);
              Object.keys(E).forEach(function (m) {
                return n.style[m] = E[m];
              });
              ll.delete(n);
            }.bind(n, {
              height: n.style.height,
              resize: n.style.resize,
              textAlign: n.style.textAlign,
              overflowY: n.style.overflowY,
              overflowX: n.style.overflowX,
              wordWrap: n.style.wordWrap
            });
            n.addEventListener("autosize:destroy", c);
            n.addEventListener("autosize:update", d);
            n.addEventListener("input", f);
            window.addEventListener("resize", d);
            n.style.overflowX = "hidden";
            n.style.wordWrap = "break-word";
            ll.set(n, {
              destroy: c,
              update: d
            });
            d();
          }
          function p(E) {
            var m;
            var g;
            var T = E.restoreTextAlign;
            var b = T === undefined ? null : T;
            var x = E.testForHeightReduction;
            var A = x === undefined || x;
            var R = o.overflowY;
            if (n.scrollHeight !== 0 && (o.resize === "vertical" ? n.style.resize = "none" : o.resize === "both" && (n.style.resize = "horizontal"), A && (m = function (y) {
              var U = [];
              while (y && y.parentNode && y.parentNode instanceof Element) {
                if (y.parentNode.scrollTop) {
                  U.push([y.parentNode, y.parentNode.scrollTop]);
                }
                y = y.parentNode;
              }
              return function () {
                return U.forEach(function (P) {
                  var M = P[0];
                  var X = P[1];
                  M.style.scrollBehavior = "auto";
                  M.scrollTop = X;
                  M.style.scrollBehavior = null;
                });
              };
            }(n), n.style.height = ""), g = o.boxSizing === "content-box" ? n.scrollHeight - (parseFloat(o.paddingTop) + parseFloat(o.paddingBottom)) : n.scrollHeight + parseFloat(o.borderTopWidth) + parseFloat(o.borderBottomWidth), o.maxHeight !== "none" && g > parseFloat(o.maxHeight) ? (o.overflowY === "hidden" && (n.style.overflow = "scroll"), g = parseFloat(o.maxHeight)) : o.overflowY !== "hidden" && (n.style.overflow = "hidden"), n.style.height = g + "px", b && (n.style.textAlign = b), m && m(), s !== g && (n.dispatchEvent(new Event("autosize:resized", {
              bubbles: true
            })), s = g), R !== o.overflow && !b)) {
              var v = o.textAlign;
              if (o.overflow === "hidden") {
                n.style.textAlign = v === "start" ? "end" : "start";
              }
              p({
                restoreTextAlign: v,
                testForHeightReduction: true
              });
            }
          }
          function d() {
            p({
              testForHeightReduction: true,
              restoreTextAlign: null
            });
          }
        }(r);
      });
    }
    return t;
  }).destroy = function (t) {
    if (t) {
      Array.prototype.forEach.call(t.length ? t : [t], yj);
    }
    return t;
  };
  Wu.update = function (t) {
    if (t) {
      Array.prototype.forEach.call(t.length ? t : [t], Aj);
    }
    return t;
  };
}
function Wo(t) {
  return t && t.Math === Math && t;
}
var zr = Wo(typeof globalThis == "object" && globalThis) || Wo(typeof window == "object" && window) || Wo(typeof self == "object" && self) || Wo(typeof Nt == "object" && Nt) || Wo(typeof Nt == "object" && Nt) || function () {
  return this;
}() || Function("return this")();
var M0 = {};
function on(t) {
  try {
    return !!t();
  } catch {
    return true;
  }
}
var Lj = on;
var Ts = !Lj(function () {
  return Object.defineProperty({}, 1, {
    get: function () {
      return 7;
    }
  })[1] !== 7;
});
var Cj = on;
var $0 = !Cj(function () {
  var t = function () {}.bind();
  return typeof t != "function" || t.hasOwnProperty("prototype");
});
var wj = $0;
var Xu = Function.prototype.call;
var Ii = wj ? Xu.bind(Xu) : function () {
  return Xu.apply(Xu, arguments);
};
var VA = {};
var FA = {}.propertyIsEnumerable;
var HA = Object.getOwnPropertyDescriptor;
var Oj = HA && !FA.call({
  1: 2
}, 1);
VA.f = Oj ? function (e) {
  var r = HA(this, e);
  return !!r && r.enumerable;
} : FA;
function WA(t, e) {
  return {
    enumerable: !(t & 1),
    configurable: !(t & 2),
    writable: !(t & 4),
    value: e
  };
}
var XA = $0;
var jA = Function.prototype;
var qh = jA.call;
var Ij = XA && jA.bind.bind(qh, qh);
var Kr = XA ? Ij : function (t) {
  return function () {
    return qh.apply(t, arguments);
  };
};
var zA = Kr;
var Nj = zA({}.toString);
var Pj = zA("".slice);
function Uc(t) {
  return Pj(Nj(t), 8, -1);
}
var Uj = Kr;
var Dj = on;
var Bj = Uc;
var $d = Object;
var Mj = Uj("".split);
var $j = Dj(function () {
  return !$d("z").propertyIsEnumerable(0);
}) ? function (t) {
  if (Bj(t) === "String") {
    return Mj(t, "");
  } else {
    return $d(t);
  }
} : $d;
function Dc(t) {
  return t == null;
}
var Kj = Dc;
var kj = TypeError;
function $l(t) {
  if (Kj(t)) {
    throw new kj("Can't call method on " + t);
  }
  return t;
}
var Gj = $j;
var Vj = $l;
function Bc(t) {
  return Gj(Vj(t));
}
var Kd = typeof document == "object" && document.all;
var qr = typeof Kd === "undefined" && Kd !== undefined ? function (t) {
  return typeof t == "function" || t === Kd;
} : function (t) {
  return typeof t == "function";
};
var Fj = qr;
function Ro(t) {
  if (typeof t == "object") {
    return t !== null;
  } else {
    return Fj(t);
  }
}
var kd = zr;
var Hj = qr;
function Wj(t) {
  if (Hj(t)) {
    return t;
  } else {
    return undefined;
  }
}
function K0(t, e) {
  if (arguments.length < 2) {
    return Wj(kd[t]);
  } else {
    return kd[t] && kd[t][e];
  }
}
var Xj = Kr;
var qA = Xj({}.isPrototypeOf);
var jj = typeof navigator !== "undefined" && String(navigator.userAgent) || "";
var YA = zr;
var Gd = jj;
var $b = YA.process;
var Kb = YA.Deno;
var kb = $b && $b.versions || Kb && Kb.version;
var Gb = kb && kb.v8;
var On;
var Wf;
if (Gb) {
  On = Gb.split(".");
  Wf = On[0] > 0 && On[0] < 4 ? 1 : +(On[0] + On[1]);
}
if (!Wf && Gd) {
  On = Gd.match(/Edge\/(\d+)/);
  if (!On || On[1] >= 74) {
    On = Gd.match(/Chrome\/(\d+)/);
    if (On) {
      Wf = +On[1];
    }
  }
}
var zj = Wf;
var Vb = zj;
var qj = on;
var Yj = zr;
var Jj = Yj.String;
var JA = !!Object.getOwnPropertySymbols && !qj(function () {
  var t = Symbol("symbol detection");
  return !Jj(t) || !(Object(t) instanceof Symbol) || !Symbol.sham && Vb && Vb < 41;
});
var Zj = JA;
var ZA = Zj && !Symbol.sham && typeof Symbol.iterator == "symbol";
var Qj = K0;
var ez = qr;
var tz = qA;
var rz = ZA;
var nz = Object;
var QA = rz ? function (t) {
  return typeof t == "symbol";
} : function (t) {
  var e = Qj("Symbol");
  return ez(e) && tz(e.prototype, nz(t));
};
var iz = String;
function sz(t) {
  try {
    return iz(t);
  } catch {
    return "Object";
  }
}
var az = qr;
var oz = sz;
var lz = TypeError;
function uz(t) {
  if (az(t)) {
    return t;
  }
  throw new lz(oz(t) + " is not a function");
}
var fz = uz;
var cz = Dc;
function k0(t, e) {
  var r = t[e];
  if (cz(r)) {
    return undefined;
  } else {
    return fz(r);
  }
}
var Vd = Ii;
var Fd = qr;
var Hd = Ro;
var pz = TypeError;
function dz(t, e) {
  var r;
  var n;
  if (e === "string" && Fd(r = t.toString) && !Hd(n = Vd(r, t)) || Fd(r = t.valueOf) && !Hd(n = Vd(r, t)) || e !== "string" && Fd(r = t.toString) && !Hd(n = Vd(r, t))) {
    return n;
  }
  throw new pz("Can't convert object to primitive value");
}
var e1 = {
  exports: {}
};
var Fb = zr;
var hz = Object.defineProperty;
function G0(t, e) {
  try {
    hz(Fb, t, {
      value: e,
      configurable: true,
      writable: true
    });
  } catch {
    Fb[t] = e;
  }
  return e;
}
var Ez = zr;
var mz = G0;
var Hb = "__core-js_shared__";
var Wb = e1.exports = Ez[Hb] || mz(Hb, {});
(Wb.versions ||= []).push({
  version: "3.37.1",
  mode: "global",
  copyright: "© 2014-2024 Denis Pushkarev (zloirock.ru)",
  license: "https://github.com/zloirock/core-js/blob/v3.37.1/LICENSE",
  source: "https://github.com/zloirock/core-js"
});
var V0 = e1.exports;
var Xb = V0;
function F0(t, e) {
  return Xb[t] ||= e || {};
}
var gz = $l;
var _z = Object;
function t1(t) {
  return _z(gz(t));
}
var Tz = Kr;
var vz = t1;
var bz = Tz({}.hasOwnProperty);
var vs = Object.hasOwn || function (e, r) {
  return bz(vz(e), r);
};
var xz = Kr;
var Rz = 0;
var Sz = Math.random();
var yz = xz(1 .toString);
function r1(t) {
  return "Symbol(" + (t === undefined ? "" : t) + ")_" + yz(++Rz + Sz, 36);
}
var Az = zr;
var Lz = F0;
var jb = vs;
var Cz = r1;
var wz = JA;
var Oz = ZA;
var Ia = Az.Symbol;
var Wd = Lz("wks");
var Iz = Oz ? Ia.for || Ia : Ia && Ia.withoutSetter || Cz;
function ra(t) {
  if (!jb(Wd, t)) {
    Wd[t] = wz && jb(Ia, t) ? Ia[t] : Iz("Symbol." + t);
  }
  return Wd[t];
}
var Nz = Ii;
var zb = Ro;
var qb = QA;
var Pz = k0;
var Uz = dz;
var Dz = ra;
var Bz = TypeError;
var Mz = Dz("toPrimitive");
function $z(t, e) {
  if (!zb(t) || qb(t)) {
    return t;
  }
  var r = Pz(t, Mz);
  var n;
  if (r) {
    if (e === undefined) {
      e = "default";
    }
    n = Nz(r, t, e);
    if (!zb(n) || qb(n)) {
      return n;
    }
    throw new Bz("Can't convert object to primitive value");
  }
  if (e === undefined) {
    e = "number";
  }
  return Uz(t, e);
}
var Kz = $z;
var kz = QA;
function n1(t) {
  var e = Kz(t, "string");
  if (kz(e)) {
    return e;
  } else {
    return e + "";
  }
}
var Gz = zr;
var Yb = Ro;
var Yh = Gz.document;
var Vz = Yb(Yh) && Yb(Yh.createElement);
function i1(t) {
  if (Vz) {
    return Yh.createElement(t);
  } else {
    return {};
  }
}
var Fz = Ts;
var Hz = on;
var Wz = i1;
var s1 = !Fz && !Hz(function () {
  return Object.defineProperty(Wz("div"), "a", {
    get: function () {
      return 7;
    }
  }).a !== 7;
});
var Xz = Ts;
var jz = Ii;
var zz = VA;
var qz = WA;
var Yz = Bc;
var Jz = n1;
var Zz = vs;
var Qz = s1;
var Jb = Object.getOwnPropertyDescriptor;
M0.f = Xz ? Jb : function (e, r) {
  e = Yz(e);
  r = Jz(r);
  if (Qz) {
    try {
      return Jb(e, r);
    } catch {}
  }
  if (Zz(e, r)) {
    return qz(!jz(zz.f, e, r), e[r]);
  }
};
var Kl = {};
var eq = Ts;
var tq = on;
var a1 = eq && tq(function () {
  return Object.defineProperty(function () {}, "prototype", {
    value: 42,
    writable: false
  }).prototype !== 42;
});
var rq = Ro;
var nq = String;
var iq = TypeError;
function na(t) {
  if (rq(t)) {
    return t;
  }
  throw new iq(nq(t) + " is not an object");
}
var sq = Ts;
var aq = s1;
var oq = a1;
var ju = na;
var Zb = n1;
var lq = TypeError;
var Xd = Object.defineProperty;
var uq = Object.getOwnPropertyDescriptor;
var jd = "enumerable";
var zd = "configurable";
var qd = "writable";
Kl.f = sq ? oq ? function (e, r, n) {
  ju(e);
  r = Zb(r);
  ju(n);
  if (typeof e == "function" && r === "prototype" && "value" in n && qd in n && !n[qd]) {
    var i = uq(e, r);
    if (i && i[qd]) {
      e[r] = n.value;
      n = {
        configurable: zd in n ? n[zd] : i[zd],
        enumerable: jd in n ? n[jd] : i[jd],
        writable: false
      };
    }
  }
  return Xd(e, r, n);
} : Xd : function (e, r, n) {
  ju(e);
  r = Zb(r);
  ju(n);
  if (aq) {
    try {
      return Xd(e, r, n);
    } catch {}
  }
  if ("get" in n || "set" in n) {
    throw new lq("Accessors not supported");
  }
  if ("value" in n) {
    e[r] = n.value;
  }
  return e;
};
var fq = Ts;
var cq = Kl;
var pq = WA;
var H0 = fq ? function (t, e, r) {
  return cq.f(t, e, pq(1, r));
} : function (t, e, r) {
  t[e] = r;
  return t;
};
var o1 = {
  exports: {}
};
var Jh = Ts;
var dq = vs;
var l1 = Function.prototype;
var hq = Jh && Object.getOwnPropertyDescriptor;
var W0 = dq(l1, "name");
var Eq = W0 && function () {}.name === "something";
var mq = W0 && (!Jh || Jh && hq(l1, "name").configurable);
var gq = {
  EXISTS: W0,
  PROPER: Eq,
  CONFIGURABLE: mq
};
var _q = Kr;
var Tq = qr;
var Zh = V0;
var vq = _q(Function.toString);
if (!Tq(Zh.inspectSource)) {
  Zh.inspectSource = function (t) {
    return vq(t);
  };
}
var bq = Zh.inspectSource;
var xq = zr;
var Rq = qr;
var Qb = xq.WeakMap;
var Sq = Rq(Qb) && /native code/.test(String(Qb));
var yq = F0;
var Aq = r1;
var ex = yq("keys");
function u1(t) {
  return ex[t] ||= Aq(t);
}
var X0 = {};
var Lq = Sq;
var f1 = zr;
var Cq = Ro;
var wq = H0;
var Yd = vs;
var Jd = V0;
var Oq = u1;
var Iq = X0;
var tx = "Object already initialized";
var Qh = f1.TypeError;
var Nq = f1.WeakMap;
var Xf;
var xl;
var jf;
function Pq(t) {
  if (jf(t)) {
    return xl(t);
  } else {
    return Xf(t, {});
  }
}
function Uq(t) {
  return function (e) {
    var r;
    if (!Cq(e) || (r = xl(e)).type !== t) {
      throw new Qh("Incompatible receiver, " + t + " required");
    }
    return r;
  };
}
if (Lq || Jd.state) {
  var Fn = Jd.state ||= new Nq();
  Fn.get = Fn.get;
  Fn.has = Fn.has;
  Fn.set = Fn.set;
  Xf = function (t, e) {
    if (Fn.has(t)) {
      throw new Qh(tx);
    }
    e.facade = t;
    Fn.set(t, e);
    return e;
  };
  xl = function (t) {
    return Fn.get(t) || {};
  };
  jf = function (t) {
    return Fn.has(t);
  };
} else {
  var ba = Oq("state");
  Iq[ba] = true;
  Xf = function (t, e) {
    if (Yd(t, ba)) {
      throw new Qh(tx);
    }
    e.facade = t;
    wq(t, ba, e);
    return e;
  };
  xl = function (t) {
    if (Yd(t, ba)) {
      return t[ba];
    } else {
      return {};
    }
  };
  jf = function (t) {
    return Yd(t, ba);
  };
}
var c1 = {
  set: Xf,
  get: xl,
  has: jf,
  enforce: Pq,
  getterFor: Uq
};
var j0 = Kr;
var Dq = on;
var Bq = qr;
var zu = vs;
var eE = Ts;
var Mq = gq.CONFIGURABLE;
var $q = bq;
var p1 = c1;
var Kq = p1.enforce;
var kq = p1.get;
var rx = String;
var df = Object.defineProperty;
var Gq = j0("".slice);
var Vq = j0("".replace);
var Fq = j0([].join);
var Hq = eE && !Dq(function () {
  return df(function () {}, "length", {
    value: 8
  }).length !== 8;
});
var Wq = String(String).split("String");
var Xq = o1.exports = function (t, e, r) {
  if (Gq(rx(e), 0, 7) === "Symbol(") {
    e = "[" + Vq(rx(e), /^Symbol\(([^)]*)\).*$/, "$1") + "]";
  }
  if (r && r.getter) {
    e = "get " + e;
  }
  if (r && r.setter) {
    e = "set " + e;
  }
  if (!zu(t, "name") || Mq && t.name !== e) {
    if (eE) {
      df(t, "name", {
        value: e,
        configurable: true
      });
    } else {
      t.name = e;
    }
  }
  if (Hq && r && zu(r, "arity") && t.length !== r.arity) {
    df(t, "length", {
      value: r.arity
    });
  }
  try {
    if (r && zu(r, "constructor") && r.constructor) {
      if (eE) {
        df(t, "prototype", {
          writable: false
        });
      }
    } else {
      t.prototype &&= undefined;
    }
  } catch {}
  var n = Kq(t);
  if (!zu(n, "source")) {
    n.source = Fq(Wq, typeof e == "string" ? e : "");
  }
  return t;
};
Function.prototype.toString = Xq(function () {
  return Bq(this) && kq(this).source || $q(this);
}, "toString");
var jq = o1.exports;
var zq = qr;
var qq = Kl;
var Yq = jq;
var Jq = G0;
function d1(t, e, r, n) {
  n ||= {};
  var i = n.enumerable;
  var s = n.name !== undefined ? n.name : e;
  if (zq(r)) {
    Yq(r, s, n);
  }
  if (n.global) {
    if (i) {
      t[e] = r;
    } else {
      Jq(e, r);
    }
  } else {
    try {
      if (n.unsafe) {
        if (t[e]) {
          i = true;
        }
      } else {
        delete t[e];
      }
    } catch {}
    if (i) {
      t[e] = r;
    } else {
      qq.f(t, e, {
        value: r,
        enumerable: false,
        configurable: !n.nonConfigurable,
        writable: !n.nonWritable
      });
    }
  }
  return t;
}
var h1 = {};
var Zq = Math.ceil;
var Qq = Math.floor;
var eY = Math.trunc || function (e) {
  var r = +e;
  return (r > 0 ? Qq : Zq)(r);
};
var tY = eY;
function Mc(t) {
  var e = +t;
  if (e !== e || e === 0) {
    return 0;
  } else {
    return tY(e);
  }
}
var rY = Mc;
var nY = Math.max;
var iY = Math.min;
function sY(t, e) {
  var r = rY(t);
  if (r < 0) {
    return nY(r + e, 0);
  } else {
    return iY(r, e);
  }
}
var aY = Mc;
var oY = Math.min;
function E1(t) {
  var e = aY(t);
  if (e > 0) {
    return oY(e, 9007199254740991);
  } else {
    return 0;
  }
}
var lY = E1;
function uY(t) {
  return lY(t.length);
}
var fY = Bc;
var cY = sY;
var pY = uY;
function nx(t) {
  return function (e, r, n) {
    var i = fY(e);
    var s = pY(i);
    if (s === 0) {
      return !t && -1;
    }
    var o = cY(n, s);
    var f;
    if (t && r !== r) {
      while (s > o) {
        f = i[o++];
        if (f !== f) {
          return true;
        }
      }
    } else {
      for (; s > o; o++) {
        if ((t || o in i) && i[o] === r) {
          return t || o || 0;
        }
      }
    }
    return !t && -1;
  };
}
var dY = {
  includes: nx(true),
  indexOf: nx(false)
};
var hY = Kr;
var Zd = vs;
var EY = Bc;
var mY = dY.indexOf;
var gY = X0;
var ix = hY([].push);
function m1(t, e) {
  var r = EY(t);
  var n = 0;
  var i = [];
  var s;
  for (s in r) {
    if (!Zd(gY, s) && Zd(r, s)) {
      ix(i, s);
    }
  }
  while (e.length > n) {
    if (Zd(r, s = e[n++])) {
      if (!~mY(i, s)) {
        ix(i, s);
      }
    }
  }
  return i;
}
var z0 = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
var _Y = m1;
var TY = z0;
var vY = TY.concat("length", "prototype");
h1.f = Object.getOwnPropertyNames || function (e) {
  return _Y(e, vY);
};
var g1 = {
  f: Object.getOwnPropertySymbols
};
var bY = K0;
var xY = Kr;
var RY = h1;
var SY = g1;
var yY = na;
var AY = xY([].concat);
var LY = bY("Reflect", "ownKeys") || function (e) {
  var r = RY.f(yY(e));
  var n = SY.f;
  if (n) {
    return AY(r, n(e));
  } else {
    return r;
  }
};
var sx = vs;
var CY = LY;
var wY = M0;
var OY = Kl;
function IY(t, e, r) {
  for (var n = CY(e), i = OY.f, s = wY.f, o = 0; o < n.length; o++) {
    var f = n[o];
    if (!sx(t, f) && (!r || !sx(r, f))) {
      i(t, f, s(e, f));
    }
  }
}
var NY = on;
var PY = qr;
var UY = /#|\.prototype\./;
function kl(t, e) {
  var r = BY[DY(t)];
  if (r === $Y) {
    return true;
  } else if (r === MY) {
    return false;
  } else if (PY(e)) {
    return NY(e);
  } else {
    return !!e;
  }
}
var DY = kl.normalize = function (t) {
  return String(t).replace(UY, ".").toLowerCase();
};
var BY = kl.data = {};
var MY = kl.NATIVE = "N";
var $Y = kl.POLYFILL = "P";
var KY = kl;
var qu = zr;
var kY = M0.f;
var GY = H0;
var VY = d1;
var FY = G0;
var HY = IY;
var WY = KY;
function _1(t, e) {
  var r = t.target;
  var n = t.global;
  var i = t.stat;
  var s;
  var o;
  var f;
  var c;
  var p;
  var d;
  if (n) {
    o = qu;
  } else if (i) {
    o = qu[r] || FY(r, {});
  } else {
    o = qu[r] && qu[r].prototype;
  }
  if (o) {
    for (f in e) {
      p = e[f];
      if (t.dontCallGetSet) {
        d = kY(o, f);
        c = d && d.value;
      } else {
        c = o[f];
      }
      s = WY(n ? f : r + (i ? "." : "#") + f, t.forced);
      if (!s && c !== undefined) {
        if (typeof p == typeof c) {
          continue;
        }
        HY(p, c);
      }
      if (t.sham || c && c.sham) {
        GY(p, "sham", true);
      }
      VY(o, f, p, t);
    }
  }
}
var XY = Ro;
var jY = Uc;
var zY = ra;
var qY = zY("match");
function YY(t) {
  var e;
  return XY(t) && ((e = t[qY]) !== undefined ? !!e : jY(t) === "RegExp");
}
var JY = ra;
var ZY = JY("toStringTag");
var T1 = {
  [ZY]: "z"
};
var QY = String(T1) === "[object z]";
var eJ = QY;
var tJ = qr;
var hf = Uc;
var rJ = ra;
var nJ = rJ("toStringTag");
var iJ = Object;
var sJ = hf(function () {
  return arguments;
}()) === "Arguments";
function aJ(t, e) {
  try {
    return t[e];
  } catch {}
}
var oJ = eJ ? hf : function (t) {
  var e;
  var r;
  var n;
  if (t === undefined) {
    return "Undefined";
  } else if (t === null) {
    return "Null";
  } else if (typeof (r = aJ(e = iJ(t), nJ)) == "string") {
    return r;
  } else if (sJ) {
    return hf(e);
  } else if ((n = hf(e)) === "Object" && tJ(e.callee)) {
    return "Arguments";
  } else {
    return n;
  }
};
var lJ = oJ;
var uJ = String;
function $c(t) {
  if (lJ(t) === "Symbol") {
    throw new TypeError("Cannot convert a Symbol value to a string");
  }
  return uJ(t);
}
var fJ = na;
function v1() {
  var t = fJ(this);
  var e = "";
  if (t.hasIndices) {
    e += "d";
  }
  if (t.global) {
    e += "g";
  }
  if (t.ignoreCase) {
    e += "i";
  }
  if (t.multiline) {
    e += "m";
  }
  if (t.dotAll) {
    e += "s";
  }
  if (t.unicode) {
    e += "u";
  }
  if (t.unicodeSets) {
    e += "v";
  }
  if (t.sticky) {
    e += "y";
  }
  return e;
}
var cJ = Ii;
var pJ = vs;
var dJ = qA;
var hJ = v1;
var ax = RegExp.prototype;
function EJ(t) {
  var e = t.flags;
  if (e === undefined && !("flags" in ax) && !pJ(t, "flags") && dJ(ax, t)) {
    return cJ(hJ, t);
  } else {
    return e;
  }
}
var q0 = Kr;
var mJ = t1;
var gJ = Math.floor;
var Qd = q0("".charAt);
var _J = q0("".replace);
var eh = q0("".slice);
var TJ = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
var vJ = /\$([$&'`]|\d{1,2})/g;
function b1(t, e, r, n, i, s) {
  var o = r + t.length;
  var f = n.length;
  var c = vJ;
  if (i !== undefined) {
    i = mJ(i);
    c = TJ;
  }
  return _J(s, c, function (p, d) {
    var E;
    switch (Qd(d, 0)) {
      case "$":
        return "$";
      case "&":
        return t;
      case "`":
        return eh(e, 0, r);
      case "'":
        return eh(e, o);
      case "<":
        E = i[eh(d, 1, -1)];
        break;
      default:
        var m = +d;
        if (m === 0) {
          return p;
        }
        if (m > f) {
          var g = gJ(m / 10);
          if (g === 0) {
            return p;
          } else if (g <= f) {
            if (n[g - 1] === undefined) {
              return Qd(d, 1);
            } else {
              return n[g - 1] + Qd(d, 1);
            }
          } else {
            return p;
          }
        }
        E = n[m - 1];
    }
    if (E === undefined) {
      return "";
    } else {
      return E;
    }
  });
}
var bJ = _1;
var xJ = Ii;
var Y0 = Kr;
var ox = $l;
var RJ = qr;
var SJ = Dc;
var yJ = YY;
var Xo = $c;
var AJ = k0;
var LJ = EJ;
var CJ = b1;
var wJ = ra;
var OJ = wJ("replace");
var IJ = TypeError;
var th = Y0("".indexOf);
Y0("".replace);
var lx = Y0("".slice);
var NJ = Math.max;
bJ({
  target: "String",
  proto: true
}, {
  replaceAll: function (e, r) {
    var n = ox(this);
    var i;
    var s;
    var o;
    var f;
    var c;
    var p;
    var d;
    var E;
    var m;
    var g = 0;
    var T = 0;
    var b = "";
    if (!SJ(e)) {
      i = yJ(e);
      if (i && (s = Xo(ox(LJ(e))), !~th(s, "g"))) {
        throw new IJ("`.replaceAll` does not allow non-global regexes");
      }
      o = AJ(e, OJ);
      if (o) {
        return xJ(o, e, n, r);
      }
    }
    f = Xo(n);
    c = Xo(e);
    p = RJ(r);
    if (!p) {
      r = Xo(r);
    }
    d = c.length;
    E = NJ(1, d);
    g = th(f, c);
    while (g !== -1) {
      m = p ? Xo(r(c, g, f)) : CJ(c, f, g, [], undefined, r);
      b += lx(f, T, g) + m;
      T = g + d;
      g = g + E > f.length ? -1 : th(f, c, g + E);
    }
    if (T < f.length) {
      b += lx(f, T);
    }
    return b;
  }
});
var J0 = on;
var PJ = zr;
var Z0 = PJ.RegExp;
var Q0 = J0(function () {
  var t = Z0("a", "y");
  t.lastIndex = 2;
  return t.exec("abcd") !== null;
});
var UJ = Q0 || J0(function () {
  return !Z0("a", "y").sticky;
});
var DJ = Q0 || J0(function () {
  var t = Z0("^r", "gy");
  t.lastIndex = 2;
  return t.exec("str") !== null;
});
var BJ = {
  BROKEN_CARET: DJ,
  MISSED_STICKY: UJ,
  UNSUPPORTED_Y: Q0
};
var x1 = {};
var MJ = m1;
var $J = z0;
var KJ = Object.keys || function (e) {
  return MJ(e, $J);
};
var kJ = Ts;
var GJ = a1;
var VJ = Kl;
var FJ = na;
var HJ = Bc;
var WJ = KJ;
x1.f = kJ && !GJ ? Object.defineProperties : function (e, r) {
  FJ(e);
  var n = HJ(r);
  var i = WJ(r);
  for (var s = i.length, o = 0, f; s > o;) {
    VJ.f(e, f = i[o++], n[f]);
  }
  return e;
};
var XJ = K0;
var jJ = XJ("document", "documentElement");
var zJ = na;
var qJ = x1;
var ux = z0;
var YJ = X0;
var JJ = jJ;
var ZJ = i1;
var QJ = u1;
var fx = ">";
var cx = "<";
var tE = "prototype";
var rE = "script";
var R1 = QJ("IE_PROTO");
function rh() {}
function S1(t) {
  return cx + rE + fx + t + cx + "/" + rE + fx;
}
function px(t) {
  t.write(S1(""));
  t.close();
  var e = t.parentWindow.Object;
  t = null;
  return e;
}
function eZ() {
  var t = ZJ("iframe");
  var e = "java" + rE + ":";
  var r;
  t.style.display = "none";
  JJ.appendChild(t);
  t.src = String(e);
  r = t.contentWindow.document;
  r.open();
  r.write(S1("document.F=Object"));
  r.close();
  return r.F;
}
var Yu;
function Ef() {
  try {
    Yu = new ActiveXObject("htmlfile");
  } catch {}
  Ef = typeof document !== "undefined" ? document.domain && Yu ? px(Yu) : eZ() : px(Yu);
  for (var t = ux.length; t--;) {
    delete Ef[tE][ux[t]];
  }
  return Ef();
}
YJ[R1] = true;
var tZ = Object.create || function (e, r) {
  var n;
  if (e !== null) {
    rh[tE] = zJ(e);
    n = new rh();
    rh[tE] = null;
    n[R1] = e;
  } else {
    n = Ef();
  }
  if (r === undefined) {
    return n;
  } else {
    return qJ.f(n, r);
  }
};
var rZ = on;
var nZ = zr;
var iZ = nZ.RegExp;
var sZ = rZ(function () {
  var t = iZ(".", "s");
  return !t.dotAll || !t.test(`
`) || t.flags !== "s";
});
var aZ = on;
var oZ = zr;
var lZ = oZ.RegExp;
var uZ = aZ(function () {
  var t = lZ("(?<a>b)", "g");
  return t.exec("b").groups.a !== "b" || "b".replace(t, "$<a>c") !== "bc";
});
var Na = Ii;
var Kc = Kr;
var fZ = $c;
var cZ = v1;
var pZ = BJ;
var dZ = F0;
var hZ = tZ;
var EZ = c1.get;
var mZ = sZ;
var gZ = uZ;
var _Z = dZ("native-string-replace", String.prototype.replace);
var zf = RegExp.prototype.exec;
var nE = zf;
var TZ = Kc("".charAt);
var vZ = Kc("".indexOf);
var bZ = Kc("".replace);
var nh = Kc("".slice);
var iE = function () {
  var t = /a/;
  var e = /b*/g;
  Na(zf, t, "a");
  Na(zf, e, "a");
  return t.lastIndex !== 0 || e.lastIndex !== 0;
}();
var y1 = pZ.BROKEN_CARET;
var sE = /()??/.exec("")[1] !== undefined;
var xZ = iE || sE || y1 || mZ || gZ;
if (xZ) {
  nE = function (e) {
    var r = this;
    var n = EZ(r);
    var i = fZ(e);
    var s = n.raw;
    var o;
    var f;
    var c;
    var p;
    var d;
    var E;
    var m;
    if (s) {
      s.lastIndex = r.lastIndex;
      o = Na(nE, s, i);
      r.lastIndex = s.lastIndex;
      return o;
    }
    var g = n.groups;
    var T = y1 && r.sticky;
    var b = Na(cZ, r);
    var x = r.source;
    var A = 0;
    var R = i;
    if (T) {
      b = bZ(b, "y", "");
      if (vZ(b, "g") === -1) {
        b += "g";
      }
      R = nh(i, r.lastIndex);
      if (r.lastIndex > 0 && (!r.multiline || r.multiline && TZ(i, r.lastIndex - 1) !== `
`)) {
        x = "(?: " + x + ")";
        R = " " + R;
        A++;
      }
      f = new RegExp("^(?:" + x + ")", b);
    }
    if (sE) {
      f = new RegExp("^" + x + "$(?!\\s)", b);
    }
    if (iE) {
      c = r.lastIndex;
    }
    p = Na(zf, T ? f : r, R);
    if (T) {
      if (p) {
        p.input = nh(p.input, A);
        p[0] = nh(p[0], A);
        p.index = r.lastIndex;
        r.lastIndex += p[0].length;
      } else {
        r.lastIndex = 0;
      }
    } else if (iE && p) {
      r.lastIndex = r.global ? p.index + p[0].length : c;
    }
    if (sE && p && p.length > 1) {
      Na(_Z, p[0], f, function () {
        for (d = 1; d < arguments.length - 2; d++) {
          if (arguments[d] === undefined) {
            p[d] = undefined;
          }
        }
      });
    }
    if (p && g) {
      p.groups = E = hZ(null);
      d = 0;
      for (; d < g.length; d++) {
        m = g[d];
        E[m[0]] = p[m[1]];
      }
    }
    return p;
  };
}
var em = nE;
var RZ = _1;
var dx = em;
RZ({
  target: "RegExp",
  proto: true,
  forced: /./.exec !== dx
}, {
  exec: dx
});
var SZ = $0;
var A1 = Function.prototype;
var hx = A1.apply;
var Ex = A1.call;
var yZ = typeof Reflect == "object" && Reflect.apply || (SZ ? Ex.bind(hx) : function () {
  return Ex.apply(hx, arguments);
});
var mx = Ii;
var gx = d1;
var AZ = em;
var _x = on;
var L1 = ra;
var LZ = H0;
var CZ = L1("species");
var ih = RegExp.prototype;
function wZ(t, e, r, n) {
  var i = L1(t);
  var s = !_x(function () {
    var p = {
      [i]: function () {
        return 7;
      }
    };
    return ""[t](p) !== 7;
  });
  var o = s && !_x(function () {
    var p = false;
    var d = /a/;
    if (t === "split") {
      d = {};
      d.constructor = {};
      d.constructor[CZ] = function () {
        return d;
      };
      d.flags = "";
      d[i] = /./[i];
    }
    d.exec = function () {
      p = true;
      return null;
    };
    d[i]("");
    return !p;
  });
  if (!s || !o || r) {
    var f = /./[i];
    var c = e(i, ""[t], function (p, d, E, m, g) {
      var T = d.exec;
      if (T === AZ || T === ih.exec) {
        if (s && !g) {
          return {
            done: true,
            value: mx(f, d, E, m)
          };
        } else {
          return {
            done: true,
            value: mx(p, E, d, m)
          };
        }
      } else {
        return {
          done: false
        };
      }
    });
    gx(String.prototype, t, c[0]);
    gx(ih, i, c[1]);
  }
  if (n) {
    LZ(ih[i], "sham", true);
  }
}
var tm = Kr;
var OZ = Mc;
var IZ = $c;
var NZ = $l;
var PZ = tm("".charAt);
var Tx = tm("".charCodeAt);
var UZ = tm("".slice);
function vx(t) {
  return function (e, r) {
    var n = IZ(NZ(e));
    var i = OZ(r);
    var s = n.length;
    var o;
    var f;
    if (i < 0 || i >= s) {
      if (t) {
        return "";
      } else {
        return undefined;
      }
    } else {
      o = Tx(n, i);
      if (o < 55296 || o > 56319 || i + 1 === s || (f = Tx(n, i + 1)) < 56320 || f > 57343) {
        if (t) {
          return PZ(n, i);
        } else {
          return o;
        }
      } else if (t) {
        return UZ(n, i, i + 2);
      } else {
        return (o - 55296 << 10) + (f - 56320) + 65536;
      }
    }
  };
}
var DZ = {
  codeAt: vx(false),
  charAt: vx(true)
};
var BZ = DZ.charAt;
function MZ(t, e, r) {
  return e + (r ? BZ(t, e).length : 1);
}
var bx = Ii;
var $Z = na;
var KZ = qr;
var kZ = Uc;
var GZ = em;
var VZ = TypeError;
function FZ(t, e) {
  var r = t.exec;
  if (KZ(r)) {
    var n = bx(r, t, e);
    if (n !== null) {
      $Z(n);
    }
    return n;
  }
  if (kZ(t) === "RegExp") {
    return bx(GZ, t, e);
  }
  throw new VZ("RegExp#exec called on incompatible receiver");
}
var HZ = yZ;
var xx = Ii;
var kc = Kr;
var WZ = wZ;
var XZ = on;
var jZ = na;
var zZ = qr;
var qZ = Dc;
var YZ = Mc;
var JZ = E1;
var xa = $c;
var ZZ = $l;
var QZ = MZ;
var eQ = k0;
var tQ = b1;
var rQ = FZ;
var nQ = ra;
var aE = nQ("replace");
var iQ = Math.max;
var sQ = Math.min;
var aQ = kc([].concat);
var sh = kc([].push);
var Rx = kc("".indexOf);
var Sx = kc("".slice);
function oQ(t) {
  if (t === undefined) {
    return t;
  } else {
    return String(t);
  }
}
var lQ = function () {
  return "a".replace(/./, "$0") === "$0";
}();
var yx = function () {
  if (/./[aE]) {
    return /./[aE]("a", "$0") === "";
  } else {
    return false;
  }
}();
var uQ = !XZ(function () {
  var t = /./;
  t.exec = function () {
    var e = [];
    e.groups = {
      a: "7"
    };
    return e;
  };
  return "".replace(t, "$<a>") !== "7";
});
WZ("replace", function (t, e, r) {
  var n = yx ? "$" : "$0";
  return [function (s, o) {
    var f = ZZ(this);
    var c = qZ(s) ? undefined : eQ(s, aE);
    if (c) {
      return xx(c, s, f, o);
    } else {
      return xx(e, xa(f), s, o);
    }
  }, function (i, s) {
    var o = jZ(this);
    var f = xa(i);
    if (typeof s == "string" && Rx(s, n) === -1 && Rx(s, "$<") === -1) {
      var c = r(e, o, f, s);
      if (c.done) {
        return c.value;
      }
    }
    var p = zZ(s);
    if (!p) {
      s = xa(s);
    }
    var d = o.global;
    var E;
    if (d) {
      E = o.unicode;
      o.lastIndex = 0;
    }
    for (var m = [], g; g = rQ(o, f), g !== null && !(sh(m, g), !d);) {
      var T = xa(g[0]);
      if (T === "") {
        o.lastIndex = QZ(f, JZ(o.lastIndex), E);
      }
    }
    var b = "";
    var x = 0;
    for (var A = 0; A < m.length; A++) {
      g = m[A];
      var R = xa(g[0]);
      var v = iQ(sQ(YZ(g.index), f.length), 0);
      var y = [];
      var U;
      for (var P = 1; P < g.length; P++) {
        sh(y, oQ(g[P]));
      }
      var M = g.groups;
      if (p) {
        var X = aQ([R], y, v, f);
        if (M !== undefined) {
          sh(X, M);
        }
        U = xa(HZ(s, undefined, X));
      } else {
        U = tQ(R, f, v, y, M, s);
      }
      if (v >= x) {
        b += Sx(f, x, v) + U;
        x = v + R.length;
      }
    }
    return b + Sx(f, x);
  }];
}, !uQ || !lQ || yx);
var fQ = zr;
var cQ = Kr;
function pQ(t, e) {
  return cQ(fQ[t].prototype[e]);
}
var dQ = pQ;
dQ("String", "replaceAll");
var Ti = {};
var Gc = {};
var C1 = {};
var Vc = {};
var rm = {};
(function (t) {
  Object.defineProperty(t, "__esModule", {
    value: true
  });
  t.Token = undefined;
  var e = function () {
    function r(n, i, s, o) {
      this.type = n;
      this.content = i;
      this.attributes = s;
      this.text = o;
    }
    r.prototype.toString = function () {
      return this.content + " (" + this.type + ")";
    };
    r.prototype.equals = function (n) {
      return this.type === n.type && this.content === n.content;
    };
    r.prototype.convertToTextToken = function () {
      if (this.type === r.Type.startTag) {
        this.content = this.text ?? "";
        this.type = r.Type.text;
      } else if (this.type === r.Type.endTag) {
        this.content = "[/" + this.content + "]";
        this.type = r.Type.text;
      }
    };
    return r;
  }();
  t.Token = e;
  (function (r) {
    (function (n) {
      n[n.text = 0] = "text";
      n[n.startTag = 1] = "startTag";
      n[n.endTag = 2] = "endTag";
    })(r.Type ||= {});
  })(e = t.Token ||= {});
  t.Token = e;
})(rm);
Object.defineProperty(Vc, "__esModule", {
  value: true
});
Vc.Tokenizer = undefined;
var Hi = rm;
var hQ = function () {
  function t(e) {
    this.tags = e;
  }
  t.prototype.tokenizeString = function (e) {
    var r = this;
    var n = this.getTokens(e);
    var i = [];
    var s = false;
    var o = "";
    var f = "";
    n.forEach(function (c) {
      var p = r.tags[c.content];
      var d = true;
      if (!p && !s) {
        c.convertToTextToken();
      } else if (s) {
        if (c.type === Hi.Token.Type.endTag && c.content === o) {
          s = false;
          i.push(t.createTextToken(f));
        } else {
          c.convertToTextToken();
          f += c.content;
          d = false;
        }
      } else if (p.noNesting && c.type === Hi.Token.Type.startTag) {
        s = true;
        o = c.content;
        f = "";
      }
      if (d) {
        i.push(c);
      }
    });
    return i;
  };
  t.prototype.getTokens = function (e) {
    var r = "\\[(/\\w*)\\]|\\[(\\w*)+(=([\"])" + t.valueChars + "*\\4)?( (" + t.nameChars + "+)?=([\"])(" + t.valueChars + "+)\\7)*\\]";
    var n = new RegExp(r, "g");
    var i = [];
    for (var s = n.exec(e), o = 0; s;) {
      var f = s.index - o;
      if (f > 0) {
        i.push(t.createTextToken(e.substr(o, f)));
      }
      i.push(t.createTagToken(s));
      o = n.lastIndex;
      s = n.exec(e);
    }
    var c = e.length - o;
    if (c > 0) {
      i.push(t.createTextToken(e.substr(o, c)));
    }
    return i;
  };
  t.createTextToken = function (e) {
    return new Hi.Token(Hi.Token.Type.text, e);
  };
  t.createTagToken = function (e) {
    if (!e[1]) {
      var r = e[2];
      var n = {};
      var i = new RegExp("(" + t.nameChars + "+)?=([\"])(" + t.valueChars + "+)\\2", "g");
      var s = e[0].substr(1 + r.length, e[0].length - 2 - r.length);
      for (var o = i.exec(s); o;) {
        if (o[1]) {
          n[o[1]] = o[3];
        } else {
          n[r] = o[3];
        }
        o = i.exec(s);
      }
      return new Hi.Token(Hi.Token.Type.startTag, r, n, e[0]);
    }
    return new Hi.Token(Hi.Token.Type.endTag, e[1].substr(1, e[1].length - 1));
  };
  t.nameChars = "[a-zA-Z0-9\\.\\-_:;/]";
  t.valueChars = "[a-zA-Z0-9\\.\\-_:;#/\\s]";
  return t;
}();
Vc.Tokenizer = hQ;
(function (t) {
  Object.defineProperty(t, "__esModule", {
    value: true
  });
  t.ParseTree = undefined;
  var e = Vc;
  var r = rm;
  var n = function () {
    function i(s) {
      this.subTrees = [];
      this.type = s.type;
      this.content = s.content;
      if (s.attributes) {
        this.attributes = s.attributes;
      }
      if (s.subTrees) {
        this.subTrees = s.subTrees;
      }
    }
    Object.defineProperty(i.prototype, "isValid", {
      get: function () {
        if (this.subTrees.length) {
          return this.subTrees.every(function (s) {
            return s.isValid;
          });
        } else {
          return true;
        }
      },
      enumerable: false,
      configurable: true
    });
    i.prototype.toString = function () {
      return this.type + " - " + this.content;
    };
    i.buildTree = function (s, o) {
      var f = new e.Tokenizer(o);
      var c = f.tokenizeString(s);
      var p = new i({
        type: i.Type.root,
        content: s
      });
      return this.buildTreeFromTokens(p, c.reverse());
    };
    i.buildTreeFromTokens = function (s, o, f = "") {
      if (!s) {
        return null;
      }
      if (!o.length) {
        return s;
      }
      var c = o.pop();
      if (!c) {
        return null;
      }
      if (c.type === r.Token.Type.text) {
        var p = new i({
          type: i.Type.text,
          content: c.content
        });
        s.subTrees.push(p);
      }
      if (c.type === r.Token.Type.startTag) {
        var d = c.content;
        var p = new i({
          type: i.Type.tag,
          content: d,
          attributes: c.attributes
        });
        var E = i.buildTreeFromTokens(p, o, d);
        if (!E) {
          return null;
        }
        s.subTrees.push(E);
      }
      if (c.type === r.Token.Type.endTag) {
        var d = c.content;
        if (d === f) {
          return s;
        } else {
          return null;
        }
      }
      if (!o.length && f !== "") {
        return null;
      } else {
        return this.buildTreeFromTokens(s, o, f);
      }
    };
    return i;
  }();
  t.ParseTree = n;
  (function (i) {
    (function (s) {
      s[s.root = 0] = "root";
      s[s.text = 1] = "text";
      s[s.tag = 2] = "tag";
    })(i.Type ||= {});
  })(n = t.ParseTree ||= {});
  t.ParseTree = n;
})(C1);
var Gl = {};
Object.defineProperty(Gl, "__esModule", {
  value: true
});
Gl.Tag = undefined;
var EQ = function () {
  function t(e) {
    this.tagName = e.tagName;
    this.insertLineBreaks = e.insertLineBreaks;
    this.suppressLineBreaks = e.suppressLineBreaks;
    this.noNesting = e.noNesting;
    this.markupGenerator = e.markupGenerator ?? function (n, i) {
      return "<" + n.tagName + ">" + i + "</" + n.tagName + ">";
    };
  }
  t.create = function (e, r, n) {
    if (n === undefined) {
      n = {};
    }
    return new t({
      tagName: e,
      insertLineBreaks: n.insertLineBreaks ?? true,
      suppressLineBreaks: n.suppressLineBreaks ?? false,
      noNesting: n.noNesting ?? false,
      markupGenerator: r
    });
  };
  return t;
}();
Gl.Tag = EQ;
Object.defineProperty(Gc, "__esModule", {
  value: true
});
Gc.BBCodeParser = undefined;
var Ax = C1;
var Lx = Gl;
var mQ = function () {
  function t(e, r) {
    this.options = r;
    this.escapeHTML = false;
    this.tags = e;
    if (r) {
      this.escapeHTML = r.escapeHTML;
    }
  }
  Object.defineProperty(t, "defaultTags", {
    get: function () {
      return {
        b: Lx.Tag.create("b"),
        i: Lx.Tag.create("i")
      };
    },
    enumerable: false,
    configurable: true
  });
  t.prototype.parse = function (e, r = false, n = true, i = true) {
    var s = Ax.ParseTree.buildTree(e, this.tags);
    if (!s || !s.isValid) {
      return e;
    } else {
      return this.treeToHtml(s.subTrees, n, i, r);
    }
  };
  t.prototype.addTag = function (e, r) {
    this.tags[e] = r;
  };
  t.prototype.treeToHtml = function (e, r, n, i) {
    var s = this;
    if (i === undefined) {
      i = false;
    }
    var o = "";
    var f = false;
    e.forEach(function (c) {
      if (c.type === Ax.ParseTree.Type.text) {
        var d = c.content;
        if (n) {
          d = s.escapeHTML ? t.escapeHTML(d) : d;
        }
        if (r && !f) {
          d = d.replace(/(\r\n|\n|\r)/gm, "<br>");
          f = false;
        }
        o += d;
      } else {
        var E = s.tags[c.content];
        var m = s.treeToHtml(c.subTrees, E.insertLineBreaks, n, i);
        if (i) {
          o += m;
        } else {
          o += E.markupGenerator(E, m, c.attributes ?? {});
        }
        f = E.suppressLineBreaks;
      }
    });
    return o;
  };
  t.escapeHTML = function (e) {
    return e.replace(/[&<>]/g, function (r) {
      return t.tagsToReplace[r] || r;
    });
  };
  t.tagsToReplace = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;"
  };
  return t;
}();
Gc.BBCodeParser = mQ;
(function (t) {
  Object.defineProperty(t, "__esModule", {
    value: true
  });
  t.Tag = t.BBCodeParser = undefined;
  var e = Gc;
  Object.defineProperty(t, "BBCodeParser", {
    enumerable: true,
    get: function () {
      return e.BBCodeParser;
    }
  });
  var r = Gl;
  Object.defineProperty(t, "Tag", {
    enumerable: true,
    get: function () {
      return r.Tag;
    }
  });
})(Ti);
const gQ = {
  install: t => {
    const e = {
      section: Ti.Tag.create("section", (s, o, {
        section: f
      }) => `<div ${f ? `class="section ${f}"` : "class=\"section\""}>${o}</div>`)
    };
    ["b", "bold", "B"].forEach(s => {
      e[s] = Ti.Tag.create(s, (o, f) => `<strong>${f}</strong>`);
    });
    ["i", "italic", "I"].forEach(s => {
      e[s] = Ti.Tag.create(s, (o, f) => `<em>${f}</em>`);
    });
    e.tos = Ti.Tag.create("tos", (s, o) => `<a class="tosLink" href="https://jackboxgames.com/terms-of-service/" target="_blank">${o}</a>`);
    e.pp = Ti.Tag.create("pp", (s, o) => `<a class="ppLink" href="https://jackboxgames.com/privacy-policy/" target="_blank">${o}</a>`);
    const i = new Ti.BBCodeParser(e);
    t.directive("bb", {
      mounted(s, o) {
        const f = document.createElement("div");
        f.textContent = o.value;
        s.innerHTML = i.parse(f.innerHTML);
      },
      updated(s, o) {
        const f = document.createElement("div");
        f.textContent = o.value;
        s.innerHTML = i.parse(f.innerHTML);
      }
    });
    t.mixin({
      beforeCreate() {
        if (this.$options.bb) {
          Object.keys(this.$options.bb).forEach(s => {
            const o = this.$options.bb[s];
            if (o instanceof Function) {
              i.addTag(s, Ti.Tag.create(s, o));
              return;
            }
            i.addTag(s, Ti.Tag.create(s, o.generator, o.options));
          });
        }
      }
    });
    t.config.globalProperties.$bb = s => {
      if (typeof s != "string") {
        console.warn(`[BBCodePlugin] Received unexpected ${typeof s} with value ${s};converting to string before parsing.`);
      }
      return i.parse(String(s));
    };
  }
}; /*!
   * CookieConsent 3.0.1
   * https://github.com/orestbida/cookieconsent
   * Author Orest Bida
   * Released under the MIT License
   */
const w1 = "opt-in";
const Yo = "opt-out";
const nm = "show--consent";
const im = "show--preferences";
const oE = "disable--interaction";
const qf = "data-category";
const Tt = "div";
const In = "button";
const Nn = "aria-hidden";
const ul = "btn-group";
const yr = "click";
const Wa = "data-role";
const sm = "consentModal";
const am = "preferencesModal";
class O1 {
  constructor() {
    this.t = {
      mode: w1,
      revision: 0,
      autoShow: true,
      lazyHtmlGeneration: true,
      autoClearCookies: true,
      manageScriptTags: true,
      hideFromBots: true,
      cookie: {
        name: "cc_cookie",
        expiresAfterDays: 182,
        domain: "",
        path: "/",
        sameSite: "Lax"
      }
    };
    this.o = {
      i: {},
      l: "",
      _: {},
      u: {},
      p: {},
      m: [],
      v: false,
      h: null,
      C: null,
      S: null,
      M: "",
      D: true,
      T: false,
      k: false,
      A: false,
      N: false,
      H: [],
      V: false,
      I: true,
      L: [],
      j: false,
      F: "",
      P: false,
      O: [],
      R: [],
      B: [],
      G: [],
      J: false,
      U: false,
      $: false,
      q: [],
      K: [],
      W: [],
      X: {},
      Y: {},
      Z: {},
      ee: {},
      te: {},
      oe: []
    };
    this.ne = {
      ae: {},
      se: {}
    };
    this.ce = {};
    this.re = {
      ie: "cc:onFirstConsent",
      le: "cc:onConsent",
      de: "cc:onChange",
      fe: "cc:onModalShow",
      _e: "cc:onModalHide",
      ue: "cc:onModalReady"
    };
  }
}
const de = new O1();
const I1 = (t, e) => t.indexOf(e);
const bt = (t, e) => I1(t, e) !== -1;
const So = t => Array.isArray(t);
const Ci = t => typeof t == "string";
const Yf = t => !!t && typeof t == "object" && !So(t);
const zn = t => typeof t == "function";
const Zn = t => Object.keys(t);
const om = t => Array.from(new Set(t));
const Jf = () => document.activeElement;
const Pa = t => t.preventDefault();
const lm = (t, e) => t.querySelectorAll(e);
const Ju = t => t.dispatchEvent(new Event("change"));
const De = t => {
  const e = document.createElement(t);
  if (t === In) {
    e.type = t;
  }
  return e;
};
const Je = (t, e, r) => t.setAttribute(e, r);
const ah = (t, e, r) => {
  t.removeAttribute(r ? "data-" + e : e);
};
const mf = (t, e, r) => t.getAttribute(r ? "data-" + e : e);
const Pe = (t, e) => t.appendChild(e);
const Bt = (t, e) => t.classList.add(e);
const Ur = (t, e) => Bt(t, "cm__" + e);
const gt = (t, e) => Bt(t, "pm__" + e);
const as = (t, e) => t.classList.remove(e);
const xi = t => {
  if (typeof t != "object") {
    return t;
  }
  if (t instanceof Date) {
    return new Date(t.getTime());
  }
  let e = Array.isArray(t) ? [] : {};
  for (let r in t) {
    let n = t[r];
    e[r] = xi(n);
  }
  return e;
};
const _Q = () => {
  const t = {};
  const {
    O: e,
    X: r,
    Y: n
  } = de.o;
  for (const i of e) {
    t[i] = gf(n[i], Zn(r[i]));
  }
  return t;
};
const Cx = (t, e) => dispatchEvent(new CustomEvent(t, {
  detail: e
}));
const Yt = (t, e, r, n) => {
  t.addEventListener(e, r);
  if (n) {
    de.o.m.push({
      pe: t,
      me: e,
      ge: r
    });
  }
};
const wx = () => {
  const t = de.t.cookie.expiresAfterDays;
  if (zn(t)) {
    return t(de.o.F);
  } else {
    return t;
  }
};
const gf = (t, e) => {
  const r = t || [];
  const n = e || [];
  return r.filter(i => !bt(n, i)).concat(n.filter(i => !bt(r, i)));
};
const N1 = t => {
  de.o.R = om(t);
  de.o.F = (() => {
    let e = "custom";
    const {
      R: r,
      O: n,
      B: i
    } = de.o;
    const s = r.length;
    if (s === n.length) {
      e = "all";
    } else if (s === i.length) {
      e = "necessary";
    }
    return e;
  })();
};
const P1 = (t, e, r, n) => {
  const i = "accept-";
  const {
    show: s,
    showPreferences: o,
    hide: f,
    hidePreferences: c,
    acceptCategory: p
  } = e;
  const d = t || document;
  const E = v => lm(d, `[data-cc="${v}"]`);
  const m = (v, y) => {
    Pa(v);
    p(y);
    c();
    f();
  };
  const g = E("show-preferencesModal");
  const T = E("show-consentModal");
  const b = E(i + "all");
  const x = E(i + "necessary");
  const A = E(i + "custom");
  const R = de.t.lazyHtmlGeneration;
  for (const v of g) {
    Je(v, "aria-haspopup", "dialog");
    Yt(v, yr, y => {
      Pa(y);
      o();
    });
    if (R) {
      Yt(v, "mouseenter", y => {
        Pa(y);
        if (!de.o.N) {
          r(e, n);
        }
      }, true);
      Yt(v, "focus", () => {
        if (!de.o.N) {
          r(e, n);
        }
      });
    }
  }
  for (let v of T) {
    Je(v, "aria-haspopup", "dialog");
    Yt(v, yr, y => {
      Pa(y);
      s(true);
    }, true);
  }
  for (let v of b) {
    Yt(v, yr, y => {
      m(y, "all");
    }, true);
  }
  for (let v of A) {
    Yt(v, yr, y => {
      m(y);
    }, true);
  }
  for (let v of x) {
    Yt(v, yr, y => {
      m(y, []);
    }, true);
  }
};
const Qn = (t, e) => {
  if (t) {
    if (e) {
      t.tabIndex = -1;
    }
    t.focus();
    if (e) {
      t.removeAttribute("tabindex");
    }
  }
};
const U1 = (t, e) => {
  const r = n => {
    n.target.removeEventListener("transitionend", r);
    if (n.propertyName === "opacity" && getComputedStyle(t).opacity === "1") {
      Qn((i => i === 1 ? de.ne.be : de.ne.ve)(e));
    }
  };
  Yt(t, "transitionend", r);
};
let Ox;
const D1 = t => {
  clearTimeout(Ox);
  if (t) {
    Bt(de.ne.ye, oE);
  } else {
    Ox = setTimeout(() => {
      as(de.ne.ye, oE);
    }, 500);
  }
};
const TQ = ["M 19.5 4.5 L 4.5 19.5 M 4.5 4.501 L 19.5 19.5", "M 3.572 13.406 L 8.281 18.115 L 20.428 5.885", "M 21.999 6.94 L 11.639 17.18 L 2.001 6.82 "];
const Rl = (t = 0, e = 1.5) => `<svg viewBox="0 0 24 24" stroke-width="${e}"><path d="${TQ[t]}"/></svg>`;
const B1 = t => {
  const e = de.ne;
  const r = de.o;
  (n => {
    const i = n === e.he;
    const s = r.i.disablePageInteraction ? e.ye : i ? e.Ce : e.ye;
    Yt(s, "keydown", o => {
      if (o.key !== "Tab" || !(i ? r.k && !r.A : r.A)) {
        return;
      }
      const f = Jf();
      const c = i ? r.q : r.K;
      if (c.length !== 0) {
        if (o.shiftKey) {
          if (f === c[0] || !n.contains(f)) {
            Pa(o);
            Qn(c[1]);
          }
        } else if (f === c[1] || !n.contains(f)) {
          Pa(o);
          Qn(c[0]);
        }
      }
    }, true);
  })(t);
};
const vQ = ["[href]", In, "input", "details", "[tabindex]"].map(t => t + ":not([tabindex=\"-1\"])").join(",");
const M1 = t => {
  const {
    o: e,
    ne: r
  } = de;
  const n = (i, s) => {
    const o = lm(i, vQ);
    s[0] = o[0];
    s[1] = o[o.length - 1];
  };
  if (t === 1 && e.T) {
    n(r.he, e.q);
  }
  if (t === 2 && e.N) {
    n(r.we, e.K);
  }
};
const ei = (t, e, r) => {
  const {
    de: n,
    le: i,
    ie: s,
    _e: o,
    ue: f,
    fe: c
  } = de.ce;
  const p = de.re;
  if (e) {
    const E = {
      modalName: e
    };
    if (t === p.fe) {
      if (zn(c)) {
        c(E);
      }
    } else if (t === p._e) {
      if (zn(o)) {
        o(E);
      }
    } else {
      E.modal = r;
      if (zn(f)) {
        f(E);
      }
    }
    return Cx(t, E);
  }
  const d = {
    cookie: de.o.p
  };
  if (t === p.ie) {
    if (zn(s)) {
      s(xi(d));
    }
  } else if (t === p.le) {
    if (zn(i)) {
      i(xi(d));
    }
  } else {
    d.changedCategories = de.o.L;
    d.changedServices = de.o.ee;
    if (zn(n)) {
      n(xi(d));
    }
  }
  Cx(t, xi(d));
};
const Sl = (t, e) => {
  try {
    return t();
  } catch (r) {
    if (!e) {
      console.warn("CookieConsent:", r);
    }
    return false;
  }
};
const lE = t => {
  const {
    Y: e,
    ee: r,
    O: n,
    X: i,
    oe: s,
    p: o,
    L: f
  } = de.o;
  for (const E of n) {
    const m = r[E] || e[E] || [];
    for (const g of m) {
      const T = i[E][g];
      if (!T) {
        continue;
      }
      const {
        onAccept: b,
        onReject: x
      } = T;
      if (!T.Se && bt(e[E], g)) {
        T.Se = true;
        if (zn(b)) {
          b();
        }
      } else if (T.Se && !bt(e[E], g)) {
        T.Se = false;
        if (zn(x)) {
          x();
        }
      }
    }
  }
  if (!de.t.manageScriptTags) {
    return;
  }
  const c = s;
  const p = t || o.categories || [];
  const d = (E, m) => {
    if (m >= E.length) {
      return;
    }
    const g = s[m];
    if (g.xe) {
      return d(E, m + 1);
    }
    const T = g.Me;
    const b = g.De;
    const x = g.Te;
    const A = bt(p, b);
    const R = !!x && bt(e[b], x);
    if (!x && !g.ke && A || !x && g.ke && !A && bt(f, b) || x && !g.ke && R || x && g.ke && !R && bt(r[b] || [], x)) {
      g.xe = true;
      const v = mf(T, "type", true);
      ah(T, "type", !!v);
      ah(T, qf);
      let y = mf(T, "src", true);
      if (y) {
        ah(T, "src", true);
      }
      const U = De("script");
      U.textContent = T.innerHTML;
      for (const {
        nodeName: M
      } of T.attributes) {
        Je(U, M, T[M] || mf(T, M));
      }
      if (v) {
        U.type = v;
      }
      if (y) {
        U.src = y;
      } else {
        y = T.src;
      }
      const P = !!y && (!v || ["text/javascript", "module"].includes(v));
      if (P) {
        U.onload = U.onerror = () => {
          d(E, ++m);
        };
      }
      T.replaceWith(U);
      if (P) {
        return;
      }
    }
    d(E, ++m);
  };
  d(c, 0);
};
const _f = "bottom";
const uE = "left";
const $1 = "center";
const um = "right";
const oh = "inline";
const K1 = "wide";
const k1 = "pm--";
const lh = ["middle", "top", _f];
const Ix = [uE, $1, um];
const bQ = {
  box: {
    Ee: [K1, oh],
    Ae: lh,
    Ne: Ix,
    He: _f,
    Ve: um
  },
  cloud: {
    Ee: [oh],
    Ae: lh,
    Ne: Ix,
    He: _f,
    Ve: $1
  },
  bar: {
    Ee: [oh],
    Ae: lh.slice(1),
    Ne: [],
    He: _f,
    Ve: ""
  }
};
const xQ = {
  box: {
    Ee: [],
    Ae: [],
    Ne: [],
    He: "",
    Ve: ""
  },
  bar: {
    Ee: [K1],
    Ae: [],
    Ne: [uE, um],
    He: "",
    Ve: uE
  }
};
const G1 = t => {
  const e = de.o.i.guiOptions;
  const r = e && e.consentModal;
  const n = e && e.preferencesModal;
  if (t === 0) {
    Nx(de.ne.he, bQ, r, "cm--", "box", "cm");
  }
  if (t === 1) {
    Nx(de.ne.we, xQ, n, k1, "box", "pm");
  }
};
const Nx = (t, e, r, n, i, s) => {
  t.className = s;
  const o = r && r.layout;
  const f = r && r.position;
  const c = r && r.flipButtons;
  const p = !r || r.equalWeightButtons !== false;
  const d = o && o.split(" ") || [];
  const E = d[0];
  const m = d[1];
  const g = E in e ? E : i;
  const T = e[g];
  const b = bt(T.Ee, m) && m;
  const x = f && f.split(" ") || [];
  const A = x[0];
  const R = n === k1 ? x[0] : x[1];
  const v = bt(T.Ae, A) ? A : T.He;
  const y = bt(T.Ne, R) ? R : T.Ve;
  const U = M => {
    if (M) {
      Bt(t, n + M);
    }
  };
  U(g);
  U(b);
  U(v);
  U(y);
  if (c) {
    U("flip");
  }
  const P = s + "__btn--secondary";
  if (s === "cm") {
    const {
      Ie: M,
      Le: X
    } = de.ne;
    if (M) {
      if (p) {
        as(M, P);
      } else {
        Bt(M, P);
      }
    }
    if (X) {
      if (p) {
        as(X, P);
      } else {
        Bt(X, P);
      }
    }
  } else {
    const {
      je: M
    } = de.ne;
    if (M) {
      if (p) {
        as(M, P);
      } else {
        Bt(M, P);
      }
    }
  }
};
const lo = (t, e) => {
  const r = de.o;
  const n = de.ne;
  const {
    hide: i,
    hidePreferences: s,
    acceptCategory: o
  } = t;
  const f = y => {
    o(y);
    s();
    i();
  };
  const c = r.u && r.u.preferencesModal;
  if (!c) {
    return;
  }
  const p = c.title;
  const d = c.closeIconLabel;
  const E = c.acceptAllBtn;
  const m = c.acceptNecessaryBtn;
  const g = c.savePreferencesBtn;
  const T = c.sections || [];
  const b = E || m || g;
  if (n.Fe) {
    n.Pe = De(Tt);
    gt(n.Pe, "body");
  } else {
    n.Fe = De(Tt);
    Bt(n.Fe, "pm-wrapper");
    const y = De("div");
    Bt(y, "pm-overlay");
    Pe(n.Fe, y);
    Yt(y, yr, s);
    n.we = De(Tt);
    Bt(n.we, "pm");
    Je(n.we, "role", "dialog");
    Je(n.we, Nn, true);
    Je(n.we, "aria-modal", true);
    Je(n.we, "aria-labelledby", "pm__title");
    Yt(n.ye, "keydown", U => {
      if (U.keyCode === 27) {
        s();
      }
    }, true);
    n.Oe = De(Tt);
    gt(n.Oe, "header");
    n.Re = De("h2");
    gt(n.Re, "title");
    n.Re.id = "pm__title";
    n.Be = De(In);
    gt(n.Be, "close-btn");
    Je(n.Be, "aria-label", c.closeIconLabel || "");
    Yt(n.Be, yr, s);
    n.Ge = De("span");
    n.Ge.innerHTML = Rl();
    Pe(n.Be, n.Ge);
    n.Je = De(Tt);
    gt(n.Je, "body");
    n.Ue = De(Tt);
    gt(n.Ue, "footer");
    var x = De(Tt);
    Bt(x, "btns");
    var A = De(Tt);
    var R = De(Tt);
    gt(A, ul);
    gt(R, ul);
    Pe(n.Ue, A);
    Pe(n.Ue, R);
    Pe(n.Oe, n.Re);
    Pe(n.Oe, n.Be);
    n.ve = De(Tt);
    Je(n.ve, "tabIndex", -1);
    Pe(n.we, n.ve);
    Pe(n.we, n.Oe);
    Pe(n.we, n.Je);
    if (b) {
      Pe(n.we, n.Ue);
    }
    Pe(n.Fe, n.we);
  }
  let v;
  if (p) {
    n.Re.innerHTML = p;
    if (d) {
      Je(n.Be, "aria-label", d);
    }
  }
  T.forEach((y, U) => {
    const P = y.title;
    const M = y.description;
    const X = y.linkedCategory;
    const N = X && r.P[X];
    const ae = y.cookieTable;
    const Q = ae && ae.body;
    const V = ae && ae.caption;
    const Y = Q && Q.length > 0;
    const k = !!N;
    const w = k && r.X[X];
    const j = Yf(w) && Zn(w) || [];
    const W = k && (!!M || !!Y || Zn(w).length > 0);
    var te = De(Tt);
    gt(te, "section");
    if (W || M) {
      var ie = De(Tt);
      gt(ie, "section-desc-wrapper");
    }
    let _e = j.length;
    if (W && _e > 0) {
      const je = De(Tt);
      gt(je, "section-services");
      for (const Et of j) {
        const Ve = w[Et];
        const ot = Ve && Ve.label || Et;
        const ft = De(Tt);
        const Ut = De(Tt);
        const $t = De(Tt);
        const F = De(Tt);
        gt(ft, "service");
        gt(F, "service-title");
        gt(Ut, "service-header");
        gt($t, "service-icon");
        const D = Px(ot, Et, N, true, X);
        F.innerHTML = ot;
        Pe(Ut, $t);
        Pe(Ut, F);
        Pe(ft, Ut);
        Pe(ft, D);
        Pe(je, ft);
      }
      Pe(ie, je);
    }
    if (P) {
      var ye = De(Tt);
      var Be = De(k ? In : Tt);
      gt(ye, "section-title-wrapper");
      gt(Be, "section-title");
      Be.innerHTML = P;
      Pe(ye, Be);
      if (k) {
        const je = De("span");
        je.innerHTML = Rl(2, 3.5);
        gt(je, "section-arrow");
        Pe(ye, je);
        te.className += "--toggle";
        const Et = Px(P, X, N);
        let Ve = c.serviceCounterLabel;
        if (_e > 0 && Ci(Ve)) {
          let ot = De("span");
          gt(ot, "badge");
          gt(ot, "service-counter");
          Je(ot, Nn, true);
          Je(ot, "data-servicecounter", _e);
          if (Ve) {
            Ve = Ve.split("|");
            Ve = Ve.length > 1 && _e > 1 ? Ve[1] : Ve[0];
            Je(ot, "data-counterlabel", Ve);
          }
          ot.innerHTML = _e + (Ve ? " " + Ve : "");
          Pe(Be, ot);
        }
        if (W) {
          gt(te, "section--expandable");
          var Le = X + "-desc";
          Je(Be, "aria-expanded", false);
          Je(Be, "aria-controls", Le);
        }
        Pe(ye, Et);
      } else {
        Je(Be, "role", "heading");
        Je(Be, "aria-level", "3");
      }
      Pe(te, ye);
    }
    if (M) {
      var Ge = De("p");
      gt(Ge, "section-desc");
      Ge.innerHTML = M;
      Pe(ie, Ge);
    }
    if (W && (Je(ie, Nn, "true"), ie.id = Le, ((je, Et, Ve) => {
      Yt(Be, yr, () => {
        if (Et.classList.contains("is-expanded")) {
          as(Et, "is-expanded");
          Je(Ve, "aria-expanded", "false");
          Je(je, Nn, "true");
        } else {
          Bt(Et, "is-expanded");
          Je(Ve, "aria-expanded", "true");
          Je(je, Nn, "false");
        }
      });
    })(ie, te, Be), Y)) {
      const je = De("table");
      const Et = De("thead");
      const Ve = De("tbody");
      if (V) {
        const D = De("caption");
        gt(D, "table-caption");
        D.innerHTML = V;
        je.appendChild(D);
      }
      gt(je, "section-table");
      gt(Et, "table-head");
      gt(Ve, "table-body");
      const ot = ae.headers;
      const ft = Zn(ot);
      const Ut = n.$e.createDocumentFragment();
      const $t = De("tr");
      for (const D of ft) {
        const ne = ot[D];
        const he = De("th");
        he.id = "cc__row-" + ne + U;
        Je(he, "scope", "col");
        gt(he, "table-th");
        he.innerHTML = ne;
        Pe(Ut, he);
      }
      Pe($t, Ut);
      Pe(Et, $t);
      const F = n.$e.createDocumentFragment();
      for (const D of Q) {
        const ne = De("tr");
        gt(ne, "table-tr");
        for (const he of ft) {
          const pe = ot[he];
          const xe = D[he];
          const Te = De("td");
          const O = De(Tt);
          gt(Te, "table-td");
          Je(Te, "data-column", pe);
          Je(Te, "headers", "cc__row-" + pe + U);
          O.insertAdjacentHTML("beforeend", xe);
          Pe(Te, O);
          Pe(ne, Te);
        }
        Pe(F, ne);
      }
      Pe(Ve, F);
      Pe(je, Et);
      Pe(je, Ve);
      Pe(ie, je);
    }
    if (W || M) {
      Pe(te, ie);
    }
    const Rt = n.Pe || n.Je;
    if (k) {
      if (!v) {
        v = De(Tt);
        gt(v, "section-toggles");
      }
      v.appendChild(te);
    } else {
      v = null;
    }
    Pe(Rt, v || te);
  });
  if (E) {
    if (!n.ze) {
      n.ze = De(In);
      gt(n.ze, "btn");
      Je(n.ze, Wa, "all");
      Pe(A, n.ze);
      Yt(n.ze, yr, () => f("all"));
    }
    n.ze.innerHTML = E;
  }
  if (m) {
    if (!n.je) {
      n.je = De(In);
      gt(n.je, "btn");
      Je(n.je, Wa, "necessary");
      Pe(A, n.je);
      Yt(n.je, yr, () => f([]));
    }
    n.je.innerHTML = m;
  }
  if (g) {
    if (!n.qe) {
      n.qe = De(In);
      gt(n.qe, "btn");
      gt(n.qe, "btn--secondary");
      Je(n.qe, Wa, "save");
      Pe(R, n.qe);
      Yt(n.qe, yr, () => f());
    }
    n.qe.innerHTML = g;
  }
  if (n.Pe) {
    n.we.replaceChild(n.Pe, n.Je);
    n.Je = n.Pe;
  }
  G1(1);
  if (!r.N) {
    r.N = true;
    ei(de.re.ue, am, n.we);
    e(t);
    Pe(n.Ce, n.Fe);
    B1(n.we);
    setTimeout(() => Bt(n.Fe, "cc--anim"), 100);
  }
  M1(2);
};
function Px(t, e, r, n, i) {
  const s = de.o;
  const o = de.ne;
  const f = De("label");
  const c = De("input");
  const p = De("span");
  const d = De("span");
  const E = De("span");
  const m = De("span");
  const g = De("span");
  m.innerHTML = Rl(1, 3);
  g.innerHTML = Rl(0, 3);
  c.type = "checkbox";
  Bt(f, "section__toggle-wrapper");
  Bt(c, "section__toggle");
  Bt(m, "toggle__icon-on");
  Bt(g, "toggle__icon-off");
  Bt(p, "toggle__icon");
  Bt(d, "toggle__icon-circle");
  Bt(E, "toggle__label");
  Je(p, Nn, "true");
  if (n) {
    Bt(f, "toggle-service");
    Je(c, qf, i);
    o.se[i][e] = c;
  } else {
    o.ae[e] = c;
  }
  if (n) {
    (T => {
      Yt(c, "change", () => {
        const b = o.se[T];
        const x = o.ae[T];
        s.Z[T] = [];
        for (let A in b) {
          const R = b[A];
          if (R.checked) {
            s.Z[T].push(R.value);
          }
        }
        x.checked = s.Z[T].length > 0;
      });
    })(i);
  } else {
    (T => {
      Yt(c, yr, () => {
        const b = o.se[T];
        const x = c.checked;
        s.Z[T] = [];
        for (let A in b) {
          b[A].checked = x;
          if (x) {
            s.Z[T].push(A);
          }
        }
      });
    })(e);
  }
  c.value = e;
  E.textContent = t.replace(/<.*>.*<\/.*>/gm, "");
  Pe(d, g);
  Pe(d, m);
  Pe(p, d);
  if (s.D) {
    if (r.readOnly || r.enabled) {
      c.checked = true;
    }
  } else if (n) {
    const T = s.Y[i];
    c.checked = r.readOnly || bt(T, e);
  } else if (bt(s.R, e)) {
    c.checked = true;
  }
  if (r.readOnly) {
    c.disabled = true;
  }
  Pe(f, c);
  Pe(f, p);
  Pe(f, E);
  return f;
}
const uh = () => {
  const t = De("span");
  de.ne.Ke ||= t;
  return t;
};
const fm = (t, e) => {
  const r = de.o;
  const n = de.ne;
  const {
    hide: i,
    showPreferences: s,
    acceptCategory: o
  } = t;
  const f = r.u && r.u.consentModal;
  if (!f) {
    return;
  }
  const c = f.acceptAllBtn;
  const p = f.acceptNecessaryBtn;
  const d = f.showPreferencesBtn;
  const E = f.closeIconLabel;
  const m = f.footer;
  const g = f.label;
  const T = f.title;
  const b = A => {
    i();
    o(A);
  };
  if (!n.Qe) {
    n.Qe = De(Tt);
    n.he = De(Tt);
    n.We = De(Tt);
    n.Xe = De(Tt);
    n.Ye = De(Tt);
    Bt(n.Qe, "cm-wrapper");
    Bt(n.he, "cm");
    Ur(n.We, "body");
    Ur(n.Xe, "texts");
    Ur(n.Ye, "btns");
    Je(n.he, "role", "dialog");
    Je(n.he, "aria-modal", "true");
    Je(n.he, Nn, "false");
    Je(n.he, "aria-describedby", "cm__desc");
    if (g) {
      Je(n.he, "aria-label", g);
    } else if (T) {
      Je(n.he, "aria-labelledby", "cm__title");
    }
    const A = "box";
    const R = r.i.guiOptions;
    const v = R && R.consentModal;
    const y = (v && v.layout || A).split(" ")[0] === A;
    if (T && E && y) {
      if (!n.Le) {
        n.Le = De(In);
        n.Le.innerHTML = Rl();
        Ur(n.Le, "btn");
        Ur(n.Le, "btn--close");
        Yt(n.Le, yr, () => {
          b([]);
        });
        Pe(n.We, n.Le);
      }
      Je(n.Le, "aria-label", E);
    }
    Pe(n.We, n.Xe);
    if (c || p || d) {
      Pe(n.We, n.Ye);
    }
    n.be = De(Tt);
    Je(n.be, "tabIndex", -1);
    Pe(n.he, n.be);
    Pe(n.he, n.We);
    Pe(n.Qe, n.he);
  }
  if (T) {
    if (!n.Ze) {
      n.Ze = De("h2");
      n.Ze.className = n.Ze.id = "cm__title";
      Pe(n.Xe, n.Ze);
    }
    n.Ze.innerHTML = T;
  }
  let x = f.description;
  if (x) {
    if (r.V) {
      x = x.replace("{{revisionMessage}}", r.I ? "" : f.revisionMessage || "");
    }
    if (!n.et) {
      n.et = De("p");
      n.et.className = n.et.id = "cm__desc";
      Pe(n.Xe, n.et);
    }
    n.et.innerHTML = x;
  }
  if (c) {
    if (!n.tt) {
      n.tt = De(In);
      Pe(n.tt, uh());
      Ur(n.tt, "btn");
      Je(n.tt, Wa, "all");
      Yt(n.tt, yr, () => {
        b("all");
      });
    }
    n.tt.firstElementChild.innerHTML = c;
  }
  if (p) {
    if (!n.Ie) {
      n.Ie = De(In);
      Pe(n.Ie, uh());
      Ur(n.Ie, "btn");
      Je(n.Ie, Wa, "necessary");
      Yt(n.Ie, yr, () => {
        b([]);
      });
    }
    n.Ie.firstElementChild.innerHTML = p;
  }
  if (d) {
    if (!n.ot) {
      n.ot = De(In);
      Pe(n.ot, uh());
      Ur(n.ot, "btn");
      Ur(n.ot, "btn--secondary");
      Je(n.ot, Wa, "show");
      Yt(n.ot, "mouseenter", () => {
        if (!r.N) {
          lo(t, e);
        }
      });
      Yt(n.ot, yr, s);
    }
    n.ot.firstElementChild.innerHTML = d;
  }
  if (!n.nt) {
    n.nt = De(Tt);
    Ur(n.nt, ul);
    if (c) {
      Pe(n.nt, n.tt);
    }
    if (p) {
      Pe(n.nt, n.Ie);
    }
    if (c || p) {
      Pe(n.We, n.nt);
    }
    Pe(n.Ye, n.nt);
  }
  if (n.ot && !n.st) {
    n.st = De(Tt);
    if (n.Ie && n.tt) {
      Ur(n.st, ul);
      Pe(n.st, n.ot);
      Pe(n.Ye, n.st);
    } else {
      Pe(n.nt, n.ot);
      Ur(n.nt, ul + "--uneven");
    }
  }
  if (m) {
    if (!n.ct) {
      let A = De(Tt);
      let R = De(Tt);
      n.ct = De(Tt);
      Ur(A, "footer");
      Ur(R, "links");
      Ur(n.ct, "link-group");
      Pe(R, n.ct);
      Pe(A, R);
      Pe(n.he, A);
    }
    n.ct.innerHTML = m;
  }
  G1(0);
  if (!r.T) {
    r.T = true;
    ei(de.re.ue, sm, n.he);
    e(t);
    Pe(n.Ce, n.Qe);
    B1(n.he);
    setTimeout(() => Bt(n.Qe, "cc--anim"), 100);
  }
  M1(1);
  P1(n.We, t, lo, e);
};
const cm = t => {
  if (!Ci(t)) {
    return null;
  }
  if (t in de.o._) {
    return t;
  }
  let e = t.slice(0, 2);
  if (e in de.o._) {
    return e;
  } else {
    return null;
  }
};
const pm = () => de.o.l || de.o.i.language.default;
const dm = t => {
  if (t) {
    de.o.l = t;
  }
};
const V1 = async t => {
  const e = de.o;
  let r = cm(t) ? t : pm();
  let n = e._[r];
  if (Ci(n)) {
    n = await (async i => {
      try {
        return await (await fetch(i)).json();
      } catch (s) {
        console.error(s);
        return false;
      }
    })(n);
  } else if (zn(n)) {
    n = await n();
  }
  return !!n && (e.u = n, dm(r), true);
};
const F1 = () => {
  let t = de.o.i.language.rtl;
  let e = de.ne.Ce;
  if (t && e) {
    if (!So(t)) {
      t = [t];
    }
    if (bt(t, de.o.l)) {
      Bt(e, "cc--rtl");
    } else {
      as(e, "cc--rtl");
    }
  }
};
const Xs = () => {
  const t = de.ne;
  if (t.Ce) {
    return;
  }
  t.Ce = De(Tt);
  t.Ce.id = "cc-main";
  t.Ce.setAttribute("data-nosnippet", "");
  F1();
  let e = de.o.i.root;
  if (e && Ci(e)) {
    e = document.querySelector(e);
  }
  (e || t.$e.body).appendChild(t.Ce);
};
const H1 = t => Sl(() => localStorage.removeItem(t));
const Ux = (t, e) => {
  if (e instanceof RegExp) {
    return t.filter(r => e.test(r));
  }
  {
    const r = I1(t, e);
    if (r > -1) {
      return [t[r]];
    } else {
      return [];
    }
  }
};
const W1 = t => {
  const {
    hostname: e,
    protocol: r
  } = location;
  const {
    name: n,
    path: i,
    domain: s,
    sameSite: o,
    useLocalStorage: f
  } = de.t.cookie;
  const c = t ? (() => {
    const m = de.o.S;
    const g = m ? new Date() - m : 0;
    return wx() * 86400000 - g;
  })() : wx() * 86400000;
  const p = new Date();
  p.setTime(p.getTime() + c);
  de.o.p.expirationTime = p.getTime();
  const d = JSON.stringify(de.o.p);
  let E = n + "=" + encodeURIComponent(d) + (c !== 0 ? "; expires=" + p.toUTCString() : "") + "; Path=" + i + "; SameSite=" + o;
  if (bt(e, ".")) {
    E += "; Domain=" + s;
  }
  if (r === "https:") {
    E += "; Secure";
  }
  if (f) {
    ((m, g) => {
      Sl(() => localStorage.setItem(m, g));
    })(n, d);
  } else {
    document.cookie = E;
  }
  de.o.p;
};
const fE = (t, e, r) => {
  if (t.length === 0) {
    return;
  }
  const n = r || de.t.cookie.domain;
  const i = e || de.t.cookie.path;
  const s = n.slice(0, 4) === "www.";
  const o = s && n.substring(4);
  const f = (c, p) => {
    document.cookie = c + "=; path=" + i + (p ? "; domain=." + p : "") + "; expires=Thu, 01 Jan 1970 00:00:01 GMT;";
  };
  for (const c of t) {
    f(c);
    f(c, n);
    if (s) {
      f(c, o);
    }
  }
};
const X1 = t => {
  const e = t || de.t.cookie.name;
  const r = de.t.cookie.useLocalStorage;
  return ((i, s) => {
    let o;
    o = Sl(() => JSON.parse(s ? i : decodeURIComponent(i)), true) || {};
    return o;
  })(r ? (n = e, Sl(() => localStorage.getItem(n)) || "") : hm(e, true), r);
  var n;
};
const hm = (t, e) => {
  const r = document.cookie.match("(^|;)\\s*" + t + "\\s*=\\s*([^;]+)");
  if (r) {
    if (e) {
      return r.pop();
    } else {
      return t;
    }
  } else {
    return "";
  }
};
const j1 = t => {
  const e = document.cookie.split(/;\s*/);
  const r = [];
  for (const n of e) {
    let i = n.split("=")[0];
    if (t) {
      Sl(() => {
        if (t.test(i)) {
          r.push(i);
        }
      });
    } else {
      r.push(i);
    }
  }
  return r;
};
const Em = (t, e = []) => {
  ((r, n) => {
    const {
      O: i,
      R: s,
      B: o,
      N: f,
      Z: c,
      G: p,
      X: d
    } = de.o;
    let E = [];
    if (r) {
      if (So(r)) {
        E.push(...r);
      } else if (Ci(r)) {
        E = r === "all" ? i : [r];
      }
      for (const m of i) {
        c[m] = bt(E, m) ? Zn(d[m]) : [];
      }
    } else {
      E = [...s, ...p];
      if (f) {
        E = (() => {
          const m = de.ne.ae;
          if (!m) {
            return [];
          }
          let g = [];
          for (let T in m) {
            if (m[T].checked) {
              g.push(T);
            }
          }
          return g;
        })();
      }
    }
    E = E.filter(m => !bt(i, m) || !bt(n, m));
    E.push(...o);
    N1(E);
  })(t, e);
  (r => {
    const n = de.o;
    const {
      Z: i,
      B: s,
      Y: o,
      X: f,
      O: c
    } = n;
    const p = c;
    n.te = xi(o);
    for (const d of p) {
      const E = f[d];
      const m = Zn(E);
      const g = i[d] && i[d].length > 0;
      const T = bt(s, d);
      if (m.length !== 0) {
        o[d] = [];
        if (T) {
          o[d].push(...m);
        } else if (g) {
          const b = i[d];
          o[d].push(...b);
        } else {
          o[d] = n.Z[d];
        }
        o[d] = om(o[d]);
      }
    }
  })();
  (() => {
    const r = de.o;
    r.L = de.t.mode === Yo && r.D ? gf(r.G, r.R) : gf(r.R, r.p.categories);
    let n = r.L.length > 0;
    let i = false;
    for (const c of r.O) {
      r.ee[c] = gf(r.Y[c], r.te[c]);
      if (r.ee[c].length > 0) {
        i = true;
      }
    }
    const s = de.ne.ae;
    for (const c in s) {
      s[c].checked = bt(r.R, c);
    }
    for (const c of r.O) {
      const p = de.ne.se[c];
      const d = r.Y[c];
      for (const E in p) {
        p[E].checked = bt(d, E);
      }
    }
    r.C ||= new Date();
    r.M ||= ("10000000-1000-4000-8000" + -100000000000).replace(/[018]/g, c => (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));
    r.p = {
      categories: xi(r.R),
      revision: de.t.revision,
      data: r.h,
      consentTimestamp: r.C.toISOString(),
      consentId: r.M,
      services: xi(r.Y)
    };
    let o = false;
    const f = n || i;
    if (r.D || f) {
      if (r.D) {
        r.D = false;
        o = true;
      }
      r.S = r.S ? new Date() : r.C;
      r.p.lastConsentTimestamp = r.S.toISOString();
      W1();
      if (de.t.autoClearCookies && (o || f)) {
        (c => {
          const p = de.o;
          const d = j1();
          const E = (m => {
            const g = de.o;
            return (m ? g.O : g.L).filter(T => {
              const b = g.P[T];
              return !!b && !b.readOnly && !!b.autoClear;
            });
          })(c);
          for (const m in p.ee) {
            for (const g of p.ee[m]) {
              const T = p.X[m][g].cookies;
              if (!bt(p.Y[m], g) && T) {
                for (const b of T) {
                  const x = Ux(d, b.name);
                  fE(x, b.path, b.domain);
                }
              }
            }
          }
          for (const m of E) {
            const g = p.P[m].autoClear;
            const T = g && g.cookies || [];
            const b = bt(p.L, m);
            const x = !bt(p.R, m);
            const A = b && x;
            if (c ? x : A) {
              if (g.reloadPage && A) {
                p.j = true;
              }
              for (const R of T) {
                const v = Ux(d, R.name);
                fE(v, R.path, R.domain);
              }
            }
          }
        })(o);
      }
      lE();
    }
    if (!o || !(ei(de.re.ie), ei(de.re.le), de.t.mode === w1)) {
      if (f) {
        ei(de.re.de);
      }
      if (r.j) {
        r.j = false;
        location.reload();
      }
    }
  })();
};
const z1 = t => {
  const e = de.o.D ? [] : de.o.R;
  return bt(e, t);
};
const RQ = (t, e) => {
  const {
    O: r,
    X: n
  } = de.o;
  if (!t || !e || !Ci(e) || !bt(r, e) || Zn(n[e]).length === 0) {
    return false;
  }
  ((i, s) => {
    const o = de.o;
    const {
      X: f,
      Z: c,
      N: p
    } = o;
    const d = de.ne.se[s] || {};
    const E = de.ne.ae[s] || {};
    const m = Zn(f[s]);
    c[s] = [];
    if (Ci(i)) {
      if (i === "all") {
        c[s].push(...m);
        if (p) {
          for (let T in d) {
            d[T].checked = true;
            Ju(d[T]);
          }
        }
      } else {
        if (bt(m, i)) {
          c[s].push(i);
        }
        if (p) {
          for (let T in d) {
            d[T].checked = i === T;
            Ju(d[T]);
          }
        }
      }
    } else if (So(i)) {
      for (let T of m) {
        const b = bt(i, T);
        if (b) {
          c[s].push(T);
        }
        if (p) {
          d[T].checked = b;
          Ju(d[T]);
        }
      }
    }
    const g = c[s].length === 0;
    o.R = g ? o.R.filter(T => T !== s) : om([...o.R, s]);
    if (p) {
      E.checked = !g;
      Ju(E);
    }
  })(t, e);
  Em();
};
const q1 = (t, e) => {
  const r = de.o.D ? [] : de.o.Y[e] || [];
  return bt(r, t);
};
const SQ = t => hm(t, true) !== "";
const Y1 = (t, e, r) => {
  let n = [];
  const i = s => {
    if (Ci(s)) {
      let o = hm(s);
      if (o !== "") {
        n.push(o);
      }
    } else {
      n.push(...j1(s));
    }
  };
  if (So(t)) {
    for (let s of t) {
      i(s);
    }
  } else {
    i(t);
  }
  fE(n, e, r);
};
const mm = t => {
  const {
    ne: e,
    o: r
  } = de;
  if (!r.k) {
    if (!r.T) {
      if (!t) {
        return;
      }
      fm(yl, Xs);
    }
    r.k = true;
    r.U = Jf();
    if (r.v) {
      D1(true);
    }
    U1(e.he, 1);
    Bt(e.ye, nm);
    Je(e.he, Nn, "false");
    setTimeout(() => {
      Qn(de.ne.be);
    }, 100);
    ei(de.re.fe, sm);
  }
};
const J1 = () => {
  const {
    ne: t,
    o: e,
    re: r
  } = de;
  if (e.k) {
    e.k = false;
    if (e.v) {
      D1();
    }
    Qn(t.Ke, true);
    as(t.ye, nm);
    Je(t.he, Nn, "true");
    Qn(e.U);
    e.U = null;
    ei(r._e, sm);
  }
};
const Z1 = () => {
  const t = de.o;
  if (!t.A) {
    if (!t.N) {
      lo(yl, Xs);
    }
    t.A = true;
    if (t.k) {
      t.$ = Jf();
    } else {
      t.U = Jf();
    }
    U1(de.ne.we, 2);
    Bt(de.ne.ye, im);
    Je(de.ne.we, Nn, "false");
    setTimeout(() => {
      Qn(de.ne.ve);
    }, 100);
    ei(de.re.fe, am);
  }
};
const Q1 = () => {
  const t = de.o;
  if (t.A) {
    t.A = false;
    (() => {
      const e = gm();
      const r = de.o.P;
      const n = de.ne.ae;
      const i = de.ne.se;
      const s = o => bt(de.o.G, o);
      for (const o in n) {
        const f = !!r[o].readOnly;
        n[o].checked = f || (e ? z1(o) : s(o));
        for (const c in i[o]) {
          i[o][c].checked = f || (e ? q1(c, o) : s(o));
        }
      }
    })();
    Qn(de.ne.Ge, true);
    as(de.ne.ye, im);
    Je(de.ne.we, Nn, "true");
    if (t.k) {
      Qn(t.$);
      t.$ = null;
    } else {
      Qn(t.U);
      t.U = null;
    }
    ei(de.re._e, am);
  }
};
var yl = {
  show: mm,
  hide: J1,
  showPreferences: Z1,
  hidePreferences: Q1,
  acceptCategory: Em
};
const yQ = async (t, e) => {
  if (!cm(t)) {
    return false;
  }
  const r = de.o;
  return (t !== pm() || e === true) && !!(await V1(t)) && !(dm(t), r.T && fm(yl, Xs), r.N && lo(yl, Xs), F1(), 0);
};
const AQ = () => {
  const {
    F: t,
    Y: e
  } = de.o;
  const {
    accepted: r,
    rejected: n
  } = (() => {
    const {
      D: i,
      R: s,
      O: o
    } = de.o;
    return {
      accepted: s,
      rejected: i ? [] : o.filter(f => !bt(s, f))
    };
  })();
  return xi({
    acceptType: t,
    acceptedCategories: r,
    rejectedCategories: n,
    acceptedServices: e,
    rejectedServices: _Q()
  });
};
const LQ = (t, e) => {
  let r = document.querySelector("script[src=\"" + t + "\"]");
  return new Promise(n => {
    if (r) {
      return n(true);
    }
    r = De("script");
    if (Yf(e)) {
      for (const i in e) {
        Je(r, i, e[i]);
      }
    }
    r.onload = () => n(true);
    r.onerror = () => {
      r.remove();
      n(false);
    };
    r.src = t;
    Pe(document.head, r);
  });
};
const CQ = t => {
  let e;
  let r = t.value;
  let n = t.mode;
  let i = false;
  const s = de.o;
  if (n === "update") {
    s.h = e = eL("data");
    const o = typeof e == typeof r;
    if (o && typeof e == "object") {
      if (!e) {
        e = {};
      }
      for (let f in r) {
        if (e[f] !== r[f]) {
          e[f] = r[f];
          i = true;
        }
      }
    } else if ((!!o || !e) && e !== r) {
      e = r;
      i = true;
    }
  } else {
    e = r;
    i = true;
  }
  if (i) {
    s.h = e;
    s.p.data = e;
    W1(true);
  }
  return i;
};
const eL = (t, e) => {
  const r = X1(e);
  if (t) {
    return r[t];
  } else {
    return r;
  }
};
const wQ = t => {
  const e = de.t;
  const r = de.o.i;
  if (t) {
    return e[t] || r[t];
  } else {
    return {
      ...e,
      ...r,
      cookie: {
        ...e.cookie
      }
    };
  }
};
const gm = () => !de.o.D;
const OQ = async t => {
  const {
    o: e,
    t: r,
    re: n
  } = de;
  const i = window;
  if (!i._ccRun) {
    i._ccRun = true;
    (f => {
      const {
        ne: c,
        t: p,
        o: d
      } = de;
      const E = p;
      const m = d;
      const {
        cookie: g
      } = E;
      const T = de.ce;
      const b = f.cookie;
      const x = f.categories;
      const A = Zn(x) || [];
      const R = navigator;
      const v = document;
      c.$e = v;
      c.ye = v.documentElement;
      g.domain = location.hostname;
      m.i = f;
      m.P = x;
      m.O = A;
      m._ = f.language.translations;
      m.v = !!f.disablePageInteraction;
      T.ie = f.onFirstConsent;
      T.le = f.onConsent;
      T.de = f.onChange;
      T._e = f.onModalHide;
      T.fe = f.onModalShow;
      T.ue = f.onModalReady;
      const {
        mode: y,
        autoShow: U,
        lazyHtmlGeneration: P,
        autoClearCookies: M,
        revision: X,
        manageScriptTags: N,
        hideFromBots: ae
      } = f;
      if (y === Yo) {
        E.mode = y;
      }
      if (typeof M == "boolean") {
        E.autoClearCookies = M;
      }
      if (typeof N == "boolean") {
        E.manageScriptTags = N;
      }
      if (typeof X == "number" && X >= 0) {
        E.revision = X;
        m.V = true;
      }
      if (typeof U == "boolean") {
        E.autoShow = U;
      }
      if (typeof P == "boolean") {
        E.lazyHtmlGeneration = P;
      }
      if (ae === false) {
        E.hideFromBots = false;
      }
      if (E.hideFromBots === true && R) {
        m.J = R.userAgent && /bot|crawl|spider|slurp|teoma/i.test(R.userAgent) || R.webdriver;
      }
      if (Yf(b)) {
        E.cookie = {
          ...g,
          ...b
        };
      }
      E.autoClearCookies;
      m.V;
      E.manageScriptTags;
      (Q => {
        const {
          P: V,
          X: Y,
          Y: k,
          Z: w,
          B: j
        } = de.o;
        for (let W of Q) {
          const te = V[W];
          const ie = te.services || {};
          const _e = Yf(ie) && Zn(ie) || [];
          Y[W] = {};
          k[W] = [];
          w[W] = [];
          if (te.readOnly) {
            j.push(W);
            k[W] = _e;
          }
          de.ne.se[W] = {};
          for (let ye of _e) {
            const Be = ie[ye];
            Be.Se = false;
            Y[W][ye] = Be;
          }
        }
      })(A);
      (() => {
        if (!de.t.manageScriptTags) {
          return;
        }
        const Q = de.o;
        const V = lm(document, "script[" + qf + "]");
        for (const Y of V) {
          let k = mf(Y, qf);
          let w = Y.dataset.service || "";
          let j = false;
          if (k && k.charAt(0) === "!") {
            k = k.slice(1);
            j = true;
          }
          if (w.charAt(0) === "!") {
            w = w.slice(1);
            j = true;
          }
          if (bt(Q.O, k) && (Q.oe.push({
            Me: Y,
            xe: false,
            ke: j,
            De: k,
            Te: w
          }), w)) {
            const W = Q.X[k];
            W[w] ||= {
              Se: false
            };
          }
        }
      })();
      dm((() => {
        const Q = de.o.i.language.autoDetect;
        if (Q) {
          const V = {
            browser: navigator.language,
            document: document.documentElement.lang
          };
          const Y = cm(V[Q]);
          if (Y) {
            return Y;
          }
        }
        return pm();
      })());
    })(t);
    if (e.J) {
      return;
    }
    (() => {
      const f = de.o;
      const c = de.t;
      const p = X1();
      const {
        categories: d,
        services: E,
        consentId: m,
        consentTimestamp: g,
        lastConsentTimestamp: T,
        data: b,
        revision: x
      } = p;
      const A = So(d);
      f.p = p;
      f.M = m;
      const R = !!m && Ci(m);
      f.C = g;
      f.C &&= new Date(g);
      f.S = T;
      f.S &&= new Date(T);
      f.h = b !== undefined ? b : null;
      if (f.V && R && x !== c.revision) {
        f.I = false;
      }
      f.D = !R || !f.I || !f.C || !f.S || !A;
      if (c.cookie.useLocalStorage && !f.D) {
        f.D = new Date().getTime() > (p.expirationTime || 0);
        if (f.D) {
          H1(c.cookie.name);
        }
      }
      f.D;
      (() => {
        const v = de.o;
        for (const y of v.O) {
          const U = v.P[y];
          if (U.readOnly || U.enabled) {
            v.G.push(y);
            const P = v.X[y] || {};
            for (let M in P) {
              v.Z[y].push(M);
              if (v.i.mode === Yo) {
                v.Y[y].push(M);
              }
            }
          }
        }
      })();
      if (f.D) {
        if (c.mode === Yo) {
          f.R = [...f.G];
        }
      } else {
        f.Z = {
          ...f.Y
        };
        f.Y = {
          ...f.Y,
          ...E
        };
        N1([...f.B, ...d]);
      }
    })();
    const o = gm();
    if (!(await V1())) {
      return false;
    }
    P1(null, s = yl, lo, Xs);
    if (de.o.D) {
      fm(s, Xs);
    }
    if (!de.t.lazyHtmlGeneration) {
      lo(s, Xs);
    }
    if (r.autoShow && !o) {
      mm(true);
    }
    if (o) {
      lE();
      return ei(n.le);
    }
    if (r.mode === Yo) {
      lE(e.G);
    }
  }
  var s;
};
const IQ = t => {
  const {
    Ce: e,
    ye: r
  } = de.ne;
  const {
    name: n,
    path: i,
    domain: s,
    useLocalStorage: o
  } = de.t.cookie;
  if (t) {
    if (o) {
      H1(n);
    } else {
      Y1(n, i, s);
    }
  }
  for (const {
    pe: c,
    me: p,
    ge: d
  } of de.o.m) {
    c.removeEventListener(p, d);
  }
  if (e) {
    e.remove();
  }
  if (r) {
    r.classList.remove(oE, im, nm);
  }
  const f = new O1();
  for (const c in de) {
    de[c] = f[c];
  }
  window._ccRun = false;
};
const NQ = Object.freeze(Object.defineProperty({
  __proto__: null,
  acceptCategory: Em,
  acceptService: RQ,
  acceptedCategory: z1,
  acceptedService: q1,
  eraseCookies: Y1,
  getConfig: wQ,
  getCookie: eL,
  getUserPreferences: AQ,
  hide: J1,
  hidePreferences: Q1,
  loadScript: LQ,
  reset: IQ,
  run: OQ,
  setCookieData: CQ,
  setLanguage: yQ,
  show: mm,
  showPreferences: Z1,
  validConsent: gm,
  validCookie: SQ
}, Symbol.toStringTag, {
  value: "Module"
}));
const PQ = {
  install: (t, e) => {
    t.config.globalProperties.$cc = NQ;
    t.config.globalProperties.$cc.run(e);
  }
};
var UQ = dy;
var DQ = UQ(Object.keys, Object);
var BQ = DQ;
var MQ = d0;
var $Q = BQ;
var KQ = Object.prototype;
var kQ = KQ.hasOwnProperty;
function GQ(t) {
  if (!MQ(t)) {
    return $Q(t);
  }
  var e = [];
  for (var r in Object(t)) {
    if (kQ.call(t, r) && r != "constructor") {
      e.push(r);
    }
  }
  return e;
}
var VQ = GQ;
var FQ = Ry;
var HQ = VQ;
var WQ = Oc;
function XQ(t) {
  if (WQ(t)) {
    return FQ(t);
  } else {
    return HQ(t);
  }
}
var jQ = XQ;
var zQ = ta;
var qQ = si;
var YQ = zQ(qQ, "DataView");
var JQ = YQ;
var ZQ = ta;
var QQ = si;
var eee = ZQ(QQ, "Promise");
var tee = eee;
var ree = ta;
var nee = si;
var iee = ree(nee, "Set");
var see = iee;
var aee = ta;
var oee = si;
var lee = aee(oee, "WeakMap");
var uee = lee;
var cE = JQ;
var pE = c0;
var dE = tee;
var hE = see;
var EE = uee;
var tL = Eo;
var yo = uy;
var Dx = "[object Map]";
var fee = "[object Object]";
var Bx = "[object Promise]";
var Mx = "[object Set]";
var $x = "[object WeakMap]";
var Kx = "[object DataView]";
var cee = yo(cE);
var pee = yo(pE);
var dee = yo(dE);
var hee = yo(hE);
var Eee = yo(EE);
var Ra = tL;
if (cE && Ra(new cE(new ArrayBuffer(1))) != Kx || pE && Ra(new pE()) != Dx || dE && Ra(dE.resolve()) != Bx || hE && Ra(new hE()) != Mx || EE && Ra(new EE()) != $x) {
  Ra = function (t) {
    var e = tL(t);
    var r = e == fee ? t.constructor : undefined;
    var n = r ? yo(r) : "";
    if (n) {
      switch (n) {
        case cee:
          return Kx;
        case pee:
          return Dx;
        case dee:
          return Bx;
        case hee:
          return Mx;
        case Eee:
          return $x;
      }
    }
    return e;
  };
}
var kx = Lc;
var Gx = kx ? kx.prototype : undefined;
if (Gx) {
  Gx.valueOf;
}
var Vx = h0;
if (Vx) {
  Vx.isMap;
}
var Fx = h0;
if (Fx) {
  Fx.isSet;
}
var mee = Eo;
var gee = To;
var _ee = "[object Symbol]";
function Tee(t) {
  return typeof t == "symbol" || gee(t) && mee(t) == _ee;
}
var _m = Tee;
var vee = vo;
var bee = _m;
var xee = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
var Ree = /^\w*$/;
function See(t, e) {
  if (vee(t)) {
    return false;
  }
  var r = typeof t;
  if (r == "number" || r == "symbol" || r == "boolean" || t == null || bee(t)) {
    return true;
  } else {
    return Ree.test(t) || !xee.test(t) || e != null && t in Object(e);
  }
}
var yee = See;
var rL = fy;
var Aee = "Expected a function";
function Tm(t, e) {
  if (typeof t != "function" || e != null && typeof e != "function") {
    throw new TypeError(Aee);
  }
  function r() {
    var n = arguments;
    var i = e ? e.apply(this, n) : n[0];
    var s = r.cache;
    if (s.has(i)) {
      return s.get(i);
    }
    var o = t.apply(this, n);
    r.cache = s.set(i, o) || s;
    return o;
  }
  r.cache = new (Tm.Cache || rL)();
  return r;
}
Tm.Cache = rL;
var Lee = Tm;
var Cee = Lee;
var wee = 500;
function Oee(t) {
  var e = Cee(t, function (n) {
    if (r.size === wee) {
      r.clear();
    }
    return n;
  });
  var r = e.cache;
  return e;
}
var Iee = Oee;
var Nee = Iee;
var Pee = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var Uee = /\\(\\)?/g;
var Dee = Nee(function (t) {
  var e = [];
  if (t.charCodeAt(0) === 46) {
    e.push("");
  }
  t.replace(Pee, function (r, n, i, s) {
    e.push(i ? s.replace(Uee, "$1") : n || r);
  });
  return e;
});
var Bee = Dee;
function Mee(t, e) {
  for (var r = -1, n = t == null ? 0 : t.length, i = Array(n); ++r < n;) {
    i[r] = e(t[r], r, t);
  }
  return i;
}
var nL = Mee;
var Hx = Lc;
var $ee = nL;
var Kee = vo;
var kee = _m;
var Gee = Infinity;
var Wx = Hx ? Hx.prototype : undefined;
var Xx = Wx ? Wx.toString : undefined;
function iL(t) {
  if (typeof t == "string") {
    return t;
  }
  if (Kee(t)) {
    return $ee(t, iL) + "";
  }
  if (kee(t)) {
    if (Xx) {
      return Xx.call(t);
    } else {
      return "";
    }
  }
  var e = t + "";
  if (e == "0" && 1 / t == -Gee) {
    return "-0";
  } else {
    return e;
  }
}
var Vee = iL;
var Fee = Vee;
function Hee(t) {
  if (t == null) {
    return "";
  } else {
    return Fee(t);
  }
}
var Wee = Hee;
var Xee = vo;
var jee = yee;
var zee = Bee;
var qee = Wee;
function Yee(t, e) {
  if (Xee(t)) {
    return t;
  } else if (jee(t, e)) {
    return [t];
  } else {
    return zee(qee(t));
  }
}
var Jee = Yee;
var Zee = _m;
var Qee = Infinity;
function ete(t) {
  if (typeof t == "string" || Zee(t)) {
    return t;
  }
  var e = t + "";
  if (e == "0" && 1 / t == -Qee) {
    return "-0";
  } else {
    return e;
  }
}
var tte = ete;
const vm = {
  fatal: {
    error: Symbol("fatal.error")
  },
  modal: {
    active: Symbol("modal.active")
  },
  textDescriptions: {
    announcement: Symbol("textDescriptions.announcement")
  }
};
const rte = Object.prototype.toString;
function nte(t, e) {
  return rte.call(t) === `[object ${e}]`;
}
function ite(t) {
  return nte(t, "Object");
}
function ste(t) {
  return !!t && !!t.then && typeof t.then == "function";
}
const fl = "8.15.0";
const ni = globalThis;
function sL(t, e, r) {
  const n = ni;
  const i = n.__SENTRY__ = n.__SENTRY__ || {};
  const s = i[fl] = i[fl] || {};
  return s[t] ||= e();
}
const bm = typeof __SENTRY_DEBUG__ === "undefined" || __SENTRY_DEBUG__;
const ate = "Sentry Logger ";
const jx = ["debug", "info", "warn", "error", "log", "assert", "trace"];
const zx = {};
function aL(t) {
  if (!("console" in ni)) {
    return t();
  }
  const e = ni.console;
  const r = {};
  const n = Object.keys(zx);
  n.forEach(i => {
    const s = zx[i];
    r[i] = e[i];
    e[i] = s;
  });
  try {
    return t();
  } finally {
    n.forEach(i => {
      e[i] = r[i];
    });
  }
}
function ote() {
  let t = false;
  const e = {
    enable: () => {
      t = true;
    },
    disable: () => {
      t = false;
    },
    isEnabled: () => t
  };
  if (bm) {
    jx.forEach(r => {
      e[r] = (...n) => {
        if (t) {
          aL(() => {
            ni.console[r](`${ate}[${r}]:`, ...n);
          });
        }
      };
    });
  } else {
    jx.forEach(r => {
      e[r] = () => {};
    });
  }
  return e;
}
const Bn = ote();
const lte = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/;
function ute(t) {
  return t === "http" || t === "https";
}
function fte(t, e = false) {
  const {
    host: r,
    path: n,
    pass: i,
    port: s,
    projectId: o,
    protocol: f,
    publicKey: c
  } = t;
  return `${f}://${c}${e && i ? `:${i}` : ""}@${r}${s ? `:${s}` : ""}/${n && `${n}/`}${o}`;
}
function cte(t) {
  const e = lte.exec(t);
  if (!e) {
    aL(() => {
      console.error(`Invalid Sentry Dsn: ${t}`);
    });
    return;
  }
  const [r, n, i = "", s = "", o = "", f = ""] = e.slice(1);
  let c = "";
  let p = f;
  const d = p.split("/");
  if (d.length > 1) {
    c = d.slice(0, -1).join("/");
    p = d.pop();
  }
  if (p) {
    const E = p.match(/^\d+/);
    if (E) {
      p = E[0];
    }
  }
  return oL({
    host: s,
    pass: i,
    path: c,
    projectId: p,
    port: o,
    protocol: r,
    publicKey: n
  });
}
function oL(t) {
  return {
    protocol: t.protocol,
    publicKey: t.publicKey || "",
    pass: t.pass || "",
    host: t.host,
    port: t.port || "",
    path: t.path || "",
    projectId: t.projectId
  };
}
function pte(t) {
  if (!bm) {
    return true;
  }
  const {
    port: e,
    projectId: r,
    protocol: n
  } = t;
  if (["protocol", "publicKey", "host", "projectId"].find(o => t[o] ? false : (Bn.error(`Invalid Sentry Dsn: ${o} missing`), true))) {
    return false;
  } else if (r.match(/^\d+$/)) {
    if (ute(n)) {
      if (e && isNaN(parseInt(e, 10))) {
        Bn.error(`Invalid Sentry Dsn: Invalid port ${e}`);
        return false;
      } else {
        return true;
      }
    } else {
      Bn.error(`Invalid Sentry Dsn: Invalid protocol ${n}`);
      return false;
    }
  } else {
    Bn.error(`Invalid Sentry Dsn: Invalid projectId ${r}`);
    return false;
  }
}
function dte(t) {
  const e = typeof t == "string" ? cte(t) : oL(t);
  if (!!e && !!pte(e)) {
    return e;
  }
}
function hte(t, e, r) {
  try {
    Object.defineProperty(t, e, {
      value: r,
      writable: true,
      configurable: true
    });
  } catch {
    if (bm) {
      Bn.log(`Failed to add non-enumerable property "${e}" to object`, t);
    }
  }
}
const lL = 1000;
function uL() {
  return Date.now() / lL;
}
function Ete() {
  const {
    performance: t
  } = ni;
  if (!t || !t.now) {
    return uL;
  }
  const e = Date.now() - t.now();
  const r = t.timeOrigin == null ? e : t.timeOrigin;
  return () => (r + t.now()) / lL;
}
const mte = Ete();
(() => {
  const {
    performance: t
  } = ni;
  if (!t || !t.now) {
    return;
  }
  const e = 3600000;
  const r = t.now();
  const n = Date.now();
  const i = t.timeOrigin ? Math.abs(t.timeOrigin + r - n) : e;
  const s = i < e;
  const o = t.timing && t.timing.navigationStart;
  const c = typeof o == "number" ? Math.abs(o + r - n) : e;
  const p = c < e;
  if (s || p) {
    if (i <= c) {
      return t.timeOrigin;
    } else {
      return o;
    }
  } else {
    return n;
  }
})();
function Xa() {
  const t = ni;
  const e = t.crypto || t.msCrypto;
  let r = () => Math.random() * 16;
  try {
    if (e && e.randomUUID) {
      return e.randomUUID().replace(/-/g, "");
    }
    if (e && e.getRandomValues) {
      r = () => {
        const n = new Uint8Array(1);
        e.getRandomValues(n);
        return n[0];
      };
    }
  } catch {}
  return ("10000000100040008000" + 100000000000).replace(/[018]/g, n => (n ^ (r() & 15) >> n / 4).toString(16));
}
function qx() {
  return {
    traceId: Xa(),
    spanId: Xa().substring(16)
  };
}
function xm() {
  Rm(ni);
  return ni;
}
function Rm(t) {
  const e = t.__SENTRY__ = t.__SENTRY__ || {};
  e.version = e.version || fl;
  return e[fl] = e[fl] || {};
}
function gte(t, e = {}) {
  if (e.user) {
    if (!t.ipAddress && e.user.ip_address) {
      t.ipAddress = e.user.ip_address;
    }
    if (!t.did && !e.did) {
      t.did = e.user.id || e.user.email || e.user.username;
    }
  }
  t.timestamp = e.timestamp || mte();
  if (e.abnormal_mechanism) {
    t.abnormal_mechanism = e.abnormal_mechanism;
  }
  if (e.ignoreDuration) {
    t.ignoreDuration = e.ignoreDuration;
  }
  if (e.sid) {
    t.sid = e.sid.length === 32 ? e.sid : Xa();
  }
  if (e.init !== undefined) {
    t.init = e.init;
  }
  if (!t.did && e.did) {
    t.did = `${e.did}`;
  }
  if (typeof e.started == "number") {
    t.started = e.started;
  }
  if (t.ignoreDuration) {
    t.duration = undefined;
  } else if (typeof e.duration == "number") {
    t.duration = e.duration;
  } else {
    const r = t.timestamp - t.started;
    t.duration = r >= 0 ? r : 0;
  }
  if (e.release) {
    t.release = e.release;
  }
  if (e.environment) {
    t.environment = e.environment;
  }
  if (!t.ipAddress && e.ipAddress) {
    t.ipAddress = e.ipAddress;
  }
  if (!t.userAgent && e.userAgent) {
    t.userAgent = e.userAgent;
  }
  if (typeof e.errors == "number") {
    t.errors = e.errors;
  }
  if (e.status) {
    t.status = e.status;
  }
}
const mE = "_sentrySpan";
function Yx(t, e) {
  if (e) {
    hte(t, mE, e);
  } else {
    delete t[mE];
  }
}
function Jx(t) {
  return t[mE];
}
const _te = 100;
class Sm {
  constructor() {
    this._notifyingListeners = false;
    this._scopeListeners = [];
    this._eventProcessors = [];
    this._breadcrumbs = [];
    this._attachments = [];
    this._user = {};
    this._tags = {};
    this._extra = {};
    this._contexts = {};
    this._sdkProcessingMetadata = {};
    this._propagationContext = qx();
  }
  clone() {
    const e = new Sm();
    e._breadcrumbs = [...this._breadcrumbs];
    e._tags = {
      ...this._tags
    };
    e._extra = {
      ...this._extra
    };
    e._contexts = {
      ...this._contexts
    };
    e._user = this._user;
    e._level = this._level;
    e._session = this._session;
    e._transactionName = this._transactionName;
    e._fingerprint = this._fingerprint;
    e._eventProcessors = [...this._eventProcessors];
    e._requestSession = this._requestSession;
    e._attachments = [...this._attachments];
    e._sdkProcessingMetadata = {
      ...this._sdkProcessingMetadata
    };
    e._propagationContext = {
      ...this._propagationContext
    };
    e._client = this._client;
    e._lastEventId = this._lastEventId;
    Yx(e, Jx(this));
    return e;
  }
  setClient(e) {
    this._client = e;
  }
  setLastEventId(e) {
    this._lastEventId = e;
  }
  getClient() {
    return this._client;
  }
  lastEventId() {
    return this._lastEventId;
  }
  addScopeListener(e) {
    this._scopeListeners.push(e);
  }
  addEventProcessor(e) {
    this._eventProcessors.push(e);
    return this;
  }
  setUser(e) {
    this._user = e || {
      email: undefined,
      id: undefined,
      ip_address: undefined,
      username: undefined
    };
    if (this._session) {
      gte(this._session, {
        user: e
      });
    }
    this._notifyScopeListeners();
    return this;
  }
  getUser() {
    return this._user;
  }
  getRequestSession() {
    return this._requestSession;
  }
  setRequestSession(e) {
    this._requestSession = e;
    return this;
  }
  setTags(e) {
    this._tags = {
      ...this._tags,
      ...e
    };
    this._notifyScopeListeners();
    return this;
  }
  setTag(e, r) {
    this._tags = {
      ...this._tags,
      [e]: r
    };
    this._notifyScopeListeners();
    return this;
  }
  setExtras(e) {
    this._extra = {
      ...this._extra,
      ...e
    };
    this._notifyScopeListeners();
    return this;
  }
  setExtra(e, r) {
    this._extra = {
      ...this._extra,
      [e]: r
    };
    this._notifyScopeListeners();
    return this;
  }
  setFingerprint(e) {
    this._fingerprint = e;
    this._notifyScopeListeners();
    return this;
  }
  setLevel(e) {
    this._level = e;
    this._notifyScopeListeners();
    return this;
  }
  setTransactionName(e) {
    this._transactionName = e;
    this._notifyScopeListeners();
    return this;
  }
  setContext(e, r) {
    if (r === null) {
      delete this._contexts[e];
    } else {
      this._contexts[e] = r;
    }
    this._notifyScopeListeners();
    return this;
  }
  setSession(e) {
    if (e) {
      this._session = e;
    } else {
      delete this._session;
    }
    this._notifyScopeListeners();
    return this;
  }
  getSession() {
    return this._session;
  }
  update(e) {
    if (!e) {
      return this;
    }
    const r = typeof e == "function" ? e(this) : e;
    const [n, i] = r instanceof Al ? [r.getScopeData(), r.getRequestSession()] : ite(r) ? [e, e.requestSession] : [];
    const {
      tags: s,
      extra: o,
      user: f,
      contexts: c,
      level: p,
      fingerprint: d = [],
      propagationContext: E
    } = n || {};
    this._tags = {
      ...this._tags,
      ...s
    };
    this._extra = {
      ...this._extra,
      ...o
    };
    this._contexts = {
      ...this._contexts,
      ...c
    };
    if (f && Object.keys(f).length) {
      this._user = f;
    }
    if (p) {
      this._level = p;
    }
    if (d.length) {
      this._fingerprint = d;
    }
    if (E) {
      this._propagationContext = E;
    }
    if (i) {
      this._requestSession = i;
    }
    return this;
  }
  clear() {
    this._breadcrumbs = [];
    this._tags = {};
    this._extra = {};
    this._user = {};
    this._contexts = {};
    this._level = undefined;
    this._transactionName = undefined;
    this._fingerprint = undefined;
    this._requestSession = undefined;
    this._session = undefined;
    Yx(this, undefined);
    this._attachments = [];
    this._propagationContext = qx();
    this._notifyScopeListeners();
    return this;
  }
  addBreadcrumb(e, r) {
    const n = typeof r == "number" ? r : _te;
    if (n <= 0) {
      return this;
    }
    const i = {
      timestamp: uL(),
      ...e
    };
    const s = this._breadcrumbs;
    s.push(i);
    this._breadcrumbs = s.length > n ? s.slice(-n) : s;
    this._notifyScopeListeners();
    return this;
  }
  getLastBreadcrumb() {
    return this._breadcrumbs[this._breadcrumbs.length - 1];
  }
  clearBreadcrumbs() {
    this._breadcrumbs = [];
    this._notifyScopeListeners();
    return this;
  }
  addAttachment(e) {
    this._attachments.push(e);
    return this;
  }
  clearAttachments() {
    this._attachments = [];
    return this;
  }
  getScopeData() {
    return {
      breadcrumbs: this._breadcrumbs,
      attachments: this._attachments,
      contexts: this._contexts,
      tags: this._tags,
      extra: this._extra,
      user: this._user,
      level: this._level,
      fingerprint: this._fingerprint || [],
      eventProcessors: this._eventProcessors,
      propagationContext: this._propagationContext,
      sdkProcessingMetadata: this._sdkProcessingMetadata,
      transactionName: this._transactionName,
      span: Jx(this)
    };
  }
  setSDKProcessingMetadata(e) {
    this._sdkProcessingMetadata = {
      ...this._sdkProcessingMetadata,
      ...e
    };
    return this;
  }
  setPropagationContext(e) {
    this._propagationContext = e;
    return this;
  }
  getPropagationContext() {
    return this._propagationContext;
  }
  captureException(e, r) {
    const n = r && r.event_id ? r.event_id : Xa();
    if (!this._client) {
      Bn.warn("No client configured on scope - will not capture exception!");
      return n;
    }
    const i = new Error("Sentry syntheticException");
    this._client.captureException(e, {
      originalException: e,
      syntheticException: i,
      ...r,
      event_id: n
    }, this);
    return n;
  }
  captureMessage(e, r, n) {
    const i = n && n.event_id ? n.event_id : Xa();
    if (!this._client) {
      Bn.warn("No client configured on scope - will not capture message!");
      return i;
    }
    const s = new Error(e);
    this._client.captureMessage(e, r, {
      originalException: e,
      syntheticException: s,
      ...n,
      event_id: i
    }, this);
    return i;
  }
  captureEvent(e, r) {
    const n = r && r.event_id ? r.event_id : Xa();
    if (this._client) {
      this._client.captureEvent(e, {
        ...r,
        event_id: n
      }, this);
      return n;
    } else {
      Bn.warn("No client configured on scope - will not capture event!");
      return n;
    }
  }
  _notifyScopeListeners() {
    if (!this._notifyingListeners) {
      this._notifyingListeners = true;
      this._scopeListeners.forEach(e => {
        e(this);
      });
      this._notifyingListeners = false;
    }
  }
}
const Al = Sm;
function Tte() {
  return sL("defaultCurrentScope", () => new Al());
}
function vte() {
  return sL("defaultIsolationScope", () => new Al());
}
class bte {
  constructor(e, r) {
    let n;
    if (e) {
      n = e;
    } else {
      n = new Al();
    }
    let i;
    if (r) {
      i = r;
    } else {
      i = new Al();
    }
    this._stack = [{
      scope: n
    }];
    this._isolationScope = i;
  }
  withScope(e) {
    const r = this._pushScope();
    let n;
    try {
      n = e(r);
    } catch (i) {
      this._popScope();
      throw i;
    }
    if (ste(n)) {
      return n.then(i => {
        this._popScope();
        return i;
      }, i => {
        this._popScope();
        throw i;
      });
    } else {
      this._popScope();
      return n;
    }
  }
  getClient() {
    return this.getStackTop().client;
  }
  getScope() {
    return this.getStackTop().scope;
  }
  getIsolationScope() {
    return this._isolationScope;
  }
  getStackTop() {
    return this._stack[this._stack.length - 1];
  }
  _pushScope() {
    const e = this.getScope().clone();
    this._stack.push({
      client: this.getClient(),
      scope: e
    });
    return e;
  }
  _popScope() {
    if (this._stack.length <= 1) {
      return false;
    } else {
      return !!this._stack.pop();
    }
  }
}
function uo() {
  const t = xm();
  const e = Rm(t);
  return e.stack = e.stack || new bte(Tte(), vte());
}
function xte(t) {
  return uo().withScope(t);
}
function Rte(t, e) {
  const r = uo();
  return r.withScope(() => {
    r.getStackTop().scope = t;
    return e(t);
  });
}
function Zx(t) {
  return uo().withScope(() => t(uo().getIsolationScope()));
}
function Ste() {
  return {
    withIsolationScope: Zx,
    withScope: xte,
    withSetScope: Rte,
    withSetIsolationScope: (t, e) => Zx(e),
    getCurrentScope: () => uo().getScope(),
    getIsolationScope: () => uo().getIsolationScope()
  };
}
function fL(t) {
  const e = Rm(t);
  if (e.acs) {
    return e.acs;
  } else {
    return Ste();
  }
}
function yte() {
  const t = xm();
  return fL(t).getCurrentScope();
}
function Ate() {
  const t = xm();
  return fL(t).getIsolationScope();
}
function Lte() {
  return Ate().lastEventId();
}
function Cte(t) {
  const e = t.protocol ? `${t.protocol}:` : "";
  const r = t.port ? `:${t.port}` : "";
  return `${e}//${t.host}${r}${t.path ? `/${t.path}` : ""}/api/`;
}
function wte(t, e) {
  const r = dte(t);
  if (!r) {
    return "";
  }
  const n = `${Cte(r)}embed/error-page/`;
  let i = `dsn=${fte(r)}`;
  for (const s in e) {
    if (s !== "dsn" && s !== "onClose") {
      if (s === "user") {
        const o = e.user;
        if (!o) {
          continue;
        }
        if (o.name) {
          i += `&name=${encodeURIComponent(o.name)}`;
        }
        if (o.email) {
          i += `&email=${encodeURIComponent(o.email)}`;
        }
      } else {
        i += `&${encodeURIComponent(s)}=${encodeURIComponent(e[s])}`;
      }
    }
  }
  return `${n}?${i}`;
}
const Sa = ni;
const fh = typeof __SENTRY_DEBUG__ === "undefined" || __SENTRY_DEBUG__;
function Ote(t = {}) {
  if (!Sa.document) {
    if (fh) {
      Bn.error("Global document not defined in showReportDialog call");
    }
    return;
  }
  const e = yte();
  const r = e.getClient();
  const n = r && r.getDsn();
  if (!n) {
    if (fh) {
      Bn.error("DSN not configured for showReportDialog call");
    }
    return;
  }
  if (e) {
    t.user = {
      ...e.getUser(),
      ...t.user
    };
  }
  if (!t.eventId) {
    const f = Lte();
    if (f) {
      t.eventId = f;
    }
  }
  const i = Sa.document.createElement("script");
  i.async = true;
  i.crossOrigin = "anonymous";
  i.src = wte(n, t);
  if (t.onLoad) {
    i.onload = t.onLoad;
  }
  const {
    onClose: s
  } = t;
  if (s) {
    const f = c => {
      if (c.data === "__sentry_reportdialog_closed__") {
        try {
          s();
        } finally {
          Sa.removeEventListener("message", f);
        }
      }
    };
    Sa.addEventListener("message", f);
  }
  const o = Sa.document.head || Sa.document.body;
  if (o) {
    o.appendChild(i);
  } else if (fh) {
    Bn.error("Not injecting report dialog. No injection point found in HTML");
  }
}
const Ite = fr({
  setup() {
    return {
      fatalError: Vs(vm.fatal.error)
    };
  },
  computed: {
    message() {
      var n;
      var i;
      var s;
      var o;
      const t = ((i = (n = this.fatalError) == null ? undefined : n.event) == null ? undefined : i.event_id) ?? "Unknown";
      let e = "";
      const r = (o = (s = this.fatalError) == null ? undefined : s.hint) == null ? undefined : o.originalException;
      if (r) {
        if (typeof r == "string") {
          e = r;
        } else {
          e = r.message;
        }
      } else {
        e = "An unknown error occured";
      }
      return `Version:
${window.tv.manifest.loader.version}

Event ID:
${t}

${e}`;
    }
  },
  methods: {
    onFeedbackClick() {
      var t;
      var e;
      Ote({
        id: ((e = (t = this.fatalError) == null ? undefined : t.event) == null ? undefined : e.event_id) ?? "Unknown"
      });
    }
  }
});
const Vl = t => {
  Cl("data-v-d0abff79");
  t = t();
  wl();
  return t;
};
const Nte = {
  class: "jbg fatal"
};
const Pte = {
  class: "constrain"
};
const Ute = Vl(() => Re("a", {
  class: "logo",
  href: "/",
  "aria-label": "Jackbox Games Logo"
}, null, -1));
const Dte = {
  class: "content"
};
const Bte = Vl(() => Re("h1", null, "You have encountered an error", -1));
const Mte = Vl(() => Re("p", null, "Something went wrong! But don't worry, you can try a few things to get going.", -1));
const $te = Vl(() => Re("ul", null, [Re("li", null, "Refresh the page"), Re("li", null, "Turn off adblockers or other browser extensions."), Re("li", null, "Check your connection to the Internet."), Re("li", null, "Make sure you're using an up-to-date browser."), Re("li", null, "If that doesn't work, let us know.")], -1));
const Kte = Vl(() => Re("hr", null, null, -1));
const kte = {
  class: "error"
};
function Gte(t, e, r, n, i, s) {
  we();
  return Ie("div", Nte, [Re("div", Pte, [Ute, Re("div", Dte, [Bte, Mte, $te, Re("button", {
    onClick: e[0] ||= (...o) => t.onFeedbackClick && t.onFeedbackClick(...o)
  }, "Tell us what happened"), Kte, Re("pre", kte, Ye(t.message), 1)])])]);
}
const Vte = Or(Ite, [["render", Gte], ["__scopeId", "data-v-d0abff79"]]);
const Zu = ic({
  hasCrashed: false
});
const Fte = {
  install: t => {
    if (t.config.globalProperties.$handleEcastError) {
      return;
    }
    t.provide(vm.fatal.error, gn(() => Zu));
    const e = (r, n) => {
      var i;
      var s;
      if (r instanceof ol.EcastEntityNotFound || r instanceof ol.EcastFilterError || r instanceof ol.EcastRateLimitExceeded || r instanceof Error && (i = r.message) != null && i.includes("Socket not ready to send") || r instanceof Error && (s = r.message) != null && s.includes("No connection available")) {
        return console.warn(r);
      }
      if (n) {
        console.error(n, r);
      } else {
        console.error(r);
      }
      throw r;
    };
    window.tv.onError = async (r, n) => {
      if (r.level === "error") {
        Zu.hasCrashed = true;
        Zu.event = r;
        Zu.hint = n;
      }
      if (t.config.globalProperties.$debugRecorder) {
        return await t.config.globalProperties.$debugRecorder.sendToEcast();
      }
    };
    t.component("Fatal", Vte);
    t.config.globalProperties.$handleEcastError = e;
  }
};
var Hte = Jee;
var Wte = tte;
function Xte(t, e) {
  e = Hte(e, t);
  for (var r = 0, n = e.length; t != null && r < n;) {
    t = t[Wte(e[r++])];
  }
  if (r && r == n) {
    return t;
  } else {
    return undefined;
  }
}
var jte = Xte;
var zte = jte;
function qte(t, e, r) {
  var n = t == null ? undefined : zte(t, e);
  if (n === undefined) {
    return r;
  } else {
    return n;
  }
}
var Yte = qte;
const Jte = vc(Yte);
var Zte = Math.floor;
var Qte = Math.random;
function ere(t, e) {
  return t + Zte(Qte() * (e - t + 1));
}
var tre = ere;
var rre = tre;
function nre(t) {
  var e = t.length;
  if (e) {
    return t[rre(0, e - 1)];
  } else {
    return undefined;
  }
}
var cL = nre;
var ire = nL;
function sre(t, e) {
  return ire(e, function (r) {
    return t[r];
  });
}
var are = sre;
var ore = are;
var lre = jQ;
function ure(t) {
  if (t == null) {
    return [];
  } else {
    return ore(t, lre(t));
  }
}
var fre = ure;
var cre = cL;
var pre = fre;
function dre(t) {
  return cre(pre(t));
}
var hre = dre;
var Ere = cL;
var mre = hre;
var gre = vo;
function _re(t) {
  var e = gre(t) ? Ere : mre;
  return e(t);
}
var Tre = _re;
const vre = vc(Tre);
function Qx(t, e) {
  const r = t.global.locale;
  const n = t.global.messages[r];
  const i = Jte(n, e);
  if (!Array.isArray(i)) {
    console.warn(`[i18nPlugin] Translation with key ${e} is not an array`);
  }
  return vre(i);
}
const bre = {
  install: (t, e) => {
    t.directive("ts", (r, n) => {
      const i = Qx(e.i18n, n.value);
      r.textContent = i || "";
    });
    t.config.globalProperties.$ts = function (n) {
      return Qx(e.i18n, n) || "";
    };
    t.config.globalProperties.$messages = e.i18n.global.messages;
    t.config.globalProperties.$t = e.i18n.global.t;
    t.config.globalProperties.$tc = e.i18n.global.tc;
    t.config.globalProperties.$te = e.i18n.global.te;
    t.config.globalProperties.$tm = e.i18n.global.tm;
  }
};
const xre = fr({
  props: {
    image: String,
    text: String,
    subtext: String,
    classes: {
      type: [Array, String],
      default: () => "jbg"
    },
    dismissText: String
  }
});
const Rre = "https://bundles.jackbox.tv/main/@connect/assets/Bwlnl62i.png";
const Sre = "https://bundles.jackbox.tv/main/@connect/assets/DN8YV_ih.png";
const yre = "https://bundles.jackbox.tv/main/@connect/assets/Dv-2T4fF.png";
const Are = {
  key: 0,
  class: "image",
  src: Rre,
  alt: "Kicked"
};
const Lre = {
  key: 1,
  class: "image",
  src: Sre,
  alt: "Thank You"
};
const Cre = {
  key: 2,
  class: "image",
  src: yre,
  alt: "Error"
};
const wre = {
  class: "text"
};
const Ore = {
  key: 3,
  class: "subtext"
};
const Ire = {
  class: "actions"
};
function Nre(t, e, r, n, i, s) {
  const o = za("bb");
  we();
  return Ie("div", {
    class: Mr(["error-model", t.classes])
  }, [t.image === "tear" ? (we(), Ie("img", Are)) : t.image === "moon" ? (we(), Ie("img", Lre)) : (we(), Ie("img", Cre)), Tr(Re("h3", wre, null, 512), [[o, t.text]]), t.subtext ? Tr((we(), Ie("h3", Ore, null, 512)), [[o, t.subtext]]) : _t("", true), Re("div", Ire, [Tr(Re("button", {
    onClick: e[0] ||= xn(f => t.$emit("resolve"), ["prevent"])
  }, null, 512), [[o, t.dismissText]])])], 2);
}
const Pre = Or(xre, [["render", Nre], ["__scopeId", "data-v-420dd700"]]);
const Ure = fr({
  props: {
    text: String,
    subtext: String,
    classes: {
      type: [Array, String],
      default: () => "jbg"
    },
    options: Array
  },
  emits: ["resolve"]
});
const Dre = {
  class: "text"
};
const Bre = {
  key: 0,
  class: "subtext"
};
const Mre = {
  class: "actions"
};
const $re = ["onClick"];
function Kre(t, e, r, n, i, s) {
  const o = za("bb");
  we();
  return Ie("div", {
    class: Mr(["options-modal", t.classes])
  }, [Tr(Re("h3", Dre, null, 512), [[o, t.text]]), t.subtext ? Tr((we(), Ie("h3", Bre, null, 512)), [[o, t.subtext]]) : _t("", true), Re("div", Mre, [(we(true), Ie(zt, null, ls(t.options, (f, c) => Tr((we(), Ie("button", {
    key: c,
    class: Mr(f.classes),
    onClick: xn(p => t.$emit("resolve", f.value), ["prevent"])
  }, null, 10, $re)), [[o, f.text]])), 128))])], 2);
}
const kre = Or(Ure, [["render", Kre], ["__scopeId", "data-v-db592987"]]);
const Gre = fr({
  data() {
    return {
      classes: "jbg",
      props: null,
      resolve: null,
      content: null
    };
  },
  beforeMount() {
    this.$registerModal(this);
  },
  methods: {
    show(t, e = {}, r = {}) {
      this.props = e;
      this.classes = r.classes || "jbg";
      if (t === "Error") {
        this.content = Pre;
      } else if (t === "Options") {
        this.content = kre;
      } else {
        this.content = t;
      }
      return new Promise(n => {
        this.resolve = n;
      });
    },
    hide() {
      this.props = null;
      if (this.resolve) {
        this.resolve();
      }
    },
    onResolve(...t) {
      this.props = null;
      this.resolve(...t);
    },
    onBackgroundClick() {
      this.props = null;
      this.resolve();
    }
  }
});
const Vre = {
  class: "sandbox"
};
function Fre(t, e, r, n, i, s) {
  we();
  return Li(dc, {
    name: "modal-transition"
  }, {
    default: lc(() => [t.props ? (we(), Ie("div", {
      key: 0,
      class: Mr(["modal", t.classes]),
      onKeyup: e[0] ||= ka((...o) => t.onBackgroundClick && t.onBackgroundClick(...o), ["esc"]),
      onClick: e[1] ||= xn((...o) => t.onBackgroundClick && t.onBackgroundClick(...o), ["self"])
    }, [Re("div", Vre, [t.content ? (we(), Li(WD(t.content), sS({
      key: 0,
      class: "content"
    }, t.props, {
      onResolve: t.onResolve
    }), null, 16, ["onResolve"])) : _t("", true)])], 34)) : _t("", true)]),
    _: 1
  });
}
const Hre = Or(Gre, [["render", Fre], ["__scopeId", "data-v-2e99f2ab"]]);
const Wre = {
  install: t => {
    let e;
    const r = () => {
      if (!e) {
        throw new Error("No ModalComponent is registered");
      }
      return e.hide();
    };
    const n = (s, o, f) => {
      if (!e) {
        throw new Error("No ModalComponent is registered");
      }
      return e.show(s, o, f);
    };
    const i = s => {
      e = s;
    };
    t.component("Modal", Hre);
    t.config.globalProperties.$hideModal = r;
    t.config.globalProperties.$showModal = n;
    t.config.globalProperties.$registerModal = i;
  }
};
Ds("");
const Xre = {
  LABEL: "BRANCH",
  REFRESH_REQUIRED: "Refresh Required",
  PREFERRED: "PREFERRED BRANCH",
  SELECT: "Select a Branch",
  WAITING: "Waiting for Room"
};
const jre = {
  ACCEPT_ALL: "Принять",
  CONSENT_MODAL: {
    ARIA: "Cookie consent form"
  },
  DESCRIPTION: "Мы используем файлы cookie для улучшения вашего игрового опыта. Узнать больше можно в нашей [pp]Политике конфиденциальности[/pp].",
  REJECT_ALL: "Отказаться"
};
const zre = {
  UNSUPPORTED_BROWSER: "This game is not supported on this browser. View '?' or HELP to see a list of compatible browsers.",
  ROOM_IS_FULL: "Игра заполнена",
  ROOM_NOT_FOUND: "Комната не найдена",
  AUDIENCE_IS_FULL: "Мест в зрителях не осталось",
  UNABLE_TO_CONNECT: "Unable to connect to the Jackbox Games server. This is commonly caused by adblockers or privacy extensions.",
  UNABLE_TO_PRELOAD: "Невозможно подгрузить игру",
  KICKED: "Вы не можете зайти, так как вы были выгнаны модератором",
  REQUIRES_TWITCH_LOGIN: "Игра запрашивает Twitch-логин",
  ROOM_IS_LOCKED: "Игра закрыта",
  INCORRECT_PASSWORD: "Неверный пароль",
  GENERIC: "Ошибка входа в игру",
  FILTER_NAME: "В этой игре включена цензура. Пожалуйста, смените имя."
};
const qre = {
  NAME: "ИМЯ",
  NAME_PLACEHOLDER: "ВВЕДИТЕ ВАШЕ ИМЯ",
  PASSWORD_PLACEHOLDER: "ВВЕДИТЕ 5-ЗНАЧНЫЙ ПАРОЛЬ",
  PASSWORD_REQUIRED_TITLE: "Запрашивается пароль",
  PASSWORD_REQUIRED_BODY: "Please enter the password or join as an audience member",
  PASSWORD_JOIN_AS_PLAYER: "Войти игроком",
  PASSWORD_JOIN_AS_AUDIENCE: "Войти зрителем",
  ROOM_CODE: "КОД КОМНАТЫ",
  ROOM_CODE_PLACEHOLDER: "ВВЕДИТЕ 4-БУКВЕННЫЙ КОД"
};
const Yre = "Ссылка на главную страницу Jackbox Games";
const Jre = {
  APPEARANCE: "ТЕМА",
  DARK: "тёмная",
  HELP: "ПОМОЩЬ",
  TWITCH: "TWITCH",
  LIGHT: "светлая",
  LOGOUT: "ВЫЙТИ",
  MERCH: "МЕРЧ",
  PAST_GAMES: "ПРОШЕДШИЕ ИГРЫ",
  MAILING_LIST: "MAILING LIST",
  MODERATOR: "МОДЕРИРОВАТЬ"
};
const Zre = {
  CALL_TO_ACTION: {
    SHOP: "ПРОСМОТРЕТЬ ИГРУ И МАГАЗИН",
    VIEW: "ПРОСМОТРЕТЬ ИГРУ"
  },
  NEW: "НОВИНКА",
  PLAYED_ON: "Игра проходила",
  REMOVE: {
    CONFIRM: "Вы уверены?",
    DESCRIPTION: `Это навсегда удалит эту игру из списка ваших прошедших игр.`,
    MANAGE: "Убрать игру?",
    TITLE: "Вы уверены?"
  }
};
const Qre = {
  EMPTY: "Пока что прошедших игр нет",
  MANAGE: "УПРАВЛЯТЬ",
  TITLE: "ВАШИ ПРОШЕДШИЕ ИГРЫ"
};
const ene = {
  TITLE: "НЕДАВНИЕ ИГРЫ",
  VIEW_ALL: {
    BUTTON: "ПРОСМОТРЕТЬ ВСЕ",
    LINK: "ПРОСМОТРЕТЬ ВСЕ ПРОШЕДШИЕ ИГРЫ"
  }
};
const tne = {
  GAME_FULL: "Игра заполнена",
  GAME_STARTED: "Игра уже началась",
  ROOM_NOT_FOUND: "Комната не найдена"
};
const rne = {
  GAME_FULL: "ИГРА ЗАПОЛНЕНА",
  GAME_STARTED: "ИГРА УЖЕ НАЧАЛАСЬ",
  JOIN_AUDIENCE: "ПРИСОЕДИНИТЬСЯ К ЗРИТЕЛЯМ",
  RECONNECT: "ПЕРЕЗАЙТИ",
  TWITCH_LOGIN: "ВОЙТИ С TWITCH"
};
const nne = {
  CAMERA: "[b]HEADS UP:[/b] We’re not detecting a camera, but you can still play the game without a photo. If this seems wrong, try joining with a different browser.",
  STYLE: "[b]HEADS UP:[/b] Your browser seems a bit outdated, and will have some issues displaying this game.",
  TOS: "Нажимая {submit}, вы соглашаетесь с нашими [tos]Условиями пользования[/tos]"
};
const ine = {
  BRANCH: Xre,
  COOKIE: jre,
  ERROR: zre,
  FORM: qre,
  HOMEPAGE_LINK: Yre,
  MENU: Jre,
  PAST_GAME: Zre,
  PAST_GAMES: Qre,
  RECENT_GAMES: ene,
  STATUS: tne,
  SUBMIT: rne,
  WARNING: nne
};
const sne = {
  LABEL: "SECTION",
  REFRESH_REQUIRED: "Actualisation requise",
  PREFERRED: "SECTION PRÉFÉRÉE",
  SELECT: "Choisissez une section",
  WAITING: "En attente de la salle"
};
const ane = {
  ACCEPT_ALL: "Compris !",
  CONSENT_MODAL: {
    ARIA: "Formulaire d'acceptation des cookies"
  },
  DESCRIPTION: "Nous utilisons les cookies pour améliorer votre expérience de jeu et analyser le trafic du site. Plus d'infos sur notre [pp]politique de confidentialité[/pp].",
  REJECT_ALL: "Refuser"
};
const one = {
  UNSUPPORTED_BROWSER: "Le jeu n'est pas compatible avec votre navigateur. Allez sur '?' ou sur AIDE pour afficher une liste des navigateurs compatibles.",
  ROOM_IS_FULL: "La salle est pleine.",
  ROOM_NOT_FOUND: "Salle introuvable",
  AUDIENCE_IS_FULL: "Il n'y a plus de place dans le public.",
  UNABLE_TO_CONNECT: "Impossible de se connecter au serveur de Jackbox Games. Les bloqueurs de publicité ou les modules de protection de la confidentialité sont généralement à l'origine de ce problème.",
  UNABLE_TO_PRELOAD: "Impossible de précharger ce pack de jeux",
  KICKED: "Vous ne pouvez pas rejoindre la partie, parce que vous avez été éjecté(e) par un modérateur.",
  REQUIRES_TWITCH_LOGIN: "Ce jeu nécessite une connexion Twitch.",
  ROOM_IS_LOCKED: "La salle est fermée.",
  INCORRECT_PASSWORD: "Mot de passe incorrect",
  GENERIC: "Erreur en rejoignant la salle",
  FILTER_NAME: "Le filtre anti-grossièreté est activé pour cette partie. Veuillez choisir un autre nom."
};
const lne = {
  NAME: "NOM",
  NAME_PLACEHOLDER: "INDIQUEZ VOTRE NOM",
  PASSWORD_PLACEHOLDER: "TAPEZ UN MOT DE PASSE À 5 CHIFFRES",
  PASSWORD_REQUIRED_TITLE: "Mot de passe requis",
  PASSWORD_REQUIRED_BODY: "Indiquez le mot de passe ou rejoignez la salle en tant que spectateur.",
  PASSWORD_JOIN_AS_PLAYER: "Rejoindre en tant que joueur",
  PASSWORD_JOIN_AS_AUDIENCE: "Rejoindre en tant que spectateur",
  ROOM_CODE: "CODE DE SALLE",
  ROOM_CODE_PLACEHOLDER: "TAPEZ LE CODE À 4 LETTRES"
};
const une = "Lien vers la page d'accueil de Jackbox Games";
const fne = {
  APPEARANCE: "APPARENCE",
  DARK: "sombre",
  HELP: "AIDE",
  TWITCH: "TWITCH",
  LIGHT: "clair",
  LOGOUT: "DÉCONNEXION",
  MERCH: "PRODUITS DÉRIVÉS",
  PAST_GAMES: "ANCIENNES PARTIES",
  MAILING_LIST: "LISTE DE DIFFUSION",
  MODERATOR: "MODÉRATEUR"
};
const cne = {
  CALL_TO_ACTION: {
    SHOP: "VOIR LE JEU ET LA BOUTIQUE",
    VIEW: "VOIR CETTE PARTIE"
  },
  NEW: "NOUVEAU",
  PLAYED_ON: "JOUÉE LE",
  REMOVE: {
    CONFIRM: "Êtes-vous sûr ?",
    DESCRIPTION: `Cela supprimera définitivement cette partie
de votre liste d'anciennes parties.`,
    MANAGE: "Supprimer la partie ?",
    TITLE: "Êtes-vous sûr ?"
  }
};
const pne = {
  EMPTY: "Aucune ancienne partie",
  MANAGE: "GÉRER",
  TITLE: "VOS ANCIENNES PARTIES"
};
const dne = {
  TITLE: "PARTIES RÉCENTES",
  VIEW_ALL: {
    BUTTON: "VOIR TOUT",
    LINK: "VOIR TOUTES LES ANCIENNES PARTIES"
  }
};
const hne = {
  GAME_FULL: "La salle est pleine.",
  GAME_STARTED: "La partie a commencé.",
  ROOM_NOT_FOUND: "Salle introuvable"
};
const Ene = {
  GAME_FULL: "LA SALLE EST PLEINE.",
  GAME_STARTED: "LA PARTIE A COMMENCÉ.",
  JOIN_AUDIENCE: "REJOINDRE EN TANT QUE SPECTATEUR",
  RECONNECT: "SE RECONNECTER",
  TWITCH_LOGIN: "SE CONNECTER AVEC TWITCH"
};
const mne = {
  CAMERA: "[b]ATTENTION :[/b] Nous ne détectons aucune caméra, mais vous pouvez jouer sans afficher votre photo. Si vous pensez qu'il s'agit d'une erreur, essayez de rejoindre en utilisant un autre navigateur.",
  STYLE: "[b]ATTENTION :[/b] Votre navigateur semble obsolète. Vous risquez de rencontrer des problèmes d'affichage avec ce jeu.",
  TOS: "En cliquant sur {submit}, vous acceptez nos [tos]Conditions de service[/tos]."
};
const gne = {
  BRANCH: sne,
  COOKIE: ane,
  ERROR: one,
  FORM: lne,
  HOMEPAGE_LINK: une,
  MENU: fne,
  PAST_GAME: cne,
  PAST_GAMES: pne,
  RECENT_GAMES: dne,
  STATUS: hne,
  SUBMIT: Ene,
  WARNING: mne
};
const _ne = {
  LABEL: "BRANCH",
  REFRESH_REQUIRED: "Ricarica necessaria",
  PREFERRED: "BRANCH PREFERITA",
  SELECT: "Scegli una branch",
  WAITING: "In attesa di una stanza"
};
const Tne = {
  ACCEPT_ALL: "Capito!",
  CONSENT_MODAL: {
    ARIA: "Modulo di consenso sui cookie"
  },
  DESCRIPTION: "Usiamo i cookie per migliorare l'esperienza di gioco e analizzare il traffico del sito web. Per maggiori informazioni consulta la nostra [pp]Informativa sulla privacy[/pp].",
  REJECT_ALL: "Nega consenso"
};
const vne = {
  UNSUPPORTED_BROWSER: "Il gioco non è supportato dal browser attualmente in uso. Clicca su '?' o AIUTO per visualizzare la lista dei browser compatibili.",
  ROOM_IS_FULL: "La partita è al completo",
  ROOM_NOT_FOUND: "Stanza non trovata",
  AUDIENCE_IS_FULL: "Il pubblico è al completo",
  UNABLE_TO_CONNECT: "Impossibile collegarsi al server Jackbox Games. Solitamente il problema è causato da adblocker o estensioni per la privacy.",
  UNABLE_TO_PRELOAD: "Impossibile pre-caricare questo bundle di giochi",
  KICKED: "Non puoi unirti perché un moderatore ti ha cacciato",
  REQUIRES_TWITCH_LOGIN: "Questo gioco richiede l'accesso a Twitch",
  ROOM_IS_LOCKED: "La stanza è bloccata",
  INCORRECT_PASSWORD: "Password errata",
  GENERIC: "Impossibile entrare in questa stanza",
  FILTER_NAME: "Questa partita ha i filtri delle volgarità attivi. Scegli un nome diverso."
};
const bne = {
  NAME: "NOME",
  NAME_PLACEHOLDER: "INSERISCI IL TUO NOME",
  PASSWORD_PLACEHOLDER: "INSERISCI LA PASSWORD DI 5 CARATTERI",
  PASSWORD_REQUIRED_TITLE: "Password necessaria",
  PASSWORD_REQUIRED_BODY: "Inserisci la password o partecipa come pubblico",
  PASSWORD_JOIN_AS_PLAYER: "Partecipa come giocatore",
  PASSWORD_JOIN_AS_AUDIENCE: "Partecipa come pubblico",
  ROOM_CODE: "CODICE STANZA",
  ROOM_CODE_PLACEHOLDER: "INSERISCI IL CODICE DI 4 LETTERE"
};
const xne = "Link alla homepage di Jackbox Games";
const Rne = {
  APPEARANCE: "ASPETTO",
  DARK: "scuro",
  HELP: "AIUTO",
  TWITCH: "TWITCH",
  LIGHT: "chiaro",
  LOGOUT: "ESCI",
  MERCH: "NEGOZIO",
  PAST_GAMES: "PARTITE PRECEDENTI",
  MAILING_LIST: "NEWSLETTER",
  MODERATOR: "MODERATORE"
};
const Sne = {
  CALL_TO_ACTION: {
    SHOP: "VISUALIZZA GIOCO E NEGOZIO",
    VIEW: "VISUALIZZA QUESTO GIOCO"
  },
  NEW: "NUOVO",
  PLAYED_ON: "GIOCATO IL",
  REMOVE: {
    CONFIRM: "Confermi?",
    DESCRIPTION: `Quest'azione rimuoverà per sempre questo gioco
dalla lista dei giochi precedenti.`,
    MANAGE: "Rimuovere gioco?",
    TITLE: "Confermi?"
  }
};
const yne = {
  EMPTY: "Nessun gioco precedente",
  MANAGE: "GESTISCI",
  TITLE: "I TUOI GIOCHI PRECEDENTI"
};
const Ane = {
  TITLE: "GIOCHI RECENTI",
  VIEW_ALL: {
    BUTTON: "VISUALIZZA TUTTO",
    LINK: "VISUALIZZA TUTTI I GIOCHI RECENTI"
  }
};
const Lne = {
  GAME_FULL: "La partita è al completo",
  GAME_STARTED: "La partita è già iniziata",
  ROOM_NOT_FOUND: "Stanza non trovata"
};
const Cne = {
  GAME_FULL: "LA PARTITA È AL COMPLETO",
  GAME_STARTED: "LA PARTITA È GIÀ INIZIATA",
  JOIN_AUDIENCE: "PARTECIPA COME PUBBLICO",
  RECONNECT: "RICOLLEGATI",
  TWITCH_LOGIN: "ACCEDI CON TWITCH"
};
const wne = {
  CAMERA: "[b]AVVISO:[/b] Non rileviamo la telecamera, ma puoi giocare anche senza aggiungere una foto. Se la cosa non ti torna, prova ad accedere usando un altro browser.",
  STYLE: "[b]AVVISO:[/b] Il tuo browser è obsoleto e avrà dei problemi a visualizzare il gioco.",
  TOS: "Selezionando {submit}, accetti le [tos]Condizioni del servizio[/tos]"
};
const One = {
  BRANCH: _ne,
  COOKIE: Tne,
  ERROR: vne,
  FORM: bne,
  HOMEPAGE_LINK: xne,
  MENU: Rne,
  PAST_GAME: Sne,
  PAST_GAMES: yne,
  RECENT_GAMES: Ane,
  STATUS: Lne,
  SUBMIT: Cne,
  WARNING: wne
};
const Ine = {
  LABEL: "ZWEIG",
  REFRESH_REQUIRED: "Refresh benötigt",
  PREFERRED: "BEVORZUGTER ZWEIG",
  SELECT: "Wähle deinen Zweig aus",
  WAITING: "Warte auf Raum"
};
const Nne = {
  ACCEPT_ALL: "Okay!",
  CONSENT_MODAL: {
    ARIA: "Cookie-Zustimmung"
  },
  DESCRIPTION: "Wir verwenden Cookies, um deine Spielerfahrung zu verbessern und unseren Web-Traffic zu analysieren. Mehr darüber kannst du in unserer [pp]Datenschutzrichtlinie[/pp] erfahren.",
  REJECT_ALL: "Ablehnen"
};
const Pne = {
  UNSUPPORTED_BROWSER: "Dieses Spiel wird von diesem Browser nicht unterstützt. Unter '?' und HILFE findest du eine vollständige Liste an kompatiblen Browsern.",
  ROOM_IS_FULL: "Das Spiel ist voll",
  ROOM_NOT_FOUND: "Raum wurde nicht gefunden.",
  AUDIENCE_IS_FULL: "Das Publikum ist voll",
  UNABLE_TO_CONNECT: "Es konnte keine Verbindung zum Server von Jackbox Games hergestellt werden. Dies wird häufig durch Adblocker oder Privacy Extensions verursacht.",
  UNABLE_TO_PRELOAD: "Preload dieses Bundles ist nicht möglich",
  KICKED: "Du kannst nicht beitreten, weil du von einem Moderator gekickt wurdest",
  REQUIRES_TWITCH_LOGIN: "Für diesen Spiel ist Twitch erforderlich",
  ROOM_IS_LOCKED: "Spiel verschlossen",
  INCORRECT_PASSWORD: "Falsches Passwort",
  GENERIC: "Fehler beim Betreten des Spiels",
  FILTER_NAME: "Der Familientauglichkeits-Filter des Spiels ist aktiviert. Wähle einen anderen Namen."
};
const Une = {
  NAME: "NAME",
  NAME_PLACEHOLDER: "GIB DEINEN NAMEN EIN",
  PASSWORD_PLACEHOLDER: "FÜNFSTELLIGES PASSWORT EINGEBEN",
  PASSWORD_REQUIRED_TITLE: "Passwort benötigt",
  PASSWORD_REQUIRED_BODY: "Bitte gib das Passwort ein oder setze dich ins Publikum",
  PASSWORD_JOIN_AS_PLAYER: "Als Spieler beitreten",
  PASSWORD_JOIN_AS_AUDIENCE: "Ins Publikum setzen",
  ROOM_CODE: "RAUMCODE",
  ROOM_CODE_PLACEHOLDER: "GIB DEN 4-STELLIGEN CODE EIN"
};
const Dne = "Link zur Homepage von Jackbox Games";
const Bne = {
  APPEARANCE: "DARSTELLUNG",
  DARK: "Dunkel",
  HELP: "HILFE",
  TWITCH: "TWITCH",
  LIGHT: "Hell",
  LOGOUT: "ABMELDEN",
  MERCH: "MERCH",
  PAST_GAMES: "ANDERE SPIELE",
  MAILING_LIST: "MAILINGLISTE",
  MODERATOR: "MODERATOR"
};
const Mne = {
  CALL_TO_ACTION: {
    SHOP: "SPIEL UND SHOP ANSEHEN",
    VIEW: "DIESES SPIEL ANSEHEN"
  },
  NEW: "NEU",
  PLAYED_ON: "GESPIELT AM",
  REMOVE: {
    CONFIRM: "Bist du sicher?",
    DESCRIPTION: `Dies wird das Spiel dauerhaft aus der Liste
deiner bisherigen Spiele entfernen.`,
    MANAGE: "Spiel entfernen?",
    TITLE: "Bist du sicher?"
  }
};
const $ne = {
  EMPTY: "Noch keine bisherigen Spiele",
  MANAGE: "VERWALTEN",
  TITLE: "DEINE BISHERIGEN SPIELE"
};
const Kne = {
  TITLE: "AKTUELLE SPIELE",
  VIEW_ALL: {
    BUTTON: "ALLE ANSEHEN",
    LINK: "ALLE BISHERIGEN SPIELE ANSEHEN"
  }
};
const kne = {
  GAME_FULL: "Spiel ist voll",
  GAME_STARTED: "Spiel hat bereits begonnen",
  ROOM_NOT_FOUND: "Raum wurde nicht gefunden."
};
const Gne = {
  GAME_FULL: "SPIEL IST VOLL",
  GAME_STARTED: "SPIEL HAT BEREITS BEGONNEN",
  JOIN_AUDIENCE: "INS PUBLIKUM SETZEN",
  RECONNECT: "NEU VERBINDEN",
  TWITCH_LOGIN: "MIT TWITCH ANMELDEN"
};
const Vne = {
  CAMERA: "[b]ACHTUNG:[/b] Es wurde keine Kamera erkannt, aber du kannst das Spiel auch ohne Foto spielen. Falls eine Kamera vorhanden ist, probiere es mit einem anderen Browser.",
  STYLE: "[b]ACHTUNG:[/b] Dein Browser scheint etwas veraltet zu sein. Es könnte Probleme bei der Anzeige dieses Spiels geben.",
  TOS: "Wenn du auf {submit} klickst, erklärst du dich mit unseren [tos]Nutzungsbedingungen[/tos] einverstanden"
};
const Fne = {
  BRANCH: Ine,
  COOKIE: Nne,
  ERROR: Pne,
  FORM: Une,
  HOMEPAGE_LINK: Dne,
  MENU: Bne,
  PAST_GAME: Mne,
  PAST_GAMES: $ne,
  RECENT_GAMES: Kne,
  STATUS: kne,
  SUBMIT: Gne,
  WARNING: Vne
};
const Hne = {
  LABEL: "RAMA",
  REFRESH_REQUIRED: "Actualización requerida",
  PREFERRED: "RAMA PREFERIDA",
  SELECT: "Selecciona una rama",
  WAITING: "Esperando la sala"
};
const Wne = {
  ACCEPT_ALL: "¡Vale!",
  CONSENT_MODAL: {
    ARIA: "Formulario de consentimiento para el uso de cookies"
  },
  DESCRIPTION: "Usamos las cookies para mejorar tu experiencia de juego y analizar el tráfico del sitio web. Puedes encontrar más información en nuestra [pp]política de privacidad[/pp].",
  REJECT_ALL: "No aceptar"
};
const Xne = {
  UNSUPPORTED_BROWSER: "El juego no es compatible con este navegador. En '?' y AYUDA puedes ver la lista de navegadores compatibles.",
  ROOM_IS_FULL: "La sala está llena",
  ROOM_NOT_FOUND: "No se encuentra la sala",
  AUDIENCE_IS_FULL: "El público está completo",
  UNABLE_TO_CONNECT: "No ha podido establecerse conexión con el servidor de Jackbox Games. Puede ser debido a los bloqueadores de anuncios o a las extensiones de privacidad.",
  UNABLE_TO_PRELOAD: "No se ha podido precargar este lote de juegos",
  KICKED: "No puedes unirte porque te ha expulsado un moderador",
  REQUIRES_TWITCH_LOGIN: "Este juego requiere un inicio de sesión de Twitch",
  ROOM_IS_LOCKED: "El juego está bloqueado",
  INCORRECT_PASSWORD: "Contraseña incorrecta",
  GENERIC: "Error al unirte al juego",
  FILTER_NAME: "Esta partida tiene activados los filtros de lenguaje malsonante. Elige un nombre diferente."
};
const jne = {
  NAME: "NOMBRE",
  NAME_PLACEHOLDER: "INDICA TU NOMBRE",
  PASSWORD_PLACEHOLDER: "INTRODUCIR CONTRASEÑA DE 5 DÍGITOS",
  PASSWORD_REQUIRED_TITLE: "Hace falta una contraseña",
  PASSWORD_REQUIRED_BODY: "Introduce la contraseña o únete como público",
  PASSWORD_JOIN_AS_PLAYER: "Unirse como jugador",
  PASSWORD_JOIN_AS_AUDIENCE: "Unirse como público",
  ROOM_CODE: "CÓDIGO DE LA SALA",
  ROOM_CODE_PLACEHOLDER: "INTRODUCIR CÓDIGO DE 4 CARACTERES"
};
const zne = "Enlace a la página inicial de Jackbox Games";
const qne = {
  APPEARANCE: "APARIENCIA",
  DARK: "oscura",
  HELP: "AYUDA",
  TWITCH: "TWITCH",
  LIGHT: "clara",
  LOGOUT: "CERRAR SESIÓN",
  MERCH: "MERCHANDISING",
  PAST_GAMES: "PARTIDAS ANTERIORES",
  MAILING_LIST: "LISTA DE CORREO",
  MODERATOR: "MODERADOR"
};
const Yne = {
  CALL_TO_ACTION: {
    SHOP: "VER JUEGO Y COMPRAR",
    VIEW: "VER ESTE JUEGO"
  },
  NEW: "NUEVO",
  PLAYED_ON: "SE JUEGA EN",
  REMOVE: {
    CONFIRM: "¿Estás seguro?",
    DESCRIPTION: `Esto eliminará de forma permanente esta partida
de tu lista de partidas anteriores.`,
    MANAGE: "¿Retirar partida?",
    TITLE: "¿Estás seguro?"
  }
};
const Jne = {
  EMPTY: "Todavía no hay partidas anteriores",
  MANAGE: "ADMINISTRAR",
  TITLE: "PARTIDAS ANTERIORES"
};
const Zne = {
  TITLE: "PARTIDAS RECIENTES",
  VIEW_ALL: {
    BUTTON: "VER TODO",
    LINK: "VER TODAS LAS PARTIDAS ANTERIORES"
  }
};
const Qne = {
  GAME_FULL: "La partida está completa",
  GAME_STARTED: "La partida ha empezado",
  ROOM_NOT_FOUND: "No se encuentra la sala"
};
const eie = {
  GAME_FULL: "LA PARTIDA ESTÁ COMPLETA",
  GAME_STARTED: "LA PARTIDA HA EMPEZADO",
  JOIN_AUDIENCE: "UNIRSE COMO PÚBLICO",
  RECONNECT: "RECONECTAR",
  TWITCH_LOGIN: "INICIAR SESIÓN CON TWITCH"
};
const tie = {
  CAMERA: "[b]AVISO:[/b] No se detecta ninguna cámara, pero puedes jugar sin foto. Si crees que se trata de un error, cambia de navegador.",
  STYLE: "[b]AVISO:[/b] Tu navegador está un poco desactualizado, así que es posible que el juego no se vea del todo bien.",
  TOS: "Al hacer clic en {submit}, aceptas las [tos]Condiciones del servicio[/tos]"
};
const rie = {
  BRANCH: Hne,
  COOKIE: Wne,
  ERROR: Xne,
  FORM: jne,
  HOMEPAGE_LINK: zne,
  MENU: qne,
  PAST_GAME: Yne,
  PAST_GAMES: Jne,
  RECENT_GAMES: Zne,
  STATUS: Qne,
  SUBMIT: eie,
  WARNING: tie
};
const nie = {
  LABEL: "RAMA",
  REFRESH_REQUIRED: "Requiere actualizar",
  PREFERRED: "RAMA PREFERIDA",
  SELECT: "Selecciona una rama",
  WAITING: "Esperando una sala"
};
const iie = {
  ACCEPT_ALL: "¡Listo!",
  CONSENT_MODAL: {
    ARIA: "Formulario de consentimiento de cookies"
  },
  DESCRIPTION: "Usamos cookies para mejorar tu experiencia de juego y analizar el tráfico web. Para obtener más información, consulta nuestro [pp]Aviso de Privacidad[/pp].",
  REJECT_ALL: "No participar"
};
const sie = {
  UNSUPPORTED_BROWSER: "El juego no es compatible con este navegador. En '?' o AYUDA puedes ver la lista de navegadores compatibles.",
  ROOM_IS_FULL: "La partida está completa",
  ROOM_NOT_FOUND: "No se encuentra la sala",
  AUDIENCE_IS_FULL: "El público está completo",
  UNABLE_TO_CONNECT: "No podemos conectarte a los servidores de Jackbox Games. Puede ser debido a los bloqueadores de anuncios y las extensiones de privacidad.",
  UNABLE_TO_PRELOAD: "No se puede precargar este paquete de juegos",
  KICKED: "No puedes unirte porque un moderador te expulsó",
  REQUIRES_TWITCH_LOGIN: "Este juego requiere inicio de sesión de Twitch",
  ROOM_IS_LOCKED: "La partida está bloqueada",
  INCORRECT_PASSWORD: "Contraseña incorrecta",
  GENERIC: "Error al unirte a la partida",
  FILTER_NAME: "Esta partida tiene activados los filtros de lenguaje soez. Elige un nombre diferente."
};
const aie = {
  NAME: "NOMBRE",
  NAME_PLACEHOLDER: "ESCRIBE TU NOMBRE",
  PASSWORD_PLACEHOLDER: "INGRESA CONTRASEÑA DE 5 DÍGITOS",
  PASSWORD_REQUIRED_TITLE: "Requiere contraseña",
  PASSWORD_REQUIRED_BODY: "Ingresa la contraseña o únete como parte del público",
  PASSWORD_JOIN_AS_PLAYER: "Unirse como jugador",
  PASSWORD_JOIN_AS_AUDIENCE: "Unirse al público",
  ROOM_CODE: "CÓDIGO DE LA SALA",
  ROOM_CODE_PLACEHOLDER: "INGRESA EL CÓDIGO DE 4 CARACTERES"
};
const oie = "Enlace a la página de inicio de Jackbox Games";
const lie = {
  APPEARANCE: "APARIENCIA",
  DARK: "oscura",
  HELP: "AYUDA",
  TWITCH: "TWITCH",
  LIGHT: "clara",
  LOGOUT: "CERRAR SESIÓN",
  MERCH: "PRODUCTOS",
  PAST_GAMES: "PARTIDAS ANTERIORES",
  MAILING_LIST: "LISTA DE CORREO",
  MODERATOR: "MODERADOR"
};
const uie = {
  CALL_TO_ACTION: {
    SHOP: "VER JUEGO Y TIENDA",
    VIEW: "VER ESTE JUEGO"
  },
  NEW: "NUEVO",
  PLAYED_ON: "SE JUGÓ EN",
  REMOVE: {
    CONFIRM: "¿De verdad?",
    DESCRIPTION: `Eliminarás permanentemente este juego
de tu lista de partidas anteriores.`,
    MANAGE: "¿Eliminar juego?",
    TITLE: "¿De verdad?"
  }
};
const fie = {
  EMPTY: "Aún no hay partidas anteriores",
  MANAGE: "ADMINISTRAR",
  TITLE: "TUS PARTIDAS ANTERIORES"
};
const cie = {
  TITLE: "PARTIDAS RECIENTES",
  VIEW_ALL: {
    BUTTON: "VER TODOS",
    LINK: "VER TODAS LAS PARTIDAS ANTERIORES"
  }
};
const pie = {
  GAME_FULL: "La partida está completa",
  GAME_STARTED: "La partida ha empezado",
  ROOM_NOT_FOUND: "No se encuentra la sala"
};
const die = {
  GAME_FULL: "LA PARTIDA ESTÁ COMPLETA",
  GAME_STARTED: "LA PARTIDA HA EMPEZADO",
  JOIN_AUDIENCE: "UNIRSE AL PÚBLICO",
  RECONNECT: "RECONECTAR",
  TWITCH_LOGIN: "INICIAR SESIÓN CON TWITCH"
};
const hie = {
  CAMERA: "[b]AVISO:[/b] No se detecta ninguna cámara, pero igual puedes jugar sin una foto. Si crees que se trata de un error, cambia de navegador.",
  STYLE: "[b]AVISO:[/b] Tu navegador está un poco desactualizado, así que es posible que el juego no se vea del todo bien.",
  TOS: "Al hacer clic en {submit}, aceptas las [tos]Condiciones del servicio[/tos]"
};
const Eie = {
  BRANCH: nie,
  COOKIE: iie,
  ERROR: sie,
  FORM: aie,
  HOMEPAGE_LINK: oie,
  MENU: lie,
  PAST_GAME: uie,
  PAST_GAMES: fie,
  RECENT_GAMES: cie,
  STATUS: pie,
  SUBMIT: die,
  WARNING: hie
};
const mie = {
  LABEL: "RAMO",
  REFRESH_REQUIRED: "Atualização obrigatória",
  PREFERRED: "RAMO DE PREFERÊNCIA",
  SELECT: "Selecione um ramo",
  WAITING: "Aguardando sala"
};
const gie = {
  ACCEPT_ALL: "Entendi!",
  CONSENT_MODAL: {
    ARIA: "Formulário de consentimento ao uso de cookies"
  },
  DESCRIPTION: "Nós usamos cookies para aprimorar sua experiência de jogo e analisar o tráfego do site. Saiba mais na nossa [pp]Política de Privacidade[/pp].",
  REJECT_ALL: "Recusar"
};
const _ie = {
  UNSUPPORTED_BROWSER: "Este jogo não é compatível com este navegador. Clique em “?” ou “AJUDA” para ver uma lista de navegadores compatíveis.",
  ROOM_IS_FULL: "O jogo está lotado",
  ROOM_NOT_FOUND: "Sala não encontrada",
  AUDIENCE_IS_FULL: "A plateia atingiu lotação máxima",
  UNABLE_TO_CONNECT: "Não foi possível se conectar ao servidor da Jackbox Games. Geralmente isso se deve a bloqueadores de anúncios ou extensões de privacidade.",
  UNABLE_TO_PRELOAD: "Não foi possível pré-carregar este pacote de jogo",
  KICKED: "Não é possível entrar, pois um moderador expulsou você",
  REQUIRES_TWITCH_LOGIN: "O jogo requer login na Twitch",
  ROOM_IS_LOCKED: "O jogo é privado",
  INCORRECT_PASSWORD: "Senha incorreta",
  GENERIC: "Erro ao entrar neste jogo",
  FILTER_NAME: "Filtros de linguagem imprópria estão ativos neste jogo. Escolha outro nome."
};
const Tie = {
  NAME: "NOME",
  NAME_PLACEHOLDER: "INSIRA SEU NOME",
  PASSWORD_PLACEHOLDER: "INSIRA UMA SENHA DE 5 DÍGITOS",
  PASSWORD_REQUIRED_TITLE: "Senha obrigatória",
  PASSWORD_REQUIRED_BODY: "Insira a senha ou entre como espectador",
  PASSWORD_JOIN_AS_PLAYER: "Entrar como jogador",
  PASSWORD_JOIN_AS_AUDIENCE: "Entrar como espectador",
  ROOM_CODE: "CÓDIGO DA SALA",
  ROOM_CODE_PLACEHOLDER: "INSIRA O CÓDIGO DE 4 LETRAS"
};
const vie = "Link para a página da Jackbox Games";
const bie = {
  APPEARANCE: "TEMA",
  DARK: "escuro",
  HELP: "AJUDA",
  TWITCH: "TWITCH",
  LIGHT: "claro",
  LOGOUT: "DESCONECTAR",
  MERCH: "PRODUTOS",
  PAST_GAMES: "JOGOS ANTERIORES",
  MAILING_LIST: "LISTA DE E-MAILS",
  MODERATOR: "MODERADOR"
};
const xie = {
  CALL_TO_ACTION: {
    SHOP: "VER JOGO E EXPLORAR",
    VIEW: "VER ESTE JOGO"
  },
  NEW: "NOVO",
  PLAYED_ON: "JOGADO EM",
  REMOVE: {
    CONFIRM: "Tem certeza?",
    DESCRIPTION: `Este jogo será removido permanentemente
de sua lista de jogos anteriores.`,
    MANAGE: "Remover jogo?",
    TITLE: "Tem certeza?"
  }
};
const Rie = {
  EMPTY: "Nenhum jogo anterior",
  MANAGE: "GERENCIAR",
  TITLE: "SEUS JOGOS ANTERIORES"
};
const Sie = {
  TITLE: "JOGOS RECENTES",
  VIEW_ALL: {
    BUTTON: "VER TUDO",
    LINK: "VER TODOS OS JOGOS ANTERIORES"
  }
};
const yie = {
  GAME_FULL: "O jogo está lotado",
  GAME_STARTED: "O jogo começou",
  ROOM_NOT_FOUND: "Sala não encontrada"
};
const Aie = {
  GAME_FULL: "O JOGO ESTÁ LOTADO",
  GAME_STARTED: "O JOGO COMEÇOU",
  JOIN_AUDIENCE: "ENTRAR COMO ESPECTADOR",
  RECONNECT: "RECONECTAR",
  TWITCH_LOGIN: "FAZER LOGIN COM A TWITCH"
};
const Lie = {
  CAMERA: "[b]AVISO:[/b] não detectamos nenhuma câmera, mas você ainda pode jogar sem foto. Se preferir, tente entrar com outro navegador.",
  STYLE: "[b]AVISO:[/b] seu navegador está desatualizado e terá problemas para exibir o jogo.",
  TOS: "Clicando em {submit}, você concordará com os nossos [tos]Termos de Serviço[/tos]"
};
const Cie = {
  BRANCH: mie,
  COOKIE: gie,
  ERROR: _ie,
  FORM: Tie,
  HOMEPAGE_LINK: vie,
  MENU: bie,
  PAST_GAME: xie,
  PAST_GAMES: Rie,
  RECENT_GAMES: Sie,
  STATUS: yie,
  SUBMIT: Aie,
  WARNING: Lie
};
const ya = {
  en: ine,
  fr: gne,
  it: One,
  de: Fne,
  es: rie,
  "es-XL": Eie,
  "pt-BR": Cie
};
var Qu;
var wie = new Uint8Array(16);
function Oie() {
  if (!Qu && (Qu = typeof crypto !== "undefined" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== "undefined" && typeof msCrypto.getRandomValues == "function" && msCrypto.getRandomValues.bind(msCrypto), !Qu)) {
    throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
  }
  return Qu(wie);
}
const Iie = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
function Nie(t) {
  return typeof t == "string" && Iie.test(t);
}
var _r = [];
for (var ch = 0; ch < 256; ++ch) {
  _r.push((ch + 256).toString(16).substr(1));
}
function Pie(t, e = 0) {
  var r = (_r[t[e + 0]] + _r[t[e + 1]] + _r[t[e + 2]] + _r[t[e + 3]] + "-" + _r[t[e + 4]] + _r[t[e + 5]] + "-" + _r[t[e + 6]] + _r[t[e + 7]] + "-" + _r[t[e + 8]] + _r[t[e + 9]] + "-" + _r[t[e + 10]] + _r[t[e + 11]] + _r[t[e + 12]] + _r[t[e + 13]] + _r[t[e + 14]] + _r[t[e + 15]]).toLowerCase();
  if (!Nie(r)) {
    throw TypeError("Stringified UUID is invalid");
  }
  return r;
}
function Uie(t, e, r) {
  t = t || {};
  var n = t.random || (t.rng || Oie)();
  n[6] = n[6] & 15 | 64;
  n[8] = n[8] & 63 | 128;
  return Pie(n);
}
const Die = fr({
  props: {
    room: Object
  },
  emits: ["resolve"],
  data() {
    return {
      passwordLength: 5,
      password: ""
    };
  },
  computed: {
    canSubmit() {
      return this.password.length >= this.passwordLength;
    }
  },
  mounted() {
    this.$refs.input.focus();
  },
  methods: {
    onInput(t) {
      const e = t.target;
      this.password = e.value.toUpperCase();
    }
  }
});
const Bie = "https://bundles.jackbox.tv/main/@connect/assets/BP6xhM9y.png";
const pL = t => {
  Cl("data-v-711f56b2");
  t = t();
  wl();
  return t;
};
const Mie = {
  class: "jbg password"
};
const $ie = pL(() => Re("img", {
  class: "image",
  src: Bie,
  alt: "Enter Password"
}, null, -1));
const Kie = {
  class: "text"
};
const kie = {
  key: 0,
  class: "subtext"
};
const Gie = {
  class: "actions"
};
const Vie = ["value", "placeholder", "maxlength"];
const Fie = ["disabled"];
const Hie = pL(() => Re("hr", null, null, -1));
const Wie = {
  class: "or"
};
function Xie(t, e, r, n, i, s) {
  const o = za("bb");
  we();
  return Ie("div", Mie, [$ie, Re("h3", Kie, Ye(t.$t("FORM.PASSWORD_REQUIRED_TITLE")), 1), t.room.audienceEnabled ? (we(), Ie("p", kie, Ye(t.$t("FORM.PASSWORD_REQUIRED_BODY")), 1)) : _t("", true), Re("div", Gie, [Re("input", {
    ref: "input",
    type: "text",
    value: t.password,
    placeholder: t.$t("FORM.PASSWORD_PLACEHOLDER"),
    maxlength: t.passwordLength,
    autocapitalize: "off",
    autocorrect: "off",
    autocomplete: "off",
    "aria-label": "password",
    onInput: e[0] ||= (...f) => t.onInput && t.onInput(...f)
  }, null, 40, Vie), Re("button", {
    type: "submit",
    disabled: !t.canSubmit,
    onClick: e[1] ||= xn(f => t.$emit("resolve", t.password), ["prevent"])
  }, Ye(t.$t("FORM.PASSWORD_JOIN_AS_PLAYER")), 9, Fie), t.room.audienceEnabled ? (we(), Ie(zt, {
    key: 0
  }, [Hie, Re("p", Wie, Ye(t.$t("SEPARATOR.OR")), 1), Tr(Re("button", {
    class: "audience",
    type: "submit",
    onClick: e[2] ||= xn(f => t.$emit("resolve", true), ["prevent"])
  }, null, 512), [[o, t.$t("FORM.PASSWORD_JOIN_AS_AUDIENCE")]])], 64)) : (we(), Ie("button", {
    key: 1,
    class: "cancel",
    onClick: e[3] ||= xn(f => t.$emit("resolve", false), ["prevent"])
  }, Ye(t.$t("ACTION.CANCEL")), 1))])]);
}
const jie = Or(Die, [["render", Xie], ["__scopeId", "data-v-711f56b2"]]);
const zie = fr({
  components: {
    TextInput: Sj
  },
  props: {
    match: Object,
    twitchUser: Object
  },
  emits: {
    twitchLoginWasClicked: () => true
  },
  data() {
    return {
      codeLength: 4,
      code: "",
      nameLength: 12,
      name: "",
      passwordLength: 5,
      password: "",
      branch: "",
      isConnecting: false,
      reconnectData: null,
      api: new cW.APIClient({
        host: ts.serverUrl,
        scheme: "https"
      }),
      isPreloading: false,
      preloaded: {
        appTag: null,
        branch: null
      },
      room: null,
      roomNotFound: false,
      warnings: []
    };
  },
  computed: {
    canConnect() {
      return !!this.hasFormData && !this.isConnecting && !this.isPreloading && !!this.preloaded.appTag;
    },
    hasFormData() {
      return this.code.length === this.codeLength && !!this.name && this.name.length <= this.nameLength;
    },
    isReconnectable() {
      var t;
      var e;
      var r;
      return !!this.reconnectData && ((t = this.room) == null ? undefined : t.code) === this.reconnectData.code && ((r = (e = this.game) == null ? undefined : e.features) == null || !r.includes("dropInDropOut") || !this.room || (this.reconnectData.joinAs !== "player" || !this.room.full) && (this.reconnectData.joinAs !== "audience" || !!this.room.full));
    },
    game() {
      var t;
      if ((t = this.room) != null && t.appTag) {
        return Ul(this.room.appTag) ?? null;
      } else {
        return null;
      }
    },
    state() {
      var e;
      var r;
      if (!this.room) {
        return {
          canSubmit: false,
          statusKey: this.code.length === this.codeLength && this.roomNotFound ? "STATUS.ROOM_NOT_FOUND" : "",
          submitKey: "ACTION.PLAY"
        };
      }
      let t = "???";
      if ((e = this.game) != null && e.name && ((r = this.game) != null && r.isPublic || ts.isDevelopment())) {
        t = this.game.name;
      }
      if (this.isReconnectable) {
        return {
          canSubmit: this.canConnect,
          statusKey: t,
          submitKey: "SUBMIT.RECONNECT",
          joinAs: this.reconnectData.joinAs
        };
      } else if (this.room.locked) {
        if (this.room.audienceEnabled) {
          return {
            canSubmit: this.canConnect,
            statusKey: "STATUS.GAME_STARTED",
            submitKey: "SUBMIT.JOIN_AUDIENCE",
            joinAs: "audience"
          };
        } else {
          return {
            canSubmit: false,
            statusKey: "STATUS.GAME_STARTED",
            submitKey: "SUBMIT.GAME_STARTED"
          };
        }
      } else if (this.room.full) {
        if (this.room.audienceEnabled) {
          return {
            canSubmit: this.canConnect,
            statusKey: "STATUS.GAME_FULL",
            submitKey: "SUBMIT.JOIN_AUDIENCE",
            joinAs: "audience"
          };
        } else {
          return {
            canSubmit: false,
            statusKey: "STATUS.GAME_FULL",
            submitKey: "SUBMIT.GAME_FULL"
          };
        }
      } else {
        return {
          canSubmit: this.canConnect,
          statusText: t,
          submitKey: "ACTION.PLAY",
          joinAs: "player"
        };
      }
    },
    shouldShowBranchOptions() {
      return window.tv.manifest.environment !== "production";
    },
    branchOptions() {
      if (!this.room) {
        return {};
      }
      const t = {};
      Object.entries(window.tv.manifest.branches).forEach(([e, r]) => {
        if (r.bundles[this.room.appTag]) {
          t[e] = r;
        }
      });
      return t;
    },
    selectedBranch() {
      return window.tv.manifest.branches[this.branch];
    },
    selectedBundle() {
      var t;
      if (this.room) {
        if ((t = window.tv.manifest.branches[this.branch]) == null) {
          return undefined;
        } else {
          return t.bundles[this.room.appTag];
        }
      }
    },
    displayBranchLastUpdated() {
      if (this.selectedBranch) {
        return new Date(this.selectedBranch.lastUpdated).toLocaleString();
      }
    },
    displayBranchType() {
      if (this.selectedBranch) {
        if (this.selectedBranch.type === "production") {
          return "PROD";
        } else {
          return "DEV";
        }
      }
    },
    displayVersion() {
      var t;
      var e;
      return ((t = this.selectedBundle) == null ? undefined : t.version) ?? ((e = this.selectedBranch) == null ? undefined : e.version);
    }
  },
  watch: {
    twitchUser: "twitchDidUpdate",
    branch: "preloadBundle"
  },
  beforeMount() {
    this.populateFromStorage();
    this.populateFromURL();
    this.checkReconnect();
  },
  methods: {
    populateFromStorage() {
      if (qe.isSupported) {
        this.code = (qe.get("code") ?? "").toUpperCase();
        this.name = (qe.get("name") ?? "").toUpperCase();
      }
    },
    populateFromURL() {
      var n;
      var i;
      var s;
      var o;
      var f;
      var c;
      const t = (i = (n = this.match) == null ? undefined : n.params) == null ? undefined : i.code;
      const e = (o = (s = this.match) == null ? undefined : s.params) == null ? undefined : o.name;
      const r = (c = (f = this.match) == null ? undefined : f.params) == null ? undefined : c.password;
      if (t && t.length === this.codeLength) {
        this.code = t.toUpperCase();
        this.getRoomInfo();
      }
      if (e) {
        this.name = e;
      }
      if (r) {
        this.password = r;
      }
    },
    async checkReconnect() {
      if (!this.code) {
        return;
      }
      await this.getRoomInfo();
      if (!this.room) {
        this.code = "";
        qe.remove("code");
        qe.remove("reconnect");
        return;
      }
      const t = qe.get("reconnect");
      if (t) {
        const [e, r, n, i] = t.split(":");
        this.reconnectData = {
          code: this.code,
          id: parseInt(e, 10),
          joinAs: r,
          secret: n,
          branch: i
        };
      }
    },
    onCodeInput() {
      const t = /\s/g;
      this.code = this.code.replace(t, "").trim().toUpperCase();
      if (this.code.length !== this.codeLength) {
        this.room = null;
        return;
      }
      this.getRoomInfo();
    },
    onNameInput() {
      const t = /^\s+/;
      this.name = this.name.replace(t, "");
      const e = zh.username(this.name);
      this.name = e.toUpperCase();
    },
    async onFormSubmit() {
      await this.connect(this.state.joinAs);
    },
    getBranchForRoom() {
      var n;
      var i;
      if (!this.room) {
        return null;
      }
      const t = this.room.appTag;
      const e = window.tv.manifest.branches;
      const r = [this.branch, (i = (n = this.match) == null ? undefined : n.params) == null ? undefined : i.branch, this.room.controllerBranch, "** hmr **", qe.get("preference:branch"), "** dist **", "main"];
      for (let s = 0; s <= r.length; s++) {
        const o = r[s];
        if (o && e[o] && e[o].bundles[t]) {
          return o;
        }
      }
      return null;
    },
    shouldPromptForPassword(t) {
      return t === "player" && !this.isReconnectable && !!this.room.passwordRequired && !this.password;
    },
    async promptForPassword() {
      const t = await this.$showModal(jie, {
        room: this.room
      });
      if (t) {
        if (t === true) {
          this.connect("audience");
          return;
        }
        this.password = t;
        this.connect("player");
      }
    },
    shouldPromptForTwitch(t) {
      return t === "player" && !!this.room.twitchLocked && !this.twitchUser;
    },
    async promptForTwitch() {
      var r;
      const t = [{
        text: this.$t("SUBMIT.TWITCH_LOGIN"),
        classes: ["twitch"],
        value: "twitch"
      }];
      if ((r = this.room) != null && r.audienceEnabled) {
        t.push({
          text: this.$t("SUBMIT.JOIN_AUDIENCE"),
          classes: ["audience"],
          value: "audience"
        });
      } else {
        t.push({
          text: this.$t("ACTION.CANCEL"),
          classes: ["cancel"],
          value: "cancel"
        });
      }
      switch (await this.$showModal("Options", {
        text: this.$t("ERROR.REQUIRES_TWITCH_LOGIN"),
        options: t
      })) {
        case "twitch":
          this.$emit("twitchLoginWasClicked");
          return;
        case "audience":
          this.connect("audience");
      }
    },
    twitchDidUpdate(t, e) {
      if (t) {
        let r = t.display_name;
        if (r.length > this.nameLength) {
          r = `${r.slice(0, this.nameLength - 1)}…`;
        }
        this.name = r;
        return;
      }
      if (e && !t) {
        this.name = "";
      }
    },
    async promptForRetry(t) {
      var n;
      let e = [{
        text: this.$t("ACTION.OK"),
        classes: ["cancel"],
        value: "close"
      }];
      if ((n = this.room) != null && n.audienceEnabled) {
        e = [{
          text: this.$t("FORM.PASSWORD_JOIN_AS_AUDIENCE"),
          classes: ["audience"],
          value: "audience"
        }, {
          text: this.$t("ACTION.CANCEL"),
          classes: ["cancel"],
          value: "close"
        }];
      }
      if (t === "ERROR.AUDIENCE_IS_FULL") {
        e = [{
          text: this.$t("ACTION.OK"),
          classes: ["ok"],
          value: "ok"
        }];
      }
      if ((await this.$showModal("Options", {
        text: this.$t(t),
        options: e
      })) === "audience") {
        return this.connect("audience");
      }
    },
    async getRoomInfo() {
      this.roomNotFound = false;
      try {
        const t = await this.api.getRoom({
          code: this.code
        });
        this.room = t;
        this.warnings = await RW.warningsForAppTag(t.appTag);
        this.$i18n.locale = this.room.locale;
        const e = this.getBranchForRoom();
        if (!e) {
          return;
        }
        this.branch = e;
        await this.preloadBundle();
      } catch (t) {
        console.warn(t);
        this.room = null;
        this.roomNotFound = true;
        this.branch = "";
      }
    },
    async preloadBundle() {
      if (!this.room || !this.branch || this.isPreloading) {
        return;
      }
      const t = this.preloaded.appTag !== this.room.appTag;
      const e = this.preloaded.branch !== this.branch;
      if (!!t || !!e) {
        this.preloaded = {
          appTag: null,
          branch: null
        };
        try {
          this.isPreloading = true;
          await window.tv.load({
            app: this.room.appTag,
            branch: this.branch
          });
          this.preloaded = {
            appTag: this.room.appTag,
            branch: this.branch
          };
        } catch (r) {
          console.error(r);
          this.showError("ERROR.UNABLE_TO_PRELOAD");
        }
        this.isPreloading = false;
      }
    },
    getConnectOptions(t) {
      const e = t === "audience" ? this.room.audienceHost : this.room.host;
      let r = zh.username(this.name).trim();
      if (r.length > this.nameLength) {
        r = `${r.substring(0, this.nameLength - 1)}…`;
      }
      let n = Uie();
      if (qe.isSupported) {
        n = qe.get("uuid") ?? n;
        qe.set("uuid", n);
      }
      const i = {
        host: e,
        code: this.code.toUpperCase(),
        name: r,
        password: this.password,
        role: t,
        userId: n,
        debug: "false"
      };
      if (this.twitchUser) {
        i.twitchToken = this.twitchUser.token;
      }
      if (this.isReconnectable) {
        i.id = this.reconnectData.id;
        i.secret = this.reconnectData.secret;
      }
      return i;
    },
    async connect(t) {
      var r;
      var n;
      var i;
      var s;
      if (!t || this.isConnecting || !this.state.canSubmit) {
        return;
      }
      await this.getRoomInfo();
      if (!this.room) {
        return this.showError("ERROR.ROOM_NOT_FOUND");
      }
      if (this.shouldPromptForPassword(t)) {
        return this.promptForPassword();
      }
      if (this.shouldPromptForTwitch(t)) {
        return this.promptForTwitch();
      }
      if (!window.tv.connect || !window.tv.mount) {
        return this.showError("ERROR.GENERIC");
      }
      const e = this.getConnectOptions(t);
      if (e.host && e.code && e.name && !this.isConnecting) {
        try {
          this.isConnecting = true;
          const o = await window.tv.connect(e);
          this.storeReconnectData(e, o, t);
          Ys.setup();
          Ys.gameJoined(this.room.appTag, {
            role: t,
            locale: this.room.locale || "en",
            isQR: ((n = (r = this.match) == null ? undefined : r.params) == null ? undefined : n.ref) === "qr",
            isTwitchConnected: !!e.twitchToken,
            isReconnect: o.reconnect
          });
          return window.tv.mount({
            app: this.room.appTag,
            branch: this.branch,
            match: this.match,
            room: this.room,
            version: ((i = this.selectedBundle) == null ? undefined : i.version) ?? ((s = this.selectedBranch) == null ? undefined : s.version),
            welcome: o
          });
        } catch (o) {
          console.error("[connect]", o);
          this.isConnecting = false;
          this.onConnectionError(o, t);
        }
      }
    },
    storeReconnectData(t, e, r) {
      if (qe.isSupported && this.shouldReplaceReconnectData(r)) {
        qe.set("name", t.name);
        qe.set("code", this.code);
        qe.set("branch", this.branch);
        qe.set("reconnect", `${e.id}:${r}:${e.secret}:${this.branch}`);
      }
    },
    shouldReplaceReconnectData(t) {
      var e;
      var r;
      var n;
      return t === "player" || ((e = this.reconnectData) == null ? undefined : e.joinAs) !== "player" || (n = (r = this.game) == null ? undefined : r.features) == null || !n.includes("dropInDropOut");
    },
    isEcastError(t) {
      return "code" in t;
    },
    async onConnectionError(t, e) {
      var r;
      if (this.isEcastError(t)) {
        if (t.code === 2010) {
          if (e === "audience") {
            return this.promptForRetry("ERROR.AUDIENCE_IS_FULL");
          } else {
            return this.promptForRetry("ERROR.ROOM_IS_FULL");
          }
        } else if (t.code === 2009) {
          return this.promptForRetry("ERROR.ROOM_IS_LOCKED");
        } else if (t.code === 2018) {
          await this.$showModal("Error", {
            text: this.$t("ERROR.TITLE"),
            subtext: this.$t("ERROR.INCORRECT_PASSWORD"),
            dismissText: this.$t("ACTION.TRY_AGAIN")
          });
          this.password = "";
          return this.connect("player");
        } else if (t.code === 2013) {
          return this.showError("ERROR.ROOM_NOT_FOUND");
        } else if (t.code === 2015) {
          return this.showError("ERROR.REQUIRES_TWITCH_LOGIN");
        } else if (t.code === 2017) {
          return this.showError("FORM.PASSWORD_REQUIRED_TITLE");
        } else if (t.code === 2021) {
          return this.showError("ERROR.FILTER_NAME");
        } else if (t.code === 2023) {
          return this.showError("ERROR.KICKED");
        } else {
          return undefined;
        }
      }
      if ((r = t.message) != null && r.includes("Network request failed")) {
        return this.showError("ERROR.UNABLE_TO_CONNECT");
      }
      this.showError("ERROR.GENERIC");
    },
    showError(t) {
      this.$showModal("Error", {
        text: this.$t("ERROR.TITLE"),
        subtext: this.$t(t),
        dismissText: this.$t("ACTION.OK")
      });
    }
  }
});
const qie = t => {
  Cl("data-v-47cae0dc");
  t = t();
  wl();
  return t;
};
const Yie = {
  for: "roomcode"
};
const Jie = {
  key: 0,
  class: "status"
};
const Zie = {
  key: 1,
  class: "status"
};
const Qie = {
  key: 0,
  class: "warnings"
};
const ese = {
  for: "username"
};
const tse = {
  class: "remaining"
};
const rse = {
  for: "branch"
};
const nse = {
  key: 0,
  class: "status date"
};
const ise = ["disabled"];
const sse = {
  key: 0,
  value: "",
  disabled: ""
};
const ase = {
  key: 1,
  value: "",
  disabled: ""
};
const ose = ["value"];
const lse = {
  key: 0,
  class: "details"
};
const use = ["disabled"];
const fse = qie(() => Re("div", {
  class: "loading"
}, null, -1));
const cse = {
  class: "tos",
  role: "complementary"
};
function pse(t, e, r, n, i, s) {
  const o = sn("TextInput");
  const f = za("t");
  const c = za("bb");
  we();
  return Ie("form", {
    autocomplete: "off",
    onSubmit: e[3] ||= xn((...p) => t.onFormSubmit && t.onFormSubmit(...p), ["prevent"])
  }, [Re("fieldset", null, [Re("label", Yie, [ss(Ye(t.$t("FORM.ROOM_CODE")) + " ", 1), t.state.statusKey ? Tr((we(), Ie("span", Jie, null, 512)), [[f, t.state.statusKey]]) : t.state.statusText ? (we(), Ie("span", Zie, Ye(t.state.statusText), 1)) : _t("", true)]), Gt(o, {
    id: "roomcode",
    modelValue: t.code,
    "onUpdate:modelValue": e[0] ||= p => t.code = p,
    type: "text",
    autocapitalize: "off",
    autocorrect: "off",
    autocomplete: "off",
    placeholder: t.$t("FORM.ROOM_CODE_PLACEHOLDER"),
    maxlength: t.codeLength,
    onInput: t.onCodeInput
  }, null, 8, ["modelValue", "placeholder", "maxlength", "onInput"]), t.room && t.warnings.length ? (we(), Ie("div", Qie, [(we(true), Ie(zt, null, ls(t.warnings, p => {
    we();
    return Ie(zt, null, [p === "flexbox" ? Tr((we(), Ie("p", {
      key: p
    })), [[c, t.$t("WARNING.STYLE")]]) : _t("", true), p === "canvas" ? Tr((we(), Ie("p", {
      key: p
    })), [[c, t.$t("ERROR.UNSUPPORTED_BROWSER")]]) : _t("", true), p === "camera" ? Tr((we(), Ie("p", {
      key: p
    })), [[c, t.$t("WARNING.CAMERA")]]) : _t("", true)], 64);
  }), 256))])) : _t("", true), Re("label", ese, [ss(Ye(t.$t("FORM.NAME")) + " ", 1), Re("span", tse, Ye(t.nameLength - t.name.length), 1)]), Gt(o, {
    id: "username",
    modelValue: t.name,
    "onUpdate:modelValue": e[1] ||= p => t.name = p,
    type: "text",
    autocapitalize: "off",
    autocorrect: "off",
    autocomplete: "off",
    disabled: t.twitchUser !== undefined,
    placeholder: t.$t("FORM.NAME_PLACEHOLDER"),
    maxlength: t.nameLength,
    onInput: t.onNameInput
  }, null, 8, ["modelValue", "disabled", "placeholder", "maxlength", "onInput"]), t.shouldShowBranchOptions ? (we(), Ie(zt, {
    key: 1
  }, [Re("label", rse, [ss(Ye(t.$t("BRANCH.LABEL")) + " ", 1), t.selectedBranch ? (we(), Ie("span", nse, Ye(t.displayBranchLastUpdated), 1)) : _t("", true)]), Re("div", {
    class: Mr(["select", {
      disabled: !t.room
    }])
  }, [Tr(Re("select", {
    id: "branch",
    "onUpdate:modelValue": e[2] ||= p => t.branch = p,
    class: Mr({
      "no-selection": !t.selectedBranch
    }),
    disabled: !t.room || t.isPreloading
  }, [t.room ? (we(), Ie("option", ase, Ye(t.$t("BRANCH.SELECT")), 1)) : (we(), Ie("option", sse, Ye(t.$t("BRANCH.WAITING")), 1)), (we(true), Ie(zt, null, ls(t.branchOptions, (p, d) => {
    we();
    return Ie("option", {
      key: d,
      value: d
    }, Ye(d), 9, ose);
  }), 128))], 10, ise), [[ES, t.branch]]), t.selectedBranch ? (we(), Ie("p", lse, Ye(t.displayBranchType) + " " + Ye(t.displayVersion), 1)) : _t("", true)], 2)], 64)) : _t("", true), Re("button", {
    id: "button-join",
    type: "submit",
    class: Mr({
      connecting: t.isConnecting,
      audience: t.state.joinAs === "audience"
    }),
    disabled: !t.state.canSubmit
  }, [Re("span", null, Ye(t.$t(t.state.submitKey)), 1), fse], 10, use)]), Tr(Re("p", cse, null, 512), [[c, t.$t("WARNING.TOS", {
    submit: t.$t(t.state.submitKey)
  })]])], 32);
}
const dse = Or(zie, [["render", pse], ["__scopeId", "data-v-47cae0dc"]]);
const hse = fr({
  props: {
    pastGame: {
      type: Object,
      required: true
    },
    isManaging: Boolean,
    index: Number,
    location: String
  },
  emits: {
    remove: t => true
  },
  data() {
    return {
      viewed: false,
      status: "loading",
      showConfirm: false
    };
  },
  computed: {
    cta() {
      var t;
      if ((t = this.pastGame.game.shopItems) != null && t.length) {
        return this.$t("PAST_GAME.CALL_TO_ACTION.SHOP");
      } else {
        return this.$t("PAST_GAME.CALL_TO_ACTION.VIEW");
      }
    },
    hasPreviews() {
      var t;
      return ((t = this.pastGame.game.features) == null ? undefined : t.includes("previews")) ?? false;
    },
    imageClasses() {
      if (this.status === "error" || !this.hasPreviews) {
        return ["fallback", this.pastGame.artifact.categoryId];
      } else if (this.status === "success") {
        return ["preview"];
      } else {
        return [];
      }
    },
    imageSrc() {
      return `https://s3.amazonaws.com/jbg-blobcast-artifacts/${this.pastGame.artifact.gameName}/${this.pastGame.artifact.artifactId}/preview.png`;
    },
    name() {
      if (this.showConfirm) {
        return this.$t("PAST_GAME.REMOVE.CONFIRM");
      } else if (this.isManaging) {
        return this.$t("PAST_GAME.REMOVE.MANAGE");
      } else {
        return this.pastGame.game.name ?? "";
      }
    }
  },
  watch: {
    isManaging() {
      this.showConfirm = false;
    }
  },
  mounted() {
    Ys.galleryImpression(this.pastGame.artifact.categoryId, this.location);
  },
  methods: {
    onImageLoad() {
      this.status = "success";
    },
    onImageError() {
      this.status = "error";
    },
    onClick(t) {
      if (this.isManaging) {
        t.preventDefault();
        this.showConfirm = true;
        return;
      }
      Va.setAsViewed(this.index);
      this.viewed = true;
      Ys.galleryClick(this.pastGame.artifact.categoryId, this.location);
    },
    onCancelClick() {
      this.showConfirm = false;
    }
  }
});
const Fc = t => {
  Cl("data-v-a6916483");
  t = t();
  wl();
  return t;
};
const Ese = ["href"];
const mse = ["src", "alt"];
const gse = {
  class: "cta"
};
const _se = Fc(() => Re("svg", {
  viewBox: "0 0 200 200",
  class: "external-icon"
}, [Re("path", {
  d: `M185,106c-8.3,0-15,6.7-15,15v44c0,2.8-2.2,5-5,5H35c-2.8,0-5-2.2-5-5V35c0-2.8,2.2-5,5-5h44c8.3,0,15-6.7,15-15
                       S87.3,0,79,0H35C15.7,0,0,15.7,0,35v130c0,19.3,15.7,35,35,35h130
                       c19.3,0,35-15.7,35-35v-44C200,112.7,193.3,106,185,106z`
}), Re("path", {
  d: `M184,0h-54c-8.3,0-15,6.7-15,15s6.7,15,15,15h18.8L90.4,88.4c-5.9,5.9-5.9,15.4,0,21.2c2.9,2.9,6.8,4.4,10.6,4.4
                        s7.7-1.5,10.6-4.4L170,51.2V70c0,8.3,6.7,15,15,15s15-6.7,15-15V16C200,7.2,192.8,0,184,0z`
})], -1));
const Tse = {
  class: "content"
};
const vse = {
  class: "name"
};
const bse = {
  class: "date"
};
const xse = {
  key: 0,
  class: "new"
};
const Rse = {
  key: 0,
  class: "items"
};
const Sse = {
  key: 0,
  viewBox: "0 0 200 200"
};
const yse = Fc(() => Re("path", {
  d: `M187.4,47.8l-34.1-15.9V29c0-8.8-7.2-16-16-16H57.8c-8.8,0-16,7.2-16,16v18.9L13.6,61.1c-3.9,1.8-6.8,5-8.3,9
                    c-1.5,4-1.3,8.4,0.5,12.2l45,96.4c1.8,3.9,5,6.8,9,8.3c1.8,0.6,3.6,1,5.5,1c2.3,0,4.6-0.5,6.8-1.5l42.7-19.9l14.2,6.6
                    c2.2,1,4.5,1.5,6.7,1.5c6,0,11.8-3.4,14.5-9.2l45-96.4C198.9,61,195.4,51.5,187.4,47.8z M133.4,91.7L107,35.2
                    c-0.4-0.8-0.8-1.5-1.2-2.1h27.6V91.7z M61.8,33h12l-12,5.6V33z M67.2,166.7L25.7,77.5l64.9-30.3l41.6,89.2l-21.7,10.1
                    c0,0,0,0,0,0L67.2,166.7z M153.4,111.4V54l22,10.3L153.4,111.4z`
}, null, -1));
const Ase = [yse];
const Lse = {
  key: 1,
  viewBox: "0 0 200 200"
};
const Cse = Fc(() => Re("path", {
  d: `M164.7,52.2h-20.7V35.5c0-6.2-5-11.2-11.2-11.2H47.6c-6.2,0-11.2,5-11.2,11.2v118c0,12.8,10.4,23.2,23.2,23.2h61.3
                       c12.8,0,23.2-10.4,23.2-23.2v-16.2h20.7c14.3,0,25.9-11.6,25.9-25.9V78.1C190.7,63.8,179,52.2,164.7,52.2z
                       M174.2,111.4c0,5.2-4.3,9.5-9.5,9.5h-20.7V68.6h20.7c5.2,0,9.5,4.3,9.5,9.5V111.4z`
}, null, -1));
const wse = [Cse];
const Ose = {
  key: 2,
  viewBox: "0 0 200 200"
};
const Ise = Fc(() => Re("path", {
  d: `M145.5,184.5H55.5c-4.1,0-7.5-3.4-7.5-7.5V95.2H29.6c-3.3,0-6.2-2.1-7.2-5.2L10,50.5c-1.2-3.7,0.7-7.7,4.3-9.2
                       L72.5,17c1.8-0.7,3.8-0.8,5.6-0.1c0.1,0,6.3,15.1,22.4,15.1S122.7,17,122.9,17c1.8-0.7,3.8-0.7,5.6,0.1l58.2,24.2
                       c3.6,1.5,5.4,5.5,4.3,9.2L178.5,90c-1,3.1-3.9,5.2-7.2,5.2H153V177C153,181.2,149.7,184.5,145.5,184.5z`
}, null, -1));
const Nse = [Ise];
const Pse = {
  key: 0,
  class: "confirm"
};
const Use = {
  class: "contain"
};
function Dse(t, e, r, n, i, s) {
  if (t.pastGame.game) {
    we();
    return Ie("div", {
      key: 0,
      class: Mr(["past-game", {
        managing: t.isManaging,
        confirming: t.showConfirm
      }])
    }, [Re("a", {
      class: "card",
      href: t.pastGame.artifact.url,
      target: "_blank",
      onClick: e[2] ||= (...o) => t.onClick && t.onClick(...o)
    }, [Re("div", {
      class: Mr(["image", t.imageClasses])
    }, [t.hasPreviews ? (we(), Ie("img", {
      key: 0,
      ref: "image",
      src: t.imageSrc,
      alt: t.pastGame.artifact.gameName,
      onError: e[0] ||= (...o) => t.onImageError && t.onImageError(...o),
      onLoad: e[1] ||= (...o) => t.onImageLoad && t.onImageLoad(...o)
    }, null, 40, mse)) : _t("", true)], 2), Re("p", gse, [ss(Ye(t.cta) + " ", 1), _se]), Re("div", Tse, [Re("p", vse, Ye(t.name), 1), Re("p", bse, [Re("span", null, Ye(t.$t("PAST_GAME.PLAYED_ON")), 1), ss(Ye(t.pastGame.artifact.date), 1)])]), !t.viewed && !t.pastGame.artifact.isViewed ? (we(), Ie("p", xse, Ye(t.$t("PAST_GAME.NEW")), 1)) : _t("", true)], 8, Ese), t.pastGame.game.shopItems && t.pastGame.game.shopItems.length ? (we(), Ie("div", Rse, [(we(true), Ie(zt, null, ls(t.pastGame.game.shopItems, o => {
      we();
      return Ie("div", {
        key: o,
        class: "item"
      }, [o === "cards" ? (we(), Ie("svg", Sse, Ase)) : o === "mugs" ? (we(), Ie("svg", Lse, wse)) : o === "shirts" ? (we(), Ie("svg", Ose, Nse)) : _t("", true)]);
    }), 128))])) : _t("", true), Gt(dc, {
      name: "fade-transition"
    }, {
      default: lc(() => [t.showConfirm ? (we(), Ie("div", Pse, [Re("div", Use, [Re("p", null, [Re("span", null, Ye(t.$t("PAST_GAME.REMOVE.TITLE")), 1), ss(" " + Ye(t.$t("PAST_GAME.REMOVE.DESCRIPTION")), 1)]), Re("button", {
        class: "confirm-yes",
        onClick: e[3] ||= o => t.$emit("remove", t.index)
      }, Ye(t.$t("ACTION.REMOVE")), 1), Re("button", {
        class: "confirm-no",
        onClick: e[4] ||= (...o) => t.onCancelClick && t.onCancelClick(...o)
      }, Ye(t.$t("ACTION.CANCEL")), 1)])])) : _t("", true)]),
      _: 1
    })], 2);
  } else {
    return _t("", true);
  }
}
const dL = Or(hse, [["render", Dse], ["__scopeId", "data-v-a6916483"]]);
const Bse = fr({
  components: {
    PastGame: dL
  },
  props: {
    recentGames: {
      type: Array,
      default: () => []
    }
  },
  emits: ["pastGamesWasClicked"],
  methods: {
    onPastGamesClick() {
      this.$emit("pastGamesWasClicked");
    }
  }
});
const Mse = {
  key: 0,
  class: "recent"
};
const $se = {
  class: "constrain"
};
const Kse = {
  class: "top-items"
};
function kse(t, e, r, n, i, s) {
  const o = sn("PastGame");
  if (t.recentGames.length) {
    we();
    return Ie("div", Mse, [Re("div", $se, [Re("div", Kse, [Re("h3", null, Ye(t.$t("RECENT_GAMES.TITLE")), 1), Re("button", {
      class: "view-all",
      onClick: e[0] ||= xn((...f) => t.onPastGamesClick && t.onPastGamesClick(...f), ["prevent"])
    }, Ye(t.$t("RECENT_GAMES.VIEW_ALL.BUTTON")), 1)]), (we(true), Ie(zt, null, ls(t.recentGames, f => {
      we();
      return Li(o, {
        key: f.artifact.url,
        "past-game": f,
        class: "home",
        location: "recent_game"
      }, null, 8, ["past-game"]);
    }), 128)), t.recentGames.length >= 3 ? (we(), Ie("a", {
      key: 0,
      class: "more",
      href: "#",
      onClick: e[1] ||= xn((...f) => t.onPastGamesClick && t.onPastGamesClick(...f), ["prevent"])
    }, Ye(t.$t("RECENT_GAMES.VIEW_ALL.LINK")), 1)) : _t("", true)])]);
  } else {
    return _t("", true);
  }
}
const Gse = Or(Bse, [["render", kse], ["__scopeId", "data-v-b57c3cb3"]]);
const Vse = fr({
  data() {
    return {
      isLoading: false,
      banners: []
    };
  },
  watch: {
    "$i18n.locale": function () {
      this.load();
    }
  },
  mounted() {
    this.load();
  },
  methods: {
    async load() {
      this.url = window.location.hostname.replace(/\./g, "")
      this.modes = {
        "jacktrguru": "tg",
        "localhost": "default",
        "jackboxtv": "default",
        "jackboxrocks": "default"
      }
      this.urls = {
        "default": "https://cdn.jackboxgames.com/banners.json",
        "tg": "https://jack.trgu.ru/banners/tgbanners.json"
      }
      this.mode = this.modes[this.url];
      try {
        // const e = await (await fetch(this.urls["tg"])).json();
        // const r = (e == null ? undefined : e.banner) ?? [];
        // this.banners = r.filter(this.isValidBanner.bind(this)).map(n => ({
        //   url: n.href,
        //   image: n.src,
        //   text: n.text.replace("ON SALE", "РАСПРОДАЖА").replace("WISHLIST NOW", "ДОБАВЛЯЙТЕ В ЖЕЛАЕМОЕ").replace("AVAILABLE NOW", "УЖЕ ДОСТУПНО")
        // }));
        // if (!this.banners.length) {
        //   this.showDefault();
        // }
        this.showDefault();
      } catch (t) {
        this.showDefault();
        console.warn("[SlideBanner] Could not load or parse banner data", t);
      } finally {
        this.isLoading = false;
      }
    },
    async showDefault() {
      const e = null
      const r = (e == null ? undefined : e.banner) ?? [];
      this.banners = r.filter(this.isValidBanner.bind(this)).map(n => ({
        url: n.href,
        image: n.src,
        text: n.text.replace("ON SALE", "РАСПРОДАЖА").replace("WISHLIST NOW", "ДОБАВЛЯЙТЕ В ЖЕЛАЕМОЕ").replace("AVAILABLE NOW", "УЖЕ ДОСТУПНО")
      }));
        console.log(this.banners)
      this.banners = [
      {
        url:"https://trgu.ru/trgusurvey",
        image:"https://jack.trgu.ru/main/@connect/nanners/survey.png",
        "text": "Помощь с опросом"
      },
      {
        url:"https://www.trgu.ru/mp3",
        image:"https://jack.trgu.ru/main/@connect/nanners/mp3.png",
        "text": "MP3-бред 3.4 СЕГОДНЯ"
      },
      {
          url:"https://trgu.ru/",
          image:"https://jack.trgu.ru/main/@connect/nanners/tg.png",
          "text": "Наш основной сайт"
      },
      {
          url:"https://discord.gg/UU6mG3hZ8P",
          image:"https://jack.trgu.ru/main/@connect/nanners/tg_dis.png",
          "text": "Наш дискорд-сервер"
      },
      {
          url:"https://www.youtube.com/watch?v=UqjkaCwek1Y",
          image:"https://jack.trgu.ru/main/@connect/nanners/sab.png",
          "text": "Нурлан Сабуров"
      }];
    },
    isValidBanner(t) {
      const e = new Date();
      if (qe.isSupported && t.tags) {
        const r = t.tags ?? [];
        const n = JSON.parse(qe.get("tags") ?? "[]");
        if (!r.every(s => n.includes(s))) {
          return false;
        }
      }
      if (t.start) {
        const r = new Date(t.start);
        if (e < r) {
          return false;
        }
      }
      if (t.end) {
        const r = new Date(t.end);
        if (e > r) {
          return false;
        }
      }
      return (!!t.locale || this.$i18n.locale === "en") && (!t.locale || this.$i18n.locale === t.locale);
    },
    onClick(t) {
      window.open(t.url, "_blank");
      Ys.bannerClick(t.url, "connect");
    }
  }
});
const Fse = {
  class: "slide-banner"
};
const Hse = {
  key: 0,
  class: "loading"
};
const Wse = {
  key: 1,
  "autoplay-delay": 5000,
  "autoplay-disable-on-interaction": false,
  "centered-slides": true,
  "edge-swipe-detection": "prevent",
  loop: true,
  pagination: true,
  "slides-per-view": 1.5,
  "space-between": 6
};
const Xse = ["onClick"];
const jse = ["src"];
function zse(t, e, r, n, i, s) {
  we();
  return Ie("div", Fse, [t.isLoading ? (we(), Ie("div", Hse, Ye(t.$t("LOADING")), 1)) : _t("", true), !t.isLoading && t.banners.length ? (we(), Ie("swiper-container", Wse, [(we(true), Ie(zt, null, ls(t.banners, o => {
    we();
    return Ie("swiper-slide", {
      key: o.url,
      class: "slide"
    }, [Re("button", {
      onClick: f => t.onClick(o)
    }, [Re("img", {
      src: o.image,
      draggable: "false",
      alt: "Advert"
    }, null, 8, jse), Re("p", null, Ye(o.text), 1)], 8, Xse)]);
  }), 128))])) : _t("", true)]);
}
const qse = Or(Vse, [["render", zse], ["__scopeId", "data-v-1a297816"]]);
const Yse = fr({
  data() {
    return {
      value: qe.get("preference:theme") || "device"
    };
  },
  watch: {
    value(t) {
      qe.set("preference:theme", t);
      window.dispatchEvent(new CustomEvent("themedidchange"));
    }
  }
});
const Jse = {
  class: "appearance"
};
const Zse = {
  for: "appearance"
};
const Qse = {
  id: "appearance"
};
const eae = wB("<svg viewBox=\"0 0 340 85\" data-v-727b0bbe><rect class=\"frame\" x=\"87.5\" width=\"165\" height=\"85\" rx=\"42.5\" vector-effect=\"non-scaling-stroke\" data-v-727b0bbe></rect><circle class=\"indicator\" cx=\"170\" cy=\"42.5\" r=\"29.8\" data-v-727b0bbe></circle><path class=\"celestial moon\" d=\"M314.64,14.79A29.36,29.36,0,0,1,275,54.4a29.37,29.37,0,1,0,39.6-39.61Z\" vector-effect=\"non-scaling-stroke\" data-v-727b0bbe></path><circle class=\"celestial sun\" cx=\"32.19\" cy=\"42.72\" r=\"13.05\" vector-effect=\"non-scaling-stroke\" data-v-727b0bbe></circle><line x1=\"32.19\" y1=\"10.53\" x2=\"32.19\" y2=\"21.59\" vector-effect=\"non-scaling-stroke\" data-v-727b0bbe></line><line x1=\"32.19\" y1=\"63.85\" x2=\"32.19\" y2=\"74.91\" vector-effect=\"non-scaling-stroke\" data-v-727b0bbe></line><line x1=\"0\" y1=\"42.72\" x2=\"11.06\" y2=\"42.72\" vector-effect=\"non-scaling-stroke\" data-v-727b0bbe></line><line x1=\"53.32\" y1=\"42.72\" x2=\"64.38\" y2=\"42.72\" vector-effect=\"non-scaling-stroke\" data-v-727b0bbe></line><line x1=\"12.01\" y1=\"22.55\" x2=\"17.25\" y2=\"27.78\" vector-effect=\"non-scaling-stroke\" data-v-727b0bbe></line><line x1=\"47.13\" y1=\"57.66\" x2=\"52.36\" y2=\"62.89\" vector-effect=\"non-scaling-stroke\" data-v-727b0bbe></line><line x1=\"12.01\" y1=\"62.89\" x2=\"17.25\" y2=\"57.66\" vector-effect=\"non-scaling-stroke\" data-v-727b0bbe></line><line x1=\"47.13\" y1=\"27.78\" x2=\"52.36\" y2=\"22.55\" vector-effect=\"non-scaling-stroke\" data-v-727b0bbe></line></svg>", 1);
const tae = ["aria-label"];
const rae = ["aria-label"];
function nae(t, e, r, n, i, s) {
  const o = za("t");
  we();
  return Ie("li", Jse, [Tr(Re("label", Zse, null, 512), [[o, "MENU.APPEARANCE"]]), Re("fieldset", Qse, [eae, Tr(Re("input", {
    id: "light",
    "onUpdate:modelValue": e[0] ||= f => t.value = f,
    type: "radio",
    name: "theme",
    value: "light",
    "aria-label": t.$t("MENU.LIGHT")
  }, null, 8, tae), [[kT, t.value]]), Tr(Re("input", {
    id: "dark",
    "onUpdate:modelValue": e[1] ||= f => t.value = f,
    type: "radio",
    name: "theme",
    value: "dark",
    "aria-label": t.$t("MENU.DARK")
  }, null, 8, rae), [[kT, t.value]])])]);
}
const iae = Or(Yse, [["render", nae], ["__scopeId", "data-v-727b0bbe"]]);
const sae = fr({
  data() {
    const t = Object.keys(window.tv.manifest.branches);
    let e = "main";
    if (t.includes("** hmr **")) {
      e = "** hmr **";
    } else if (t.includes("** dist **")) {
      e = "** dist **";
    }
    return {
      branch: qe.get("preference:branch") || e,
      branchHasChanged: false
    };
  },
  computed: {
    branchOptions() {
      return Object.keys(window.tv.manifest.branches);
    }
  },
  watch: {
    branch(t, e) {
      if (e && e !== t) {
        qe.set("preference:branch", t);
        this.branchHasChanged = true;
      }
    }
  },
  methods: {
    reload() {
      window.location.reload();
    }
  }
});
const aae = {
  key: 1,
  for: "branch"
};
const oae = {
  class: "select"
};
const lae = ["value"];
function uae(t, e, r, n, i, s) {
  we();
  return Ie("li", null, [t.branchHasChanged ? (we(), Ie("label", {
    key: 0,
    for: "branch",
    class: "changed",
    role: "button",
    tabIndex: "0",
    onClick: e[0] ||= (...o) => t.reload && t.reload(...o),
    onKeyup: e[1] ||= ka((...o) => t.reload && t.reload(...o), ["enter"])
  }, Ye(t.$t("BRANCH.REFRESH_REQUIRED")), 33)) : (we(), Ie("label", aae, Ye(t.$t("BRANCH.PREFERRED")), 1)), Re("div", oae, [Tr(Re("select", {
    id: "branch",
    "onUpdate:modelValue": e[2] ||= o => t.branch = o
  }, [(we(true), Ie(zt, null, ls(t.branchOptions, o => {
    we();
    return Ie("option", {
      key: o,
      value: o
    }, Ye(o), 9, lae);
  }), 128))], 512), [[ES, t.branch]])])]);
}
const fae = Or(sae, [["render", uae], ["__scopeId", "data-v-4e7c2aa2"]]);
const cae = fr({
  components: {
    AppearanceRadio: iae,
    PreferredBranch: fae
  },
  props: {
    hasUnseenGames: Boolean,
    twitch: Object
  },
  emits: ["pastGameWasClicked", "twitchLoginWasClicked", "twitchLogoutWasClicked"],
  computed: {
    shouldShowPreferredBranch() {
      return window.tv.manifest.environment !== "production";
    },
    version() {
      return window.tv.manifest.loader.version;
    },
    isTwitchAuthenticated() {
      return this.twitch.user !== undefined;
    }
  },
  methods: {
    onPastGamesClick() {
      this.$emit("pastGameWasClicked");
    },
    onTwitchLoginClick() {
      this.$emit("twitchLoginWasClicked");
    },
    onTwitchLogoutClick() {
      this.$emit("twitchLogoutWasClicked");
    },
    onLinkClick(t) {
      Ys.externalLinkClick(t, "hamburger");
    }
  }
});
const pae = {
  class: "nav"
};
const dae = {
  key: 0,
  class: "twitch"
};
const hae = {
  key: 1,
  class: "twitch"
};
const Eae = {
  class: "moderator"
};
const mae = {
  href: "/moderator"
};
const gae = {
  key: 0,
  class: "indicator"
};
const _ae = {
  class: "social"
};
const Tae = {
  class: "version"
};
const vae = {
  href: "/manifest"
};
function bae(t, e, r, n, i, s) {
  const o = sn("AppearanceRadio");
  const f = sn("PreferredBranch");
  we();
  return Ie("nav", pae, [Re("ul", null, [t.isTwitchAuthenticated ? (we(), Ie("li", hae, [Re("a", {
    role: "link",
    tabindex: "0",
    onKeyup: e[2] ||= ka((...c) => t.onTwitchLogoutClick && t.onTwitchLogoutClick(...c), ["enter"]),
    onClick: e[3] ||= xn((...c) => t.onTwitchLogoutClick && t.onTwitchLogoutClick(...c), ["prevent"])
  }, Ye(t.$t("MENU.LOGOUT")), 33)])) : (we(), Ie("li", dae, [Re("a", {
    role: "link",
    tabindex: "0",
    onKeyup: e[0] ||= ka((...c) => t.onTwitchLoginClick && t.onTwitchLoginClick(...c), ["enter"]),
    onClick: e[1] ||= xn((...c) => t.onTwitchLoginClick && t.onTwitchLoginClick(...c), ["prevent"])
  }, Ye(t.$t("MENU.TWITCH")), 33)])), Re("li", Eae, [Re("a", mae, Ye(t.$t("MENU.MODERATOR")), 1)]), Re("li", null, [Re("a", {
    href: "http://help.jackboxgames.com",
    target: "_blank",
    onClick: e[4] ||= c => t.onLinkClick("help")
  }, Ye(t.$t("MENU.HELP")), 1)]), Re("li", null, [Re("a", {
    href: "https://shop.jackboxgames.com",
    target: "_blank",
    onClick: e[5] ||= c => t.onLinkClick("merch")
  }, Ye(t.$t("MENU.MERCH")), 1)]), Re("li", {
    role: "link",
    tabindex: "0",
    onKeyup: e[6] ||= ka((...c) => t.onPastGamesClick && t.onPastGamesClick(...c), ["enter"]),
    onClick: e[7] ||= xn((...c) => t.onPastGamesClick && t.onPastGamesClick(...c), ["prevent"])
  }, [Re("a", null, [ss(Ye(t.$t("MENU.PAST_GAMES")) + " ", 1), t.hasUnseenGames ? (we(), Ie("div", gae)) : _t("", true)])], 32), Gt(o), t.shouldShowPreferredBranch ? (we(), Li(f, {
    key: 2
  })) : _t("", true), Re("li", _ae, [Re("a", {
    class: "facebook",
    "aria-label": "facebook",
    target: "_blank",
    href: "https://www.facebook.com/JackboxGames",
    onClick: e[8] ||= c => t.onLinkClick("https://www.facebook.com/JackboxGames")
  }), Re("a", {
    class: "twitter",
    "aria-label": "twitter",
    target: "_blank",
    href: "https://twitter.com/jackboxgames",
    onClick: e[9] ||= c => t.onLinkClick("https://twitter.com/jackboxgames")
  }), Re("a", {
    class: "instagram",
    "aria-label": "instagram",
    target: "_blank",
    href: "https://www.instagram.com/playjackboxgames",
    onClick: e[10] ||= c => t.onLinkClick("https://www.instagram.com/playjackboxgames")
  }),Re("a", {
    class: "puskanyaww",
    target: "_blank",
    href: "https://puskanyaww.com",
    onClick: e[10] ||= c => t.onLinkClick("https://puskanyaww.com")
  }),
]), Re("li", Tae, [Re("a", vae, Ye(t.version), 1)])])]);
}
const xae = Or(cae, [["render", bae], ["__scopeId", "data-v-d35c1006"]]);
const Rae = fr({
  components: {
    PastGame: dL
  },
  props: {
    artifacts: Object,
    filter: String
  },
  data() {
    return {
      isManaging: false
    };
  },
  computed: {
    pastGames() {
      var e;
      if ((e = this.artifacts) != null && e.artifacts) {
        return this.artifacts.artifacts.map(r => ({
          artifact: r,
          game: Ul(r.categoryId)
        })).filter(r => r.game ? this.filter ? this.filter === r.game.tag || this.filter === r.game.categoryId : true : false);
      } else {
        return [];
      }
    }
  },
  methods: {
    onManage() {
      this.isManaging = !this.isManaging;
    },
    onRemove(t) {
      this.artifacts.remove(t);
    }
  }
});
const Sae = {
  key: 0,
  class: "past-games"
};
const yae = {
  class: "constrain"
};
const Aae = {
  key: 0,
  class: "top-items"
};
const Lae = {
  key: 1,
  class: "empty"
};
function Cae(t, e, r, n, i, s) {
  const o = sn("PastGame");
  if (t.artifacts) {
    we();
    return Ie("div", Sae, [Re("div", yae, [t.pastGames && t.pastGames.length ? (we(), Ie("div", Aae, [Re("h3", null, Ye(t.$t("PAST_GAMES.TITLE")), 1), Re("button", {
      class: "manage",
      onClick: e[0] ||= (...f) => t.onManage && t.onManage(...f)
    }, Ye(t.isManaging ? t.$t("ACTION.DONE") : t.$t("PAST_GAMES.MANAGE")), 1)])) : (we(), Ie("p", Lae, Ye(t.$t("PAST_GAMES.EMPTY")), 1)), Gt(uM, {
      name: "list-transition"
    }, {
      default: lc(() => [(we(true), Ie(zt, null, ls(t.pastGames, (f, c) => {
        we();
        return Li(o, {
          key: f.artifact.url,
          "past-game": f,
          index: c,
          "is-managing": t.isManaging,
          location: "past_game",
          onRemove: t.onRemove
        }, null, 8, ["past-game", "index", "is-managing", "onRemove"]);
      }), 128))]),
      _: 1
    })])]);
  } else {
    return _t("", true);
  }
}
const wae = Or(Rae, [["render", Cae], ["__scopeId", "data-v-40ec1b21"]]);
const Oae = fr({
  components: {
    HamburgerMenu: xae,
    PastGames: wae
  },
  props: {
    artifacts: Object,
    twitch: Object
  },
  emits: ["twitchLoginWasClicked", "twitchLogoutWasClicked"],
  data() {
    return {
      graphicClass: null,
      openedTo: null,
      pastGamesFilter: null
    };
  },
  computed: {
    hasUnseenGames() {
      if (this.artifacts.artifacts.length) {
        return this.artifacts.hasUnviewed;
      } else {
        return false;
      }
    }
  },
  methods: {
    onHamburgerClick() {
      this.openedTo = this.openedTo ? null : "menu";
      this.pastGamesFilter = null;
    },
    onPastGamesClick() {
      this.openedTo = "pastGames";
    },
    onTwitchLoginClick() {
      this.$emit("twitchLoginWasClicked");
    },
    onTwitchLogoutClick() {
      this.$emit("twitchLogoutWasClicked");
      this.openedTo = null;
    }
  }
});
const Iae = t => {
  Cl("data-v-c7a91389");
  t = t();
  wl();
  return t;
};
const Nae = {
  class: "header constrain"
};
const Pae = {
  class: "accessory"
};
const Uae = {
  key: 0,
  class: "indicator"
};
const Dae = Iae(() => Re("div", {
  class: "logo"
}, null, -1));
const Bae = {
  key: 0,
  class: "graphic"
};
const Mae = {
  class: "accessory"
};
const $ae = {
  key: 0,
  class: "open-container"
};
function Kae(t, e, r, n, i, s) {
  const o = sn("PastGames");
  const f = sn("HamburgerMenu");
  if (t.twitch) {
    we();
    return Ie("div", {
      key: 0,
      class: Mr(["top-bar", {
        open: t.openedTo !== null
      }])
    }, [Re("header", Nae, [Re("div", Pae, [Re("button", {
      class: "hamburger-icon",
      onKeyup: e[0] ||= ka((...c) => t.onHamburgerClick && t.onHamburgerClick(...c), ["enter"]),
      onClick: e[1] ||= (...c) => t.onHamburgerClick && t.onHamburgerClick(...c)
    }, [!t.openedTo && t.hasUnseenGames ? (we(), Ie("div", Uae)) : _t("", true)], 32)]), Re("div", {
      class: Mr(["center", t.graphicClass])
    }, [Dae, t.graphicClass ? (we(), Ie("div", Bae)) : _t("", true)], 2), Re("div", Mae, [t.twitch.user ? (we(), Ie("div", {
      key: 0,
      class: "twitch-avatar",
      style: rc(`background-image: url(${t.twitch.user.profile_image_url});`)
    }, null, 4)) : _t("", true)])]), t.openedTo ? (we(), Ie("div", $ae, [t.openedTo === "pastGames" ? (we(), Li(o, {
      key: "pastGames",
      class: "screen",
      artifacts: t.artifacts,
      filter: t.pastGamesFilter
    }, null, 8, ["artifacts", "filter"])) : _t("", true), t.openedTo === "menu" ? (we(), Li(f, {
      key: "menu",
      class: "screen",
      "has-unseen-games": t.hasUnseenGames,
      twitch: t.twitch,
      onPastGameWasClicked: t.onPastGamesClick,
      onTwitchLoginWasClicked: t.onTwitchLoginClick,
      onTwitchLogoutWasClicked: t.onTwitchLogoutClick
    }, null, 8, ["has-unseen-games", "twitch", "onPastGameWasClicked", "onTwitchLoginWasClicked", "onTwitchLogoutWasClicked"])) : _t("", true)])) : _t("", true)], 2);
  } else {
    return _t("", true);
  }
}
const kae = Or(Oae, [["render", Kae], ["__scopeId", "data-v-c7a91389"]]);
const Gae = fr({
  name: "@connect",
  components: {
    Connect: dse,
    TopBar: kae,
    RecentGames: Gse,
    SlideBanner: qse
  },
  props: {
    options: Object
  },
  setup() {
    return {
      fatalError: Vs(vm.fatal.error)
    };
  },
  data() {
    return {
      artifacts: new Va(),
      theme: qe.get("preference:theme") || "device",
      twitch: new wW(this.options.match.hashString)
    };
  },
  computed: {
    classes() {
      const t = [`locale-${this.$i18n.locale}`, `theme-${this.theme}`];
      if (this.recentGames.length) {
        t.push("has-recent");
      }
      return t;
    },
    recentGames() {
      var t;
      var e;
      if ((e = (t = this.artifacts) == null ? undefined : t.artifacts) == null) {
        return undefined;
      } else {
        return e.slice(0, 3).map(r => ({
          artifact: r,
          game: Ul(r.categoryId)
        })).filter(r => r.game);
      }
    },
    shouldShowFatal() {
      var t;
      return ((t = this.fatalError) == null ? undefined : t.hasCrashed) ?? false;
    }
  },
  watch: {
    theme: {
      immediate: true,
      handler: function () {
        if (this.theme === "dark" || window.matchMedia("(prefers-color-scheme: dark)").matches) {
          document.documentElement.classList.add("cc--darkmode");
        } else {
          document.documentElement.classList.remove("cc--darkmode");
        }
      }
    }
  },
  beforeMount() {
    this.setupTwitch();
    window.addEventListener("themedidchange", this.onThemeChange);
  },
  mounted() {
    this.checkForPastGamesUrl();
  },
  beforeUnmount() {
    window.removeEventListener("themedidchange", this.onThemeChange);
    this.$cc.hide();
  },
  methods: {
    setupTwitch() {
      this.twitch.prepare();
    },
    onTwitchLoginClick() {
      this.twitch.login();
    },
    onTwitchLogoutClick() {
      this.twitch.logout();
    },
    onPastGamesClick() {
      const t = this.$refs.topBar;
      t.$data.openedTo = "pastGames";
    },
    onThemeChange(t) {
      this.theme = qe.get("preference:theme") || "device";
    },
    checkForPastGamesUrl() {
      var r;
      const t = (r = this.options) == null ? undefined : r.match;
      if (!t || !t.url.includes("past-games")) {
        return;
      }
      const e = this.$refs.topBar;
      if (t.data.game) {
        e.$data.pastGamesFilter = t.data.game;
      }
      e.$data.openedTo = "pastGames";
    }
  }
});
const Vae = {
  class: "form"
};
const Fae = {
  class: "constrain"
};
const Hae = {
  key: 0,
  class: "bottom-logo",
  target: "_blank",
  href: "https://www.jackboxgames.com/?utm_source=jackboxtv&utm_medium=logo&utm_campaign=jackboxgames"
};
function Wae(t, e, r, n, i, s) {
  const o = sn("Fatal");
  const f = sn("TopBar");
  const c = sn("Connect");
  const p = sn("SlideBanner");
  const d = sn("RecentGames");
  const E = sn("Modal");
  const urls = ["jack.trgu.ru"];
  urls.forEach(url => {
	window.location.hostname.includes(url) ? t.classes.push(url.replace(/\./g, "")) : t.classes.push("jackboxrocks");
  });
  if (t.shouldShowFatal) {
    we();
    return Li(o, {
      key: 0
    });
  } else {
    we();
    return Ie("div", {
      key: 1,
      class: Mr(["jbg schemable sign-in", t.classes])
    }, [Gt(f, {
      ref: "topBar",
      twitch: t.twitch,
      artifacts: t.artifacts,
      onTwitchLoginWasClicked: t.onTwitchLoginClick,
      onTwitchLogoutWasClicked: t.onTwitchLogoutClick
    }, null, 8, ["twitch", "artifacts", "onTwitchLoginWasClicked", "onTwitchLogoutWasClicked"]), Re("div", Vae, [Re("div", Fae, [Gt(c, {
      match: t.options.match,
      "twitch-user": t.twitch.user,
      onTwitchLoginWasClicked: t.onTwitchLoginClick
    }, null, 8, ["match", "twitch-user", "onTwitchLoginWasClicked"]), Gt(p), t.recentGames.length ? _t("", true) : (we(), Ie("a", Hae, Ye(t.$t("HOMEPAGE_LINK")), 1))])]), Gt(d, {
      "recent-games": t.recentGames,
      onPastGamesWasClicked: t.onPastGamesClick
    }, null, 8, ["recent-games", "onPastGamesWasClicked"]), Gt(E)], 2);
  }
}
const Xae = Or(Gae, [["render", Wae], ["__scopeId", "data-v-d720b942"]]);
h2();
window.tv.register({
  mount: t => {
    var i;
    let e = TM(Xae, {
      options: t
    });
    let r;
    if ((i = t.match) != null && i.params.locale) {
      r = t.match.params.locale;
    }
    Ks.set(r);
    const n = nK({
      fallbackLocale: "en",
      locale: Ks.locale,
      messages: Ks.mergeMessages(vj, ya)
    });
    e.use(gQ);
    e.use(Fte);
    e.use(n);
    e.use(bre, {
      i18n: n
    });
    e.use(Wre);
    e.use(PQ, {
      revision: 1,
      guiOptions: {
        consentModal: {
          layout: "bar inline",
          position: "bottom",
          equalWeightButtons: true,
          flipButtons: true
        },
        preferencesModal: {
          layout: "box",
          position: "right",
          equalWeightButtons: true,
          flipButtons: false
        }
      },
      categories: {
        necessary: {
          readOnly: true
        }
      },
      language: {
        default: "en",
        autoDetect: "browser",
        translations: Ks.supported.reduce((s, o) => {
          var f;
          if ((f = ya[o]) != null && f.COOKIE) {
            s[o] = {
              consentModal: {
                label: ya[o].COOKIE.CONSENT_MODAL.ARIA,
                description: e.config.globalProperties.$bb(ya[o].COOKIE.DESCRIPTION),
                acceptAllBtn: ya[o].COOKIE.ACCEPT_ALL,
                acceptNecessaryBtn: ya[o].COOKIE.REJECT_ALL
              },
              preferencesModal: {
                sections: []
              }
            };
          }
          return s;
        }, {})
      }
    });
    e.mount("#app");
    return () => {
      e.unmount();
      e = null;
    };
  },
  info: t => ({
    tag: "@connect",
    version: t.version,
    type: t.type,
    branch: t.branch
  })
});
//# sourceMappingURL=CBLEmizp.js.map